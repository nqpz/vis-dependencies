[
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "authenticate": [],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "hoauth2": [
        "Network.OAuth.OAuth2"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "load-env": [
        "LoadEnv"
      ],
      "random": [
        "System.Random"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error"
      ],
      "transformers": [],
      "vector": [],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "yesod": [
        "Yesod"
      ],
      "yesod-auth": [
        "Yesod.Auth"
      ],
      "yesod-auth-oauth2": [],
      "yesod-core": [
        "Yesod.Core",
        "Yesod.Core.Widget"
      ],
      "yesod-form": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Typeable",
      "LoadEnv",
      "Network.HTTP.Client",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.OAuth.OAuth2",
      "Network.Wai.Handler.Warp",
      "System.Environment",
      "System.Random",
      "Yesod",
      "Yesod.Auth",
      "Yesod.Auth.OAuth2",
      "Yesod.Auth.OAuth2.Github",
      "Yesod.Core",
      "Yesod.Core.Widget"
    ],
    "modules": [
      "Yesod.Auth.OAuth2",
      "Yesod.Auth.OAuth2.Github",
      "Yesod.Auth.OAuth2.Google",
      "Yesod.Auth.OAuth2.Spotify",
      "Yesod.Auth.OAuth2.Upcase",
      "Yesod.Auth.OAuth2.EveOnline",
      "Yesod.Auth.OAuth2.Nylas",
      "Yesod.Auth.OAuth2.Slack",
      "Yesod.Auth.OAuth2.Salesforce",
      "Yesod.Auth.OAuth2.Bitbucket"
    ],
    "name": "yesod-auth-oauth2",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "colour": [
        "Data.Colour",
        "Data.Colour.RGBSpace",
        "Data.Colour.RGBSpace.HSV",
        "Data.Colour.SRGB"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [],
      "dlist": [
        "Data.DList"
      ],
      "fgl": [
        "Data.Graph.Inductive.Tree"
      ],
      "filepath": [],
      "graphviz": [],
      "polyparse": [],
      "process": [],
      "temporary": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.Read"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "wl-pprint-text": [
        "Text.PrettyPrint.Leijen.Text",
        "Text.PrettyPrint.Leijen.Text.Monadic"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Colour",
      "Data.Colour.RGBSpace",
      "Data.Colour.RGBSpace.HSV",
      "Data.Colour.SRGB",
      "Data.DList",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Graph.Inductive.Arbitrary",
      "Data.Graph.Inductive.Tree",
      "Data.GraphViz",
      "Data.GraphViz.Algorithms",
      "Data.GraphViz.Algorithms.Clustering",
      "Data.GraphViz.Attributes",
      "Data.GraphViz.Attributes.Arrows",
      "Data.GraphViz.Attributes.Colors",
      "Data.GraphViz.Attributes.Colors.Brewer",
      "Data.GraphViz.Attributes.ColorScheme",
      "Data.GraphViz.Attributes.Colors.SVG",
      "Data.GraphViz.Attributes.Colors.X11",
      "Data.GraphViz.Attributes.Complete",
      "Data.GraphViz.Attributes.HTML",
      "Data.GraphViz.Attributes.Internal",
      "Data.GraphViz.Attributes.Same",
      "Data.GraphViz.Attributes.Values",
      "Data.GraphViz.Commands",
      "Data.GraphViz.Commands.Available",
      "Data.GraphViz.Commands.IO",
      "Data.GraphViz.Exception",
      "Data.GraphViz.Internal.State",
      "Data.GraphViz.Internal.Util",
      "Data.GraphViz.Parsing",
      "Data.GraphViz.PreProcessing",
      "Data.GraphViz.Printing",
      "Data.GraphViz.Testing",
      "Data.GraphViz.Testing.Instances",
      "Data.GraphViz.Testing.Instances.Attributes",
      "Data.GraphViz.Testing.Instances.Canonical",
      "Data.GraphViz.Testing.Instances.Common",
      "Data.GraphViz.Testing.Instances.Generalised",
      "Data.GraphViz.Testing.Instances.Graph",
      "Data.GraphViz.Testing.Instances.Helpers",
      "Data.GraphViz.Testing.Properties",
      "Data.GraphViz.Types",
      "Data.GraphViz.Types.Canonical",
      "Data.GraphViz.Types.Generalised",
      "Data.GraphViz.Types.Graph",
      "Data.GraphViz.Types.Internal.Common",
      "Data.GraphViz.Types.State",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.Read",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Test.QuickCheck",
      "Text.ParserCombinators.Poly.StateText",
      "Text.PrettyPrint",
      "Text.PrettyPrint.Leijen.Text",
      "Text.PrettyPrint.Leijen.Text.Monadic"
    ],
    "modules": [
      "Data.GraphViz",
      "Data.GraphViz.Types",
      "Data.GraphViz.Types.Canonical",
      "Data.GraphViz.Types.Generalised",
      "Data.GraphViz.Types.Graph",
      "Data.GraphViz.Types.Monadic",
      "Data.GraphViz.Parsing",
      "Data.GraphViz.Printing",
      "Data.GraphViz.Commands",
      "Data.GraphViz.Commands.IO",
      "Data.GraphViz.Attributes",
      "Data.GraphViz.Attributes.Complete",
      "Data.GraphViz.Attributes.Colors",
      "Data.GraphViz.Attributes.Colors.X11",
      "Data.GraphViz.Attributes.Colors.Brewer",
      "Data.GraphViz.Attributes.Colors.SVG",
      "Data.GraphViz.Attributes.HTML",
      "Data.GraphViz.PreProcessing",
      "Data.GraphViz.Exception",
      "Data.GraphViz.Algorithms",
      "Data.GraphViz.Attributes.Internal",
      "Data.GraphViz.Internal.Util",
      "Data.GraphViz.Internal.State",
      "Data.GraphViz.Types.Internal.Common"
    ],
    "name": "graphviz",
    "version": "2999.18.1.2"
  },
  {
    "dependencies": {
      "HsOpenSSL": [
        "OpenSSL.PEM",
        "OpenSSL.Session",
        "OpenSSL.X509",
        "OpenSSL.X509.Store"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": []
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "OpenSSL.PEM",
      "OpenSSL.Session",
      "OpenSSL.X509",
      "OpenSSL.X509.Store",
      "OpenSSL.X509.SystemStore.MacOSX",
      "OpenSSL.X509.SystemStore.Unix",
      "OpenSSL.X509.SystemStore.Win32",
      "System.IO",
      "System.IO.Unsafe",
      "System.Posix.Files",
      "System.Process"
    ],
    "modules": [
      "OpenSSL.X509.SystemStore"
    ],
    "name": "HsOpenSSL-x509-system",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Maybe",
        "Prelude"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "focus": [
        "Focus"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "list-t": [
        "ListT"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "stm-containers": [
        "STMContainers.Map"
      ],
      "time": [
        "Data.Time"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Criterion.Main",
      "Data.Hashable",
      "Data.HashSet",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Time",
      "Data.TimeMap",
      "Data.TimeMap.Internal",
      "Data.TimeMapSpec",
      "Focus",
      "ListT",
      "Prelude",
      "STMContainers.Map",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.TimeMap"
    ],
    "name": "timemap",
    "version": "0.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Foreign",
        "Foreign.C",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "crypto-api": [
        "Crypto.Classes"
      ],
      "tagged": [
        "Data.Tagged"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Crypto.Classes",
      "Crypto.Skein",
      "Crypto.Skein.Internal",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Maybe",
      "Data.Serialize",
      "Data.Tagged",
      "Foreign",
      "Foreign.C",
      "Paths",
      "System.FilePath",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Text.Printf"
    ],
    "modules": [
      "Crypto.Skein",
      "Crypto.Skein.Internal"
    ],
    "name": "skein",
    "version": "1.0.9.4"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.PageSpeed",
      "Network.Google.PageSpeed.Types",
      "Network.Google.Resource.PagespeedOnline.PagespeedAPI.RunPagespeed"
    ],
    "name": "gogol-pagespeed",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [],
      "base": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "microlens": [
        "Lens.Micro.Internal"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.ByteString",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Vector",
      "Lens.Micro.Internal"
    ],
    "modules": [
      "Lens.Micro.Aeson"
    ],
    "name": "microlens-aeson",
    "version": "2.1.1.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "loch-th": [
        "Debug.Trace.LocationTH"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "BasePrelude",
      "Cases",
      "Cases.Prelude",
      "CriterionPlus",
      "Data.Attoparsec.Text",
      "Data.Text",
      "Debug.Trace.LocationTH",
      "Prelude",
      "Test.Framework"
    ],
    "modules": [
      "Cases"
    ],
    "name": "cases",
    "version": "0.1.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Functor.Identity",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable"
      ],
      "comonad": [
        "Control.Comonad",
        "Control.Comonad.Env",
        "Control.Comonad.Store",
        "Control.Comonad.Traced"
      ],
      "containers": [],
      "dlist": [
        "Data.DList"
      ],
      "dlist-instances": [
        "Data.DList.Instances"
      ],
      "mono-traversable": [
        "Data.MonoTraversable",
        "Data.Sequences"
      ],
      "semigroupoids": [
        "Data.Functor.Apply",
        "Data.Semigroupoid.Static"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Monad.Trans.Identity"
      ],
      "vector-instances": [
        "Data.Vector.Instances"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Comonad",
      "Control.Comonad.Env",
      "Control.Comonad.Store",
      "Control.Comonad.Traced",
      "Control.Monad",
      "Control.Monad.Trans.Identity",
      "Data.DList",
      "Data.DList.Instances",
      "Data.Functor.Apply",
      "Data.Functor.Coproduct",
      "Data.Functor.Identity",
      "Data.List.NonEmpty",
      "Data.Monoid",
      "Data.MonoTraversable",
      "Data.Semigroup",
      "Data.Semigroupoid.Static",
      "Data.Sequences",
      "Data.Traversable",
      "Data.Tree",
      "Data.Vector.Instances"
    ],
    "modules": [
      "Data.MonoTraversable.Instances"
    ],
    "name": "mono-traversable-instances",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-gio": [],
      "gi-glib": [],
      "gi-gobject": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-gdkpixbuf",
    "version": "2.0.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "attoparsec": [],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Data.Proxy",
        "GHC.Generics"
      ],
      "generic-deriving": [
        "Generics.Deriving.ConNames"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "tagged": [],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.State",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Text",
      "Data.Vector",
      "Generics.Deriving.ConNames",
      "Generics.Generic.Aeson.Util",
      "Generics.Generic.IsEnum",
      "GHC.Generics"
    ],
    "modules": [
      "Generics.Generic.Aeson",
      "Generics.Generic.Aeson.Util",
      "Generics.Generic.IsEnum"
    ],
    "name": "generic-aeson",
    "version": "0.2.0.8"
  },
  {
    "dependencies": {
      "base": [],
      "persistable-types-HDBC-pg": [],
      "relational-query": [
        "Database.Relational.Query"
      ],
      "relational-query-HDBC": [
        "Database.HDBC.Record"
      ]
    },
    "imports": [
      "Database.HDBC.Record",
      "Database.Relational.Query"
    ],
    "modules": [
      "Database.Relational.Query.Documentation"
    ],
    "name": "relational-record",
    "version": "0.1.5.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compiler",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Text",
        "Distribution.Version"
      ],
      "Glob": [
        "System.FilePath.Glob"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Data",
        "Data.List",
        "Data.Typeable",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "directory": [
        "System.Directory"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "hackmanager": [],
      "hastache": [
        "Text.Hastache",
        "Text.Hastache.Context"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "mtl": [
        "Control.Monad.Except"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Except",
      "Data.ByteString",
      "Data.Data",
      "Data.FileEmbed",
      "Data.List",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Distribution.Compiler",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Text",
      "Distribution.Version",
      "Hack.Manager.Collector",
      "Hack.Manager.Gitignore",
      "Hack.Manager.Readme",
      "Hack.Manager.Travis",
      "Hack.Manager.Types",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types.Status",
      "Options.Applicative",
      "System.Directory",
      "System.Exit",
      "System.FilePath.Glob",
      "System.Process",
      "Text.Hastache",
      "Text.Hastache.Context"
    ],
    "modules": [
      "Hack.Manager.Readme",
      "Hack.Manager.Types",
      "Hack.Manager.Collector",
      "Hack.Manager.Travis",
      "Hack.Manager.Gitignore"
    ],
    "name": "hackmanager",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Word",
        "Debug.Trace",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "binary": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [],
      "hxt-charproperties": [
        "Data.Char.Properties.XMLCharProps"
      ],
      "hxt-regex-xmlschema": [],
      "hxt-unicode": [
        "Data.String.EncodingNames",
        "Data.String.Unicode"
      ],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Pos"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Arrow.ArrowExc",
      "Control.Arrow.ArrowIf",
      "Control.Arrow.ArrowIO",
      "Control.Arrow.ArrowList",
      "Control.Arrow.ArrowNavigatableTree",
      "Control.Arrow.ArrowNF",
      "Control.Arrow.ArrowState",
      "Control.Arrow.ArrowTree",
      "Control.Arrow.IOListArrow",
      "Control.Arrow.IOStateListArrow",
      "Control.Arrow.ListArrow",
      "Control.Arrow.ListArrows",
      "Control.Arrow.NTreeEdit",
      "Control.Arrow.StateListArrow",
      "Control.Category",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.FlatSeq",
      "Control.Monad",
      "Control.Monad.State.Strict",
      "Data.Atom",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Char.Properties.XMLCharProps",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Ord",
      "Data.String.EncodingNames",
      "Data.String.Unicode",
      "Data.Tree.Class",
      "Data.Tree.NavigatableTree.Class",
      "Data.Tree.NavigatableTree.XPathAxis",
      "Data.Tree.NTree.Edit",
      "Data.Tree.NTree.TypeDefs",
      "Data.Word",
      "Debug.Trace",
      "Network.URI",
      "Prelude",
      "ProcessDocument",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Test.HUnit",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Pos",
      "Text.XML.HXT.Arrow.Binary",
      "Text.XML.HXT.Arrow.DocumentInput",
      "Text.XML.HXT.Arrow.DocumentOutput",
      "Text.XML.HXT.Arrow.Edit",
      "Text.XML.HXT.Arrow.GeneralEntitySubstitution",
      "Text.XML.HXT.Arrow.Namespace",
      "Text.XML.HXT.Arrow.ParserInterface",
      "Text.XML.HXT.Arrow.Pickle",
      "Text.XML.HXT.Arrow.ProcessDocument",
      "Text.XML.HXT.Arrow.ReadDocument",
      "Text.XML.HXT.Arrow.WriteDocument",
      "Text.XML.HXT.Arrow.XmlArrow",
      "Text.XML.HXT.Arrow.XmlOptions",
      "Text.XML.HXT.Arrow.XmlRegex",
      "Text.XML.HXT.Arrow.XmlState",
      "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
      "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
      "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
      "Text.XML.HXT.Arrow.XmlState.SystemConfig",
      "Text.XML.HXT.Arrow.XmlState.TraceHandling",
      "Text.XML.HXT.Arrow.XmlState.TypeDefs",
      "Text.XML.HXT.Arrow.XmlState.URIHandling",
      "Text.XML.HXT.Core",
      "Text.XML.HXT.Curl",
      "Text.XML.HXT.DOM.Interface",
      "Text.XML.HXT.DOM.MimeTypes",
      "Text.XML.HXT.DOM.ShowXml",
      "Text.XML.HXT.DOM.TypeDefs",
      "Text.XML.HXT.DOM.Util",
      "Text.XML.HXT.DOM.XmlKeywords",
      "Text.XML.HXT.DOM.XmlNode",
      "Text.XML.HXT.DTDValidation.AttributeValueValidation",
      "Text.XML.HXT.DTDValidation.DocTransformation",
      "Text.XML.HXT.DTDValidation.DocValidation",
      "Text.XML.HXT.DTDValidation.DTDValidation",
      "Text.XML.HXT.DTDValidation.IdValidation",
      "Text.XML.HXT.DTDValidation.TypeDefs",
      "Text.XML.HXT.DTDValidation.XmlRE",
      "Text.XML.HXT.IO.GetFILE",
      "Text.XML.HXT.Parser.HtmlParsec",
      "Text.XML.HXT.Parser.XhtmlEntities",
      "Text.XML.HXT.Parser.XmlCharParser",
      "Text.XML.HXT.Parser.XmlDTDParser",
      "Text.XML.HXT.Parser.XmlDTDTokenParser",
      "Text.XML.HXT.Parser.XmlEntities",
      "Text.XML.HXT.Parser.XmlParsec",
      "Text.XML.HXT.Parser.XmlTokenParser",
      "Text.XML.HXT.Version",
      "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
      "Text.XML.HXT.XPath"
    ],
    "modules": [
      "Control.Arrow.ArrowExc",
      "Control.Arrow.ArrowIO",
      "Control.Arrow.ArrowIf",
      "Control.Arrow.ArrowList",
      "Control.Arrow.ArrowNF",
      "Control.Arrow.ArrowNavigatableTree",
      "Control.Arrow.ArrowState",
      "Control.Arrow.ArrowTree",
      "Control.Arrow.IOListArrow",
      "Control.Arrow.IOStateListArrow",
      "Control.Arrow.ListArrow",
      "Control.Arrow.ListArrows",
      "Control.Arrow.NTreeEdit",
      "Control.Arrow.StateListArrow",
      "Control.FlatSeq",
      "Data.AssocList",
      "Data.Atom",
      "Data.Function.Selector",
      "Data.Tree.Class",
      "Data.Tree.NTree.TypeDefs",
      "Data.Tree.NTree.Edit",
      "Data.Tree.NTree.Zipper.TypeDefs",
      "Data.Tree.NavigatableTree.Class",
      "Data.Tree.NavigatableTree.XPathAxis",
      "Text.XML.HXT.Arrow.Binary",
      "Text.XML.HXT.Arrow.DTDProcessing",
      "Text.XML.HXT.Arrow.DocumentInput",
      "Text.XML.HXT.Arrow.DocumentOutput",
      "Text.XML.HXT.Arrow.Edit",
      "Text.XML.HXT.Arrow.GeneralEntitySubstitution",
      "Text.XML.HXT.Arrow.Namespace",
      "Text.XML.HXT.Arrow.ParserInterface",
      "Text.XML.HXT.Arrow.Pickle",
      "Text.XML.HXT.Arrow.Pickle.DTD",
      "Text.XML.HXT.Arrow.Pickle.Schema",
      "Text.XML.HXT.Arrow.Pickle.Xml",
      "Text.XML.HXT.Arrow.ProcessDocument",
      "Text.XML.HXT.Arrow.ReadDocument",
      "Text.XML.HXT.Arrow.WriteDocument",
      "Text.XML.HXT.Arrow.XmlArrow",
      "Text.XML.HXT.Arrow.XmlOptions",
      "Text.XML.HXT.Arrow.XmlRegex",
      "Text.XML.HXT.Arrow.XmlState",
      "Text.XML.HXT.Arrow.XmlState.ErrorHandling",
      "Text.XML.HXT.Arrow.XmlState.MimeTypeTable",
      "Text.XML.HXT.Arrow.XmlState.RunIOStateArrow",
      "Text.XML.HXT.Arrow.XmlState.TraceHandling",
      "Text.XML.HXT.Arrow.XmlState.TypeDefs",
      "Text.XML.HXT.Arrow.XmlState.URIHandling",
      "Text.XML.HXT.Arrow.XmlState.SystemConfig",
      "Text.XML.HXT.Core",
      "Text.XML.HXT.DOM.FormatXmlTree",
      "Text.XML.HXT.DOM.Interface",
      "Text.XML.HXT.DOM.MimeTypeDefaults",
      "Text.XML.HXT.DOM.MimeTypes",
      "Text.XML.HXT.DOM.QualifiedName",
      "Text.XML.HXT.DOM.ShowXml",
      "Text.XML.HXT.DOM.TypeDefs",
      "Text.XML.HXT.DOM.Util",
      "Text.XML.HXT.DOM.XmlKeywords",
      "Text.XML.HXT.DOM.XmlNode",
      "Text.XML.HXT.DTDValidation.AttributeValueValidation",
      "Text.XML.HXT.DTDValidation.DTDValidation",
      "Text.XML.HXT.DTDValidation.DocTransformation",
      "Text.XML.HXT.DTDValidation.DocValidation",
      "Text.XML.HXT.DTDValidation.IdValidation",
      "Text.XML.HXT.DTDValidation.RE",
      "Text.XML.HXT.DTDValidation.TypeDefs",
      "Text.XML.HXT.DTDValidation.Validation",
      "Text.XML.HXT.DTDValidation.XmlRE",
      "Text.XML.HXT.IO.GetFILE",
      "Text.XML.HXT.Parser.HtmlParsec",
      "Text.XML.HXT.Parser.ProtocolHandlerUtil",
      "Text.XML.HXT.Parser.XhtmlEntities",
      "Text.XML.HXT.Parser.XmlCharParser",
      "Text.XML.HXT.Parser.XmlDTDParser",
      "Text.XML.HXT.Parser.XmlDTDTokenParser",
      "Text.XML.HXT.Parser.XmlEntities",
      "Text.XML.HXT.Parser.XmlParsec",
      "Text.XML.HXT.Parser.XmlTokenParser",
      "Text.XML.HXT.XMLSchema.DataTypeLibW3CNames",
      "Text.XML.HXT.Version"
    ],
    "name": "hxt",
    "version": "9.3.1.15"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe",
        "Prelude",
        "Text.Printf"
      ],
      "bytestring": [],
      "containers": [],
      "contravariant": [],
      "semigroups": [],
      "text": [
        "Data.Text"
      ],
      "yesod-core": []
    },
    "imports": [
      "Data.Maybe",
      "Data.Sequence",
      "Data.Text",
      "Prelude",
      "Text.Printf"
    ],
    "modules": [
      "Yesod.Table"
    ],
    "name": "yesod-table",
    "version": "2.0.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.MapsCoordinate",
      "Network.Google.MapsCoordinate.Types",
      "Network.Google.Resource.Coordinate.CustomFieldDef.List",
      "Network.Google.Resource.Coordinate.Jobs.Get",
      "Network.Google.Resource.Coordinate.Jobs.Insert",
      "Network.Google.Resource.Coordinate.Jobs.List",
      "Network.Google.Resource.Coordinate.Jobs.Patch",
      "Network.Google.Resource.Coordinate.Jobs.Update",
      "Network.Google.Resource.Coordinate.Location.List",
      "Network.Google.Resource.Coordinate.Schedule.Get",
      "Network.Google.Resource.Coordinate.Schedule.Patch",
      "Network.Google.Resource.Coordinate.Schedule.Update",
      "Network.Google.Resource.Coordinate.Team.List",
      "Network.Google.Resource.Coordinate.Worker.List"
    ],
    "name": "gogol-maps-coordinate",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [
        "Data.List"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Set"
      ],
      "file-embed": [],
      "htoml": [],
      "old-locale": [],
      "parsec": [],
      "tasty": [],
      "tasty-hspec": [],
      "tasty-hunit": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "BurntSushi",
      "Data.ByteString",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Set",
      "Data.Text",
      "Data.Vector"
    ],
    "modules": [
      "Text.Toml",
      "Text.Toml.Parser",
      "Text.Toml.Types"
    ],
    "name": "htoml",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Char",
        "Data.Data",
        "Data.Dynamic",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.StablePtr",
        "GHC.Base",
        "GHC.Conc",
        "GHC.IO.Handle",
        "GHC.ST",
        "GHC.Stable",
        "Prelude",
        "System.Exit",
        "System.IO",
        "Text.ParserCombinators.ReadP",
        "Text.Read.Lex"
      ]
    },
    "imports": [
      "Bits",
      "Builders",
      "CompanyDatatypes",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Data.Char",
      "Data.Data",
      "Data.Dynamic",
      "Data.Generics",
      "Data.Generics.Aliases",
      "Data.Generics.Basics",
      "Data.Generics.Builders",
      "Data.Generics.Instances",
      "Data.Generics.Schemes",
      "Data.Generics.Text",
      "Data.Generics.Twins",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Tree",
      "Datatype",
      "Data.Typeable",
      "Encode",
      "Ext",
      "Ext1",
      "Ext2",
      "FoldTree",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "FreeNames",
      "GenUpTo",
      "GEq",
      "GetC",
      "GHC.Base",
      "GHC.Conc",
      "GHC.IOBase",
      "GHC.IO.Handle",
      "GHC.ST",
      "GHC.Stable",
      "GMapQAssoc",
      "GRead",
      "GRead2",
      "GShow",
      "GShow2",
      "GZip",
      "HList",
      "HOPat",
      "Hugs.Prelude",
      "Labels",
      "LocalQuantors",
      "NestedDatatypes",
      "Newtype",
      "Paradise",
      "Perm",
      "Polymatch",
      "Prelude",
      "Reify",
      "Strings",
      "System.Exit",
      "System.IO",
      "Test.HUnit",
      "Text.ParserCombinators.ReadP",
      "Text.Read.Lex",
      "Tree",
      "Twin",
      "Typecase1",
      "Typecase2",
      "Where",
      "XML"
    ],
    "modules": [
      "Data.Generics",
      "Data.Generics.Basics",
      "Data.Generics.Instances",
      "Data.Generics.Aliases",
      "Data.Generics.Schemes",
      "Data.Generics.Text",
      "Data.Generics.Twins",
      "Data.Generics.Builders",
      "Generics.SYB",
      "Generics.SYB.Basics",
      "Generics.SYB.Instances",
      "Generics.SYB.Aliases",
      "Generics.SYB.Schemes",
      "Generics.SYB.Text",
      "Generics.SYB.Twins",
      "Generics.SYB.Builders"
    ],
    "name": "syb",
    "version": "0.6"
  },
  {
    "dependencies": {
      "base": [
        "Foreign",
        "Foreign.C",
        "System.IO.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ]
    },
    "imports": [
      "Foreign",
      "Foreign.C",
      "System.Directory",
      "System.FilePath",
      "System.IO.Unsafe"
    ],
    "modules": [
      "System.Environment.FindBin"
    ],
    "name": "FindBin",
    "version": "0.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "data-default": [
        "Data.Default"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "serversession": [
        "Web.ServerSession.Core"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wai": [
        "Network.Wai"
      ],
      "yesod-core": [
        "Yesod.Core",
        "Yesod.Core.Handler",
        "Yesod.Core.Types"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Default",
      "Data.HashMap.Strict",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Network.Wai",
      "Web.Cookie",
      "Web.PathPieces",
      "Web.ServerSession.Core",
      "Web.ServerSession.Frontend.Yesod.Internal",
      "Yesod.Core",
      "Yesod.Core.Handler",
      "Yesod.Core.Types"
    ],
    "modules": [
      "Web.ServerSession.Frontend.Yesod",
      "Web.ServerSession.Frontend.Yesod.Internal"
    ],
    "name": "serversession-frontend-yesod",
    "version": "1.0"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Typeable",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "Text.Printf"
      ],
      "base-compat": [
        "Data.Functor.Compat",
        "Data.List.Compat",
        "Prelude.Compat"
      ],
      "cmdargs": [
        "System.Console.CmdArgs",
        "System.Console.CmdArgs.Explicit",
        "System.Console.CmdArgs.Text"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "csv": [
        "Text.CSV"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskeline": [
        "System.Console.Haskeline",
        "System.Console.Haskeline.Completion"
      ],
      "hledger": [],
      "hledger-lib": [
        "Hledger",
        "Hledger.Data",
        "Hledger.Data.Dates",
        "Hledger.Data.RawOptions",
        "Hledger.Data.Types",
        "Hledger.Read",
        "Hledger.Reports.ReportOptions",
        "Hledger.Utils",
        "Hledger.Utils.String",
        "Hledger.Utils.UTF8IOCompat"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "mtl-compat": [],
      "old-time": [
        "System.Time"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "process": [
        "System.Process"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA"
      ],
      "safe": [
        "Safe"
      ],
      "split": [
        "Data.List.Split"
      ],
      "tabular": [
        "Text.Tabular",
        "Text.Tabular.AsciiArt"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy.IO"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ],
      "utf8-string": [],
      "wizards": [
        "System.Console.Wizard",
        "System.Console.Wizard.Haskeline"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans",
      "Criterion.Main",
      "Data.Char",
      "Data.Functor.Compat",
      "Data.HashSet",
      "Data.List",
      "Data.List.Compat",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Ord",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy.IO",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Typeable",
      "Hledger",
      "Hledger.Cli",
      "Hledger.Cli.Accounts",
      "Hledger.Cli.Add",
      "Hledger.Cli.Balance",
      "Hledger.Cli.Balancesheet",
      "Hledger.Cli.Cashflow",
      "Hledger.Cli.CliOptions",
      "Hledger.Cli.Histogram",
      "Hledger.Cli.Incomestatement",
      "Hledger.Cli.Main",
      "Hledger.Cli.Print",
      "Hledger.Cli.Register",
      "Hledger.Cli.Stats",
      "Hledger.Cli.Tests",
      "Hledger.Cli.Utils",
      "Hledger.Cli.Version",
      "Hledger.Data",
      "Hledger.Data.Dates",
      "Hledger.Data.RawOptions",
      "Hledger.Data.Types",
      "Hledger.Read",
      "Hledger.Reports.ReportOptions",
      "Hledger.Utils",
      "Hledger.Utils.String",
      "Hledger.Utils.UTF8IOCompat",
      "Prelude",
      "Prelude.Compat",
      "Safe",
      "SimpleBench",
      "System.Console.CmdArgs",
      "System.Console.CmdArgs.Explicit",
      "System.Console.CmdArgs.Text",
      "System.Console.GetOpt",
      "System.Console.Haskeline",
      "System.Console.Haskeline.Completion",
      "System.Console.Terminfo",
      "System.Console.Wizard",
      "System.Console.Wizard.Haskeline",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.Process",
      "System.Time",
      "System.TimeIt",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Runners.Console",
      "Test.HUnit",
      "Text.CSV",
      "Text.Parsec",
      "Text.Printf",
      "Text.Regex.TDFA",
      "Text.Shakespeare.Text",
      "Text.Tabular",
      "Text.Tabular.AsciiArt",
      "Text.Tabular.AsciiWide"
    ],
    "modules": [
      "Hledger.Cli",
      "Hledger.Cli.Main",
      "Hledger.Cli.CliOptions",
      "Hledger.Cli.Tests",
      "Hledger.Cli.Utils",
      "Hledger.Cli.Version",
      "Hledger.Cli.Add",
      "Hledger.Cli.Accounts",
      "Hledger.Cli.Balance",
      "Hledger.Cli.Balancesheet",
      "Hledger.Cli.Cashflow",
      "Hledger.Cli.Histogram",
      "Hledger.Cli.Incomestatement",
      "Hledger.Cli.Print",
      "Hledger.Cli.Register",
      "Hledger.Cli.Stats",
      "Text.Tabular.AsciiWide"
    ],
    "name": "hledger",
    "version": "0.27.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "array": [
        "Data.Array.MArray",
        "Data.Array.ST"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Instances",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Debug.Trace",
        "Foreign.C",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec",
        "Text.Printf",
        "Text.Read"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "bytestring-progress": [
        "Data.ByteString.Lazy.Progress"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Char",
        "Text.Parsec.Combinator",
        "Text.Parsec.Language",
        "Text.Parsec.Prim",
        "Text.Parsec.Token",
        "Text.ParserCombinators.Parsec.Combinator",
        "Text.ParserCombinators.Parsec.Prim"
      ],
      "pcre-light": [
        "Text.Regex.PCRE.Light"
      ],
      "strict": [
        "Data.Strict"
      ],
      "terminal-progress-bar": [
        "System.ProgressBar"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Capture",
      "Capture.OSX",
      "Capture.Win32",
      "Capture.X11",
      "Categorize",
      "CommonStartup",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Instances",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Reader",
      "Data",
      "Data.Accessor",
      "Data.Aeson",
      "Data.Array.MArray",
      "Data.Array.ST",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Binary.StringRef",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Progress",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.List",
      "Data.List.TakeR",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.MyText",
      "Data.Ord",
      "Data.Set",
      "Data.Strict",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Calendar.WeekDate",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Debug.Trace",
      "DumpFormat",
      "Foreign.C",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "Graphics.OSX.Window",
      "Graphics.Rendering.Chart",
      "Graphics.Rendering.Chart.Gtk",
      "Graphics.Win32.Window.Extra",
      "Graphics.X11",
      "Graphics.X11.Xlib.Extras",
      "Graphics.X11.XScreenSaver",
      "LeftFold",
      "Paths",
      "Prelude",
      "Stats",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Locale.SetLocale",
      "System.Posix.Files",
      "System.Posix.IO",
      "System.Process.ByteString.Lazy",
      "System.ProgressBar",
      "System.Win32.Mutex",
      "TermSize",
      "Test.Tasty",
      "Test.Tasty.Golden",
      "Test.Tasty.Golden.Manage",
      "Test.Tasty.HUnit",
      "Text.Parsec",
      "Text.Parsec.Char",
      "Text.Parsec.Combinator",
      "Text.Parsec.ExprFail",
      "Text.Parsec.Language",
      "Text.Parsec.Prim",
      "Text.Parsec.Token",
      "Text.ParserCombinators.Parsec.Combinator",
      "Text.ParserCombinators.Parsec.Prim",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.Printf",
      "Text.Read",
      "Text.Regex.PCRE.Light",
      "Text.Regex.PCRE.Light.Text",
      "TimeLog",
      "UpgradeLog1"
    ],
    "modules": [],
    "name": "arbtt",
    "version": "0.9.0.10"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Functor.Sum",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Applicative.Lift",
      "Control.Arrow",
      "Control.Comonad",
      "Control.Comonad.Trans.Env",
      "Control.Comonad.Trans.Store",
      "Control.Comonad.Trans.Traced",
      "Control.Concurrent.STM",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Default.Class",
      "Data.Functor.Bind",
      "Data.Functor.Compose",
      "Data.Functor.Constant",
      "Data.Functor.Coproduct",
      "Data.Functor.Day.Curried",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Functor.Sum",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.Semigroupoid.Static",
      "Data.Sequence",
      "Data.Set",
      "Data.Tagged",
      "Data.Tree"
    ],
    "modules": [
      "Data.Pointed",
      "Data.Copointed"
    ],
    "name": "pointed",
    "version": "5"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [],
      "bytestring": [],
      "conduit": [],
      "containers": [],
      "hw-bits": [],
      "hw-conduit": [],
      "hw-parser": [],
      "hw-prim": [],
      "hw-rankselect": [],
      "mono-traversable": [],
      "text": [],
      "vector": [],
      "word8": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "HaskellWorks.Data.Succinct"
    ],
    "name": "hw-succinct",
    "version": "0.0.0.14"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.Fail",
        "Data.Bool",
        "Data.Char",
        "Data.Eq",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Classes",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.String",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Type.Equality",
        "Data.Word",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.OverloadedLabels",
        "GHC.TypeLits",
        "Prelude",
        "System.IO",
        "Text.Show"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Fail",
      "Data.Bool",
      "Data.Char",
      "Data.Default.Class",
      "Data.Eq",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Classes",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.OverloadedLabels",
      "Data.OverloadedLabels.TH",
      "Data.OverloadedRecords",
      "Data.OverloadedRecords.TH",
      "Data.OverloadedRecords.TH.Internal",
      "Data.Proxy",
      "Data.String",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Type.Equality",
      "Data.Word",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.OverloadedLabels",
      "GHC.TypeLits",
      "Language.Haskell.TH",
      "Prelude",
      "System.IO",
      "TestCase",
      "TestCase.Data.OverloadedRecords",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Show"
    ],
    "modules": [
      "Data.OverloadedLabels",
      "Data.OverloadedLabels.TH",
      "Data.OverloadedRecords",
      "Data.OverloadedRecords.TH",
      "Data.OverloadedRecords.TH.Internal"
    ],
    "name": "overloaded-records",
    "version": "0.4.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AppEngine",
      "Network.Google.AppEngine.Types",
      "Network.Google.Resource.AppEngine.Apps.Get",
      "Network.Google.Resource.AppEngine.Apps.Operations.Get",
      "Network.Google.Resource.AppEngine.Apps.Operations.List",
      "Network.Google.Resource.AppEngine.Apps.Services.Delete",
      "Network.Google.Resource.AppEngine.Apps.Services.Get",
      "Network.Google.Resource.AppEngine.Apps.Services.List",
      "Network.Google.Resource.AppEngine.Apps.Services.Patch",
      "Network.Google.Resource.AppEngine.Apps.Services.Versions.Create",
      "Network.Google.Resource.AppEngine.Apps.Services.Versions.Delete",
      "Network.Google.Resource.AppEngine.Apps.Services.Versions.Get",
      "Network.Google.Resource.AppEngine.Apps.Services.Versions.Instances.List",
      "Network.Google.Resource.AppEngine.Apps.Services.Versions.List",
      "Network.Google.Resource.AppEngine.Apps.Services.Versions.Patch"
    ],
    "name": "gogol-appengine",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bool",
        "Data.Either",
        "Data.Eq",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.Maybe",
        "Data.Ord",
        "Data.Typeable",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.IO",
        "Prelude",
        "System.IO",
        "System.Timeout",
        "Text.Show"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TVar"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Lock",
      "Control.Concurrent.MVar",
      "Control.Concurrent.Raw",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TVar",
      "Control.Concurrent.Thread",
      "Control.Concurrent.Thread.Group",
      "Control.Exception",
      "Control.Monad",
      "Data.Bool",
      "Data.Either",
      "Data.Eq",
      "Data.Function",
      "Data.Functor",
      "Data.Int",
      "Data.IORef",
      "Data.Maybe",
      "Data.Ord",
      "Data.Typeable",
      "GHC.Conc",
      "GHC.Exts",
      "GHC.IO",
      "Prelude",
      "System.IO",
      "System.Timeout",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Show"
    ],
    "modules": [
      "Control.Concurrent.Thread",
      "Control.Concurrent.Thread.Group"
    ],
    "name": "threads",
    "version": "0.5.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Complex",
        "Data.List",
        "GHC.Float"
      ],
      "continued-fractions": [
        "Math.ContinuedFraction"
      ],
      "converge": [
        "Math.Sequence.Converge"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Data.Complex",
      "Data.List",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "GHC.Float",
      "Language.Haskell.TH",
      "Math.ContinuedFraction",
      "Math.Factorial",
      "Math.Gamma.Incomplete",
      "Math.Gamma.Lanczos",
      "Math.Matrix",
      "Math.Matrix.Alias",
      "Math.Sequence.Converge"
    ],
    "modules": [
      "Math.Factorial",
      "Math.Gamma",
      "Math.Gamma.Incomplete",
      "Math.Gamma.Stirling",
      "Math.Gamma.Lanczos"
    ],
    "name": "gamma",
    "version": "0.9.0.2"
  },
  {
    "dependencies": {
      "SHA": [],
      "array": [],
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Typeable",
        "Data.Word",
        "System.Environment",
        "System.Exit"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "directory": [
        "System.Directory"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Digest.Pure.SHA",
      "Data.List",
      "Data.Typeable",
      "Data.Word",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "Test.Framework",
      "Test.Framework.Providers.API",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Digest.Pure.SHA"
    ],
    "name": "SHA",
    "version": "1.6.4.2"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.IO"
    ],
    "modules": [
      "Data.Ini"
    ],
    "name": "ini",
    "version": "0.3.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "transformers": [],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.IORef",
      "Network.HTTP.Types",
      "Network.Wai"
    ],
    "modules": [
      "Network.Wai.Conduit"
    ],
    "name": "wai-conduit",
    "version": "3.0.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe",
        "Prelude",
        "System.Environment",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "filepath": [
        "System.FilePath.Posix"
      ],
      "hsyslog": [
        "System.Posix.Syslog"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "unix": [
        "System.Posix"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Control.Monad.Trans",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Maybe",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.FilePath.Posix",
      "System.Posix",
      "System.Posix.Syslog"
    ],
    "modules": [
      "System.Posix.Daemonize"
    ],
    "name": "hdaemonize",
    "version": "0.5.2"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Graphics.UI.Gtk.WebKit.JavaScriptCore.JSBase",
      "Graphics.UI.Gtk.WebKit.JavaScriptCore.JSContextRef",
      "Graphics.UI.Gtk.WebKit.JavaScriptCore.JSObjectRef",
      "Graphics.UI.Gtk.WebKit.JavaScriptCore.JSStringRef",
      "Graphics.UI.Gtk.WebKit.JavaScriptCore.JSValueRef"
    ],
    "name": "webkitgtk3-javascriptcore",
    "version": "0.14.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.PlayMoviesPartner",
      "Network.Google.PlayMoviesPartner.Types",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.Avails.Get",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.Avails.List",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.Components.List",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.Components.Type.Get",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.ExperienceLocales.Get",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.ExperienceLocales.List",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.Orders.Get",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.Orders.List",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.StoreInfos.Country.Get",
      "Network.Google.Resource.PlayMoviesPartner.Accounts.StoreInfos.List"
    ],
    "name": "gogol-play-moviespartner",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.EmailMigration",
      "Network.Google.EmailMigration.Types",
      "Network.Google.Resource.EmailMigration.Mail.Insert"
    ],
    "name": "gogol-admin-emailmigration",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "shakespeare": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "hamlet",
    "version": "1.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Data.Dynamic",
        "Data.Maybe",
        "Data.Typeable.Internal",
        "GHC.Generics",
        "Prelude"
      ],
      "containers": [],
      "hashable": [
        "Data.Hashable"
      ],
      "hashtables": [
        "Data.HashTable.ST.Basic"
      ]
    },
    "imports": [
      "Control.Monad.ST",
      "Data.Dynamic",
      "Data.Hashable",
      "Data.HashTable.ST.Basic",
      "Data.HSet.Types",
      "Data.Maybe",
      "Data.Typeable.Internal",
      "GHC.Generics",
      "Prelude"
    ],
    "modules": [
      "Data.HSet.Mutable"
    ],
    "name": "HSet",
    "version": "0.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "bson": [
        "Data.Bson"
      ],
      "lens": [
        "Control.Lens"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Data.Bson",
      "Data.Text"
    ],
    "modules": [
      "Data.Bson.Lens"
    ],
    "name": "bson-lens",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Digest.Adler32",
      "Data.Foldable",
      "Data.Monoid",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "System.IO.Unsafe",
      "Test.Hspec"
    ],
    "modules": [
      "Data.Digest.Adler32"
    ],
    "name": "adler32",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Typeable",
        "GHC.Exts",
        "GHC.TypeLits"
      ]
    },
    "imports": [
      "Data.Typeable",
      "GHC.Exts",
      "GHC.TypeLits"
    ],
    "modules": [
      "Type.Showtype"
    ],
    "name": "show-type",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "System.Environment"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "monads-tf": [
        "Control.Monad.Error"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.Error",
      "Data.ByteString.Char8",
      "Data.Map",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "System.Environment"
    ],
    "modules": [
      "Options"
    ],
    "name": "options",
    "version": "1.2.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.List",
        "Data.Maybe"
      ],
      "containers": [
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "safe": [
        "Safe"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "th-expand-syns": [
        "Language.Haskell.TH.ExpandSyns"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.State",
      "Data.List",
      "Data.Maybe",
      "Data.Set",
      "Language.Haskell.TH",
      "Language.Haskell.TH.ExpandSyns",
      "Language.Haskell.TH.ReifyMany",
      "Safe"
    ],
    "modules": [
      "Language.Haskell.TH.ReifyMany",
      "Language.Haskell.TH.ReifyMany.Internal"
    ],
    "name": "th-reify-many",
    "version": "0.1.6"
  },
  {
    "dependencies": {
      "base": [
        "Prelude",
        "System.IO"
      ]
    },
    "imports": [
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Text.PrettyPrint.Leijen"
    ],
    "name": "wl-pprint",
    "version": "1.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode"
      ],
      "authenticate": [
        "Web.Authenticate.BrowserId",
        "Web.Authenticate.OpenId",
        "Web.Authenticate.Rpxnow"
      ],
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Maybe",
        "Data.Monoid",
        "Data.STRef",
        "Data.Typeable",
        "System.IO",
        "Text.Read"
      ],
      "base16-bytestring": [],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "binary": [
        "Data.Binary"
      ],
      "blaze-builder": [],
      "blaze-html": [],
      "blaze-markup": [],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [],
      "conduit-extra": [],
      "containers": [],
      "cryptohash": [
        "Crypto.Hash",
        "Crypto.Hash.MD5",
        "Crypto.Hash.SHA256"
      ],
      "data-default": [
        "Data.Default"
      ],
      "email-validate": [
        "Text.Email.Validate"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-conduit": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "mime-mail": [],
      "nonce": [
        "Crypto.Nonce"
      ],
      "persistent": [],
      "persistent-template": [],
      "random": [
        "System.Random"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "safe": [],
      "shakespeare": [
        "Text.Julius"
      ],
      "template-haskell": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "time": [],
      "transformers": [
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Writer"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict"
      ],
      "wai": [
        "Network.Wai"
      ],
      "yesod-core": [
        "Yesod.Core",
        "Yesod.Core.Types"
      ],
      "yesod-form": [
        "Yesod.Form"
      ],
      "yesod-persistent": [
        "Yesod.Persist"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Writer",
      "Crypto.Hash",
      "Crypto.Hash.MD5",
      "Crypto.Hash.SHA256",
      "Crypto.Nonce",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Binary",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Default",
      "Data.FileEmbed",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.STRef",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Typeable",
      "Network.HTTP.Client",
      "Network.HTTP.Types",
      "Network.URI",
      "Network.Wai",
      "System.IO",
      "System.Random",
      "Text.Email.Validate",
      "Text.Julius",
      "Text.Read",
      "Web.Authenticate.BrowserId",
      "Web.Authenticate.OpenId",
      "Web.Authenticate.Rpxnow",
      "Yesod.Auth",
      "Yesod.Auth.Message",
      "Yesod.Auth.Routes",
      "Yesod.Core",
      "Yesod.Core.Types",
      "Yesod.Form",
      "Yesod.PasswordStore",
      "Yesod.Persist"
    ],
    "modules": [
      "Yesod.Auth",
      "Yesod.Auth.BrowserId",
      "Yesod.Auth.Dummy",
      "Yesod.Auth.Email",
      "Yesod.Auth.OpenId",
      "Yesod.Auth.Rpxnow",
      "Yesod.Auth.Message",
      "Yesod.Auth.GoogleEmail",
      "Yesod.Auth.GoogleEmail2",
      "Yesod.Auth.Hardcoded"
    ],
    "name": "yesod-auth",
    "version": "1.4.13.5"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "aeson": [
        "Data.Aeson.Encode",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.IORef",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Version",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Stats",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "cmdargs": [
        "System.Console.CmdArgs",
        "System.Console.CmdArgs.Verbosity"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "connection": [
        "Network.Connection"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "extra": [
        "Control.Concurrent.Extra",
        "Control.Exception.Extra",
        "Control.Monad.Extra",
        "Data.Either.Extra",
        "Data.IORef.Extra",
        "Data.List.Extra",
        "Data.Tuple.Extra",
        "Numeric.Extra",
        "System.Directory.Extra",
        "System.Info.Extra",
        "System.IO.Extra",
        "System.Time.Extra"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts"
      ],
      "hoogle": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "js-flot": [
        "Language.Javascript.Flot"
      ],
      "js-jquery": [
        "Language.Javascript.JQuery"
      ],
      "mmap": [
        "System.IO.MMap"
      ],
      "network": [
        "Network"
      ],
      "network-uri": [
        "Network.URI"
      ],
      "network-uri-flag": [],
      "old-locale": [
        "System.Locale"
      ],
      "process": [
        "System.Process"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "tar": [
        "Codec.Archive.Tar"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.Format"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ],
      "vector": [
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-logger": [
        "Network.Wai.Logger"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "warp-tls": [
        "Network.Wai.Handler.WarpTLS"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Action.CmdLine",
      "Action.Generate",
      "Action.Search",
      "Action.Server",
      "Action.Test",
      "Codec.Archive.Tar",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Concurrent.Extra",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Extra",
      "Control.Monad",
      "Control.Monad.Extra",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Resource",
      "Data.Aeson.Encode",
      "Data.Aeson.Types",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.Unsafe",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Data",
      "Data.Either.Extra",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Generics.Uniplate.Data",
      "Data.Int",
      "Data.IORef",
      "Data.IORef.Extra",
      "Data.Ix",
      "Data.List",
      "Data.List.Extra",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Tuple.Extra",
      "Data.Typeable",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Version",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable",
      "General.Conduit",
      "General.IString",
      "General.Log",
      "General.Store",
      "General.Str",
      "General.Template",
      "General.Timing",
      "General.Util",
      "General.Web",
      "GHC.Stats",
      "Hoogle",
      "Input.Cabal",
      "Input.Download",
      "Input.Haddock",
      "Input.Item",
      "Input.Reorder",
      "Input.Set",
      "Input.Settings",
      "Language.Haskell.Exts",
      "Language.Haskell.TH.Syntax",
      "Language.Javascript.Flot",
      "Language.Javascript.JQuery",
      "Network",
      "Network.Connection",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types.Status",
      "Network.URI",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.WarpTLS",
      "Network.Wai.Logger",
      "Numeric",
      "Numeric.Extra",
      "Output.Items",
      "Output.Names",
      "Output.Tags",
      "Output.Types",
      "Paths",
      "Prelude",
      "Query",
      "System.Console.CmdArgs",
      "System.Console.CmdArgs.Verbosity",
      "System.Directory",
      "System.Directory.Extra",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Info.Extra",
      "System.IO",
      "System.IO.Error",
      "System.IO.Extra",
      "System.IO.MMap",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Mem",
      "System.Process",
      "System.Time.Extra",
      "Test.QuickCheck"
    ],
    "modules": [
      "Hoogle"
    ],
    "name": "hoogle",
    "version": "5.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.Number"
      ],
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Either",
        "Data.Fixed",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.Typeable",
        "Data.Word"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "hedis": [
        "Database.Redis"
      ],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "monad-control": [],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "persistent": [
        "Database.Persist",
        "Database.Persist.Class",
        "Database.Persist.Sql",
        "Database.Persist.Types"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Data.Functor.Constant"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Data.Aeson",
      "Data.Attoparsec.Number",
      "Database.Persist",
      "Database.Persist.Class",
      "Database.Persist.Redis",
      "Database.Persist.Redis.Config",
      "Database.Persist.Redis.Exception",
      "Database.Persist.Redis.Internal",
      "Database.Persist.Redis.Parser",
      "Database.Persist.Redis.Store",
      "Database.Persist.Redis.Update",
      "Database.Persist.Sql",
      "Database.Persist.TH",
      "Database.Persist.Types",
      "Database.Redis",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.UTF8",
      "Data.Either",
      "Data.Fixed",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.Scientific",
      "Data.Text",
      "Data.Time",
      "Data.Typeable",
      "Data.Word",
      "Language.Haskell.TH.Syntax",
      "Web.HttpApiData",
      "Web.PathPieces"
    ],
    "modules": [
      "Database.Persist.Redis"
    ],
    "name": "persistent-redis",
    "version": "2.5.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "Foreign",
        "GHC.IO.Buffer",
        "GHC.IO.BufferedIO",
        "GHC.IO.Device",
        "GHC.IO.Exception",
        "GHC.IO.Handle",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Data.ByteString",
      "Foreign",
      "GHC.IO.Buffer",
      "GHC.IO.BufferedIO",
      "GHC.IO.Device",
      "GHC.IO.Exception",
      "GHC.IO.Handle",
      "System.IO"
    ],
    "modules": [
      "Data.Knob"
    ],
    "name": "knob",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid",
        "Debug.Trace"
      ],
      "optional-args": [
        "Data.Optional"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Pos",
        "Text.ParserCombinators.Parsec.Error"
      ],
      "text": [
        "Data.Text"
      ],
      "turtle": [
        "Turtle"
      ],
      "turtle-options": []
    },
    "imports": [
      "Control.Applicative",
      "Data.Monoid",
      "Data.Optional",
      "Data.Text",
      "Debug.Trace",
      "Percentage.Tests",
      "Quality.Tests",
      "Scale.Tests",
      "Test.HUnit",
      "Text.Parsec",
      "Text.Parsec.Pos",
      "Text.ParserCombinators.Parsec.Error",
      "Timecode.Tests",
      "Turtle",
      "Turtle.Options.Parsers",
      "Turtle.Options.Percentage",
      "Turtle.Options.Quality",
      "Turtle.Options.Scale",
      "Turtle.Options.Timecode"
    ],
    "modules": [
      "Turtle.Options.Scale",
      "Turtle.Options.Percentage",
      "Turtle.Options.Quality",
      "Turtle.Options.Timecode",
      "Turtle.Options.Parsers"
    ],
    "name": "turtle-options",
    "version": "0.1.0.4"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.ST",
        "Data.Array.Unsafe"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Int",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Word",
        "System.IO.Unsafe",
        "Text.Printf",
        "Text.Read"
      ],
      "binary": [
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [],
      "filepath": [],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Writer"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Token"
      ],
      "syb": [
        "Data.Generics"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.ST",
      "Control.Monad.Writer",
      "Data.Array.ST",
      "Data.Array.Unsafe",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Generics",
      "Data.Int",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Word",
      "System.IO.Unsafe",
      "Text.Parsec",
      "Text.Parsec.Token",
      "Text.Printf",
      "Text.ProtocolBuffers.Basic",
      "Text.ProtocolBuffers.Extensions",
      "Text.ProtocolBuffers.Get",
      "Text.ProtocolBuffers.Identifiers",
      "Text.ProtocolBuffers.Reflections",
      "Text.ProtocolBuffers.TextMessage",
      "Text.ProtocolBuffers.Unknown",
      "Text.ProtocolBuffers.WireMessage",
      "Text.Read"
    ],
    "modules": [
      "Text.ProtocolBuffers",
      "Text.ProtocolBuffers.Basic",
      "Text.ProtocolBuffers.Extensions",
      "Text.ProtocolBuffers.Get",
      "Text.ProtocolBuffers.Header",
      "Text.ProtocolBuffers.Identifiers",
      "Text.ProtocolBuffers.Reflections",
      "Text.ProtocolBuffers.TextMessage",
      "Text.ProtocolBuffers.Unknown",
      "Text.ProtocolBuffers.WireMessage"
    ],
    "name": "protocol-buffers",
    "version": "2.4.0"
  },
  {
    "dependencies": {
      "fay-base": [
        "FFI",
        "Prelude"
      ]
    },
    "imports": [
      "FFI",
      "Prelude"
    ],
    "modules": [
      "Uri"
    ],
    "name": "fay-uri",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "Foreign"
      ],
      "bytestring": []
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Foreign"
    ],
    "modules": [
      "Database.PostgreSQL.LibPQ",
      "Database.PostgreSQL.LibPQ.Internal"
    ],
    "name": "postgresql-libpq",
    "version": "0.9.2.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "directory": [
        "System.Directory"
      ],
      "doctest": [],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ]
    },
    "imports": [
      "Config",
      "Control.Applicative",
      "Control.Monad",
      "Data.Aeson",
      "Data.ByteString.Lazy.Char8",
      "Data.List",
      "Data.Maybe",
      "Runner",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.FilePath.Posix"
    ],
    "modules": [],
    "name": "doctest-discover",
    "version": "0.1.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Traversable",
        "Data.Word",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Generics",
        "System.Exit",
        "System.IO",
        "System.Posix.Types"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Data",
      "Data.Foldable",
      "Data.Traversable",
      "Data.Word",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Generics",
      "System.Console.Terminal.Common",
      "System.Console.Terminal.Posix",
      "System.Console.Terminal.Windows",
      "System.Exit",
      "System.IO",
      "System.Posix.Types",
      "System.Process"
    ],
    "modules": [
      "System.Console.Terminal.Size"
    ],
    "name": "terminal-size",
    "version": "0.3.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Foreign"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ]
    },
    "imports": [
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString.Lazy",
      "Foreign"
    ],
    "modules": [
      "Data.Binary.IEEE754"
    ],
    "name": "data-binary-ieee754",
    "version": "0.4.4"
  },
  {
    "dependencies": {
      "STMonadTrans": [
        "Control.Monad.ST.Trans"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "transformers": [
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.ST.Trans",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Writer",
      "Data.Equivalence.Monad",
      "Data.Equivalence.STT",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Equivalence.STT",
      "Data.Equivalence.Monad"
    ],
    "name": "equivalence",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Monoid",
        "Debug.Trace",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "data-default": [
        "Data.Default"
      ],
      "exceptions": [],
      "filepath": [],
      "leveldb-haskell": [],
      "resourcet": [],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Database.LevelDB",
      "Database.LevelDB.Base",
      "Database.LevelDB.Internal",
      "Database.LevelDB.MonadResource",
      "Database.LevelDB.Streaming",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Default",
      "Data.Monoid",
      "Data.Stream.Monadic",
      "Debug.Trace",
      "Prelude",
      "Test.Streaming"
    ],
    "modules": [
      "Database.LevelDB",
      "Database.LevelDB.Base",
      "Database.LevelDB.C",
      "Database.LevelDB.Internal",
      "Database.LevelDB.Iterator",
      "Database.LevelDB.MonadResource",
      "Database.LevelDB.Streaming",
      "Database.LevelDB.Types",
      "Data.Stream.Monadic"
    ],
    "name": "leveldb-haskell",
    "version": "0.6.4"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.IO",
        "Text.ParserCombinators.ReadP"
      ],
      "binary": [],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Pretty",
        "Language.Haskell.Exts.Syntax"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Pos"
      ],
      "protocol-buffers": [
        "Text.ProtocolBuffers.Basic",
        "Text.ProtocolBuffers.Extensions",
        "Text.ProtocolBuffers.Header",
        "Text.ProtocolBuffers.Identifiers",
        "Text.ProtocolBuffers.Reflections",
        "Text.ProtocolBuffers.WireMessage"
      ],
      "protocol-buffers-descriptor": [
        "Text.DescriptorProtos.DescriptorProto",
        "Text.DescriptorProtos.DescriptorProto.ExtensionRange",
        "Text.DescriptorProtos.EnumDescriptorProto",
        "Text.DescriptorProtos.EnumOptions",
        "Text.DescriptorProtos.EnumValueDescriptorProto",
        "Text.DescriptorProtos.EnumValueOptions",
        "Text.DescriptorProtos.FieldDescriptorProto",
        "Text.DescriptorProtos.FieldDescriptorProto.Label",
        "Text.DescriptorProtos.FieldDescriptorProto.Type",
        "Text.DescriptorProtos.FieldOptions",
        "Text.DescriptorProtos.FileDescriptorProto",
        "Text.DescriptorProtos.FileDescriptorSet",
        "Text.DescriptorProtos.FileOptions",
        "Text.DescriptorProtos.MessageOptions",
        "Text.DescriptorProtos.MethodDescriptorProto",
        "Text.DescriptorProtos.MethodOptions",
        "Text.DescriptorProtos.OneofDescriptorProto",
        "Text.DescriptorProtos.ServiceDescriptorProto",
        "Text.DescriptorProtos.ServiceOptions",
        "Text.DescriptorProtos.UninterpretedOption",
        "Text.DescriptorProtos.UninterpretedOption.NamePart"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.UTF8",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.Graph",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Sequence",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Debug.Trace",
      "Language.Haskell.Exts.Pretty",
      "Language.Haskell.Exts.Syntax",
      "Numeric",
      "Paths",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.IO",
      "Text.DescriptorProtos.DescriptorProto",
      "Text.DescriptorProtos.DescriptorProto.ExtensionRange",
      "Text.DescriptorProtos.EnumDescriptorProto",
      "Text.DescriptorProtos.EnumOptions",
      "Text.DescriptorProtos.EnumValueDescriptorProto",
      "Text.DescriptorProtos.EnumValueOptions",
      "Text.DescriptorProtos.FieldDescriptorProto",
      "Text.DescriptorProtos.FieldDescriptorProto.Label",
      "Text.DescriptorProtos.FieldDescriptorProto.Type",
      "Text.DescriptorProtos.FieldOptions",
      "Text.DescriptorProtos.FileDescriptorProto",
      "Text.DescriptorProtos.FileDescriptorSet",
      "Text.DescriptorProtos.FileOptions",
      "Text.DescriptorProtos.MessageOptions",
      "Text.DescriptorProtos.MethodDescriptorProto",
      "Text.DescriptorProtos.MethodOptions",
      "Text.DescriptorProtos.OneofDescriptorProto",
      "Text.DescriptorProtos.ServiceDescriptorProto",
      "Text.DescriptorProtos.ServiceOptions",
      "Text.DescriptorProtos.UninterpretedOption",
      "Text.DescriptorProtos.UninterpretedOption.NamePart",
      "Text.Google.Protobuf.Compiler.CodeGeneratorRequest",
      "Text.Google.Protobuf.Compiler.CodeGeneratorResponse",
      "Text.Google.Protobuf.Compiler.CodeGeneratorResponse.File",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Pos",
      "Text.ParserCombinators.ReadP",
      "Text.ProtocolBuffers.Basic",
      "Text.ProtocolBuffers.Extensions",
      "Text.ProtocolBuffers.Header",
      "Text.ProtocolBuffers.Identifiers",
      "Text.ProtocolBuffers.ProtoCompile.BreakRecursion",
      "Text.ProtocolBuffers.ProtoCompile.Gen",
      "Text.ProtocolBuffers.ProtoCompile.Instances",
      "Text.ProtocolBuffers.ProtoCompile.Lexer",
      "Text.ProtocolBuffers.ProtoCompile.MakeReflections",
      "Text.ProtocolBuffers.ProtoCompile.Parser",
      "Text.ProtocolBuffers.ProtoCompile.Resolve",
      "Text.ProtocolBuffers.Reflections",
      "Text.ProtocolBuffers.WireMessage"
    ],
    "modules": [
      "Text.ProtocolBuffers.ProtoCompile.Parser",
      "Text.ProtocolBuffers.ProtoCompile.Resolve",
      "Text.ProtocolBuffers.ProtoCompile.MakeReflections"
    ],
    "name": "hprotoc",
    "version": "2.4.0"
  },
  {
    "dependencies": {
      "ghc-prim": [
        "GHC.Classes",
        "GHC.IntWord64",
        "GHC.Magic",
        "GHC.Types"
      ]
    },
    "imports": [
      "GHC.Classes",
      "GHC.Integer",
      "GHC.Integer.Logarithms",
      "GHC.Integer.Type",
      "GHC.IntWord64",
      "GHC.Magic",
      "GHC.Prim",
      "GHC.Types"
    ],
    "modules": [
      "GHC.Integer",
      "GHC.Integer.Logarithms",
      "GHC.Integer.Logarithms.Internals",
      "GHC.Integer.GMP.Internals"
    ],
    "name": "integer-gmp",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.STRef",
        "System.IO"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "binary": [
        "Data.Binary"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cryptohash": [
        "Crypto.Hash",
        "Crypto.Hash.SHA256"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Crypto.Hash",
      "Crypto.Hash.SHA256",
      "Data.Binary",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Maybe",
      "Data.STRef",
      "System.IO",
      "System.Random"
    ],
    "modules": [
      "Crypto.PasswordStore"
    ],
    "name": "pwstore-fast",
    "version": "2.4.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "clash-lib": [],
      "clash-prelude": [],
      "fgl": [],
      "lens": [],
      "mtl": [],
      "text": [
        "Data.Text.Lazy"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ],
      "wl-pprint-text": []
    },
    "imports": [
      "Control.Applicative",
      "Data.HashSet",
      "Data.Text.Lazy",
      "Paths",
      "System.FilePath"
    ],
    "modules": [
      "CLaSH.Backend.Verilog"
    ],
    "name": "clash-verilog",
    "version": "0.6.9"
  },
  {
    "dependencies": {
      "base": [
        "Data.Fixed"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.Duration",
      "Data.Fixed",
      "System.FilePath.Glob",
      "Test.DocTest"
    ],
    "modules": [
      "Data.Duration",
      "Data.Duration.Tutorial"
    ],
    "name": "human-readable-duration",
    "version": "0.2.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "knob": [
        "Data.Knob"
      ],
      "monad-loops": [
        "Control.Monad.Loops"
      ],
      "random-fu": [
        "Data.Random",
        "Data.Random.Distribution.Categorical"
      ],
      "regex-base": [
        "Text.Regex.Base"
      ],
      "regex-pcre": [
        "Text.Regex.PCRE"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Loops",
      "Data.ByteString",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Fortune",
      "Data.Fortune.FortuneFile",
      "Data.Fortune.Index",
      "Data.Fortune.Stats",
      "Data.Function",
      "Data.IORef",
      "Data.Knob",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Random",
      "Data.Random.Distribution.Categorical",
      "Data.Semigroup",
      "Data.Serialize",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Version",
      "Data.Word",
      "Paths",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "Text.Printf",
      "Text.Regex.Base",
      "Text.Regex.PCRE"
    ],
    "modules": [
      "Data.Fortune"
    ],
    "name": "misfortune",
    "version": "0.1.1.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "base-unicode-symbols": [
        "Data.Monoid.Unicode",
        "Prelude.Unicode"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Resource",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Monoid.Unicode",
      "Data.String",
      "Data.Text",
      "Network.HTTP.Types",
      "Network.Socket",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.WebSockets",
      "Network.Wai.Middleware.Cors",
      "Network.Wai.Test",
      "Network.WebSockets",
      "Prelude",
      "Prelude.Unicode",
      "Server",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Web.Scotty"
    ],
    "modules": [
      "Network.Wai.Middleware.Cors"
    ],
    "name": "wai-cors",
    "version": "0.2.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Prelude"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.Char",
      "Data.Default",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed.Base",
      "Data.Vector.Unboxed.Deriving",
      "Language.Haskell.TH",
      "Prelude"
    ],
    "modules": [
      "Data.Vector.Unboxed.Deriving"
    ],
    "name": "vector-th-unbox",
    "version": "0.2.1.6"
  },
  {
    "dependencies": {
      "carray": [
        "Data.Array.CArray",
        "Data.Array.CArray.Base"
      ],
      "ix-shapable": [
        "Data.Ix.Shapable"
      ],
      "storable-complex": [
        "Foreign.Storable.Complex"
      ],
      "transformers": [
        "Control.Monad.Trans.State",
        "Data.Functor.Reverse"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Data.Array.CArray",
      "Data.Array.CArray.Base",
      "Data.Array.IArray",
      "Data.Bits",
      "Data.Complex",
      "Data.Functor.Reverse",
      "Data.Ix",
      "Data.Ix.Shapable",
      "Data.List",
      "Data.Typeable",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Foreign.Storable.Complex",
      "Math.FFT",
      "Math.FFT.Base",
      "Math.FFT.FFI",
      "Prelude",
      "System.Environment",
      "System.IO.Unsafe",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Math.FFT",
      "Math.FFT.Base"
    ],
    "name": "fft",
    "version": "0.1.8.4"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Graphics.X11.Xauth"
    ],
    "name": "Xauth",
    "version": "0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.IArray"
      ],
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Monad",
        "Control.Monad.Zip",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Word",
        "GHC.Generics",
        "Prelude",
        "System.Info",
        "System.IO",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "dlist": [
        "Data.DList"
      ],
      "fmlist": [
        "Data.FMList"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ],
      "utf8-string": [
        "Data.String.UTF8"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Zip",
      "Data.Array",
      "Data.Array.IArray",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.DList",
      "Data.FMList",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.ListLike",
      "Data.ListLike.Base",
      "Data.ListLike.Chars",
      "Data.ListLike.CharString",
      "Data.ListLike.DList",
      "Data.ListLike.FMList",
      "Data.ListLike.FoldableLL",
      "Data.ListLike.Instances",
      "Data.ListLike.IO",
      "Data.ListLike.String",
      "Data.ListLike.Text.Builder",
      "Data.ListLike.Text.Text",
      "Data.ListLike.Text.TextLazy",
      "Data.ListLike.Utils",
      "Data.ListLike.Vector.Storable",
      "Data.ListLike.Vector.Unboxed",
      "Data.ListLike.Vector.Vector",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.String",
      "Data.String.UTF8",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "GHC.Generics",
      "Prelude",
      "System.Info",
      "System.IO",
      "System.Random",
      "Test.HUnit",
      "TestInfrastructure",
      "Test.QuickCheck",
      "Test.QuickCheck.Test",
      "Text.Printf"
    ],
    "modules": [
      "Data.ListLike",
      "Data.ListLike.Base",
      "Data.ListLike.Chars",
      "Data.ListLike.CharString",
      "Data.ListLike.FoldableLL",
      "Data.ListLike.IO",
      "Data.ListLike.Instances",
      "Data.ListLike.String",
      "Data.ListLike.Text",
      "Data.ListLike.Text.Builder",
      "Data.ListLike.Text.Text",
      "Data.ListLike.Text.TextLazy",
      "Data.ListLike.UTF8",
      "Data.ListLike.Utils",
      "Data.ListLike.Vector",
      "Data.ListLike.Vector.Generic",
      "Data.ListLike.Vector.Storable",
      "Data.ListLike.Vector.Unboxed",
      "Data.ListLike.Vector.Vector",
      "Data.ListLike.DList",
      "Data.ListLike.FMList"
    ],
    "name": "ListLike",
    "version": "4.5"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.WAF",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.WAF",
      "Test.AWS.WAF.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.WAF",
      "Network.AWS.WAF.CreateByteMatchSet",
      "Network.AWS.WAF.CreateIPSet",
      "Network.AWS.WAF.CreateRule",
      "Network.AWS.WAF.CreateSizeConstraintSet",
      "Network.AWS.WAF.CreateSqlInjectionMatchSet",
      "Network.AWS.WAF.CreateWebACL",
      "Network.AWS.WAF.CreateXSSMatchSet",
      "Network.AWS.WAF.DeleteByteMatchSet",
      "Network.AWS.WAF.DeleteIPSet",
      "Network.AWS.WAF.DeleteRule",
      "Network.AWS.WAF.DeleteSizeConstraintSet",
      "Network.AWS.WAF.DeleteSqlInjectionMatchSet",
      "Network.AWS.WAF.DeleteWebACL",
      "Network.AWS.WAF.DeleteXSSMatchSet",
      "Network.AWS.WAF.GetByteMatchSet",
      "Network.AWS.WAF.GetChangeToken",
      "Network.AWS.WAF.GetChangeTokenStatus",
      "Network.AWS.WAF.GetIPSet",
      "Network.AWS.WAF.GetRule",
      "Network.AWS.WAF.GetSampledRequests",
      "Network.AWS.WAF.GetSizeConstraintSet",
      "Network.AWS.WAF.GetSqlInjectionMatchSet",
      "Network.AWS.WAF.GetWebACL",
      "Network.AWS.WAF.GetXSSMatchSet",
      "Network.AWS.WAF.ListByteMatchSets",
      "Network.AWS.WAF.ListIPSets",
      "Network.AWS.WAF.ListRules",
      "Network.AWS.WAF.ListSizeConstraintSets",
      "Network.AWS.WAF.ListSqlInjectionMatchSets",
      "Network.AWS.WAF.ListWebACLs",
      "Network.AWS.WAF.ListXSSMatchSets",
      "Network.AWS.WAF.Types",
      "Network.AWS.WAF.UpdateByteMatchSet",
      "Network.AWS.WAF.UpdateIPSet",
      "Network.AWS.WAF.UpdateRule",
      "Network.AWS.WAF.UpdateSizeConstraintSet",
      "Network.AWS.WAF.UpdateSqlInjectionMatchSet",
      "Network.AWS.WAF.UpdateWebACL",
      "Network.AWS.WAF.UpdateXSSMatchSet",
      "Network.AWS.WAF.Waiters"
    ],
    "name": "amazonka-waf",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.State",
      "Data.Foldable",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Tree",
      "Math.TreeFun.Types"
    ],
    "modules": [
      "Math.TreeFun.Tree",
      "Math.TreeFun.Types"
    ],
    "name": "tree-fun",
    "version": "0.8.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Glacier",
      "Test.AWS.Fixture",
      "Test.AWS.Glacier",
      "Test.AWS.Glacier.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Glacier",
      "Network.AWS.Glacier.AbortMultipartUpload",
      "Network.AWS.Glacier.AbortVaultLock",
      "Network.AWS.Glacier.AddTagsToVault",
      "Network.AWS.Glacier.CompleteMultipartUpload",
      "Network.AWS.Glacier.CompleteVaultLock",
      "Network.AWS.Glacier.CreateVault",
      "Network.AWS.Glacier.DeleteArchive",
      "Network.AWS.Glacier.DeleteVault",
      "Network.AWS.Glacier.DeleteVaultAccessPolicy",
      "Network.AWS.Glacier.DeleteVaultNotifications",
      "Network.AWS.Glacier.DescribeJob",
      "Network.AWS.Glacier.DescribeVault",
      "Network.AWS.Glacier.GetDataRetrievalPolicy",
      "Network.AWS.Glacier.GetJobOutput",
      "Network.AWS.Glacier.GetVaultAccessPolicy",
      "Network.AWS.Glacier.GetVaultLock",
      "Network.AWS.Glacier.GetVaultNotifications",
      "Network.AWS.Glacier.InitiateJob",
      "Network.AWS.Glacier.InitiateMultipartUpload",
      "Network.AWS.Glacier.InitiateVaultLock",
      "Network.AWS.Glacier.ListJobs",
      "Network.AWS.Glacier.ListMultipartUploads",
      "Network.AWS.Glacier.ListParts",
      "Network.AWS.Glacier.ListTagsForVault",
      "Network.AWS.Glacier.ListVaults",
      "Network.AWS.Glacier.RemoveTagsFromVault",
      "Network.AWS.Glacier.SetDataRetrievalPolicy",
      "Network.AWS.Glacier.SetVaultAccessPolicy",
      "Network.AWS.Glacier.SetVaultNotifications",
      "Network.AWS.Glacier.Types",
      "Network.AWS.Glacier.UploadArchive",
      "Network.AWS.Glacier.UploadMultipartPart",
      "Network.AWS.Glacier.Waiters"
    ],
    "name": "amazonka-glacier",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "convertible": [
        "Data.Convertible"
      ],
      "mtl": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Database.HDBC",
      "Database.HDBC.ColTypes",
      "Database.HDBC.Locale",
      "Database.HDBC.SqlValue",
      "Database.HDBC.Statement",
      "Database.HDBC.Types",
      "Database.HDBC.Utils",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Convertible",
      "Data.Dynamic",
      "Data.Fixed",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Ratio",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Word",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Mem.Weak",
      "System.Time",
      "Test.HUnit",
      "Test.HUnit.Tools",
      "TestInfrastructure",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Tools",
      "TestSqlValue"
    ],
    "modules": [
      "Database.HDBC",
      "Database.HDBC.Types",
      "Database.HDBC.DriverUtils",
      "Database.HDBC.ColTypes",
      "Database.HDBC.Statement",
      "Database.HDBC.SqlValue",
      "Database.HDBC.Locale"
    ],
    "name": "HDBC",
    "version": "2.4.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Either",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Read"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Either",
      "Ernie",
      "Grover.Tests",
      "Makeopt",
      "Multiarg",
      "Multiarg.Examples.Grover",
      "Multiarg.Examples.Telly",
      "Multiarg.Internal",
      "Multiarg.Limeline",
      "Multiarg.Maddash",
      "Multiarg.Maddash.Instances",
      "Multiarg.Maddash.Tests",
      "Multiarg.Mode",
      "Multiarg.Mode.Internal",
      "Multiarg.Types",
      "Multiarg.Types.Instances",
      "Multiarg.Util",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Telly.Tests",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.TH",
      "Text.Read"
    ],
    "modules": [
      "Multiarg",
      "Multiarg.Examples",
      "Multiarg.Examples.Grover",
      "Multiarg.Examples.Telly",
      "Multiarg.Internal",
      "Multiarg.Limeline",
      "Multiarg.Maddash",
      "Multiarg.Mode",
      "Multiarg.Mode.Internal",
      "Multiarg.Types",
      "Multiarg.Util",
      "Multiarg.Vocabulary"
    ],
    "name": "multiarg",
    "version": "0.30.0.10"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec"
      ],
      "base": [
        "Data.Bits",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString"
      ]
    },
    "imports": [
      "Data.Attoparsec",
      "Data.Bits",
      "Data.ByteString",
      "Data.Word"
    ],
    "modules": [
      "Data.Attoparsec.Binary"
    ],
    "name": "attoparsec-binary",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Int",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Semigroup",
        "Data.String",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntMap.Strict",
        "Data.IntSet",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ],
      "vector-algorithms": [
        "Data.Vector.Algorithms.Merge"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Exception.Base",
      "Control.Foldl",
      "Control.Monad",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Containers",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Int",
      "Data.IntMap",
      "Data.IntMap.Strict",
      "Data.IntSet",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.List.Split",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.MonoTraversable",
      "Data.NonNull",
      "Data.Ord",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Sequences",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Tree",
      "Data.Vector",
      "Data.Vector.Algorithms.Merge",
      "Data.Vector.Generic",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "Prelude",
      "Spec",
      "System.Random.MWC",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Modifiers"
    ],
    "modules": [
      "Data.MonoTraversable",
      "Data.MonoTraversable.Unprefixed",
      "Data.Containers",
      "Data.Sequences",
      "Data.NonNull"
    ],
    "name": "mono-traversable",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Maybe"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ]
    },
    "imports": [
      "Data.List",
      "Data.Maybe",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote"
    ],
    "modules": [
      "Text.Heredoc"
    ],
    "name": "heredoc",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Text"
      ],
      "Hclip": [],
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Conc",
        "GHC.Generics",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf",
        "Text.Read"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "dlist": [
        "Data.DList"
      ],
      "dynamic-state": [
        "Data.DynamicState",
        "Data.DynamicState.Serializable"
      ],
      "dyre": [
        "Config.Dyre",
        "Config.Dyre.Options",
        "Config.Dyre.Params",
        "Config.Dyre.Relaunch"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "oo-prototypes": [
        "Data.Prototype"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "pointedlist": [
        "Data.List.PointedList",
        "Data.List.PointedList.Circular"
      ],
      "process": [],
      "safe": [],
      "semigroups": [],
      "split": [],
      "template-haskell": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Read"
      ],
      "text-icu": [
        "Data.Text.ICU"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unix-compat": [
        "System.PosixCompat.User"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "word-trie": [
        "Data.Trie"
      ],
      "xdg-basedir": [
        "System.Environment.XDG.BaseDir"
      ],
      "yi": [],
      "yi-language": [
        "Yi.Buffer.Basic",
        "Yi.Lexer.Abella",
        "Yi.Lexer.Alex",
        "Yi.Lexer.C",
        "Yi.Lexer.Cabal",
        "Yi.Lexer.Clojure",
        "Yi.Lexer.Compilation",
        "Yi.Lexer.Cplusplus",
        "Yi.Lexer.GitCommit",
        "Yi.Lexer.GNUMake",
        "Yi.Lexer.Java",
        "Yi.Lexer.JSON",
        "Yi.Lexer.Latex",
        "Yi.Lexer.LiterateHaskell",
        "Yi.Lexer.ObjectiveC",
        "Yi.Lexer.OCaml",
        "Yi.Lexer.Ott",
        "Yi.Lexer.Perl",
        "Yi.Lexer.Python",
        "Yi.Lexer.Ruby",
        "Yi.Lexer.Srmc",
        "Yi.Lexer.SVNCommit",
        "Yi.Lexer.Whitespace",
        "Yi.Regex",
        "Yi.Region",
        "Yi.Style",
        "Yi.Style.Library",
        "Yi.Utils"
      ],
      "yi-rope": [
        "Yi.Rope"
      ]
    },
    "imports": [
      "Config.Dyre",
      "Config.Dyre.Options",
      "Config.Dyre.Params",
      "Config.Dyre.Relaunch",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Error",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Data.Array",
      "Data.Binary",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Default",
      "Data.DelayList",
      "Data.DList",
      "Data.DynamicState",
      "Data.DynamicState.Serializable",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.List.PointedList",
      "Data.List.PointedList.Circular",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Prototype",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.ICU",
      "Data.Text.Read",
      "Data.Time",
      "Data.Traversable",
      "Data.Tree",
      "Data.Trie",
      "Data.Typeable",
      "Distribution.Text",
      "Generic.TestPureBufferManipulations",
      "Generic.TestUtils",
      "GHC.Conc",
      "GHC.Generics",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.Gdk.EventM",
      "Graphics.UI.Gtk.Gdk.Events",
      "Graphics.UI.Gtk.Gdk.GC",
      "Graphics.Vty",
      "Graphics.Vty.Config",
      "Language.Haskell.Interpreter",
      "Paths",
      "Prelude",
      "System.CanonicalizePath",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Environment.XDG.BaseDir",
      "System.Exit",
      "System.FilePath",
      "System.Glib.GError",
      "System.IO",
      "System.IO.Unsafe",
      "System.Locale",
      "System.PosixCompat.User",
      "System.Posix.IO",
      "System.Random",
      "System.Win32",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Text.ParserCombinators.Parsec",
      "Text.Printf",
      "Text.Read",
      "Vim.EditorManipulations.BufferExCommand",
      "Vim.TestExCommandParsers",
      "Vim.TestPureBufferManipulations",
      "Vim.TestPureEditorManipulations",
      "Yi",
      "Yi.Boot",
      "Yi.Boot.Internal",
      "Yi.Buffer",
      "Yi.Buffer.Adjusted",
      "Yi.Buffer.Basic",
      "Yi.Buffer.HighLevel",
      "Yi.Buffer.Implementation",
      "Yi.Buffer.Indent",
      "Yi.Buffer.Misc",
      "Yi.Buffer.Normal",
      "Yi.Buffer.Region",
      "Yi.Buffer.TextUnit",
      "Yi.Buffer.Undo",
      "Yi.Command",
      "Yi.Config",
      "Yi.Config.Default",
      "Yi.Config.Lens",
      "Yi.Config.Simple.Types",
      "Yi.Core",
      "Yi.Debug",
      "Yi.Dired",
      "Yi.Editor",
      "Yi.Eval",
      "Yi.Event",
      "Yi.File",
      "Yi.Hooks",
      "Yi.IncrementalParse",
      "Yi.Interact",
      "Yi.IReader",
      "Yi.JumpList",
      "Yi.Keymap",
      "Yi.Keymap.Cua",
      "Yi.Keymap.Emacs",
      "Yi.Keymap.Emacs.KillRing",
      "Yi.Keymap.Emacs.Utils",
      "Yi.Keymap.Keys",
      "Yi.Keymap.Vim",
      "Yi.Keymap.Vim.Common",
      "Yi.Keymap.Vim.Digraph",
      "Yi.Keymap.Vim.EventUtils",
      "Yi.Keymap.Vim.Ex",
      "Yi.Keymap.Vim.Ex.Commands.Buffer",
      "Yi.Keymap.Vim.Ex.Commands.BufferDelete",
      "Yi.Keymap.Vim.Ex.Commands.Buffers",
      "Yi.Keymap.Vim.Ex.Commands.Cabal",
      "Yi.Keymap.Vim.Ex.Commands.Common",
      "Yi.Keymap.Vim.Ex.Commands.Delete",
      "Yi.Keymap.Vim.Ex.Commands.Edit",
      "Yi.Keymap.Vim.Ex.Commands.Global",
      "Yi.Keymap.Vim.Ex.Commands.GotoLine",
      "Yi.Keymap.Vim.Ex.Commands.Help",
      "Yi.Keymap.Vim.Ex.Commands.Make",
      "Yi.Keymap.Vim.Ex.Commands.Nohl",
      "Yi.Keymap.Vim.Ex.Commands.Paste",
      "Yi.Keymap.Vim.Ex.Commands.Quit",
      "Yi.Keymap.Vim.Ex.Commands.Reload",
      "Yi.Keymap.Vim.Ex.Commands.Shell",
      "Yi.Keymap.Vim.Ex.Commands.Sort",
      "Yi.Keymap.Vim.Ex.Commands.Substitute",
      "Yi.Keymap.Vim.Ex.Commands.Tag",
      "Yi.Keymap.Vim.Ex.Commands.Undo",
      "Yi.Keymap.Vim.Ex.Commands.Write",
      "Yi.Keymap.Vim.Ex.Commands.Yi",
      "Yi.Keymap.Vim.ExMap",
      "Yi.Keymap.Vim.Ex.Types",
      "Yi.Keymap.Vim.InsertMap",
      "Yi.Keymap.Vim.NormalMap",
      "Yi.Keymap.Vim.NormalOperatorPendingMap",
      "Yi.Keymap.Vim.Operator",
      "Yi.Keymap.Vim.ReplaceMap",
      "Yi.Keymap.Vim.ReplaceSingleCharMap",
      "Yi.Keymap.Vim.SearchMotionMap",
      "Yi.Keymap.Vim.StateUtils",
      "Yi.Keymap.Vim.StyledRegion",
      "Yi.Keymap.Vim.Utils",
      "Yi.Keymap.Vim.VisualMap",
      "Yi.Layout",
      "Yi.Lexer.Abella",
      "Yi.Lexer.Alex",
      "Yi.Lexer.C",
      "Yi.Lexer.Cabal",
      "Yi.Lexer.Clojure",
      "Yi.Lexer.Compilation",
      "Yi.Lexer.Cplusplus",
      "Yi.Lexer.GitCommit",
      "Yi.Lexer.GNUMake",
      "Yi.Lexer.Java",
      "Yi.Lexer.JSON",
      "Yi.Lexer.Latex",
      "Yi.Lexer.LiterateHaskell",
      "Yi.Lexer.ObjectiveC",
      "Yi.Lexer.OCaml",
      "Yi.Lexer.Ott",
      "Yi.Lexer.Perl",
      "Yi.Lexer.Python",
      "Yi.Lexer.Ruby",
      "Yi.Lexer.Srmc",
      "Yi.Lexer.SVNCommit",
      "Yi.Lexer.Whitespace",
      "Yi.MiniBuffer",
      "Yi.Misc",
      "Yi.Mode.Abella",
      "Yi.Mode.Buffers",
      "Yi.Mode.Compilation",
      "Yi.Mode.GHCi",
      "Yi.Mode.Haskell",
      "Yi.Mode.Interactive",
      "Yi.Mode.IReader",
      "Yi.Mode.JavaScript",
      "Yi.Mode.Latex",
      "Yi.Modes",
      "Yi.Monad",
      "Yi.Paths",
      "Yi.Rectangle",
      "Yi.Regex",
      "Yi.Region",
      "Yi.Rope",
      "Yi.Search",
      "Yi.String",
      "Yi.Style",
      "Yi.Style.Library",
      "Yi.Syntax.Driver",
      "Yi.Syntax.Haskell",
      "Yi.Syntax.Latex",
      "Yi.Syntax.OnlineTree",
      "Yi.Syntax.Tree",
      "Yi.Tab",
      "Yi.TextCompletion",
      "Yi.Types",
      "Yi.UI.Batch",
      "Yi.UI.Common",
      "Yi.UI.Pango",
      "Yi.UI.SimpleLayout",
      "Yi.UI.Utils",
      "Yi.UI.Vty",
      "Yi.Utils",
      "Yi.Window"
    ],
    "modules": [
      "Yi",
      "Yi.Boot",
      "Yi.Boot.Internal",
      "Yi.Buffer",
      "Yi.Buffer.Adjusted",
      "Yi.Buffer.HighLevel",
      "Yi.Buffer.Indent",
      "Yi.Buffer.Normal",
      "Yi.Buffer.Misc",
      "Yi.Buffer.Region",
      "Yi.Buffer.TextUnit",
      "Yi.Buffer.Undo",
      "Yi.Command",
      "Yi.Command.Help",
      "Yi.Completion",
      "Yi.Config",
      "Yi.Config.Default",
      "Yi.Config.Misc",
      "Yi.Config.Lens",
      "Yi.Config.Simple",
      "Yi.Config.Simple.Types",
      "Yi.Core",
      "Yi.Debug",
      "Yi.Dired",
      "Yi.Editor",
      "Yi.Eval",
      "Yi.Event",
      "Yi.File",
      "Yi.History",
      "Yi.Hoogle",
      "Yi.Hooks",
      "Yi.IReader",
      "Yi.IncrementalParse",
      "Yi.Interact",
      "Yi.JumpList",
      "Yi.Keymap",
      "Yi.Keymap.Completion",
      "Yi.Keymap.Cua",
      "Yi.Keymap.Emacs",
      "Yi.Keymap.Emacs.KillRing",
      "Yi.Keymap.Emacs.Utils",
      "Yi.Keymap.Keys",
      "Yi.Keymap.Vim",
      "Yi.Keymap.Vim.Common",
      "Yi.Keymap.Vim.Digraph",
      "Yi.Keymap.Vim.Eval",
      "Yi.Keymap.Vim.EventUtils",
      "Yi.Keymap.Vim.Ex",
      "Yi.Keymap.Vim.Ex.Commands.Common",
      "Yi.Keymap.Vim.Ex.Commands.Buffer",
      "Yi.Keymap.Vim.Ex.Commands.Buffers",
      "Yi.Keymap.Vim.Ex.Commands.BufferDelete",
      "Yi.Keymap.Vim.Ex.Commands.Cabal",
      "Yi.Keymap.Vim.Ex.Commands.Delete",
      "Yi.Keymap.Vim.Ex.Commands.Edit",
      "Yi.Keymap.Vim.Ex.Commands.Global",
      "Yi.Keymap.Vim.Ex.Commands.GotoLine",
      "Yi.Keymap.Vim.Ex.Commands.Help",
      "Yi.Keymap.Vim.Ex.Commands.Make",
      "Yi.Keymap.Vim.Ex.Commands.Nohl",
      "Yi.Keymap.Vim.Ex.Commands.Paste",
      "Yi.Keymap.Vim.Ex.Commands.Quit",
      "Yi.Keymap.Vim.Ex.Commands.Reload",
      "Yi.Keymap.Vim.Ex.Commands.Shell",
      "Yi.Keymap.Vim.Ex.Commands.Sort",
      "Yi.Keymap.Vim.Ex.Commands.Substitute",
      "Yi.Keymap.Vim.Ex.Commands.Tag",
      "Yi.Keymap.Vim.Ex.Commands.Undo",
      "Yi.Keymap.Vim.Ex.Commands.Write",
      "Yi.Keymap.Vim.Ex.Commands.Yi",
      "Yi.Keymap.Vim.Ex.Types",
      "Yi.Keymap.Vim.Ex.Eval",
      "Yi.Keymap.Vim.ExMap",
      "Yi.Keymap.Vim.InsertMap",
      "Yi.Keymap.Vim.MatchResult",
      "Yi.Keymap.Vim.Motion",
      "Yi.Keymap.Vim.NormalMap",
      "Yi.Keymap.Vim.NormalOperatorPendingMap",
      "Yi.Keymap.Vim.Operator",
      "Yi.Keymap.Vim.ReplaceMap",
      "Yi.Keymap.Vim.ReplaceSingleCharMap",
      "Yi.Keymap.Vim.Search",
      "Yi.Keymap.Vim.SearchMotionMap",
      "Yi.Keymap.Vim.StateUtils",
      "Yi.Keymap.Vim.StyledRegion",
      "Yi.Keymap.Vim.Tag",
      "Yi.Keymap.Vim.TextObject",
      "Yi.Keymap.Vim.Utils",
      "Yi.Keymap.Vim.VisualMap",
      "Yi.KillRing",
      "Yi.Layout",
      "Yi.Main",
      "Yi.MiniBuffer",
      "Yi.Misc",
      "Yi.Mode.Abella",
      "Yi.Mode.Buffers",
      "Yi.Mode.Compilation",
      "Yi.Mode.GHCi",
      "Yi.Mode.Haskell",
      "Yi.Mode.Haskell.Dollarify",
      "Yi.Mode.IReader",
      "Yi.Mode.Interactive",
      "Yi.Mode.JavaScript",
      "Yi.Mode.Latex",
      "Yi.Modes",
      "Yi.Monad",
      "Yi.Paths",
      "Yi.PersistentState",
      "Yi.Process",
      "Yi.Rectangle",
      "Yi.Snippets",
      "Yi.Snippets.Haskell",
      "Yi.Search",
      "Yi.Search.Internal",
      "Yi.String",
      "Yi.Syntax.Driver",
      "Yi.Syntax.Haskell",
      "Yi.Syntax.JavaScript",
      "Yi.Syntax.Latex",
      "Yi.Syntax.Layout",
      "Yi.Syntax.OnlineTree",
      "Yi.Syntax.Paren",
      "Yi.Syntax.Tree",
      "Yi.Syntax.Strokes.Haskell",
      "Yi.Tab",
      "Yi.Tag",
      "Yi.TextCompletion",
      "Yi.Types",
      "Yi.UI.Common",
      "Yi.UI.Batch",
      "Yi.UI.SimpleLayout",
      "Yi.UI.TabBar",
      "Yi.UI.Utils",
      "Yi.Verifier.JavaScript",
      "Yi.Window",
      "Yi.Char.Unicode"
    ],
    "name": "yi",
    "version": "0.12.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Numeric",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.List",
      "FMP",
      "FMP.Canvas",
      "FMP.Color",
      "FMP.Core",
      "FMP.File",
      "FMP.Frames",
      "FMP.Matrix",
      "FMP.Picture",
      "FMP.PP",
      "FMP.RedBlack",
      "FMP.Resolve",
      "FMP.Symbols",
      "FMP.Syntax",
      "FMP.Term",
      "FMP.Tree",
      "FMP.Turtle",
      "FMP.Types",
      "IO",
      "Numeric",
      "Paths",
      "Prelude",
      "System",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process"
    ],
    "modules": [
      "FMP",
      "FMP.Canvas",
      "FMP.Color",
      "FMP.Core",
      "FMP.File",
      "FMP.Frames",
      "FMP.Matrix",
      "FMP.PP",
      "FMP.Picture",
      "FMP.RedBlack",
      "FMP.Resolve",
      "FMP.Symbols",
      "FMP.Syntax",
      "FMP.Term",
      "FMP.Tree",
      "FMP.Turtle",
      "FMP.Types"
    ],
    "name": "funcmp",
    "version": "1.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "System.Environment",
        "System.IO"
      ],
      "unix": []
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "System.Environment",
      "System.IO",
      "System.Linux.FileExtents"
    ],
    "modules": [
      "System.Linux.FileExtents"
    ],
    "name": "linux-file-extents",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Data.Angle",
      "Data.Bits",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Vector.Storable",
      "System.Console.GetOpt",
      "System.Console.Terminal.Size",
      "System.Drawille",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Vision.Image",
      "Vision.Primitive"
    ],
    "modules": [
      "System.Drawille"
    ],
    "name": "drawille",
    "version": "0.1.0.6"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.CloudUserAccounts.GlobalAccountsOperations.Delete",
      "Network.Google.Resource.CloudUserAccounts.GlobalAccountsOperations.Get",
      "Network.Google.Resource.CloudUserAccounts.GlobalAccountsOperations.List",
      "Network.Google.Resource.CloudUserAccounts.Groups.AddMember",
      "Network.Google.Resource.CloudUserAccounts.Groups.Delete",
      "Network.Google.Resource.CloudUserAccounts.Groups.Get",
      "Network.Google.Resource.CloudUserAccounts.Groups.Insert",
      "Network.Google.Resource.CloudUserAccounts.Groups.List",
      "Network.Google.Resource.CloudUserAccounts.Groups.RemoveMember",
      "Network.Google.Resource.CloudUserAccounts.Linux.GetAuthorizedKeysView",
      "Network.Google.Resource.CloudUserAccounts.Linux.GetLinuxAccountViews",
      "Network.Google.Resource.CloudUserAccounts.Users.AddPublicKey",
      "Network.Google.Resource.CloudUserAccounts.Users.Delete",
      "Network.Google.Resource.CloudUserAccounts.Users.Get",
      "Network.Google.Resource.CloudUserAccounts.Users.Insert",
      "Network.Google.Resource.CloudUserAccounts.Users.List",
      "Network.Google.Resource.CloudUserAccounts.Users.RemovePublicKey",
      "Network.Google.UserAccounts",
      "Network.Google.UserAccounts.Types"
    ],
    "name": "gogol-useraccounts",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Void",
        "Data.Word",
        "GHC.IO.Handle",
        "Prelude",
        "System.IO"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16",
        "Data.ByteString.Base16.Lazy"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64",
        "Data.ByteString.Base64.Lazy",
        "Data.ByteString.Base64.URL",
        "Data.ByteString.Base64.URL.Lazy"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "chunked-data": [
        "Data.Builder"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.Internal.Fusion",
        "Data.Conduit.Lift",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Filesystem",
        "Data.Conduit.Text"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mono-traversable": [
        "Data.NonNull",
        "Data.Sequences"
      ],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "primitive": [],
      "resourcet": [
        "Control.Monad.Trans.Resource",
        "Data.Acquire"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Writer"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unix-compat": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ],
      "void": []
    },
    "imports": [
      "Conduit",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Writer",
      "Data.Acquire",
      "Data.Builder",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base16.Lazy",
      "Data.ByteString.Base64",
      "Data.ByteString.Base64.Lazy",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Base64.URL.Lazy",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.Combinators",
      "Data.Conduit.Combinators.Internal",
      "Data.Conduit.Combinators.Stream",
      "Data.Conduit.Combinators.Unqualified",
      "Data.Conduit.Filesystem",
      "Data.Conduit.Internal",
      "Data.Conduit.Internal.Fusion",
      "Data.Conduit.Lift",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Conduit.Util",
      "Data.Functor.Identity",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.NonNull",
      "Data.Sequences",
      "Data.Sequences.Lazy",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Textual.Encoding",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Void",
      "Data.Word",
      "GHC.IO.Handle",
      "Prelude",
      "Safe",
      "StreamSpec",
      "System.FilePath",
      "System.IO",
      "System.IO.Silently",
      "System.Random.MWC",
      "Test.Hspec",
      "Test.Hspec.QuickCheck"
    ],
    "modules": [
      "Conduit",
      "Data.Conduit.Combinators",
      "Data.Conduit.Combinators.Internal",
      "Data.Conduit.Combinators.Stream"
    ],
    "name": "conduit-combinators",
    "version": "1.0.8.1"
  },
  {
    "dependencies": {
      "base": [],
      "exceptions": [],
      "transformers": [],
      "wai": [],
      "wai-websockets": [],
      "websockets": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Wai.Trans"
    ],
    "name": "wai-transformers",
    "version": "0.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Kind",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.TypeLits",
        "System.IO"
      ],
      "ghc-prim": [],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "readable": [
        "Data.Readable"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "transformers": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed"
      ],
      "vinyl": [
        "Data.Vinyl",
        "Data.Vinyl.Functor",
        "Data.Vinyl.Lens",
        "Data.Vinyl.TypeLevel"
      ]
    },
    "imports": [
      "Codec.Archive.Zip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Foldl",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Criterion.Main",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Kind",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Readable",
      "Data.Text",
      "Data.Text.IO",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vinyl",
      "Data.Vinyl.Functor",
      "Data.Vinyl.Lens",
      "Data.Vinyl.TypeLevel",
      "Diagrams",
      "Diagrams.Backend.Rasterific",
      "Frames",
      "Frames.Col",
      "Frames.ColumnTypeable",
      "Frames.ColumnUniverse",
      "Frames.CoRec",
      "Frames.CSV",
      "Frames.Exploration",
      "Frames.Frame",
      "Frames.InCore",
      "Frames.Melt",
      "Frames.Rec",
      "Frames.RecF",
      "Frames.RecLens",
      "Frames.TypeLevel",
      "GHC.Prim",
      "GHC.TypeLits",
      "Graphics.Rendering.Chart.Backend.Diagrams",
      "Graphics.Rendering.Chart.Easy",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Lens.Micro",
      "ListT",
      "Network.HTTP.Client",
      "Pipes",
      "Pipes.Prelude",
      "Statistics.Sample.KernelDensity",
      "System.Directory",
      "System.IO"
    ],
    "modules": [
      "Frames",
      "Frames.Col",
      "Frames.ColumnTypeable",
      "Frames.ColumnUniverse",
      "Frames.CoRec",
      "Frames.CSV",
      "Frames.Exploration",
      "Frames.Frame",
      "Frames.InCore",
      "Frames.Melt",
      "Frames.Rec",
      "Frames.RecF",
      "Frames.RecLens",
      "Frames.TypeLevel"
    ],
    "name": "Frames",
    "version": "0.1.6"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Data",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "Text.Read"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "email-validate": [],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "opaleye": [
        "Opaleye"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "persistent": [
        "Database.Persist",
        "Database.Persist.Sql"
      ],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple.FromField"
      ],
      "product-profunctors": [
        "Data.Profunctor.Product.Default"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Database.Persist",
      "Database.Persist.Sql",
      "Database.PostgreSQL.Simple.FromField",
      "Data.Bifunctor",
      "Data.ByteString",
      "Data.Data",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Profunctor.Product.Default",
      "Data.Proxy",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Typeable",
      "GHC.Generics",
      "Opaleye",
      "Prelude",
      "System.FilePath.Glob",
      "Test.DocTest",
      "Text.Email.Validate.Internal",
      "Text.Read",
      "Web.HttpApiData",
      "Web.PathPieces"
    ],
    "modules": [
      "Text.Email.Validate"
    ],
    "name": "emailaddress",
    "version": "0.1.6.0"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ]
    },
    "imports": [
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "System.Console.ANSI",
      "System.IO",
      "Text.PrettyPrint.ANSI.Leijen"
    ],
    "modules": [
      "Text.PrettyPrint.ANSI.Leijen"
    ],
    "name": "ansi-wl-pprint",
    "version": "0.6.7.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Concurrent.QSem",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.Zip",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Char",
        "Data.Complex",
        "Data.Data",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.Ix",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Ratio",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable.Internal",
        "Data.Type.Coercion",
        "Data.Type.Equality",
        "Data.Version",
        "Data.Word",
        "Foreign.C.Error",
        "Foreign.C.Types",
        "Foreign.Marshal.Pool",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Conc",
        "GHC.Desugar",
        "GHC.Fingerprint",
        "GHC.Fingerprint.Type",
        "GHC.ForeignPtr",
        "GHC.GHCi",
        "GHC.IO.Buffer",
        "GHC.IO.BufferedIO",
        "GHC.IO.Device",
        "GHC.IO.Encoding",
        "GHC.IO.Encoding.Failure",
        "GHC.IO.Handle",
        "GHC.IO.Handle.Types",
        "GHC.Real",
        "GHC.ST",
        "GHC.Stack",
        "GHC.Stats",
        "GHC.TypeLits",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.IO",
        "System.Posix.Internals",
        "System.Posix.Types",
        "Text.Printf",
        "Text.Read.Lex",
        "Unsafe.Coerce"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent.QSem",
      "Control.Concurrent.SampleVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.Zip",
      "Data.Bifunctor",
      "Data.Bits",
      "Data.Char",
      "Data.Complex",
      "Data.Data",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.Ix",
      "Data.List",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Proxy",
      "Data.Ratio",
      "Data.String",
      "Data.Traversable",
      "Data.Typeable.Internal",
      "Data.Type.Coercion",
      "Data.Type.Equality",
      "Data.Version",
      "Data.Word",
      "Foreign.C.Error",
      "Foreign.C.Types",
      "Foreign.Marshal.Pool",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Conc",
      "GHC.Desugar",
      "GHC.Event",
      "GHC.Fingerprint",
      "GHC.Fingerprint.Type",
      "GHC.ForeignPtr",
      "GHC.GHCi",
      "GHC.IO.Buffer",
      "GHC.IO.BufferedIO",
      "GHC.IO.Device",
      "GHC.IO.Encoding",
      "GHC.IO.Encoding.CodePage.Table",
      "GHC.IO.Encoding.Failure",
      "GHC.IO.Handle",
      "GHC.IO.Handle.Types",
      "GHC.IP",
      "GHC.Real",
      "GHC.ST",
      "GHC.Stack",
      "GHC.Stats",
      "GHC.TypeLits",
      "Numeric",
      "Prelude",
      "System.Console.GetOpt",
      "System.IO",
      "System.Posix.Internals",
      "System.Posix.Types",
      "Test.Hspec",
      "Text.Printf",
      "Text.Read.Lex",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Orphans"
    ],
    "name": "base-orphans",
    "version": "0.5.4"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.PlusDomains",
      "Network.Google.PlusDomains.Types",
      "Network.Google.Resource.PlusDomains.Activities.Get",
      "Network.Google.Resource.PlusDomains.Activities.Insert",
      "Network.Google.Resource.PlusDomains.Activities.List",
      "Network.Google.Resource.PlusDomains.Audiences.List",
      "Network.Google.Resource.PlusDomains.Circles.AddPeople",
      "Network.Google.Resource.PlusDomains.Circles.Get",
      "Network.Google.Resource.PlusDomains.Circles.Insert",
      "Network.Google.Resource.PlusDomains.Circles.List",
      "Network.Google.Resource.PlusDomains.Circles.Patch",
      "Network.Google.Resource.PlusDomains.Circles.Remove",
      "Network.Google.Resource.PlusDomains.Circles.RemovePeople",
      "Network.Google.Resource.PlusDomains.Circles.Update",
      "Network.Google.Resource.PlusDomains.Comments.Get",
      "Network.Google.Resource.PlusDomains.Comments.Insert",
      "Network.Google.Resource.PlusDomains.Comments.List",
      "Network.Google.Resource.PlusDomains.Media.Insert",
      "Network.Google.Resource.PlusDomains.People.Get",
      "Network.Google.Resource.PlusDomains.People.List",
      "Network.Google.Resource.PlusDomains.People.ListByActivity",
      "Network.Google.Resource.PlusDomains.People.ListByCircle"
    ],
    "name": "gogol-plus-domains",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.ST"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Traversable"
      ],
      "containers": [
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Array",
      "Data.Array.ST",
      "Data.Foldable",
      "Data.Graph",
      "Data.Graph.Wrapper.Internal",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Ord",
      "Data.Set",
      "Data.Traversable"
    ],
    "modules": [
      "Data.Graph.Wrapper",
      "Data.Graph.Wrapper.Internal"
    ],
    "name": "graph-wrapper",
    "version": "0.2.5.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.Vision.Images.Annotate",
      "Network.Google.Vision",
      "Network.Google.Vision.Types"
    ],
    "name": "gogol-vision",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Char",
        "Data.Coerce",
        "Data.Foldable",
        "Data.Functor",
        "Data.Functor.Classes",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Exts",
        "GHC.Generics",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "template-haskell": [],
      "transformers": [
        "Data.Functor.Constant"
      ],
      "transformers-compat": [
        "Control.Monad.Trans.Instances"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Monad",
      "Control.Monad.Trans.Instances",
      "Data.Biapplicative",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bifunctor.Functor",
      "Data.Bifunctor.TH",
      "Data.Bitraversable",
      "Data.Char",
      "Data.Coerce",
      "Data.Foldable",
      "Data.Functor",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Semigroup",
      "Data.Set",
      "Data.Tagged",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Exts",
      "GHC.Generics",
      "Prelude",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Biapplicative",
      "Data.Bifunctor.Biff",
      "Data.Bifunctor.Clown",
      "Data.Bifunctor.Fix",
      "Data.Bifunctor.Flip",
      "Data.Bifunctor.Functor",
      "Data.Bifunctor.Join",
      "Data.Bifunctor.Joker",
      "Data.Bifunctor.Product",
      "Data.Bifunctor.Sum",
      "Data.Bifunctor.Tannen",
      "Data.Bifunctor.TH",
      "Data.Bifunctor.Wrapped"
    ],
    "name": "bifunctors",
    "version": "5.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "filepath": [],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ]
    },
    "imports": [
      "Data.List",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "Text.CSV"
    ],
    "name": "csv",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.STRef",
        "Data.String",
        "Foreign",
        "System.Environment",
        "System.Info"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "cereal": [
        "Data.Serialize.Get"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "libxml-sax": [
        "Text.XML.LibXML.SAX"
      ],
      "network": [
        "Network",
        "Network.Socket"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "random": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ],
      "transformers": [],
      "unix": [
        "System.Posix",
        "System.Posix.User"
      ],
      "vector": [
        "Data.Vector"
      ],
      "xml-types": [
        "Data.XML.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Map",
      "Data.Serialize.Get",
      "Data.Set",
      "Data.STRef",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Vector",
      "Data.XML.Types",
      "DBus",
      "DBus.Client",
      "DBus.Introspection",
      "DBus.Socket",
      "DBus.Types",
      "Foreign",
      "Network",
      "Network.Socket",
      "System.Environment",
      "System.Info",
      "System.Posix",
      "System.Posix.User",
      "Text.ParserCombinators.Parsec",
      "Text.XML.LibXML.SAX"
    ],
    "modules": [
      "DBus",
      "DBus.Client",
      "DBus.Introspection",
      "DBus.Socket",
      "DBus.Transport"
    ],
    "name": "dbus",
    "version": "0.10.12"
  },
  {
    "dependencies": {
      "base": [
        "Data.Version",
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cmdargs": [
        "System.Console.CmdArgs"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "inline-r": [],
      "pretty": [],
      "process": [
        "System.Process"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "vector": []
    },
    "imports": [
      "Data.ByteString",
      "Data.FileEmbed",
      "Data.Version",
      "Paths",
      "System.Console.CmdArgs",
      "System.Exit",
      "System.IO",
      "System.IO.Temp",
      "System.Process"
    ],
    "modules": [],
    "name": "H",
    "version": "0.9.0.1"
  },
  {
    "dependencies": {
      "Cabal": [],
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Debug.Trace",
        "System.Environment"
      ],
      "containers": [
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.String"
      ],
      "random": [
        "System.Random"
      ],
      "yes-precure5-command": []
    },
    "imports": [
      "ACME.Yes.PreCure5",
      "ACME.Yes.PreCure5.Class",
      "ACME.Yes.PreCure5.GoGo",
      "ACME.Yes.PreCure5.GoGo.Parser",
      "ACME.Yes.PreCure5.GoGo.Profiles",
      "ACME.Yes.PreCure5.Parser",
      "ACME.Yes.PreCure5.Parser.Common",
      "ACME.Yes.PreCure5.Profiles",
      "ACME.Yes.PreCure5.Random",
      "Control.Monad",
      "Control.Monad.State",
      "Data.Char",
      "Data.List",
      "Data.Set",
      "Debug.Trace",
      "System.Environment",
      "System.Random",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Text.Parsec",
      "Text.Parsec.String"
    ],
    "modules": [
      "ACME.Yes.PreCure5",
      "ACME.Yes.PreCure5.Parser",
      "ACME.Yes.PreCure5.Parser.Common",
      "ACME.Yes.PreCure5.Profiles",
      "ACME.Yes.PreCure5.Random",
      "ACME.Yes.PreCure5.Class",
      "ACME.Yes.PreCure5.GoGo",
      "ACME.Yes.PreCure5.GoGo.Profiles",
      "ACME.Yes.PreCure5.GoGo.Parser"
    ],
    "name": "yes-precure5-command",
    "version": "5.5.2"
  },
  {
    "dependencies": {
      "base": [],
      "lens": [],
      "linear": [],
      "semigroupoids": [],
      "semigroups": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Vector"
    ],
    "modules": [
      "Data.Active"
    ],
    "name": "active",
    "version": "0.2.0.10"
  },
  {
    "dependencies": {
      "MemoTrie": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Bits",
        "Data.Function",
        "Data.Int",
        "Data.Monoid",
        "Data.Void",
        "Data.Word",
        "GHC.Generics"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Bits",
      "Data.Function",
      "Data.Int",
      "Data.MemoTrie",
      "Data.Monoid",
      "Data.Void",
      "Data.Word",
      "GHC.Generics"
    ],
    "modules": [
      "Data.MemoTrie"
    ],
    "name": "MemoTrie",
    "version": "0.6.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "System.Environment"
      ],
      "biocore": [],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cmdargs": [
        "System.Console.CmdArgs"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Bio.Alignment.PSL",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.HashMap.Strict",
      "Data.List",
      "System.Console.CmdArgs",
      "System.Environment"
    ],
    "modules": [
      "Bio.Alignment.PSL"
    ],
    "name": "biopsl",
    "version": "0.4"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Data.List"
      ],
      "template-haskell": []
    },
    "imports": [
      "Data.List",
      "Data.Tree.Fenwick",
      "Test.QuickCheck",
      "Test.QuickCheck.All"
    ],
    "modules": [
      "Data.Tree.Fenwick"
    ],
    "name": "FenwickTree",
    "version": "0.1.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Format"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Time.ISO8601",
      "System.Locale"
    ],
    "modules": [
      "Data.Time.ISO8601"
    ],
    "name": "iso8601-time",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Numeric",
        "Text.ParserCombinators.ReadP"
      ],
      "haskell-src-meta": [],
      "template-haskell": []
    },
    "imports": [
      "Data.String.Interpolate",
      "Numeric",
      "Text.ParserCombinators.ReadP"
    ],
    "modules": [
      "Data.String.Interpolate",
      "Data.String.Interpolate.IsString",
      "Data.String.Interpolate.Util"
    ],
    "name": "interpolate",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Route53",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.Route53",
      "Test.AWS.Route53.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Route53",
      "Network.AWS.Route53.AssociateVPCWithHostedZone",
      "Network.AWS.Route53.ChangeResourceRecordSets",
      "Network.AWS.Route53.ChangeTagsForResource",
      "Network.AWS.Route53.CreateHealthCheck",
      "Network.AWS.Route53.CreateHostedZone",
      "Network.AWS.Route53.CreateReusableDelegationSet",
      "Network.AWS.Route53.CreateTrafficPolicy",
      "Network.AWS.Route53.CreateTrafficPolicyInstance",
      "Network.AWS.Route53.CreateTrafficPolicyVersion",
      "Network.AWS.Route53.DeleteHealthCheck",
      "Network.AWS.Route53.DeleteHostedZone",
      "Network.AWS.Route53.DeleteReusableDelegationSet",
      "Network.AWS.Route53.DeleteTrafficPolicy",
      "Network.AWS.Route53.DeleteTrafficPolicyInstance",
      "Network.AWS.Route53.DisassociateVPCFromHostedZone",
      "Network.AWS.Route53.GetChange",
      "Network.AWS.Route53.GetCheckerIPRanges",
      "Network.AWS.Route53.GetGeoLocation",
      "Network.AWS.Route53.GetHealthCheck",
      "Network.AWS.Route53.GetHealthCheckCount",
      "Network.AWS.Route53.GetHealthCheckLastFailureReason",
      "Network.AWS.Route53.GetHealthCheckStatus",
      "Network.AWS.Route53.GetHostedZone",
      "Network.AWS.Route53.GetHostedZoneCount",
      "Network.AWS.Route53.GetReusableDelegationSet",
      "Network.AWS.Route53.GetTrafficPolicy",
      "Network.AWS.Route53.GetTrafficPolicyInstance",
      "Network.AWS.Route53.GetTrafficPolicyInstanceCount",
      "Network.AWS.Route53.ListGeoLocations",
      "Network.AWS.Route53.ListHealthChecks",
      "Network.AWS.Route53.ListHostedZones",
      "Network.AWS.Route53.ListHostedZonesByName",
      "Network.AWS.Route53.ListResourceRecordSets",
      "Network.AWS.Route53.ListReusableDelegationSets",
      "Network.AWS.Route53.ListTagsForResource",
      "Network.AWS.Route53.ListTagsForResources",
      "Network.AWS.Route53.ListTrafficPolicies",
      "Network.AWS.Route53.ListTrafficPolicyInstances",
      "Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone",
      "Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy",
      "Network.AWS.Route53.ListTrafficPolicyVersions",
      "Network.AWS.Route53.Types",
      "Network.AWS.Route53.UpdateHealthCheck",
      "Network.AWS.Route53.UpdateHostedZoneComment",
      "Network.AWS.Route53.UpdateTrafficPolicyComment",
      "Network.AWS.Route53.UpdateTrafficPolicyInstance",
      "Network.AWS.Route53.Waiters"
    ],
    "name": "amazonka-route53",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Prelude",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.Tagged",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Typeable",
      "Data.Word",
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Data.String.Class"
    ],
    "name": "string-class",
    "version": "0.1.6.5"
  },
  {
    "dependencies": {
      "Boolean": [
        "Data.Boolean"
      ],
      "MemoTrie": [
        "Data.MemoTrie"
      ],
      "NumInstances": [
        "Data.NumInstances"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Complex",
        "Data.Foldable",
        "Data.Function",
        "Data.Monoid",
        "Data.Ratio",
        "Foreign.C.Types",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.AdditiveGroup",
      "Data.Basis",
      "Data.Boolean",
      "Data.Complex",
      "Data.Derivative",
      "Data.Foldable",
      "Data.Function",
      "Data.LinearMap",
      "Data.Maclaurin",
      "Data.MemoTrie",
      "Data.Monoid",
      "Data.NumInstances",
      "Data.Ratio",
      "Data.VectorSpace",
      "Foreign.C.Types",
      "Prelude"
    ],
    "modules": [
      "Data.AdditiveGroup",
      "Data.VectorSpace",
      "Data.Basis",
      "Data.LinearMap",
      "Data.Maclaurin",
      "Data.Derivative",
      "Data.Cross",
      "Data.AffineSpace"
    ],
    "name": "vector-space",
    "version": "0.10.4"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Text",
        "Distribution.Version"
      ],
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "System.Environment",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "packdeps": [],
      "split": [
        "Data.List.Split"
      ],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Entry"
      ],
      "text": [
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Function",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Ord",
      "Data.Set",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.PackDeps",
      "Distribution.Text",
      "Distribution.Version",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath"
    ],
    "modules": [
      "Distribution.PackDeps"
    ],
    "name": "packdeps",
    "version": "0.4.2.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Inspector",
      "Test.AWS.Fixture",
      "Test.AWS.Inspector",
      "Test.AWS.Inspector.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Inspector",
      "Network.AWS.Inspector.AddAttributesToFindings",
      "Network.AWS.Inspector.CreateAssessmentTarget",
      "Network.AWS.Inspector.CreateAssessmentTemplate",
      "Network.AWS.Inspector.CreateResourceGroup",
      "Network.AWS.Inspector.DeleteAssessmentRun",
      "Network.AWS.Inspector.DeleteAssessmentTarget",
      "Network.AWS.Inspector.DeleteAssessmentTemplate",
      "Network.AWS.Inspector.DescribeAssessmentRuns",
      "Network.AWS.Inspector.DescribeAssessmentTargets",
      "Network.AWS.Inspector.DescribeAssessmentTemplates",
      "Network.AWS.Inspector.DescribeCrossAccountAccessRole",
      "Network.AWS.Inspector.DescribeFindings",
      "Network.AWS.Inspector.DescribeResourceGroups",
      "Network.AWS.Inspector.DescribeRulesPackages",
      "Network.AWS.Inspector.GetTelemetryMetadata",
      "Network.AWS.Inspector.ListAssessmentRunAgents",
      "Network.AWS.Inspector.ListAssessmentRuns",
      "Network.AWS.Inspector.ListAssessmentTargets",
      "Network.AWS.Inspector.ListAssessmentTemplates",
      "Network.AWS.Inspector.ListEventSubscriptions",
      "Network.AWS.Inspector.ListFindings",
      "Network.AWS.Inspector.ListRulesPackages",
      "Network.AWS.Inspector.ListTagsForResource",
      "Network.AWS.Inspector.PreviewAgents",
      "Network.AWS.Inspector.RegisterCrossAccountAccessRole",
      "Network.AWS.Inspector.RemoveAttributesFromFindings",
      "Network.AWS.Inspector.SetTagsForResource",
      "Network.AWS.Inspector.StartAssessmentRun",
      "Network.AWS.Inspector.StopAssessmentRun",
      "Network.AWS.Inspector.SubscribeToEvent",
      "Network.AWS.Inspector.Types",
      "Network.AWS.Inspector.UnsubscribeFromEvent",
      "Network.AWS.Inspector.UpdateAssessmentTarget",
      "Network.AWS.Inspector.Waiters"
    ],
    "name": "amazonka-inspector",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Foldable",
        "Data.Int",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "GHC.TypeLits"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get",
        "Data.Serialize.IEEE754",
        "Data.Serialize.Put"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "mtl": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.Binary.IEEE754",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.Hex",
      "Data.Int",
      "Data.IntSet",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Orphans",
      "Data.ProtocolBuffers",
      "Data.ProtocolBuffers.Decode",
      "Data.ProtocolBuffers.Encode",
      "Data.ProtocolBuffers.Internal",
      "Data.ProtocolBuffers.Message",
      "Data.ProtocolBuffers.Orphans",
      "Data.ProtocolBuffers.Types",
      "Data.ProtocolBuffers.Wire",
      "Data.Proxy",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.IEEE754",
      "Data.Serialize.Put",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "GHC.Generics",
      "GHC.TypeLits",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.ProtocolBuffers",
      "Data.ProtocolBuffers.Internal",
      "Data.ProtocolBuffers.Orphans"
    ],
    "name": "protobuf",
    "version": "0.2.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable",
        "Data.Maybe",
        "Data.Traversable"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mcmc-types": [
        "Data.Sampling.Types"
      ],
      "mwc-probability": [
        "System.Random.MWC.Probability"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Primitive",
      "Control.Monad.Trans.State.Strict",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Sampling.Types",
      "Data.Traversable",
      "Numeric.AD",
      "Numeric.MCMC.Hamiltonian",
      "Pipes",
      "Pipes.Prelude",
      "System.Random.MWC.Probability"
    ],
    "modules": [
      "Numeric.MCMC.Hamiltonian"
    ],
    "name": "hasty-hamiltonian",
    "version": "1.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString",
        "Network.Socket.ByteString.Lazy"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Exception",
      "Control.Monad.Catch",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Network.Simple.TCP",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.ByteString.Lazy"
    ],
    "modules": [
      "Network.Simple.TCP"
    ],
    "name": "network-simple",
    "version": "0.4.0.5"
  },
  {
    "dependencies": {
      "base": [
        "System.Environment",
        "System.Exit"
      ],
      "bytestring": [],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Cheapskate",
      "Cheapskate.Html",
      "CMark",
      "Criterion.Main",
      "Criterion.Monad",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "System.Environment",
      "System.Exit",
      "Test.HUnit",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Discount",
      "Text.Markdown",
      "Text.Sundown.Html.Text"
    ],
    "modules": [
      "CMark"
    ],
    "name": "cmark",
    "version": "0.5.3.1"
  },
  {
    "dependencies": {
      "adjunctions": [
        "Data.Functor.Adjunction",
        "Data.Functor.Contravariant.Adjunction",
        "Data.Functor.Contravariant.Rep",
        "Data.Functor.Rep"
      ],
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Prelude",
        "Text.Read"
      ],
      "comonad": [
        "Control.Comonad",
        "Control.Comonad.Env.Class",
        "Control.Comonad.Store.Class",
        "Control.Comonad.Traced.Class",
        "Control.Comonad.Trans.Class",
        "Data.Functor.Composition"
      ],
      "containers": [],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "distributive": [
        "Data.Distributive"
      ],
      "free": [
        "Control.Comonad.Cofree",
        "Control.Monad.Free",
        "Control.Monad.Free.Class"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "semigroupoids": [
        "Data.Functor.Apply",
        "Data.Functor.Bind",
        "Data.Functor.Extend",
        "Data.Functor.Plus",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable"
      ],
      "tagged": [],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Comonad",
      "Control.Comonad.Cofree",
      "Control.Comonad.Density",
      "Control.Comonad.Env.Class",
      "Control.Comonad.Store.Class",
      "Control.Comonad.Traced.Class",
      "Control.Comonad.Trans.Class",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Free",
      "Control.Monad.Free.Class",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Writer.Class",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Adjunction",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Composition",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Adjunction",
      "Data.Functor.Contravariant.Rep",
      "Data.Functor.Day",
      "Data.Functor.Extend",
      "Data.Functor.Identity",
      "Data.Functor.Kan.Lan",
      "Data.Functor.Kan.Ran",
      "Data.Functor.Plus",
      "Data.Functor.Rep",
      "Data.Proxy",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Traversable",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "Prelude",
      "Text.Read"
    ],
    "modules": [
      "Control.Comonad.Density",
      "Control.Monad.Co",
      "Control.Monad.Codensity",
      "Data.Functor.Contravariant.Day",
      "Data.Functor.Contravariant.Yoneda",
      "Data.Functor.Contravariant.Coyoneda",
      "Data.Functor.Day",
      "Data.Functor.Day.Curried",
      "Data.Functor.Kan.Lan",
      "Data.Functor.Kan.Ran",
      "Data.Functor.Yoneda",
      "Data.Functor.Coyoneda"
    ],
    "name": "kan-extensions",
    "version": "5.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ]
    },
    "imports": [
      "Data.List",
      "Data.Map",
      "Data.Set.CharSet"
    ],
    "modules": [
      "Data.Char.Properties.UnicodeBlocks",
      "Data.Char.Properties.UnicodeCharProps",
      "Data.Char.Properties.XMLCharProps",
      "Data.Set.CharSet"
    ],
    "name": "hxt-charproperties",
    "version": "9.2.0.1"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.HTTP.Base"
      ],
      "base": [
        "Data.List",
        "Data.Maybe"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "data-default": [
        "Data.Default"
      ],
      "pureMD5": [
        "Data.Digest.Pure.MD5"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.ByteString.Lazy.Char8",
      "Data.Default",
      "Data.Digest.Pure.MD5",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Network.HTTP.Base"
    ],
    "modules": [
      "Network.Gravatar"
    ],
    "name": "gravatar",
    "version": "0.8.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Prelude"
      ],
      "free": [
        "Control.Monad.Free"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.String"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Free",
      "Data.List",
      "Data.Maybe",
      "Data.Ord",
      "Data.Range.Algebra",
      "Data.Range.Algebra.Internal",
      "Data.Range.Algebra.Predicate",
      "Data.Range.Algebra.Range",
      "Data.Range.Data",
      "Data.Range.Range",
      "Data.Range.RangeInternal",
      "Data.Range.Spans",
      "Data.Range.Util",
      "Prelude",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.RangeMerge",
      "Text.Parsec",
      "Text.Parsec.String"
    ],
    "modules": [
      "Data.Range.Range",
      "Data.Range.NestedRange",
      "Data.Range.RangeTree",
      "Data.Range.Parser",
      "Data.Range.Algebra"
    ],
    "name": "range",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Product",
        "Data.Functor.Sum",
        "Data.Semigroup",
        "Data.Version",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "GHC.Exts",
        "Prelude",
        "System.Exit",
        "System.IO.Unsafe",
        "System.Posix.Types"
      ],
      "base-compat": [
        "Data.Monoid.Compat",
        "Prelude.Compat"
      ],
      "bifunctors": [
        "Data.Bifunctor.Biff",
        "Data.Bifunctor.Clown",
        "Data.Bifunctor.Fix",
        "Data.Bifunctor.Flip",
        "Data.Bifunctor.Join",
        "Data.Bifunctor.Joker",
        "Data.Bifunctor.Product",
        "Data.Bifunctor.Sum",
        "Data.Bifunctor.Tannen",
        "Data.Bifunctor.Wrapped"
      ],
      "binary": [
        "Data.Binary.Get.Internal"
      ],
      "bytestring": [],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "haskeline": [
        "System.Console.Haskeline",
        "System.Console.Haskeline.Completion",
        "System.Console.Haskeline.History"
      ],
      "hoopl": [
        "Compiler.Hoopl",
        "Compiler.Hoopl.Internals",
        "Compiler.Hoopl.Passes.Dominator"
      ],
      "hpc": [
        "Trace.Hpc.Mix",
        "Trace.Hpc.Tix",
        "Trace.Hpc.Util"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "old-time": [
        "System.Time"
      ],
      "pretty": [
        "Text.PrettyPrint.Annotated.HughesPJ",
        "Text.PrettyPrint.Annotated.HughesPJClass"
      ],
      "random": [
        "System.Random"
      ],
      "semigroups": [],
      "tagged": [
        "Data.Tagged"
      ],
      "template-haskell": [
        "Language.Haskell.TH.PprLib",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text.Lazy"
      ],
      "text-show": [
        "TextShow",
        "TextShow.Data.Char",
        "TextShow.Data.Fixed",
        "TextShow.Data.Integral",
        "TextShow.TH"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.Clock.TAI",
        "Data.Time.Format",
        "Data.Time.LocalTime"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Applicative.Lift",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict",
        "Data.Functor.Constant",
        "Data.Functor.Reverse"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ],
      "xhtml": [
        "Text.XHtml.Frameset",
        "Text.XHtml.Table"
      ]
    },
    "imports": [
      "Compiler.Hoopl",
      "Compiler.Hoopl.GHC",
      "Compiler.Hoopl.Internals",
      "Compiler.Hoopl.Passes.Dominator",
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Applicative.Lift",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Bifunctor.Biff",
      "Data.Bifunctor.Clown",
      "Data.Bifunctor.Fix",
      "Data.Bifunctor.Flip",
      "Data.Bifunctor.Join",
      "Data.Bifunctor.Joker",
      "Data.Bifunctor.Product",
      "Data.Bifunctor.Sum",
      "Data.Bifunctor.Tannen",
      "Data.Bifunctor.Wrapped",
      "Data.Binary.Get.Internal",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Functor.Constant",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Functor.Sum",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Map",
      "Data.Monoid.Compat",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Set",
      "Data.Tagged",
      "Data.Text.Lazy",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Clock.TAI",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Tree",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Version",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "GHC.Exts",
      "GHC.LanguageExtensions.Type",
      "GHC.PackageDb",
      "Instances.Compiler.Hoopl",
      "Instances.Control.Applicative.Trans",
      "Instances.Data.Bifunctor",
      "Instances.Data.Binary",
      "Instances.Data.Containers",
      "Instances.Data.Functor.Trans",
      "Instances.Data.Tagged",
      "Instances.GHC.LanguageExtensions.Type",
      "Instances.GHC.PackageDb",
      "Instances.Language.Haskell.TH",
      "Instances.Miscellaneous",
      "Instances.System.Console.Haskeline",
      "Instances.System.Console.Terminfo",
      "Instances.System.Directory",
      "Instances.System.Locale",
      "Instances.System.Posix",
      "Instances.System.Random",
      "Instances.System.Win32",
      "Instances.Text.XHtml",
      "Instances.Trace.Hpc",
      "Instances.Utils",
      "Language.Haskell.TH.Instances",
      "Language.Haskell.TH.PprLib",
      "Language.Haskell.TH.Syntax",
      "Language.Haskell.TH.Syntax.Internals",
      "Prelude",
      "Prelude.Compat",
      "Spec.Utils",
      "System.Console.Haskeline",
      "System.Console.Haskeline.Completion",
      "System.Console.Haskeline.History",
      "System.Console.Terminfo.Base",
      "System.Console.Terminfo.Color",
      "System.Directory",
      "System.Exit",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Posix.DynamicLinker",
      "System.Posix.Process",
      "System.Posix.Types",
      "System.Posix.User",
      "System.Random",
      "System.Time",
      "System.Win32.DebugApi",
      "System.Win32.File",
      "System.Win32.Info",
      "System.Win32.Time",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Text.PrettyPrint.Annotated.HughesPJ",
      "Text.PrettyPrint.Annotated.HughesPJClass",
      "TextShow",
      "TextShow.Compiler.Hoopl",
      "TextShow.Control.Applicative.Trans",
      "TextShow.Control.Monad.Trans",
      "TextShow.Data.Bifunctor",
      "TextShow.Data.Binary",
      "TextShow.Data.Char",
      "TextShow.Data.Containers",
      "TextShow.Data.Fixed",
      "TextShow.Data.Functor.Trans",
      "TextShow.Data.Integral",
      "TextShow.Data.Tagged",
      "TextShow.Data.Time",
      "TextShow.Data.UnorderedContainers",
      "TextShow.Data.Vector",
      "TextShow.GHC.LanguageExtensions.Type",
      "TextShow.GHC.PackageDb",
      "TextShow.Language.Haskell.TH",
      "TextShow.System.Console.Haskeline",
      "TextShow.System.Console.Terminfo",
      "TextShow.System.Directory",
      "TextShow.System.Locale",
      "TextShow.System.Posix",
      "TextShow.System.Random",
      "TextShow.System.Time",
      "TextShow.System.Win32",
      "TextShow.Text.PrettyPrint",
      "TextShow.Text.XHtml",
      "TextShow.TH",
      "TextShow.Trace.Hpc",
      "TextShow.Utils",
      "Text.XHtml.Frameset",
      "Text.XHtml.Table",
      "Trace.Hpc.Mix",
      "Trace.Hpc.Tix",
      "Trace.Hpc.Util"
    ],
    "modules": [
      "TextShow.Instances",
      "TextShow.Compiler.Hoopl",
      "TextShow.Control.Applicative.Trans",
      "TextShow.Control.Monad.Trans",
      "TextShow.Data.Bifunctor",
      "TextShow.Data.Binary",
      "TextShow.Data.Containers",
      "TextShow.Data.Functor.Trans",
      "TextShow.Data.Tagged",
      "TextShow.Data.Time",
      "TextShow.Data.UnorderedContainers",
      "TextShow.Data.Vector",
      "TextShow.Language.Haskell.TH",
      "TextShow.System.Console.Haskeline",
      "TextShow.System.Directory",
      "TextShow.System.Locale",
      "TextShow.System.Random",
      "TextShow.System.Time",
      "TextShow.Text.PrettyPrint",
      "TextShow.Text.XHtml",
      "TextShow.Trace.Hpc",
      "TextShow.GHC.LanguageExtensions.Type",
      "TextShow.GHC.PackageDb",
      "TextShow.System.Win32",
      "TextShow.System.Console.Terminfo",
      "TextShow.System.Posix"
    ],
    "name": "text-show-instances",
    "version": "3.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude",
        "System.Environment"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "descriptive": [],
      "directory": [
        "System.Directory"
      ],
      "ghc-prim": [],
      "haskell-src-exts": [
        "Language.Haskell.Exts",
        "Language.Haskell.Exts.Annotated",
        "Language.Haskell.Exts.Annotated.Fixity",
        "Language.Haskell.Exts.Annotated.Syntax",
        "Language.Haskell.Exts.Comments",
        "Language.Haskell.Exts.Extension",
        "Language.Haskell.Exts.Parser",
        "Language.Haskell.Exts.SrcLoc"
      ],
      "hindent": [],
      "monad-loops": [
        "Control.Monad.Loops"
      ],
      "mtl": [
        "Control.Monad.State.Class",
        "Control.Monad.State.Strict"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Loops",
      "Control.Monad.State.Class",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Maybe",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Data.Traversable",
      "HIndent",
      "HIndent.Comments",
      "HIndent.Pretty",
      "HIndent.Styles.ChrisDone",
      "HIndent.Types",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Annotated",
      "Language.Haskell.Exts.Annotated.Fixity",
      "Language.Haskell.Exts.Annotated.Syntax",
      "Language.Haskell.Exts.Comments",
      "Language.Haskell.Exts.Extension",
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.SrcLoc",
      "Prelude",
      "System.Directory",
      "System.Environment"
    ],
    "modules": [
      "HIndent",
      "HIndent.Types",
      "HIndent.Pretty",
      "HIndent.Comments",
      "HIndent.Styles.Fundamental",
      "HIndent.Styles.ChrisDone",
      "HIndent.Styles.JohanTibell",
      "HIndent.Styles.Gibiansky",
      "HIndent.Styles.Cramer"
    ],
    "name": "hindent",
    "version": "4.6.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.List",
        "Data.Monoid",
        "Data.String"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Cont",
      "Control.Monad.Error",
      "Control.Monad.Fix",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "HSP.XML",
      "HSP.XMLGenerator",
      "HSP.XML.PCDATA"
    ],
    "modules": [
      "HSP",
      "HSP.HTML4",
      "HSP.Monad",
      "HSP.XML",
      "HSP.XML.PCDATA",
      "HSP.XMLGenerator"
    ],
    "name": "hsp",
    "version": "0.10.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Char",
        "Data.Data",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Criterion.Main",
      "Data.Char",
      "Data.Data",
      "Data.Hourglass",
      "Data.Hourglass.Calendar",
      "Data.Hourglass.Diff",
      "Data.Hourglass.Epoch",
      "Data.Hourglass.Format",
      "Data.Hourglass.Internal",
      "Data.Hourglass.Internal.Unix",
      "Data.Hourglass.Internal.Win",
      "Data.Hourglass.Local",
      "Data.Hourglass.Time",
      "Data.Hourglass.Types",
      "Data.Hourglass.Utils",
      "Data.Hourglass.Zone",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Hourglass",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Win32.Time",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Time.Compat",
      "TimeDB",
      "Time.System",
      "Time.Types"
    ],
    "modules": [
      "Time.Types",
      "Time.System",
      "Time.Compat",
      "Data.Hourglass",
      "Data.Hourglass.Types",
      "Data.Hourglass.Epoch",
      "Data.Hourglass.Compat",
      "System.Hourglass"
    ],
    "name": "hourglass",
    "version": "0.2.10"
  },
  {
    "dependencies": {
      "AC-Vector": [
        "Data.Vector.Class",
        "Data.Vector.V3"
      ],
      "Octree": [
        "Data.Octree"
      ],
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Arbitrary"
      ],
      "base": [
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.STRef",
        "Data.String",
        "GHC.Base",
        "GHC.Generics",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "ghc-prim": [],
      "iterable": [
        "Data.Iterable",
        "Data.Iterable.Instantiate",
        "Data.Iterable.Instantiate.Vector"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State.Strict"
      ],
      "parallel": [
        "Control.Parallel.Strategies"
      ],
      "tagged": [],
      "template-haskell": [],
      "text": [
        "Data.Text.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Bio.PDB.Common",
      "Bio.PDB.EventParser.ExperimentalMethods",
      "Bio.PDB.EventParser.FastParse",
      "Bio.PDB.EventParser.HelixTypes",
      "Bio.PDB.EventParser.ParseATOM",
      "Bio.PDB.EventParser.ParseCAVEAT",
      "Bio.PDB.EventParser.ParseCISPEP",
      "Bio.PDB.EventParser.ParseCONECT",
      "Bio.PDB.EventParser.ParseCRYST1",
      "Bio.PDB.EventParser.ParseDBREF",
      "Bio.PDB.EventParser.ParseFORMUL",
      "Bio.PDB.EventParser.ParseHEADER",
      "Bio.PDB.EventParser.ParseHELIX",
      "Bio.PDB.EventParser.ParseHET",
      "Bio.PDB.EventParser.ParseHETNAM",
      "Bio.PDB.EventParser.ParseHYDBND",
      "Bio.PDB.EventParser.ParseIntRecord",
      "Bio.PDB.EventParser.ParseJRNL",
      "Bio.PDB.EventParser.ParseLINK",
      "Bio.PDB.EventParser.ParseListRecord",
      "Bio.PDB.EventParser.ParseMASTER",
      "Bio.PDB.EventParser.ParseMatrixRecord",
      "Bio.PDB.EventParser.ParseMODRES",
      "Bio.PDB.EventParser.ParseObsoleting",
      "Bio.PDB.EventParser.ParseREMARK",
      "Bio.PDB.EventParser.ParseREVDAT",
      "Bio.PDB.EventParser.ParseSEQADV",
      "Bio.PDB.EventParser.ParseSEQRES",
      "Bio.PDB.EventParser.ParseSHEET",
      "Bio.PDB.EventParser.ParseSITE",
      "Bio.PDB.EventParser.ParseSLTBRG",
      "Bio.PDB.EventParser.ParseSpecListRecord",
      "Bio.PDB.EventParser.ParseSPLIT",
      "Bio.PDB.EventParser.ParseSSBOND",
      "Bio.PDB.EventParser.ParseTER",
      "Bio.PDB.EventParser.ParseTITLE",
      "Bio.PDB.EventParser.ParseTVECT",
      "Bio.PDB.EventParser.PDBEventParser",
      "Bio.PDB.EventParser.PDBEventPrinter",
      "Bio.PDB.EventParser.PDBEvents",
      "Bio.PDB.EventParser.PDBParsingAbstractions",
      "Bio.PDB.EventParser.StrandSense",
      "Bio.PDB.Fasta",
      "Bio.PDB.IO",
      "Bio.PDB.IO.OpenAnyFile",
      "Bio.PDB.Iterable",
      "Bio.PDB.Iterable.Instances",
      "Bio.PDB.Iterable.Utils",
      "Bio.PDB.Structure",
      "Bio.PDB.StructureBuilder",
      "Bio.PDB.StructureBuilder.Internals",
      "Bio.PDB.StructureBuilder.Parallel",
      "Bio.PDB.Structure.Elements",
      "Bio.PDB.Structure.List",
      "Bio.PDB.StructurePrinter",
      "Bio.PDB.Structure.Vector",
      "Bio.PDB.Util.MissingInstances",
      "Codec.Compression.GZip",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.ST",
      "Control.Monad.State.Strict",
      "Control.Parallel.Strategies",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.Iterable",
      "Data.Iterable.Instantiate",
      "Data.Iterable.Instantiate.Vector",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Octree",
      "Data.Proxy",
      "Data.STRef",
      "Data.String",
      "Data.Text.Buildable",
      "Data.Text.Format",
      "Data.Text.Lazy",
      "Data.Tree",
      "Data.Vector",
      "Data.Vector.Class",
      "Data.Vector.Mutable",
      "Data.Vector.V3",
      "GHC.Base",
      "GHC.Generics",
      "GHC.Prim",
      "Prelude",
      "System.Directory",
      "System.IO",
      "System.IO.Error",
      "System.IO.MMap",
      "System.IO.Unsafe",
      "Test.QuickCheck",
      "Test.QuickCheck.All",
      "Test.QuickCheck.Arbitrary",
      "Text.Printf"
    ],
    "modules": [
      "Bio.PDB.EventParser.PDBEvents",
      "Bio.PDB.EventParser.PDBEventParser",
      "Bio.PDB.EventParser.ExperimentalMethods",
      "Bio.PDB.EventParser.HelixTypes",
      "Bio.PDB.EventParser.StrandSense",
      "Bio.PDB.Structure",
      "Bio.PDB.StructureBuilder",
      "Bio.PDB.Iterable",
      "Bio.PDB.IO",
      "Bio.PDB.Fasta",
      "Bio.PDB",
      "Bio.PDB.Structure.Vector",
      "Bio.PDB.Structure.Elements",
      "Bio.PDB.Structure.List",
      "Bio.PDB.StructurePrinter",
      "Bio.PDB.EventParser.PDBEventPrinter",
      "Bio.PDB.IO.OpenAnyFile",
      "Bio.PDB.Structure.Neighbours"
    ],
    "name": "hPDB",
    "version": "1.2.0.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Prelude"
    ],
    "modules": [
      "Data.FMList"
    ],
    "name": "fmlist",
    "version": "0.9"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "System.Exit",
        "System.Info"
      ],
      "open-browser": [],
      "process": [
        "System.Process"
      ]
    },
    "imports": [
      "Data.List",
      "System.Exit",
      "System.Info",
      "System.Process",
      "System.Win32.Types",
      "Web.Browser",
      "Web.Browser.Linux",
      "Web.Browser.OSX",
      "Web.Browser.Windows"
    ],
    "modules": [
      "Web.Browser"
    ],
    "name": "open-browser",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.System",
        "Distribution.Text"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Exception",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "GHC.Generics",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "language-nix": [
        "Language.Nix",
        "Language.Nix.Identifier"
      ],
      "lens": [
        "Control.Lens"
      ],
      "pretty": [],
      "process": [
        "System.Process"
      ],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Lens",
      "Data.Aeson",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Function",
      "Data.List",
      "Data.List.Split",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Set",
      "Distribution.Nixpkgs.License",
      "Distribution.Nixpkgs.Meta",
      "Distribution.System",
      "Distribution.Text",
      "GHC.Generics",
      "Internal.OrphanInstances",
      "Language.Nix",
      "Language.Nix.Identifier",
      "Language.Nix.PrettyPrinting",
      "System.Environment",
      "System.Process",
      "Test.DocTest",
      "Test.Hspec"
    ],
    "modules": [
      "Distribution.Nixpkgs.License",
      "Distribution.Nixpkgs.Meta",
      "Distribution.Nixpkgs.PackageMap",
      "Language.Nix.PrettyPrinting"
    ],
    "name": "distribution-nixpkgs",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "AC-Vector": [
        "Data.BoundingBox.B3",
        "Data.Vector.Class",
        "Data.Vector.V3"
      ],
      "QuickCheck": [
        "Test.QuickCheck.Arbitrary"
      ],
      "base": [
        "Control.Arrow",
        "Data.Bits",
        "Data.Foldable",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Traversable",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.Bits",
      "Data.BoundingBox.B3",
      "Data.Foldable",
      "Data.Functor",
      "Data.List",
      "Data.Maybe",
      "Data.Octree",
      "Data.Octree.BoundingBox.BoundingBox",
      "Data.Octree.BoundingBox.Internal",
      "Data.Octree.Internal",
      "Data.Traversable",
      "Data.Vector.Class",
      "Data.Vector.V3",
      "Prelude",
      "PropTests.BoundingBoxTests.BoundingBoxTests",
      "PropTests.BoundingBoxTests.Utilities",
      "PropTests.Common",
      "PropTests.Octree",
      "PropTests.OctreeTests.Exposed",
      "PropTests.OctreeTests.Internal",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.All",
      "Test.QuickCheck.Arbitrary"
    ],
    "modules": [
      "Data.Octree"
    ],
    "name": "point-octree",
    "version": "0.5.5.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bool",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "System.IO.Error"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "path": [
        "Path"
      ],
      "path-io": [
        "Path.IO"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Data.Bool",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Typeable",
      "Path",
      "Path.IO",
      "System.IO.Error",
      "System.PlanB",
      "System.PlanB.Type",
      "Test.Hspec"
    ],
    "modules": [
      "System.PlanB",
      "System.PlanB.Type"
    ],
    "name": "plan-b",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "async": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Typeable",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Text"
      ],
      "control-monad-loop": [],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monads-tf": [],
      "process": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "semigroups": [],
      "split": [
        "Data.List.Split"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unix": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.Shell.PATH",
      "Data.Conduit.Shell.Process",
      "Data.Conduit.Shell.Types",
      "Data.Conduit.Shell.Variadic",
      "Data.Conduit.Text",
      "Data.Function",
      "Data.List",
      "Data.List.Split",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Typeable",
      "Language.Haskell.TH",
      "System.Directory",
      "System.Environment",
      "System.FilePath"
    ],
    "modules": [
      "Data.Conduit.Shell",
      "Data.Conduit.Shell.PATH",
      "Data.Conduit.Shell.TH",
      "Data.Conduit.Shell.Process",
      "Data.Conduit.Shell.Types",
      "Data.Conduit.Shell.Segments",
      "Data.Conduit.Shell.Variadic"
    ],
    "name": "shell-conduit",
    "version": "4.5.2"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Ix",
        "Data.Traversable",
        "GHC.Conc",
        "GHC.Exts"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Parallel",
      "Control.Seq",
      "Data.Array",
      "Data.Foldable",
      "Data.Ix",
      "Data.Map",
      "Data.Traversable",
      "GHC.Conc",
      "GHC.Exts"
    ],
    "modules": [
      "Control.Seq",
      "Control.Parallel",
      "Control.Parallel.Strategies"
    ],
    "name": "parallel",
    "version": "3.2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "happstack-server": [
        "Happstack.Server"
      ],
      "text": [
        "Data.Text"
      ],
      "web-routes": [
        "Web.Routes.RouteT",
        "Web.Routes.Site"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString.Char8",
      "Data.List",
      "Data.Text",
      "Happstack.Server",
      "Web.Routes.RouteT",
      "Web.Routes.Site"
    ],
    "modules": [
      "Web.Routes.Happstack"
    ],
    "name": "web-routes-happstack",
    "version": "0.23.10"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "System.Environment",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ],
      "io-manager": []
    },
    "imports": [
      "Control.Monad",
      "Data.Map",
      "System.Environment",
      "System.IO",
      "Training.MM.IOManager"
    ],
    "modules": [
      "Training.MM.IOManager"
    ],
    "name": "io-manager",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.Bits"
      ],
      "time": [
        "Data.Time.Clock.POSIX"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Data.Bits",
      "Data.Time.Clock.POSIX"
    ],
    "modules": [
      "Data.Snowflake"
    ],
    "name": "snowflake",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.List",
        "System.Exit",
        "System.IO"
      ],
      "blaze-markup": [
        "Text.Blaze.Internal",
        "Text.Blaze.Renderer.String"
      ],
      "hspec": [
        "Test.Hspec",
        "Test.Hspec.Formatters",
        "Test.Hspec.QuickCheck",
        "Test.Hspec.Runner"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.List",
      "Example",
      "System.Exit",
      "System.IO",
      "Test.Hspec",
      "Test.Hspec.Formatters",
      "Test.Hspec.Formatters.Jenkins",
      "Test.Hspec.QuickCheck",
      "Test.Hspec.Runner",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.String"
    ],
    "modules": [
      "Test.Hspec.Formatters.Jenkins"
    ],
    "name": "hspec-jenkins",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-cairo",
    "version": "1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.IORef",
        "Data.Maybe",
        "Data.Ratio",
        "Data.Word",
        "Foreign",
        "Numeric",
        "System.CPUTime",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "primitive": [
        "Data.Primitive.ByteArray"
      ],
      "random": [
        "System.Random"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.Int",
      "Data.IORef",
      "Data.Maybe",
      "Data.Primitive.ByteArray",
      "Data.Ratio",
      "Data.Time",
      "Data.Word",
      "Foreign",
      "Numeric",
      "System.CPUTime",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "System.Random.TF.Gen",
      "System.Random.TF.Init"
    ],
    "modules": [
      "System.Random.TF",
      "System.Random.TF.Gen",
      "System.Random.TF.Init",
      "System.Random.TF.Instances"
    ],
    "name": "tf-random",
    "version": "0.5"
  },
  {
    "dependencies": {
      "base": [
        "Foreign.Storable",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString.Lazy",
      "Data.Vector",
      "Data.Vector.Binary",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Vector.Binary"
    ],
    "name": "vector-binary-instances",
    "version": "0.2.3.2"
  },
  {
    "dependencies": {
      "Spock": [
        "Web.Spock"
      ],
      "base": [
        "Control.Monad.IO.Class",
        "Data.Functor.Identity",
        "Data.Monoid"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "lucid": [
        "Lucid.Base"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Lucid.Base",
      "Web.Spock"
    ],
    "modules": [
      "Web.Spock.Lucid"
    ],
    "name": "Spock-lucid",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.StorageGateway",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.StorageGateway",
      "Test.AWS.StorageGateway.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.StorageGateway",
      "Network.AWS.StorageGateway.ActivateGateway",
      "Network.AWS.StorageGateway.AddCache",
      "Network.AWS.StorageGateway.AddTagsToResource",
      "Network.AWS.StorageGateway.AddUploadBuffer",
      "Network.AWS.StorageGateway.AddWorkingStorage",
      "Network.AWS.StorageGateway.CancelArchival",
      "Network.AWS.StorageGateway.CancelRetrieval",
      "Network.AWS.StorageGateway.CreateCachediSCSIVolume",
      "Network.AWS.StorageGateway.CreateSnapshot",
      "Network.AWS.StorageGateway.CreateSnapshotFromVolumeRecoveryPoint",
      "Network.AWS.StorageGateway.CreateStorediSCSIVolume",
      "Network.AWS.StorageGateway.CreateTapeWithBarcode",
      "Network.AWS.StorageGateway.CreateTapes",
      "Network.AWS.StorageGateway.DeleteBandwidthRateLimit",
      "Network.AWS.StorageGateway.DeleteChapCredentials",
      "Network.AWS.StorageGateway.DeleteGateway",
      "Network.AWS.StorageGateway.DeleteSnapshotSchedule",
      "Network.AWS.StorageGateway.DeleteTape",
      "Network.AWS.StorageGateway.DeleteTapeArchive",
      "Network.AWS.StorageGateway.DeleteVolume",
      "Network.AWS.StorageGateway.DescribeBandwidthRateLimit",
      "Network.AWS.StorageGateway.DescribeCache",
      "Network.AWS.StorageGateway.DescribeCachediSCSIVolumes",
      "Network.AWS.StorageGateway.DescribeChapCredentials",
      "Network.AWS.StorageGateway.DescribeGatewayInformation",
      "Network.AWS.StorageGateway.DescribeMaintenanceStartTime",
      "Network.AWS.StorageGateway.DescribeSnapshotSchedule",
      "Network.AWS.StorageGateway.DescribeStorediSCSIVolumes",
      "Network.AWS.StorageGateway.DescribeTapeArchives",
      "Network.AWS.StorageGateway.DescribeTapeRecoveryPoints",
      "Network.AWS.StorageGateway.DescribeTapes",
      "Network.AWS.StorageGateway.DescribeUploadBuffer",
      "Network.AWS.StorageGateway.DescribeVTLDevices",
      "Network.AWS.StorageGateway.DescribeWorkingStorage",
      "Network.AWS.StorageGateway.DisableGateway",
      "Network.AWS.StorageGateway.ListGateways",
      "Network.AWS.StorageGateway.ListLocalDisks",
      "Network.AWS.StorageGateway.ListTagsForResource",
      "Network.AWS.StorageGateway.ListVolumeInitiators",
      "Network.AWS.StorageGateway.ListVolumeRecoveryPoints",
      "Network.AWS.StorageGateway.ListVolumes",
      "Network.AWS.StorageGateway.RemoveTagsFromResource",
      "Network.AWS.StorageGateway.ResetCache",
      "Network.AWS.StorageGateway.RetrieveTapeArchive",
      "Network.AWS.StorageGateway.RetrieveTapeRecoveryPoint",
      "Network.AWS.StorageGateway.SetLocalConsolePassword",
      "Network.AWS.StorageGateway.ShutdownGateway",
      "Network.AWS.StorageGateway.StartGateway",
      "Network.AWS.StorageGateway.Types",
      "Network.AWS.StorageGateway.UpdateBandwidthRateLimit",
      "Network.AWS.StorageGateway.UpdateChapCredentials",
      "Network.AWS.StorageGateway.UpdateGatewayInformation",
      "Network.AWS.StorageGateway.UpdateGatewaySoftwareNow",
      "Network.AWS.StorageGateway.UpdateMaintenanceStartTime",
      "Network.AWS.StorageGateway.UpdateSnapshotSchedule",
      "Network.AWS.StorageGateway.UpdateVTLDeviceType",
      "Network.AWS.StorageGateway.Waiters"
    ],
    "name": "amazonka-storagegateway",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "RSA": [
        "Codec.Crypto.RSA"
      ],
      "SHA": [],
      "base": [
        "Control.Monad.IO.Class",
        "Data.Data",
        "Data.IORef"
      ],
      "base64-bytestring": [],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "crypto-pubkey-types": [],
      "data-default": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-types": [],
      "random": [],
      "time": [],
      "transformers": []
    },
    "imports": [
      "Codec.Crypto.RSA",
      "Control.Monad.IO.Class",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Data",
      "Data.IORef",
      "Network.HTTP.Client",
      "Web.Authenticate.OAuth"
    ],
    "modules": [
      "Web.Authenticate.OAuth",
      "Web.Authenticate.OAuth.IO"
    ],
    "name": "authenticate-oauth",
    "version": "1.5.1.2"
  },
  {
    "dependencies": {
      "RefSerialize": [
        "Data.RefSerialize"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "GHC.Conc",
        "Numeric",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem",
        "System.Mem.StableName",
        "System.Mem.Weak",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "hashtables": [
        "Data.HashTable.IO"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Trans"
      ],
      "old-time": [
        "System.Time"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.Trans",
      "Data.Bits",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.HashTable.IO",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.RefSerialize",
      "Data.TCache",
      "Data.TCache.DefaultPersistence",
      "Data.TCache.Defs",
      "Data.TCache.IndexQuery",
      "Data.TCache.IndexText",
      "Data.TCache.IResource",
      "Data.TCache.Memoization",
      "Data.TCache.Triggers",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Data.Word",
      "Debug.Trace",
      "GHC.Conc",
      "Numeric",
      "System.Directory",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Mem",
      "System.Mem.StableName",
      "System.Mem.Weak",
      "System.Time",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.TCache",
      "Data.TCache.DefaultPersistence",
      "Data.TCache.Defs",
      "Data.TCache.IResource",
      "Data.TCache.IndexQuery",
      "Data.TCache.IndexText",
      "Data.TCache.Memoization",
      "Data.TCache.Triggers",
      "Data.Persistent.Collection",
      "Data.Persistent.IDynamic"
    ],
    "name": "TCache",
    "version": "0.12.0"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Simple.Utils",
        "Distribution.Text",
        "Distribution.Verbosity"
      ],
      "base": [
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hackage-db": [
        "Distribution.Hackage.DB.Parsed"
      ],
      "process": [
        "System.Process"
      ],
      "temporary": [
        "System.IO.Temp"
      ]
    },
    "imports": [
      "Data.Map",
      "Distribution.Hackage.DB.Parsed",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Simple.Utils",
      "Distribution.Text",
      "Distribution.Verbosity",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.Process"
    ],
    "modules": [],
    "name": "hackage-whatsnew",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Coerce",
        "Data.Int",
        "Data.Ratio",
        "Data.Typeable",
        "Foreign.C.Types",
        "Foreign.Storable"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.Coerce",
      "Data.Int",
      "Data.Ratio",
      "Data.Typeable",
      "Foreign.C.Types",
      "Foreign.Storable"
    ],
    "modules": [
      "Numeric.Fixed"
    ],
    "name": "fixed",
    "version": "0.2.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AdExchangeBuyer",
      "Network.Google.AdExchangeBuyer.Types",
      "Network.Google.Resource.AdExchangeBuyer.Accounts.Get",
      "Network.Google.Resource.AdExchangeBuyer.Accounts.List",
      "Network.Google.Resource.AdExchangeBuyer.Accounts.Patch",
      "Network.Google.Resource.AdExchangeBuyer.Accounts.Update",
      "Network.Google.Resource.AdExchangeBuyer.BillingInfo.Get",
      "Network.Google.Resource.AdExchangeBuyer.BillingInfo.List",
      "Network.Google.Resource.AdExchangeBuyer.Budget.Get",
      "Network.Google.Resource.AdExchangeBuyer.Budget.Patch",
      "Network.Google.Resource.AdExchangeBuyer.Budget.Update",
      "Network.Google.Resource.AdExchangeBuyer.Creatives.AddDeal",
      "Network.Google.Resource.AdExchangeBuyer.Creatives.Get",
      "Network.Google.Resource.AdExchangeBuyer.Creatives.Insert",
      "Network.Google.Resource.AdExchangeBuyer.Creatives.List",
      "Network.Google.Resource.AdExchangeBuyer.Creatives.RemoveDeal",
      "Network.Google.Resource.AdExchangeBuyer.MarketplaceDeals.Delete",
      "Network.Google.Resource.AdExchangeBuyer.MarketplaceDeals.Insert",
      "Network.Google.Resource.AdExchangeBuyer.MarketplaceDeals.List",
      "Network.Google.Resource.AdExchangeBuyer.MarketplaceDeals.Update",
      "Network.Google.Resource.AdExchangeBuyer.MarketplaceNotes.Insert",
      "Network.Google.Resource.AdExchangeBuyer.MarketplaceNotes.List",
      "Network.Google.Resource.AdExchangeBuyer.Marketplaceprivateauction.Updateproposal",
      "Network.Google.Resource.AdExchangeBuyer.PerformanceReport.List",
      "Network.Google.Resource.AdExchangeBuyer.PretargetingConfig.Delete",
      "Network.Google.Resource.AdExchangeBuyer.PretargetingConfig.Get",
      "Network.Google.Resource.AdExchangeBuyer.PretargetingConfig.Insert",
      "Network.Google.Resource.AdExchangeBuyer.PretargetingConfig.List",
      "Network.Google.Resource.AdExchangeBuyer.PretargetingConfig.Patch",
      "Network.Google.Resource.AdExchangeBuyer.PretargetingConfig.Update",
      "Network.Google.Resource.AdExchangeBuyer.Products.Get",
      "Network.Google.Resource.AdExchangeBuyer.Products.Search",
      "Network.Google.Resource.AdExchangeBuyer.Proposals.Get",
      "Network.Google.Resource.AdExchangeBuyer.Proposals.Insert",
      "Network.Google.Resource.AdExchangeBuyer.Proposals.Patch",
      "Network.Google.Resource.AdExchangeBuyer.Proposals.Search",
      "Network.Google.Resource.AdExchangeBuyer.Proposals.Setupcomplete",
      "Network.Google.Resource.AdExchangeBuyer.Proposals.Update",
      "Network.Google.Resource.AdExchangeBuyer.PubproFiles.List"
    ],
    "name": "gogol-adexchange-buyer",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Debug.Trace",
        "System.Exit"
      ],
      "containers": [
        "Data.Map"
      ],
      "pretty": []
    },
    "imports": [
      "Data.Integer.SAT",
      "Data.Map",
      "Debug.Trace",
      "System.Exit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Integer.SAT"
    ],
    "name": "presburger",
    "version": "1.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Char",
        "Data.Fixed",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Prelude",
        "Text.Printf"
      ],
      "mtl": [
        "Control.Monad.Writer"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO",
        "Data.Text.Read"
      ]
    },
    "imports": [
      "Clay.Animation",
      "Clay.Attributes",
      "Clay.Background",
      "Clay.Border",
      "Clay.Box",
      "Clay.Color",
      "Clay.Common",
      "Clay.Display",
      "Clay.Dynamic",
      "Clay.Elements",
      "Clay.Filter",
      "Clay.Flexbox",
      "Clay.Font",
      "Clay.FontFace",
      "Clay.Geometry",
      "Clay.Gradient",
      "Clay.List",
      "Clay.Mask",
      "Clay.Property",
      "Clay.Pseudo",
      "Clay.Render",
      "Clay.Selector",
      "Clay.Size",
      "Clay.Stylesheet",
      "Clay.Text",
      "Clay.Time",
      "Clay.Transform",
      "Clay.Transition",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad.Writer",
      "Data.Char",
      "Data.Fixed",
      "Data.Functor",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Text.Read",
      "Prelude",
      "Text.Printf"
    ],
    "modules": [
      "Clay",
      "Clay.Animation",
      "Clay.Attributes",
      "Clay.Background",
      "Clay.Border",
      "Clay.Box",
      "Clay.Color",
      "Clay.Common",
      "Clay.Dynamic",
      "Clay.Display",
      "Clay.Elements",
      "Clay.Filter",
      "Clay.Flexbox",
      "Clay.Font",
      "Clay.FontFace",
      "Clay.Geometry",
      "Clay.Gradient",
      "Clay.List",
      "Clay.Media",
      "Clay.Mask",
      "Clay.Property",
      "Clay.Pseudo",
      "Clay.Render",
      "Clay.Selector",
      "Clay.Size",
      "Clay.Stylesheet",
      "Clay.Text",
      "Clay.Time",
      "Clay.Transform",
      "Clay.Transition"
    ],
    "name": "clay",
    "version": "0.11"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Writer",
      "Data.Docker",
      "Data.Monoid",
      "Test.Hspec"
    ],
    "modules": [
      "Data.Docker"
    ],
    "name": "dockerfile",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.STRef",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Safe",
        "Foreign.Storable",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntMap.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "mtl": [
        "Control.Monad.Trans",
        "Control.Monad.Writer.Strict"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Strict"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable",
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable",
        "Data.Vector.Unboxed"
      ],
      "zlib": [
        "Codec.Compression.Zlib"
      ]
    },
    "imports": [
      "Codec.Compression.Zlib",
      "Codec.Picture.Bitmap",
      "Codec.Picture.BitWriter",
      "Codec.Picture.ColorQuant",
      "Codec.Picture.Gif",
      "Codec.Picture.Gif.LZW",
      "Codec.Picture.Gif.LZWEncoding",
      "Codec.Picture.HDR",
      "Codec.Picture.InternalHelper",
      "Codec.Picture.Jpg",
      "Codec.Picture.Jpg.Common",
      "Codec.Picture.Jpg.DefaultTable",
      "Codec.Picture.Jpg.FastDct",
      "Codec.Picture.Jpg.FastIdct",
      "Codec.Picture.Jpg.Metadata",
      "Codec.Picture.Jpg.Progressive",
      "Codec.Picture.Jpg.Types",
      "Codec.Picture.Metadata",
      "Codec.Picture.Metadata.Exif",
      "Codec.Picture.Png",
      "Codec.Picture.Png.Export",
      "Codec.Picture.Png.Metadata",
      "Codec.Picture.Png.Type",
      "Codec.Picture.Saving",
      "Codec.Picture.Tga",
      "Codec.Picture.Tiff",
      "Codec.Picture.Tiff.Metadata",
      "Codec.Picture.Tiff.Types",
      "Codec.Picture.Types",
      "Codec.Picture.VectorByteConversion",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Writer.Strict",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.Int",
      "Data.IntMap",
      "Data.IntMap.Strict",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.STRef",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Safe",
      "Foreign.Storable",
      "System.IO.MMap",
      "System.IO.Unsafe",
      "Text.Printf"
    ],
    "modules": [
      "Codec.Picture",
      "Codec.Picture.Bitmap",
      "Codec.Picture.Gif",
      "Codec.Picture.Png",
      "Codec.Picture.Jpg",
      "Codec.Picture.HDR",
      "Codec.Picture.Tga",
      "Codec.Picture.Tiff",
      "Codec.Picture.Metadata",
      "Codec.Picture.Metadata.Exif",
      "Codec.Picture.Saving",
      "Codec.Picture.Types",
      "Codec.Picture.ColorQuant"
    ],
    "name": "JuicyPixels",
    "version": "3.2.8"
  },
  {
    "dependencies": {
      "base": [
        "Data.Proxy",
        "GHC.Exts"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "transformers": [],
      "vinyl": [
        "Data.Vinyl",
        "Data.Vinyl.Functor"
      ]
    },
    "imports": [
      "Data.Functor.Contravariant",
      "Data.Proxy",
      "Data.Vinyl",
      "Data.Vinyl.Functor",
      "Data.Vinyl.Utils.Compose",
      "Data.Vinyl.Utils.Proxy",
      "GHC.Exts"
    ],
    "modules": [
      "Data.Vinyl.Utils.Const",
      "Data.Vinyl.Utils.Compose",
      "Data.Vinyl.Utils.Field",
      "Data.Vinyl.Utils.Operator",
      "Data.Vinyl.Utils.Proxy"
    ],
    "name": "vinyl-utils",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [],
      "binary": [],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "errors": [],
      "io-streams": [],
      "iproute": [],
      "irc-ctcp": [],
      "mtl": [],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "path": [
        "Path"
      ],
      "safe-exceptions": [],
      "transformers": [],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.UTF8",
      "Network.IRC.DCCTest",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Path"
    ],
    "modules": [
      "Network.IRC.DCC",
      "Network.IRC.DCC.Internal",
      "Network.IRC.DCC.Client.FileTransfer"
    ],
    "name": "irc-dcc",
    "version": "2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Numeric"
      ],
      "dlist": [
        "Data.DList"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Either.Plus",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Database.PostgreSQL.Parser",
      "Database.PostgreSQL.Printer",
      "Data.Char",
      "Data.DList",
      "Data.Maybe",
      "Data.Monoid",
      "Data.PostgreSQL.NetworkAddress",
      "Data.Word",
      "Numeric",
      "Test.QuickCheck",
      "Test.QuickCheck.Simple",
      "Text.Parser.List",
      "Text.Printer.List"
    ],
    "modules": [
      "Data.PostgreSQL.NetworkAddress",
      "Database.PostgreSQL.Parser",
      "Database.PostgreSQL.Printer"
    ],
    "name": "text-postgresql",
    "version": "0.0.2.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Debug.Trace",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ]
    },
    "imports": [
      "Data.Algorithm.Diff",
      "Data.Algorithm.DiffOutput",
      "Data.Array",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Debug.Trace",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Data.Algorithm.Diff",
      "Data.Algorithm.DiffOutput",
      "Data.Algorithm.DiffContext"
    ],
    "name": "Diff",
    "version": "0.3.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Data.Char",
        "Data.List",
        "Data.Proxy",
        "Data.Typeable",
        "Unsafe.Coerce"
      ],
      "dejafu": [
        "Test.DejaFu",
        "Test.DejaFu.Conc",
        "Test.DejaFu.SCT"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "tasty": [
        "Test.Tasty",
        "Test.Tasty.Options",
        "Test.Tasty.Providers"
      ]
    },
    "imports": [
      "Control.Monad.ST",
      "Data.Char",
      "Data.List",
      "Data.Proxy",
      "Data.Tagged",
      "Data.Typeable",
      "Test.DejaFu",
      "Test.DejaFu.Conc",
      "Test.DejaFu.Deterministic",
      "Test.DejaFu.SCT",
      "Test.Tasty",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Test.Tasty.DejaFu"
    ],
    "name": "tasty-dejafu",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Word",
        "Foreign.C.Error",
        "GHC.IO.Exception",
        "Prelude",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Core",
        "Pipes.Prelude"
      ],
      "pipes-group": [
        "Pipes.Group"
      ],
      "pipes-parse": [
        "Pipes.Parse"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict",
        "Data.Functor.Constant"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.State.Strict",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Word",
      "Foreign.C.Error",
      "GHC.IO.Exception",
      "Pipes",
      "Pipes.Core",
      "Pipes.Group",
      "Pipes.Parse",
      "Pipes.Prelude",
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Pipes.ByteString"
    ],
    "name": "pipes-bytestring",
    "version": "2.1.3"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Data.Data",
      "Data.Foldable",
      "Data.Generics",
      "Data.Generics.Biplate",
      "Data.Generics.Str",
      "Data.Generics.Uniplate",
      "Data.Generics.Uniplate.Internal.Data",
      "Data.Generics.Uniplate.Internal.DataOnlyOperations",
      "Data.Generics.Uniplate.Internal.Utils",
      "Data.Generics.Uniplate.Operations",
      "Data.Generics.UniplateStr",
      "Data.Generics.UniplateStrOn",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IntSet",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Foreign",
      "GHC.Exts",
      "GHC.IO",
      "GHC.IOBase",
      "Prelude",
      "System.Environment",
      "System.IO.Unsafe",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Generics.Str",
      "Data.Generics.Compos",
      "Data.Generics.SYB",
      "Data.Generics.Uniplate.Data",
      "Data.Generics.Uniplate.Data.Instances",
      "Data.Generics.Uniplate.DataOnly",
      "Data.Generics.Uniplate.Direct",
      "Data.Generics.Uniplate.Operations",
      "Data.Generics.Uniplate.Typeable",
      "Data.Generics.Uniplate.Zipper",
      "Data.Generics.Uniplate",
      "Data.Generics.UniplateOn",
      "Data.Generics.UniplateStr",
      "Data.Generics.UniplateStrOn",
      "Data.Generics.Biplate",
      "Data.Generics.PlateDirect",
      "Data.Generics.PlateTypeable",
      "Data.Generics.PlateData"
    ],
    "name": "uniplate",
    "version": "1.6.12"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Foreign.C",
        "GHC.IO.Handle.FD",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Internals",
        "System.Posix.Types"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Exception",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Data.Bits",
      "Distribution.Compat.Exception",
      "Distribution.Compat.TempFile",
      "Foreign.C",
      "GHC.Handle",
      "GHC.IO.Handle.FD",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.Posix",
      "System.Posix.Internals",
      "System.Posix.Types"
    ],
    "modules": [
      "System.IO.Temp"
    ],
    "name": "temporary",
    "version": "1.2.0.4"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.TH"
      ],
      "base": [
        "Data.Char"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "filepath": [],
      "http-client": [],
      "http-client-tls": [],
      "http-types": [],
      "mtl": []
    },
    "imports": [
      "Data.Aeson.TH",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Koofr.File",
      "Koofr.Internal",
      "Koofr.Mount"
    ],
    "modules": [
      "Koofr.Client",
      "Koofr.Mount",
      "Koofr.File"
    ],
    "name": "koofr-client",
    "version": "1.0.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Monoid",
        "Text.Printf"
      ]
    },
    "imports": [
      "Data.List",
      "Data.Monoid",
      "Data.SegmentTree",
      "Data.SegmentTree.Interval",
      "Data.SegmentTree.Measured",
      "Stabbing.Naive",
      "Stabbing.SegmentTree",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Data.SegmentTree"
    ],
    "name": "SegmentTree",
    "version": "0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "System.Exit"
      ]
    },
    "imports": [
      "Codec.Binary.Base64.String",
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.List",
      "System.Exit",
      "Test.HUnit"
    ],
    "modules": [
      "Codec.Binary.Base64.String"
    ],
    "name": "base64-string",
    "version": "0.2"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Monadic",
        "Test.QuickCheck.Property",
        "Test.QuickCheck.Test"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "state-plus": [
        "Control.Monad.Trans.State.Plus"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Trans.State.Plus",
      "Data.List",
      "Language.Haskell.TH",
      "System.Environment",
      "System.Environment.Executable",
      "System.Exit",
      "System.IO",
      "System.Process",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Test",
      "Test.Simple"
    ],
    "modules": [
      "Test.Simple"
    ],
    "name": "test-simple",
    "version": "0.1.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Int",
        "Data.Maybe",
        "Data.Word",
        "Text.Read"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Int",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Read",
      "Data.Time",
      "Data.Word",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Text.Read",
      "Web.PathPieces"
    ],
    "modules": [
      "Web.PathPieces"
    ],
    "name": "path-pieces",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [],
      "binary": [
        "Data.Binary"
      ],
      "bitcoin-tx": [
        "Data.Bitcoin.Transaction"
      ],
      "bitcoin-types": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cryptohash": [
        "Crypto.Hash.SHA256"
      ],
      "hexstring": [
        "Data.HexString"
      ],
      "largeword": [],
      "lens": []
    },
    "imports": [
      "Crypto.Hash.SHA256",
      "Data.Binary",
      "Data.Bitcoin.Transaction",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.HexString",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Data.Bitcoin.Block"
    ],
    "name": "bitcoin-block",
    "version": "0.13.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.ModuleName",
        "Distribution.Text"
      ],
      "autoexporter": [],
      "base": [
        "Data.List",
        "Data.Maybe",
        "System.Environment"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ]
    },
    "imports": [
      "Autoexporter",
      "Data.List",
      "Data.Maybe",
      "Distribution.ModuleName",
      "Distribution.Text",
      "System.Directory",
      "System.Environment",
      "System.FilePath"
    ],
    "modules": [
      "Autoexporter"
    ],
    "name": "autoexporter",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Bits",
        "Data.Maybe",
        "Data.String",
        "Data.Typeable",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "hourglass": [
        "Data.Hourglass"
      ],
      "memory": []
    },
    "imports": [
      "Control.Exception",
      "Data.ASN1.BitArray",
      "Data.ASN1.OID",
      "Data.ASN1.Types.Lowlevel",
      "Data.ASN1.Types.String",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Hourglass",
      "Data.Maybe",
      "Data.String",
      "Data.Typeable",
      "Data.Word"
    ],
    "modules": [
      "Data.ASN1.BitArray",
      "Data.ASN1.OID",
      "Data.ASN1.Pretty",
      "Data.ASN1.Types",
      "Data.ASN1.Types.String",
      "Data.ASN1.Types.Lowlevel"
    ],
    "name": "asn1-types",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Monoid",
        "Data.Typeable",
        "Debug.Trace"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "configurator": [
        "Data.Configurator"
      ],
      "data-default": [],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-types": [],
      "iconv": [],
      "mtl": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Cursor",
        "Text.XML.Stream.Parse"
      ],
      "xml-conduit-writer": [
        "Text.XML.Writer"
      ],
      "xml-types": [
        "Data.XML.Types"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad.Catch",
      "Control.Monad.Trans.Resource",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Conduit",
      "Data.Configurator",
      "Data.HashMap.Strict",
      "Data.Monoid",
      "Data.Text",
      "Data.Typeable",
      "Data.XML.Types",
      "Debug.Trace",
      "Network.HTTP.Client",
      "Network.SOAP",
      "Network.SOAP.Exception",
      "Network.SOAP.Parsing.Cursor",
      "Network.SOAP.Parsing.Stream",
      "Network.SOAP.Transport",
      "Network.SOAP.Transport.HTTP",
      "Network.SOAP.Transport.Mock",
      "Test.Hspec",
      "Text.XML",
      "Text.XML.Cursor",
      "Text.XML.Stream.Parse",
      "Text.XML.Writer"
    ],
    "modules": [
      "Network.SOAP",
      "Network.SOAP.Transport",
      "Network.SOAP.Exception",
      "Network.SOAP.Transport.HTTP",
      "Network.SOAP.Transport.Mock",
      "Network.SOAP.Parsing.Cursor",
      "Network.SOAP.Parsing.Stream"
    ],
    "name": "soap",
    "version": "0.2.3.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.DeviceFarm",
      "Test.AWS.DeviceFarm",
      "Test.AWS.DeviceFarm.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.DeviceFarm",
      "Network.AWS.DeviceFarm.CreateDevicePool",
      "Network.AWS.DeviceFarm.CreateProject",
      "Network.AWS.DeviceFarm.CreateUpload",
      "Network.AWS.DeviceFarm.DeleteDevicePool",
      "Network.AWS.DeviceFarm.DeleteProject",
      "Network.AWS.DeviceFarm.DeleteRun",
      "Network.AWS.DeviceFarm.DeleteUpload",
      "Network.AWS.DeviceFarm.GetAccountSettings",
      "Network.AWS.DeviceFarm.GetDevice",
      "Network.AWS.DeviceFarm.GetDevicePool",
      "Network.AWS.DeviceFarm.GetDevicePoolCompatibility",
      "Network.AWS.DeviceFarm.GetJob",
      "Network.AWS.DeviceFarm.GetOfferingStatus",
      "Network.AWS.DeviceFarm.GetProject",
      "Network.AWS.DeviceFarm.GetRun",
      "Network.AWS.DeviceFarm.GetSuite",
      "Network.AWS.DeviceFarm.GetTest",
      "Network.AWS.DeviceFarm.GetUpload",
      "Network.AWS.DeviceFarm.ListArtifacts",
      "Network.AWS.DeviceFarm.ListDevicePools",
      "Network.AWS.DeviceFarm.ListDevices",
      "Network.AWS.DeviceFarm.ListJobs",
      "Network.AWS.DeviceFarm.ListOfferingTransactions",
      "Network.AWS.DeviceFarm.ListOfferings",
      "Network.AWS.DeviceFarm.ListProjects",
      "Network.AWS.DeviceFarm.ListRuns",
      "Network.AWS.DeviceFarm.ListSamples",
      "Network.AWS.DeviceFarm.ListSuites",
      "Network.AWS.DeviceFarm.ListTests",
      "Network.AWS.DeviceFarm.ListUniqueProblems",
      "Network.AWS.DeviceFarm.ListUploads",
      "Network.AWS.DeviceFarm.PurchaseOffering",
      "Network.AWS.DeviceFarm.RenewOffering",
      "Network.AWS.DeviceFarm.ScheduleRun",
      "Network.AWS.DeviceFarm.StopRun",
      "Network.AWS.DeviceFarm.Types",
      "Network.AWS.DeviceFarm.UpdateDevicePool",
      "Network.AWS.DeviceFarm.UpdateProject",
      "Network.AWS.DeviceFarm.Waiters"
    ],
    "name": "amazonka-devicefarm",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "containers": [
        "Data.Set"
      ],
      "deepseq": [],
      "directory": [],
      "filepath": [],
      "hflags": [],
      "random-fu": [
        "Data.Random.Distribution",
        "Data.Random.Distribution.Uniform"
      ],
      "random-source": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "unix-compat": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Random.Distribution",
      "Data.Random.Distribution.Uniform",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Vector"
    ],
    "modules": [
      "Data.Random.RVar.Enum",
      "Data.Random.Vector",
      "Data.Random.Choice",
      "Text.WordPass"
    ],
    "name": "wordpass",
    "version": "1.0.0.6"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit.Base",
        "Test.HUnit.Lang"
      ],
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Arbitrary"
      ],
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.Float",
        "System.Exit",
        "System.IO"
      ],
      "binary": [
        "Data.Binary"
      ],
      "boxes": [
        "Text.PrettyPrint.Boxes"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "gamma": [
        "Math.Gamma"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Strict"
      ],
      "mwc-random": [
        "System.Random.MWC",
        "System.Random.MWC.CondensedTable",
        "System.Random.MWC.Distributions"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec.Char",
        "Text.ParserCombinators.Parsec.Combinator",
        "Text.ParserCombinators.Parsec.Prim"
      ],
      "pretty": [],
      "random": [
        "System.Random"
      ],
      "split": [
        "Data.List.Split"
      ],
      "statistics": [
        "Statistics.Sample.Histogram"
      ],
      "test-framework": [
        "Test.Framework"
      ],
      "test-framework-hunit": [
        "Test.Framework.Providers.HUnit"
      ],
      "test-framework-quickcheck2": [
        "Test.Framework.Providers.QuickCheck2"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Bayes",
      "Bayes.BayesianNetwork",
      "Bayes.Continuous",
      "Bayes.EM",
      "Bayes.Examples",
      "Bayes.Examples.Influence",
      "Bayes.Factor",
      "Bayes.Factor.CPT",
      "Bayes.FactorElimination",
      "Bayes.FactorElimination.JTree",
      "Bayes.Factor.MaxCPT",
      "Bayes.Factor.PrivateCPT",
      "Bayes.ImportExport",
      "Bayes.ImportExport.HuginNet",
      "Bayes.ImportExport.HuginNet.Splitting",
      "Bayes.InfluenceDiagram",
      "Bayes.Network",
      "Bayes.PrivateTypes",
      "Bayes.Sampling",
      "Bayes.Test",
      "Bayes.Test.CompareEliminations",
      "Bayes.Test.InfluencePatterns",
      "Bayes.Test.ReferencePatterns",
      "Bayes.Tools",
      "Bayes.VariableElimination",
      "Bayes.VariableElimination.Buckets",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer.Strict",
      "Data.Binary",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.IntMap",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Traversable",
      "Data.Tree",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "GHC.Float",
      "Math.Gamma",
      "Paths",
      "Statistics.Sample.Histogram",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Random",
      "System.Random.MWC",
      "System.Random.MWC.CondensedTable",
      "System.Random.MWC.Distributions",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit.Base",
      "Test.HUnit.Lang",
      "Test.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Text.ParserCombinators.Parsec.Char",
      "Text.ParserCombinators.Parsec.Combinator",
      "Text.ParserCombinators.Parsec.Prim",
      "Text.PrettyPrint.Boxes"
    ],
    "modules": [
      "Bayes",
      "Bayes.Factor",
      "Bayes.Factor.CPT",
      "Bayes.Factor.MaxCPT",
      "Bayes.ImportExport.HuginNet",
      "Bayes.VariableElimination",
      "Bayes.FactorElimination",
      "Bayes.Test",
      "Bayes.Test.CompareEliminations",
      "Bayes.Examples",
      "Bayes.Examples.Tutorial",
      "Bayes.Test.ReferencePatterns",
      "Bayes.Test.InfluencePatterns",
      "Bayes.ImportExport",
      "Bayes.BayesianNetwork",
      "Bayes.InfluenceDiagram",
      "Bayes.VariableElimination.Buckets",
      "Bayes.Examples.Influence",
      "Bayes.Sampling",
      "Bayes.Examples.Sampling",
      "Bayes.EM",
      "Bayes.Examples.EMTest",
      "Bayes.Continuous",
      "Bayes.Examples.ContinuousSampling"
    ],
    "name": "hbayes",
    "version": "0.5.2"
  },
  {
    "dependencies": {
      "base": [],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Data.Time"
    ],
    "modules": [
      "Machine",
      "IOMcn"
    ],
    "name": "io-machine",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Ix",
        "Data.List",
        "Data.Typeable",
        "Foreign.C.Types",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.StablePtr",
        "Foreign.Storable",
        "GHC.IO.FD",
        "GHC.IO.Handle.Types",
        "System.Environment",
        "System.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.Ix",
      "Data.List",
      "Data.Typeable",
      "Foreign.C.Types",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "Foreign.Storable",
      "GHC.IOBase",
      "GHC.IO.FD",
      "GHC.IO.Handle.Types",
      "System.Console.ANSI",
      "System.Console.ANSI.Common",
      "System.Console.ANSI.Unix",
      "System.Console.ANSI.Windows",
      "System.Console.ANSI.Windows.Emulator",
      "System.Console.ANSI.Windows.Foreign",
      "System.Environment",
      "System.IO",
      "System.Win32.Types"
    ],
    "modules": [
      "System.Console.ANSI"
    ],
    "name": "ansi-terminal",
    "version": "0.6.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Data.Typeable",
        "Prelude",
        "Unsafe.Coerce"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Data.Typeable",
      "Prelude",
      "Type.Eq",
      "Type.Eq.Higher",
      "Type.Eq.Higher.Unsafe",
      "Type.Eq.Unsafe",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Type.Eq",
      "Type.Eq.Unsafe",
      "Type.Eq.Higher",
      "Type.Eq.Higher.Unsafe"
    ],
    "name": "type-eq",
    "version": "0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Generics"
      ],
      "prelude-extras": [
        "Prelude.Extras"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Free",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Data.Foldable",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Generics",
      "Prelude.Extras"
    ],
    "modules": [
      "Control.Monad.Free",
      "Control.Monad.Free.Zip",
      "Control.Monad.Free.Improve"
    ],
    "name": "control-monad-free",
    "version": "0.6.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "data-default": [],
      "directory": [],
      "fay": [],
      "fay-dom": [],
      "filepath": [],
      "monad-loops": [],
      "process": [],
      "pureMD5": [],
      "shakespeare": [],
      "template-haskell": [],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ],
      "yesod-core": [
        "Yesod.Core"
      ],
      "yesod-form": [],
      "yesod-static": []
    },
    "imports": [
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.UTF8",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Yesod.Core"
    ],
    "modules": [
      "Yesod.Fay",
      "Fay.Yesod"
    ],
    "name": "yesod-fay",
    "version": "0.8.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Crypto.Hash.SHA256",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Digest.Pure.SHA",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Crypto.Hash.SHA256"
    ],
    "name": "cryptohash-sha256",
    "version": "0.11.100.1"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Network"
      ],
      "connection": [
        "Network.Connection"
      ],
      "irc": [
        "Network.IRC"
      ],
      "irc-ctcp": [
        "Network.IRC.CTCP"
      ],
      "network-conduit-tls": [
        "Data.Conduit.Network.TLS"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "tls": [
        "Network.TLS",
        "Network.TLS.Extra"
      ],
      "transformers": [],
      "x509-validation": [
        "Data.X509.Validation"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Network",
      "Data.Conduit.Network.TLS",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock",
      "Data.X509.Validation",
      "Network.Connection",
      "Network.IRC",
      "Network.IRC.Conduit.Internal",
      "Network.IRC.Conduit.Internal.Conduits",
      "Network.IRC.Conduit.Internal.Messages",
      "Network.IRC.CTCP",
      "Network.TLS",
      "Network.TLS.Extra",
      "Text.Read"
    ],
    "modules": [
      "Network.IRC.Conduit",
      "Network.IRC.Conduit.Internal",
      "Network.IRC.Conduit.Internal.Conduits",
      "Network.IRC.Conduit.Internal.Messages"
    ],
    "name": "irc-conduit",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Foldable",
        "Data.Int",
        "Data.IORef",
        "Data.Ratio",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Prelude",
        "System.CPUTime",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "time": [
        "Data.Time.Clock.POSIX"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "ChiSquare",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Criterion.Main",
      "Data.Bits",
      "Data.Foldable",
      "Data.Int",
      "Data.IORef",
      "Data.Ratio",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "KS",
      "Prelude",
      "QC",
      "Statistics.Distribution",
      "Statistics.Distribution.Beta",
      "Statistics.Distribution.Binomial",
      "Statistics.Distribution.Exponential",
      "Statistics.Distribution.Gamma",
      "Statistics.Distribution.Normal",
      "Statistics.Distribution.Uniform",
      "Statistics.Test.KolmogorovSmirnov",
      "System.CPUTime",
      "System.Directory",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "System.Random.Mersenne",
      "System.Random.MWC",
      "System.Random.MWC.CondensedTable",
      "System.Random.MWC.Distributions",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic"
    ],
    "modules": [
      "System.Random.MWC",
      "System.Random.MWC.Distributions",
      "System.Random.MWC.CondensedTable"
    ],
    "name": "mwc-random",
    "version": "0.13.4.0"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "System.Environment",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "courier": [],
      "hslogger": [
        "System.Log.Formatter",
        "System.Log.Handler",
        "System.Log.Handler.Simple",
        "System.Log.Logger"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [],
      "uuid": [
        "Data.UUID",
        "Data.UUID.V4"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Mailbox",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.Map",
      "Data.Serialize",
      "Data.Set",
      "Data.Typeable",
      "Data.UUID",
      "Data.UUID.V4",
      "Data.Word",
      "GHC.Generics",
      "Network.Endpoints",
      "Network.RPC",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Transport",
      "Network.Transport.Memory",
      "Network.Transport.Sockets",
      "Network.Transport.Sockets.TCP",
      "Network.Transport.Sockets.UDP",
      "System.Environment",
      "System.IO",
      "System.Log.Formatter",
      "System.Log.Handler",
      "System.Log.Handler.Simple",
      "System.Log.Logger",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "TestMailbox",
      "TestMemory",
      "TestRPC",
      "TestTCP",
      "TestUDP",
      "TestUtils",
      "TransportTestSuite"
    ],
    "modules": [
      "Network.Endpoints",
      "Network.Transport",
      "Network.Transport.Memory",
      "Network.Transport.Sockets",
      "Network.Transport.Sockets.TCP",
      "Network.Transport.Sockets.UDP",
      "Control.Concurrent.Mailbox",
      "Network.RPC"
    ],
    "name": "courier",
    "version": "0.1.1.4"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "System.IO.Unsafe"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.Array",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Control.Concurrent.BoundedChan"
    ],
    "name": "BoundedChan",
    "version": "1.0.3.0"
  },
  {
    "dependencies": {
      "base": [],
      "semigroupoids": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "groupoids",
    "version": "4.0"
  },
  {
    "dependencies": {},
    "imports": [
      "GHC.Base"
    ],
    "modules": [
      "Data.Or"
    ],
    "name": "data-or",
    "version": "1.0.0.5"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Text",
      "Data.Text.ICU",
      "Data.Text.Normalize"
    ],
    "modules": [
      "Data.ByteString.UTF8.Normalize",
      "Data.Text.Normalize",
      "Data.Unicode.Types"
    ],
    "name": "unicode-transforms",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List.NonEmpty"
      ],
      "base-compat": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "pcre-light": [
        "Text.Regex.PCRE.Light"
      ],
      "semigroups": [],
      "string-conversions": [],
      "template-haskell": []
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.List.NonEmpty",
      "Text.Regex.PCRE.Light"
    ],
    "modules": [
      "Text.Regex.PCRE.Heavy"
    ],
    "name": "pcre-heavy",
    "version": "1.0.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "System.Info"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "fclabels": [
        "Data.Label"
      ],
      "process": [
        "System.Process"
      ],
      "shake": [
        "Development.Shake",
        "Development.Shake.Classes",
        "Development.Shake.Config",
        "Development.Shake.FilePath"
      ],
      "split": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Char",
      "Data.Default.Class",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.Label",
      "Data.List",
      "Data.Monoid",
      "Development.Shake",
      "Development.Shake.Classes",
      "Development.Shake.Config",
      "Development.Shake.FilePath",
      "Development.Shake.Language.C",
      "Development.Shake.Language.C.BuildFlags",
      "Development.Shake.Language.C.Host",
      "Development.Shake.Language.C.Host.Linux",
      "Development.Shake.Language.C.Host.OSX",
      "Development.Shake.Language.C.Host.Windows",
      "Development.Shake.Language.C.Label",
      "Development.Shake.Language.C.Rules",
      "Development.Shake.Language.C.Target",
      "Development.Shake.Language.C.Target.Linux",
      "Development.Shake.Language.C.Target.OSX",
      "Development.Shake.Language.C.ToolChain",
      "Development.Shake.Language.C.Util",
      "System.Directory",
      "System.Info",
      "System.Process",
      "Test.DocTest",
      "Test.Hspec"
    ],
    "modules": [
      "Development.Shake.Language.C",
      "Development.Shake.Language.C.BuildFlags",
      "Development.Shake.Language.C.Config",
      "Development.Shake.Language.C.Host",
      "Development.Shake.Language.C.Label",
      "Development.Shake.Language.C.PkgConfig",
      "Development.Shake.Language.C.ToolChain",
      "Development.Shake.Language.C.Target.Android",
      "Development.Shake.Language.C.Target.Linux",
      "Development.Shake.Language.C.Target.NaCl",
      "Development.Shake.Language.C.Target.OSX",
      "Development.Shake.Language.C.Target.Windows"
    ],
    "name": "shake-language-c",
    "version": "0.10.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Dynamic",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Typeable",
        "System.IO.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Dynamic",
      "Data.Function",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Typeable",
      "System.IO.Unsafe"
    ],
    "modules": [
      "System.IO.Storage"
    ],
    "name": "io-storage",
    "version": "0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.Char",
        "Data.Maybe",
        "Prelude"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "multimap": [
        "Data.MultiMap"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Pos",
        "Text.Parsec.String"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad.Reader",
      "Data.Char",
      "Data.Generics",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.MultiMap",
      "Language.Haskell.TH",
      "Prelude",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Text.Parsec",
      "Text.Parsec.Pos",
      "Text.Parsec.String",
      "Text.Parse.Units"
    ],
    "modules": [
      "Text.Parse.Units"
    ],
    "name": "units-parser",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "System.Environment",
        "System.Exit"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Data.Bits",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.Generics.Uniplate.Data",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Development.NSIS",
      "Development.NSIS.Library",
      "Development.NSIS.Optimise",
      "Development.NSIS.Plugins.Base64",
      "Development.NSIS.Plugins.EnvVarUpdate",
      "Development.NSIS.Plugins.Sections",
      "Development.NSIS.Plugins.Taskbar",
      "Development.NSIS.Plugins.WinMessages",
      "Development.NSIS.Show",
      "Development.NSIS.Sugar",
      "Development.NSIS.Type",
      "Examples.Base64",
      "Examples.EnvVarUpdate",
      "Examples.Example1",
      "Examples.Example2",
      "Examples.Finish",
      "Examples.Primes",
      "Examples.Radio",
      "Examples.Taskbar",
      "Examples.WinMessages",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.Process"
    ],
    "modules": [
      "Development.NSIS",
      "Development.NSIS.Plugins.Base64",
      "Development.NSIS.Plugins.EnvVarUpdate",
      "Development.NSIS.Plugins.Taskbar",
      "Development.NSIS.Plugins.Sections",
      "Development.NSIS.Plugins.WinMessages"
    ],
    "name": "nsis",
    "version": "0.3"
  },
  {
    "dependencies": {
      "Cabal": [],
      "base": [],
      "bytestring": [],
      "lens": [],
      "lens-aeson": [],
      "wreq": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Distribution.PackageDescription.Remote"
    ],
    "name": "package-description-remote",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "GHC.Exts",
        "GHC.Stack"
      ]
    },
    "imports": [
      "Data.CallStackSpec",
      "Data.SrcLoc",
      "GHC.Exts",
      "GHC.SrcLoc",
      "GHC.Stack",
      "Test.Hspec"
    ],
    "modules": [
      "Data.CallStack"
    ],
    "name": "call-stack",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.HTTP"
      ],
      "HandsomeSoup": [],
      "base": [
        "Control.Monad",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Debug.Trace",
        "System.IO.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "hxt": [
        "Data.Tree.NTree.TypeDefs",
        "Text.XML.HXT.Arrow.ReadDocument",
        "Text.XML.HXT.Core"
      ],
      "hxt-http": [
        "Text.XML.HXT.HTTP"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Maybe",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Tree.NTree.TypeDefs",
      "Debug.Trace",
      "Network.HTTP",
      "Network.URI",
      "Paths",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Text.CSS.Parser",
      "Text.CSS.Utils",
      "Text.HandsomeSoup",
      "Text.Parsec",
      "Text.XML.HXT.Arrow.ReadDocument",
      "Text.XML.HXT.Core",
      "Text.XML.HXT.HTTP"
    ],
    "modules": [
      "Text.HandsomeSoup",
      "Text.CSS.Parser"
    ],
    "name": "HandsomeSoup",
    "version": "0.4.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.IORef",
        "Data.Monoid",
        "Foreign.C.Types"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.IORef",
      "Data.Monoid",
      "Foreign.C.Types",
      "Scripting.Lua"
    ],
    "modules": [
      "Scripting.Lua",
      "Scripting.Lua.Raw"
    ],
    "name": "hslua",
    "version": "0.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "text": [
        "Data.Text"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.ByteString.UTF8",
      "Data.List",
      "Data.Text",
      "Network.URI",
      "Network.URI.Encode",
      "System.Environment"
    ],
    "modules": [
      "Network.URI.Encode"
    ],
    "name": "uri-encode",
    "version": "1.5.0.5"
  },
  {
    "dependencies": {
      "FontyFruity": [],
      "JuicyPixels": [],
      "Rasterific": [
        "Graphics.Rasterific",
        "Graphics.Rasterific.Transformations"
      ],
      "base": [
        "Data.Foldable"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "data-default-class": [],
      "diagrams-core": [],
      "diagrams-lib": [],
      "filepath": [],
      "hashable": [],
      "lens": [],
      "mtl": [],
      "optparse-applicative": [],
      "split": []
    },
    "imports": [
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Graphics.Rasterific",
      "Graphics.Rasterific.Transformations"
    ],
    "modules": [
      "Diagrams.Backend.Rasterific",
      "Diagrams.Backend.Rasterific.CmdLine",
      "Diagrams.Backend.Rasterific.Text"
    ],
    "name": "diagrams-rasterific",
    "version": "1.3.1.8"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Typeable",
        "Data.Word",
        "GHC.ForeignPtr",
        "GHC.Ptr",
        "GHC.Real",
        "GHC.ST",
        "GHC.Stable",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Data.Array",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Generics.SYB.WithClass.Basics",
      "Data.Generics.SYB.WithClass.Context",
      "Data.Generics.SYB.WithClass.Derive",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Set",
      "Data.Typeable",
      "Data.Word",
      "GHC.ForeignPtr",
      "GHC.Ptr",
      "GHC.Real",
      "GHC.ST",
      "GHC.Stable",
      "Language.Haskell.TH",
      "System.IO"
    ],
    "modules": [
      "Data.Generics.SYB.WithClass.Basics",
      "Data.Generics.SYB.WithClass.Context",
      "Data.Generics.SYB.WithClass.Derive",
      "Data.Generics.SYB.WithClass.Instances"
    ],
    "name": "syb-with-class",
    "version": "0.6.1.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad.Fix"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Fix",
      "Control.Monad.Identity",
      "Control.Monad.Morph",
      "Control.Monad.Tardis.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Tardis"
    ],
    "modules": [
      "Control.Monad.Tardis",
      "Control.Monad.Tardis.Class",
      "Control.Monad.Trans.Tardis"
    ],
    "name": "tardis",
    "version": "0.4.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Word"
      ],
      "hxt-charproperties": []
    },
    "imports": [
      "Data.Bits",
      "Data.Char",
      "Data.List",
      "Data.String.UTF8",
      "Data.Word"
    ],
    "modules": [
      "Data.Char.IsoLatinTables",
      "Data.String.EncodingNames",
      "Data.String.UTF8",
      "Data.String.UTF8Decoding",
      "Data.String.Unicode"
    ],
    "name": "hxt-unicode",
    "version": "9.0.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Functor",
        "Data.Int",
        "Data.List.NonEmpty",
        "Data.Traversable",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.Marshal.Error",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Numeric.Natural",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "nats": [],
      "semigroups": [],
      "terminfo": [
        "System.Console.Terminfo.Base",
        "System.Console.Terminfo.Color",
        "System.Console.Terminfo.Cursor",
        "System.Console.Terminfo.Effects"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ],
      "wl-pprint-extras": [
        "Text.PrettyPrint.Free"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.Functor",
      "Data.Int",
      "Data.List.NonEmpty",
      "Data.Sequence",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Traversable",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.Marshal.Error",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Numeric.Natural",
      "System.Console.Terminfo.Base",
      "System.Console.Terminfo.Color",
      "System.Console.Terminfo.Cursor",
      "System.Console.Terminfo.Effects",
      "System.Console.Terminfo.PrettyPrint.Curses",
      "System.IO",
      "Text.PrettyPrint.Free"
    ],
    "modules": [
      "System.Console.Terminfo.PrettyPrint"
    ],
    "name": "wl-pprint-terminfo",
    "version": "3.7.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Functor.Identity",
        "Data.List",
        "Prelude"
      ],
      "data-default": [
        "Data.Default"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State.Class",
      "Control.Monad.TestFixture",
      "Control.Monad.TestFixture.TH",
      "Control.Monad.Trans.Class",
      "Control.Monad.Writer.Class",
      "Data.Default",
      "Data.Functor.Identity",
      "Data.List",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Test.Hspec"
    ],
    "modules": [
      "Control.Monad.TestFixture",
      "Control.Monad.TestFixture.TH"
    ],
    "name": "test-fixture",
    "version": "0.4.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Data.Ratio",
        "GHC.Base",
        "GHC.Exts"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Control.Monad",
      "Data.Char",
      "Data.Maybe",
      "Data.PackedString",
      "Data.Ratio",
      "Foo",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Prim",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lift",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Language.Haskell.TH.Lift"
    ],
    "name": "th-lift",
    "version": "0.7.6"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.ByteString.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.Int",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "GHC.TypeLits",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Lazy"
      ],
      "bytestring-conversion": [
        "Data.ByteString.Conversion"
      ],
      "containers": [],
      "dlist": [
        "Data.DList"
      ],
      "double-conversion": [
        "Data.Double.Conversion.ByteString"
      ],
      "operational": [
        "Control.Monad.Operational"
      ],
      "semigroups": [],
      "split": [
        "Data.List.Split"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Operational",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Conversion",
      "Data.ByteString.Lazy",
      "Data.DList",
      "Data.Double.Conversion.ByteString",
      "Data.Foldable",
      "Data.Int",
      "Data.List.NonEmpty",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Redis.Command",
      "Data.Redis.Resp",
      "Data.String",
      "Data.Typeable",
      "GHC.TypeLits",
      "Prelude"
    ],
    "modules": [
      "Data.Redis",
      "Data.Redis.Resp",
      "Data.Redis.Command"
    ],
    "name": "redis-resp",
    "version": "0.4.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Ix",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Exts",
        "GHC.Generics",
        "Prelude"
      ],
      "binary": [
        "Data.Binary"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "hashable": [],
      "microlens-platform": [
        "Lens.Micro.Platform"
      ],
      "oo-prototypes": [
        "Data.Prototype"
      ],
      "pointedlist": [
        "Data.List.PointedList"
      ],
      "regex-base": [],
      "regex-tdfa": [
        "Text.Regex.TDFA",
        "Text.Regex.TDFA.Pattern",
        "Text.Regex.TDFA.ReadRegex",
        "Text.Regex.TDFA.TDFA"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "transformers-base": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Array",
      "Char",
      "Control.Applicative",
      "Control.Arrow",
      "Data.Array",
      "Data.Array.Base",
      "Data.Binary",
      "Data.Bits",
      "Data.Char",
      "Data.Default",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.Ix",
      "Data.List.PointedList",
      "Data.Map",
      "Data.Monoid",
      "Data.Prototype",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "GHC.Exts",
      "GHC.Generics",
      "GlaExts",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Lens.Micro.Platform",
      "Prelude",
      "System.FilePath",
      "Test.Hspec",
      "Test.QuickCheck",
      "Text.Regex.TDFA",
      "Text.Regex.TDFA.Pattern",
      "Text.Regex.TDFA.ReadRegex",
      "Text.Regex.TDFA.TDFA",
      "Yi.Buffer.Basic",
      "Yi.Lexer.Alex",
      "Yi.Lexer.Haskell",
      "Yi.Lexer.Helpers.TH",
      "Yi.Regex",
      "Yi.Region",
      "Yi.Style",
      "Yi.Syntax",
      "Yi.Utils"
    ],
    "modules": [
      "Yi.Buffer.Basic",
      "Yi.Lexer.Abella",
      "Yi.Lexer.Alex",
      "Yi.Lexer.C",
      "Yi.Lexer.Cabal",
      "Yi.Lexer.Clojure",
      "Yi.Lexer.Compilation",
      "Yi.Lexer.Cplusplus",
      "Yi.Lexer.GNUMake",
      "Yi.Lexer.GitCommit",
      "Yi.Lexer.Haskell",
      "Yi.Lexer.JSON",
      "Yi.Lexer.Java",
      "Yi.Lexer.JavaScript",
      "Yi.Lexer.Latex",
      "Yi.Lexer.LiterateHaskell",
      "Yi.Lexer.OCaml",
      "Yi.Lexer.ObjectiveC",
      "Yi.Lexer.Ott",
      "Yi.Lexer.Perl",
      "Yi.Lexer.Python",
      "Yi.Lexer.R",
      "Yi.Lexer.Ruby",
      "Yi.Lexer.SVNCommit",
      "Yi.Lexer.Srmc",
      "Yi.Lexer.Whitespace",
      "Yi.Regex",
      "Yi.Region",
      "Yi.Style",
      "Yi.Style.Library",
      "Yi.Syntax",
      "Yi.Utils"
    ],
    "name": "yi-language",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [],
      "containers": [],
      "parallel": [],
      "polynomials-bernstein": [],
      "vector": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Graphics.Typography.Geometry",
      "Graphics.Typography.Geometry.Bezier",
      "Graphics.Typography.Geometry.Approximation",
      "Graphics.Typography.Geometry.Outlines"
    ],
    "name": "typography-geometry",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "Foreign.C",
        "Foreign.Ptr",
        "System.Exit",
        "System.Info",
        "System.IO"
      ],
      "mtl": [],
      "process": [
        "System.Process"
      ],
      "strict": [
        "System.IO.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.List",
      "Data.Monoid",
      "Data.Typeable",
      "Foreign.C",
      "Foreign.Ptr",
      "Graphics.Win32.GDI.Clip",
      "System.Exit",
      "System.Info",
      "System.IO",
      "System.IO.Strict",
      "System.Process",
      "System.Win32.Mem"
    ],
    "modules": [
      "System.Hclip"
    ],
    "name": "Hclip",
    "version": "3.0.0.4"
  },
  {
    "dependencies": {
      "base": [],
      "mtl": [
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "random": [
        "System.Random"
      ],
      "transformers": [],
      "transformers-compat": []
    },
    "imports": [
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "System.Random"
    ],
    "modules": [
      "Control.Monad.Random",
      "Control.Monad.Random.Class"
    ],
    "name": "MonadRandom",
    "version": "0.4.2.3"
  },
  {
    "dependencies": {
      "base": [],
      "cairo": [
        "Graphics.Rendering.Cairo"
      ],
      "diagrams-cairo": [],
      "diagrams-lib": [],
      "gtk": []
    },
    "imports": [
      "Graphics.Rendering.Cairo"
    ],
    "modules": [
      "Diagrams.Backend.Gtk"
    ],
    "name": "diagrams-gtk",
    "version": "1.3.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "GHC.Environment",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.Mem"
      ],
      "binary": [
        "Data.Binary"
      ],
      "directory": [
        "System.Directory"
      ],
      "executable-path": [
        "System.Environment.Executable"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc-paths": [
        "GHC.Paths"
      ],
      "io-storage": [
        "System.IO.Storage"
      ],
      "process": [
        "System.Process"
      ],
      "time": [
        "Data.Time"
      ],
      "xdg-basedir": [
        "System.Environment.XDG.BaseDir"
      ]
    },
    "imports": [
      "BasicTest",
      "ConfigCheckTest",
      "Config.Dyre",
      "Config.Dyre.Compat",
      "Config.Dyre.Compile",
      "Config.Dyre.Options",
      "Config.Dyre.Params",
      "Config.Dyre.Paths",
      "Config.Dyre.Relaunch",
      "Control.Exception",
      "Control.Monad",
      "Data.Binary",
      "Data.List",
      "Data.Maybe",
      "Data.Time",
      "GHC.Environment",
      "GHC.Paths",
      "RecompileRelaunchTest",
      "System.Directory",
      "System.Environment",
      "System.Environment.Executable",
      "System.Environment.XDG.BaseDir",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.IO.Storage",
      "System.Mem",
      "System.Posix.Process",
      "System.Posix.Signals",
      "System.Process",
      "System.Win32"
    ],
    "modules": [
      "Config.Dyre",
      "Config.Dyre.Paths",
      "Config.Dyre.Compat",
      "Config.Dyre.Params",
      "Config.Dyre.Options",
      "Config.Dyre.Compile",
      "Config.Dyre.Relaunch"
    ],
    "name": "dyre",
    "version": "0.8.12"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Foreign.C.String",
        "Foreign.Marshal.Alloc",
        "Foreign.Storable",
        "Prelude",
        "System.Exit",
        "System.Mem"
      ],
      "bindings-DSL": [],
      "zlib": []
    },
    "imports": [
      "Bindings.Libgit2",
      "Bindings.Libgit2.Attr",
      "Bindings.Libgit2.Blob",
      "Bindings.Libgit2.Branch",
      "Bindings.Libgit2.Checkout",
      "Bindings.Libgit2.Clone",
      "Bindings.Libgit2.Commit",
      "Bindings.Libgit2.Common",
      "Bindings.Libgit2.Config",
      "Bindings.Libgit2.CredHelpers",
      "Bindings.Libgit2.Diff",
      "Bindings.Libgit2.Errors",
      "Bindings.Libgit2.Graph",
      "Bindings.Libgit2.Ignore",
      "Bindings.Libgit2.Index",
      "Bindings.Libgit2.Indexer",
      "Bindings.Libgit2.Merge",
      "Bindings.Libgit2.Message",
      "Bindings.Libgit2.Net",
      "Bindings.Libgit2.Notes",
      "Bindings.Libgit2.Object",
      "Bindings.Libgit2.Odb",
      "Bindings.Libgit2.OdbBackend",
      "Bindings.Libgit2.Oid",
      "Bindings.Libgit2.Pack",
      "Bindings.Libgit2.Push",
      "Bindings.Libgit2.Refdb",
      "Bindings.Libgit2.RefdbBackend",
      "Bindings.Libgit2.Reflog",
      "Bindings.Libgit2.Refs",
      "Bindings.Libgit2.Refspec",
      "Bindings.Libgit2.Remote",
      "Bindings.Libgit2.Repository",
      "Bindings.Libgit2.Reset",
      "Bindings.Libgit2.Revparse",
      "Bindings.Libgit2.Revwalk",
      "Bindings.Libgit2.Signature",
      "Bindings.Libgit2.Stash",
      "Bindings.Libgit2.Status",
      "Bindings.Libgit2.Strarray",
      "Bindings.Libgit2.Submodule",
      "Bindings.Libgit2.Tag",
      "Bindings.Libgit2.Threads",
      "Bindings.Libgit2.Trace",
      "Bindings.Libgit2.Transport",
      "Bindings.Libgit2.Tree",
      "Bindings.Libgit2.Types",
      "Bindings.Libgit2.Windows",
      "Control.Exception",
      "Control.Monad",
      "Foreign.C.String",
      "Foreign.Marshal.Alloc",
      "Foreign.Storable",
      "Prelude",
      "System.Exit",
      "System.Mem",
      "System.Process"
    ],
    "modules": [
      "Bindings.Libgit2",
      "Bindings.Libgit2.Attr",
      "Bindings.Libgit2.Blob",
      "Bindings.Libgit2.Branch",
      "Bindings.Libgit2.Checkout",
      "Bindings.Libgit2.Clone",
      "Bindings.Libgit2.Commit",
      "Bindings.Libgit2.Common",
      "Bindings.Libgit2.Config",
      "Bindings.Libgit2.CredHelpers",
      "Bindings.Libgit2.Diff",
      "Bindings.Libgit2.Errors",
      "Bindings.Libgit2.Graph",
      "Bindings.Libgit2.Ignore",
      "Bindings.Libgit2.Index",
      "Bindings.Libgit2.Indexer",
      "Bindings.Libgit2.Merge",
      "Bindings.Libgit2.Message",
      "Bindings.Libgit2.Net",
      "Bindings.Libgit2.Notes",
      "Bindings.Libgit2.Object",
      "Bindings.Libgit2.Odb",
      "Bindings.Libgit2.OdbBackend",
      "Bindings.Libgit2.Oid",
      "Bindings.Libgit2.Pack",
      "Bindings.Libgit2.Push",
      "Bindings.Libgit2.Refdb",
      "Bindings.Libgit2.RefdbBackend",
      "Bindings.Libgit2.Reflog",
      "Bindings.Libgit2.Refs",
      "Bindings.Libgit2.Refspec",
      "Bindings.Libgit2.Remote",
      "Bindings.Libgit2.Repository",
      "Bindings.Libgit2.Reset",
      "Bindings.Libgit2.Revparse",
      "Bindings.Libgit2.Revwalk",
      "Bindings.Libgit2.Signature",
      "Bindings.Libgit2.Stash",
      "Bindings.Libgit2.Status",
      "Bindings.Libgit2.Strarray",
      "Bindings.Libgit2.Submodule",
      "Bindings.Libgit2.Tag",
      "Bindings.Libgit2.Threads",
      "Bindings.Libgit2.Trace",
      "Bindings.Libgit2.Transport",
      "Bindings.Libgit2.Tree",
      "Bindings.Libgit2.Types",
      "Bindings.Libgit2.Version",
      "Bindings.Libgit2.Windows"
    ],
    "name": "hlibgit2",
    "version": "0.18.0.15"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.DynamoDBStreams",
      "Test.AWS.DynamoDBStreams",
      "Test.AWS.DynamoDBStreams.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.DynamoDBStreams",
      "Network.AWS.DynamoDBStreams.DescribeStream",
      "Network.AWS.DynamoDBStreams.GetRecords",
      "Network.AWS.DynamoDBStreams.GetShardIterator",
      "Network.AWS.DynamoDBStreams.ListStreams",
      "Network.AWS.DynamoDBStreams.Types",
      "Network.AWS.DynamoDBStreams.Waiters"
    ],
    "name": "amazonka-dynamodb-streams",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Parser",
        "Language.Haskell.Exts.Pretty"
      ]
    },
    "imports": [
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.Pretty"
    ],
    "modules": [
      "Text.Groom"
    ],
    "name": "groom",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.CloudResourceManager.Projects.Delete",
      "Network.Google.Resource.CloudResourceManager.Projects.Get",
      "Network.Google.Resource.CloudResourceManager.Projects.GetIAMPolicy",
      "Network.Google.Resource.CloudResourceManager.Projects.List",
      "Network.Google.Resource.CloudResourceManager.Projects.SetIAMPolicy",
      "Network.Google.Resource.CloudResourceManager.Projects.TestIAMPermissions",
      "Network.Google.Resource.CloudResourceManager.Projects.Undelete",
      "Network.Google.Resource.CloudResourceManager.Projects.Update",
      "Network.Google.ResourceManager",
      "Network.Google.ResourceManager.Types"
    ],
    "name": "gogol-resourcemanager",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Char",
        "Data.Complex",
        "Data.List",
        "System.IO"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Monad",
      "Data.Char",
      "Data.Complex",
      "Data.List",
      "System.Console.ANSI",
      "System.Console.Ansigraph",
      "System.Console.Ansigraph.Core",
      "System.Console.Ansigraph.Examples",
      "System.Console.Ansigraph.Internal.Core",
      "System.Console.Ansigraph.Internal.FlexInstances",
      "System.Console.Ansigraph.Internal.Horizontal",
      "System.Console.Ansigraph.Internal.Matrix",
      "System.IO",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "System.Console.Ansigraph",
      "System.Console.Ansigraph.Core",
      "System.Console.Ansigraph.Examples"
    ],
    "name": "ansigraph",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "cassava": [],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "servant": [],
      "vector": []
    },
    "imports": [
      "Network.HTTP.Media"
    ],
    "modules": [
      "Servant.CSV.Cassava"
    ],
    "name": "servant-cassava",
    "version": "0.8"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ],
      "blaze-html": [
        "Text.Blaze.Html5"
      ],
      "data-default": [
        "Data.Default"
      ],
      "lucid": [
        "Lucid"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.Default",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Lucid",
      "Text.Blaze.Html5",
      "Web.Page.Types"
    ],
    "modules": [
      "Web.Page.Types",
      "Web.Page.Lucid",
      "Web.Page.Blaze",
      "Web.Page.Hastache"
    ],
    "name": "webpage",
    "version": "0.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Prelude"
      ],
      "bioalign": [
        "Bio.Alignment.AlignData"
      ],
      "biocore": [
        "Bio.Core.Sequence",
        "Bio.Core.Strand"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Pos"
      ]
    },
    "imports": [
      "Bio.Alignment.AlignData",
      "Bio.Core.Sequence",
      "Bio.Core.Strand",
      "Control.Monad",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Prelude",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Pos"
    ],
    "modules": [
      "Bio.Alignment.Ace"
    ],
    "name": "bioace",
    "version": "0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Monad"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "network-transport": [
        "Network.Transport",
        "Network.Transport.Internal"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Monad",
      "Data.ByteString",
      "Network.Transport",
      "Network.Transport.Internal"
    ],
    "modules": [
      "Network.Transport.Composed"
    ],
    "name": "network-transport-composed",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.DynamoDB",
      "Test.AWS.DynamoDB",
      "Test.AWS.DynamoDB.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.DynamoDB",
      "Network.AWS.DynamoDB.BatchGetItem",
      "Network.AWS.DynamoDB.BatchWriteItem",
      "Network.AWS.DynamoDB.CreateTable",
      "Network.AWS.DynamoDB.DeleteItem",
      "Network.AWS.DynamoDB.DeleteTable",
      "Network.AWS.DynamoDB.DescribeLimits",
      "Network.AWS.DynamoDB.DescribeTable",
      "Network.AWS.DynamoDB.GetItem",
      "Network.AWS.DynamoDB.ListTables",
      "Network.AWS.DynamoDB.PutItem",
      "Network.AWS.DynamoDB.Query",
      "Network.AWS.DynamoDB.Scan",
      "Network.AWS.DynamoDB.Types",
      "Network.AWS.DynamoDB.UpdateItem",
      "Network.AWS.DynamoDB.UpdateTable",
      "Network.AWS.DynamoDB.Waiters"
    ],
    "name": "amazonka-dynamodb",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.ST",
        "Data.Array.Unsafe"
      ],
      "base": [
        "Control.Monad",
        "Control.Monad.ST",
        "Data.List"
      ],
      "containers": [
        "Data.IntMap"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Array",
      "Data.Array.ST",
      "Data.Array.Unsafe",
      "Data.Graph",
      "Data.Graph.ArraySCC",
      "Data.Graph.MapSCC",
      "Data.IntMap",
      "Data.List"
    ],
    "modules": [
      "Data.Graph.SCC"
    ],
    "name": "GraphSCC",
    "version": "1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Identity"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.PhantomState",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Criterion.Main",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable"
    ],
    "modules": [
      "Control.Applicative.PhantomState"
    ],
    "name": "phantom-state",
    "version": "0.2.1.2"
  },
  {
    "dependencies": {
      "HTTP": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "hxt": [],
      "parsec": []
    },
    "imports": [
      "Data.ByteString.Lazy",
      "Text.XML.HXT.Arrow.LibHTTPInput"
    ],
    "modules": [
      "Text.XML.HXT.HTTP"
    ],
    "name": "hxt-http",
    "version": "9.1.5.2"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ImportExport",
      "Test.AWS.Fixture",
      "Test.AWS.ImportExport",
      "Test.AWS.ImportExport.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ImportExport",
      "Network.AWS.ImportExport.CancelJob",
      "Network.AWS.ImportExport.CreateJob",
      "Network.AWS.ImportExport.GetShippingLabel",
      "Network.AWS.ImportExport.GetStatus",
      "Network.AWS.ImportExport.ListJobs",
      "Network.AWS.ImportExport.Types",
      "Network.AWS.ImportExport.UpdateJob",
      "Network.AWS.ImportExport.Waiters"
    ],
    "name": "amazonka-importexport",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Maybe",
        "Prelude",
        "System.Environment",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "servant": [
        "Servant.API"
      ],
      "yaml": [
        "Data.Yaml"
      ]
    },
    "imports": [
      "Data.Aeson.TH",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Maybe",
      "Data.Yaml",
      "Network.HTTP.Media",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Prelude",
      "Prelude.Compat",
      "Servant",
      "Servant.API",
      "Servant.Yaml",
      "System.Environment",
      "Text.Read"
    ],
    "modules": [
      "Servant.Yaml"
    ],
    "name": "servant-yaml",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Maybe"
      ],
      "containers": [
        "Data.Set"
      ],
      "djinn-lib": [
        "Djinn.HTypes",
        "Djinn.LJT"
      ],
      "ghc": [],
      "mtl": [],
      "transformers": []
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Monad",
      "DataCon",
      "Data.Maybe",
      "Data.Set",
      "Djinn.HTypes",
      "Djinn.LJT",
      "GHC",
      "MonadUtils",
      "Name",
      "TyCon",
      "Type"
    ],
    "modules": [
      "Djinn.GHC"
    ],
    "name": "djinn-ghc",
    "version": "0.0.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Unsafe.Coerce"
      ],
      "free": [
        "Control.Monad.Free"
      ],
      "kan-extensions": [
        "Control.Monad.Codensity"
      ],
      "mtl": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Effects.Eff",
      "Control.Effects.Exception",
      "Control.Effects.Reader",
      "Control.Effects.Search",
      "Control.Monad",
      "Control.Monad.Codensity",
      "Control.Monad.Free",
      "Criterion.Main",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Typeable",
      "Data.Union",
      "Examples.Combined",
      "Examples.Reader",
      "Spec",
      "Test.Hspec.Formatters",
      "Test.Hspec.Runner",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Union",
      "Control.Effects.Eff",
      "Control.Effects.Reader",
      "Control.Effects.Writer",
      "Control.Effects.State",
      "Control.Effects.Exception",
      "Control.Effects.IO",
      "Control.Effects.Search"
    ],
    "name": "effect-handlers",
    "version": "0.1.0.8"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Monad",
      "Data.Char",
      "Data.IORef",
      "Data.Maybe",
      "System.Cmd",
      "System.Console.Readline",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [
      "System.Console.Readline",
      "System.Console.SimpleLineEditor"
    ],
    "name": "readline",
    "version": "1.0.3.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck.Property"
      ],
      "base": [],
      "ieee754": [
        "Data.AEq",
        "Numeric.IEEE"
      ]
    },
    "imports": [
      "Data.AEq",
      "Numeric.IEEE",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.Assertions",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "Test.QuickCheck.Assertions"
    ],
    "name": "quickcheck-assertions",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Function",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Foreign.C.Types",
        "GHC.IO",
        "Prelude"
      ],
      "lifted-base": [
        "Control.Concurrent.Lifted",
        "Control.Exception.Lifted"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Async.Lifted",
      "Control.Concurrent.Async.Lifted.Safe",
      "Control.Concurrent.Lifted",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans.Control",
      "Criterion.Main",
      "Data.Constraint",
      "Data.Constraint.Forall",
      "Data.Function",
      "Data.IORef",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Traversable",
      "Data.Typeable",
      "Foreign.C.Types",
      "GHC.IO",
      "Prelude",
      "Test.Async.Common",
      "Test.Async.IO",
      "Test.Async.Reader",
      "Test.Async.State",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.TH"
    ],
    "modules": [
      "Control.Concurrent.Async.Lifted",
      "Control.Concurrent.Async.Lifted.Safe"
    ],
    "name": "lifted-async",
    "version": "0.9.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Functor.Identity"
      ],
      "base-compat": [
        "Control.Monad.Compat",
        "Prelude.Compat"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Compat",
      "Control.Monad.Error.Class",
      "Control.Monad.Prompt.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Prelude.Compat"
    ],
    "modules": [
      "Control.Monad.Prompt",
      "Control.Monad.Prompt.Class"
    ],
    "name": "prompt",
    "version": "0.1.1.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Semigroup",
        "Data.Word",
        "GHC.Exts",
        "Prelude",
        "Text.Read"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "lens": [
        "Control.Lens"
      ],
      "semigroupoids": [],
      "semigroups": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Trans.State.Strict",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashMap.Strict.InsOrd",
      "Data.List",
      "Data.Semigroup",
      "Data.Text",
      "Data.Word",
      "GHC.Exts",
      "Prelude",
      "Prelude.Compat",
      "Test.QuickCheck.Function",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Text.Read"
    ],
    "modules": [
      "Data.HashMap.Strict.InsOrd"
    ],
    "name": "insert-ordered-containers",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Network.Info"
    ],
    "modules": [
      "Network.Info"
    ],
    "name": "network-info",
    "version": "0.2.0.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Functor.Sum",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Unsafe.Coerce"
      ],
      "containers": [],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "free": [
        "Control.Monad.Free"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "monad-skeleton": [
        "Control.Monad.Skeleton"
      ],
      "mtl": [],
      "profunctors": [
        "Data.Profunctor"
      ],
      "template-haskell": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "void": [],
      "witherable": [
        "Data.Witherable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Free",
      "Control.Monad.IO.Class",
      "Control.Monad.Skeleton",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Either",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Object.Instance",
      "Control.Object.Mortal",
      "Control.Object.Object",
      "Data.Functor.Sum",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Witherable",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Object",
      "Control.Object.Object",
      "Control.Object.Instance",
      "Control.Object.Mortal",
      "Data.Functor.Request"
    ],
    "name": "objective",
    "version": "1.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "split": [
        "Data.List.Split"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text"
      ],
      "web-routes": [
        "Web.Routes",
        "Web.Routes.PathInfo"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.List.Split",
      "Data.Text",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.ParserCombinators.Parsec",
      "Web.Routes",
      "Web.Routes.PathInfo",
      "Web.Routes.TH"
    ],
    "modules": [
      "Web.Routes.TH"
    ],
    "name": "web-routes-th",
    "version": "0.22.5"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.URLShortener.URL.Get",
      "Network.Google.Resource.URLShortener.URL.Insert",
      "Network.Google.Resource.URLShortener.URL.List",
      "Network.Google.URLShortener",
      "Network.Google.URLShortener.Types"
    ],
    "name": "gogol-urlshortener",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Data.IORef",
        "Foreign",
        "System.IO.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable",
        "Data.Vector.Primitive",
        "Data.Vector.Primitive.Mutable",
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Monad.ST",
      "Data.IORef",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Vector.Primitive",
      "Data.Vector.Primitive.Mutable",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Foreign",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.Vector.Buffer",
      "Data.Vector.Storable.Buffer",
      "Data.Vector.Primitive.Buffer",
      "Data.Vector.Unboxed.Buffer"
    ],
    "name": "vector-buffer",
    "version": "0.4.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Data.Base58String",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.Encoding",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Data.Base58String",
      "Data.Base58String.Bitcoin"
    ],
    "name": "base58string",
    "version": "0.10.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Data.Either",
        "Data.Function",
        "Data.Functor.Compose",
        "Data.Functor.Product",
        "Data.Functor.Sum",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.Typeable",
        "Data.Void",
        "GHC.Generics",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict",
        "Data.Functor.Constant",
        "Data.Functor.Reverse"
      ],
      "transformers-compat": [],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Arrow",
      "Control.Category",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Either",
      "Data.Function",
      "Data.Functor.Compose",
      "Data.Functor.Constant",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Divisible",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Functor.Sum",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.StateVar",
      "Data.Typeable",
      "Data.Void",
      "GHC.Generics",
      "Prelude",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Compose",
      "Data.Functor.Contravariant.Divisible"
    ],
    "name": "contravariant",
    "version": "1.4"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudFormation",
      "Test.AWS.CloudFormation",
      "Test.AWS.CloudFormation.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudFormation",
      "Network.AWS.CloudFormation.CancelUpdateStack",
      "Network.AWS.CloudFormation.ContinueUpdateRollback",
      "Network.AWS.CloudFormation.CreateChangeSet",
      "Network.AWS.CloudFormation.CreateStack",
      "Network.AWS.CloudFormation.DeleteChangeSet",
      "Network.AWS.CloudFormation.DeleteStack",
      "Network.AWS.CloudFormation.DescribeAccountLimits",
      "Network.AWS.CloudFormation.DescribeChangeSet",
      "Network.AWS.CloudFormation.DescribeStackEvents",
      "Network.AWS.CloudFormation.DescribeStackResource",
      "Network.AWS.CloudFormation.DescribeStackResources",
      "Network.AWS.CloudFormation.DescribeStacks",
      "Network.AWS.CloudFormation.EstimateTemplateCost",
      "Network.AWS.CloudFormation.ExecuteChangeSet",
      "Network.AWS.CloudFormation.GetStackPolicy",
      "Network.AWS.CloudFormation.GetTemplate",
      "Network.AWS.CloudFormation.GetTemplateSummary",
      "Network.AWS.CloudFormation.ListChangeSets",
      "Network.AWS.CloudFormation.ListStackResources",
      "Network.AWS.CloudFormation.ListStacks",
      "Network.AWS.CloudFormation.SetStackPolicy",
      "Network.AWS.CloudFormation.SignalResource",
      "Network.AWS.CloudFormation.Types",
      "Network.AWS.CloudFormation.UpdateStack",
      "Network.AWS.CloudFormation.ValidateTemplate",
      "Network.AWS.CloudFormation.Waiters"
    ],
    "name": "amazonka-cloudformation",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Functor.Identity",
        "Prelude"
      ],
      "free": [
        "Control.Monad.Trans.Free"
      ],
      "pipes": [
        "Pipes"
      ],
      "pipes-parse": [
        "Pipes.Parse"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Data.Functor.Constant"
      ]
    },
    "imports": [
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Free",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Pipes",
      "Pipes.Group",
      "Pipes.Parse",
      "Prelude",
      "Test.DocTest"
    ],
    "modules": [
      "Pipes.Group",
      "Pipes.Group.Tutorial"
    ],
    "name": "pipes-group",
    "version": "1.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "clash-lib": [],
      "clash-prelude": [],
      "fgl": [],
      "lens": [],
      "mtl": [],
      "text": [
        "Data.Text.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "wl-pprint-text": []
    },
    "imports": [
      "Control.Applicative",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.Text.Lazy",
      "Paths",
      "System.FilePath"
    ],
    "modules": [
      "CLaSH.Backend.SystemVerilog"
    ],
    "name": "clash-systemverilog",
    "version": "0.6.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Typeable"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Typeable",
      "Language.Haskell.TH"
    ],
    "modules": [
      "Development.Placeholders"
    ],
    "name": "placeholders",
    "version": "0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Ratio",
        "Data.Word"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List",
      "Data.Ratio",
      "Data.Text.Lazy",
      "Data.Word",
      "Text.ParserCombinators.Poly",
      "Text.ParserCombinators.Poly.Base",
      "Text.ParserCombinators.Poly.ByteStringChar",
      "Text.ParserCombinators.Poly.Parser",
      "Text.ParserCombinators.Poly.Plain",
      "Text.ParserCombinators.Poly.Result",
      "Text.ParserCombinators.Poly.StateParser"
    ],
    "modules": [
      "Text.ParserCombinators.HuttonMeijer",
      "Text.ParserCombinators.HuttonMeijerWallace",
      "Text.ParserCombinators.Poly",
      "Text.ParserCombinators.Poly.Base",
      "Text.ParserCombinators.Poly.Result",
      "Text.ParserCombinators.Poly.Parser",
      "Text.ParserCombinators.Poly.Plain",
      "Text.ParserCombinators.Poly.Lazy",
      "Text.ParserCombinators.Poly.StateParser",
      "Text.ParserCombinators.Poly.State",
      "Text.ParserCombinators.Poly.StateLazy",
      "Text.ParserCombinators.Poly.Lex",
      "Text.Parse"
    ],
    "name": "polyparse",
    "version": "1.12"
  },
  {
    "dependencies": {
      "HsOpenSSL": [
        "OpenSSL.Session"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Maybe",
        "GHC.IO.Exception",
        "Prelude",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "happstack-server": [
        "Happstack.Server",
        "Happstack.Server.Internal.Handler",
        "Happstack.Server.Internal.Listen",
        "Happstack.Server.Internal.Socket",
        "Happstack.Server.Internal.TimeoutManager",
        "Happstack.Server.Internal.Types",
        "Happstack.Server.Types"
      ],
      "hslogger": [
        "System.Log.Logger"
      ],
      "network": [
        "Network.Socket"
      ],
      "sendfile": [],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.Maybe",
      "Data.Time",
      "GHC.IO.Exception",
      "Happstack.Server",
      "Happstack.Server.Internal.Handler",
      "Happstack.Server.Internal.Listen",
      "Happstack.Server.Internal.Socket",
      "Happstack.Server.Internal.TimeoutManager",
      "Happstack.Server.Internal.TimeoutSocketTLS",
      "Happstack.Server.Internal.TLS",
      "Happstack.Server.Internal.Types",
      "Happstack.Server.Types",
      "Network.Socket",
      "OpenSSL.Session",
      "Prelude",
      "System.IO.Error",
      "System.Log.Logger",
      "System.Posix.Signals"
    ],
    "modules": [
      "Happstack.Server.Internal.TimeoutSocketTLS",
      "Happstack.Server.Internal.TLS",
      "Happstack.Server.SimpleHTTPS"
    ],
    "name": "happstack-server-tls",
    "version": "7.1.6.2"
  },
  {
    "dependencies": {
      "base": [],
      "profunctors": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "profunctor-extras",
    "version": "4.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.Binary",
      "Data.Bits",
      "Data.Data",
      "Data.Hashable",
      "Data.Ix",
      "Data.List",
      "Language.Haskell.TH.Syntax",
      "Text.Printf"
    ],
    "modules": [],
    "name": "nats",
    "version": "1.1.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base",
        "Data.Array.IArray",
        "Data.Array.MArray",
        "Data.Array.ST",
        "Data.Array.Unsafe"
      ],
      "base": [
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Control.Monad.ST.Strict",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.STRef",
        "Data.Version",
        "GHC.Arr",
        "GHC.Base",
        "GHC.ST",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "ghc-prim": [],
      "mtl": [
        "Control.Monad.RWS",
        "Control.Monad.State"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "regex-base": [
        "Text.Regex.Base",
        "Text.Regex.Base.Impl",
        "Text.Regex.Base.RegexLike"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.RWS",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.ST.Lazy",
      "Control.Monad.ST.Strict",
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Array.MArray",
      "Data.Array.ST",
      "Data.Array.Unsafe",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Foldable",
      "Data.IntMap",
      "Data.IntMap.CharMap2",
      "Data.IntMap.EnumMap2",
      "Data.IntSet",
      "Data.IntSet.EnumSet2",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.STRef",
      "Data.Version",
      "GHC.Arr",
      "GHC.Base",
      "GHC.Prim",
      "GHC.ST",
      "Paths",
      "Prelude",
      "Text.ParserCombinators.Parsec",
      "Text.Regex.Base",
      "Text.Regex.Base.Impl",
      "Text.Regex.Base.RegexLike",
      "Text.Regex.TDFA.ByteString",
      "Text.Regex.TDFA.ByteString.Lazy",
      "Text.Regex.TDFA.Common",
      "Text.Regex.TDFA.CorePattern",
      "Text.Regex.TDFA.IntArrTrieSet",
      "Text.Regex.TDFA.NewDFA.Engine",
      "Text.Regex.TDFA.NewDFA.MakeTest",
      "Text.Regex.TDFA.NewDFA.Tester",
      "Text.Regex.TDFA.NewDFA.Uncons",
      "Text.Regex.TDFA.Pattern",
      "Text.Regex.TDFA.ReadRegex",
      "Text.Regex.TDFA.Sequence",
      "Text.Regex.TDFA.String",
      "Text.Regex.TDFA.TDFA",
      "Text.Regex.TDFA.TNFA"
    ],
    "modules": [
      "Data.IntMap.CharMap2",
      "Data.IntMap.EnumMap2",
      "Data.IntSet.EnumSet2",
      "Text.Regex.TDFA",
      "Text.Regex.TDFA.ByteString",
      "Text.Regex.TDFA.ByteString.Lazy",
      "Text.Regex.TDFA.Common",
      "Text.Regex.TDFA.CorePattern",
      "Text.Regex.TDFA.IntArrTrieSet",
      "Text.Regex.TDFA.NewDFA.Engine",
      "Text.Regex.TDFA.NewDFA.Engine_FA",
      "Text.Regex.TDFA.NewDFA.Engine_NC",
      "Text.Regex.TDFA.NewDFA.Engine_NC_FA",
      "Text.Regex.TDFA.NewDFA.Tester",
      "Text.Regex.TDFA.NewDFA.Uncons",
      "Text.Regex.TDFA.NewDFA.MakeTest",
      "Text.Regex.TDFA.Pattern",
      "Text.Regex.TDFA.ReadRegex",
      "Text.Regex.TDFA.Sequence",
      "Text.Regex.TDFA.String",
      "Text.Regex.TDFA.TDFA",
      "Text.Regex.TDFA.TNFA"
    ],
    "name": "regex-tdfa",
    "version": "1.2.2"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Fixed",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Tuple",
        "Numeric",
        "Prelude"
      ],
      "colour": [
        "Data.Colour",
        "Data.Colour.Names",
        "Data.Colour.SRGB"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "operational": [
        "Control.Monad.Operational"
      ],
      "time": [
        "Data.Time"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Operational",
      "Control.Monad.Reader",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Data.Array",
      "Data.Colour",
      "Data.Colour.Names",
      "Data.Colour.SRGB",
      "Data.Default.Class",
      "Data.Fixed",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Time",
      "Data.Tuple",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Graphics.Rendering.Chart",
      "Graphics.Rendering.Chart.Axis",
      "Graphics.Rendering.Chart.Axis.Floating",
      "Graphics.Rendering.Chart.Axis.Indexed",
      "Graphics.Rendering.Chart.Axis.Int",
      "Graphics.Rendering.Chart.Axis.LocalTime",
      "Graphics.Rendering.Chart.Axis.Types",
      "Graphics.Rendering.Chart.Axis.Unit",
      "Graphics.Rendering.Chart.Backend",
      "Graphics.Rendering.Chart.Backend.Impl",
      "Graphics.Rendering.Chart.Backend.Types",
      "Graphics.Rendering.Chart.Drawing",
      "Graphics.Rendering.Chart.Geometry",
      "Graphics.Rendering.Chart.Grid",
      "Graphics.Rendering.Chart.Layout",
      "Graphics.Rendering.Chart.Legend",
      "Graphics.Rendering.Chart.Plot",
      "Graphics.Rendering.Chart.Plot.Annotation",
      "Graphics.Rendering.Chart.Plot.AreaSpots",
      "Graphics.Rendering.Chart.Plot.Bars",
      "Graphics.Rendering.Chart.Plot.Candle",
      "Graphics.Rendering.Chart.Plot.ErrBars",
      "Graphics.Rendering.Chart.Plot.FillBetween",
      "Graphics.Rendering.Chart.Plot.Hidden",
      "Graphics.Rendering.Chart.Plot.Histogram",
      "Graphics.Rendering.Chart.Plot.Lines",
      "Graphics.Rendering.Chart.Plot.Pie",
      "Graphics.Rendering.Chart.Plot.Points",
      "Graphics.Rendering.Chart.Plot.Types",
      "Graphics.Rendering.Chart.Plot.Vectors",
      "Graphics.Rendering.Chart.Renderable",
      "Graphics.Rendering.Chart.State",
      "Graphics.Rendering.Chart.Utils",
      "Numeric",
      "Numeric.Histogram",
      "Prelude",
      "System.Locale"
    ],
    "modules": [
      "Graphics.Rendering.Chart",
      "Graphics.Rendering.Chart.Drawing",
      "Graphics.Rendering.Chart.Geometry",
      "Graphics.Rendering.Chart.Utils",
      "Graphics.Rendering.Chart.Renderable",
      "Graphics.Rendering.Chart.Axis",
      "Graphics.Rendering.Chart.Axis.Floating",
      "Graphics.Rendering.Chart.Axis.Indexed",
      "Graphics.Rendering.Chart.Axis.Int",
      "Graphics.Rendering.Chart.Axis.LocalTime",
      "Graphics.Rendering.Chart.Axis.Types",
      "Graphics.Rendering.Chart.Axis.Unit",
      "Graphics.Rendering.Chart.Layout",
      "Graphics.Rendering.Chart.Legend",
      "Graphics.Rendering.Chart.Grid",
      "Graphics.Rendering.Chart.Plot",
      "Graphics.Rendering.Chart.Plot.Types",
      "Graphics.Rendering.Chart.Plot.Annotation",
      "Graphics.Rendering.Chart.Plot.AreaSpots",
      "Graphics.Rendering.Chart.Plot.Bars",
      "Graphics.Rendering.Chart.Plot.Candle",
      "Graphics.Rendering.Chart.Plot.ErrBars",
      "Graphics.Rendering.Chart.Plot.FillBetween",
      "Graphics.Rendering.Chart.Plot.Hidden",
      "Graphics.Rendering.Chart.Plot.Lines",
      "Graphics.Rendering.Chart.Plot.Vectors",
      "Graphics.Rendering.Chart.Plot.Pie",
      "Graphics.Rendering.Chart.Plot.Points",
      "Graphics.Rendering.Chart.Plot.Histogram",
      "Graphics.Rendering.Chart.SparkLine",
      "Graphics.Rendering.Chart.Backend",
      "Graphics.Rendering.Chart.Backend.Impl",
      "Graphics.Rendering.Chart.Backend.Types",
      "Graphics.Rendering.Chart.Easy",
      "Graphics.Rendering.Chart.State",
      "Numeric.Histogram"
    ],
    "name": "Chart",
    "version": "1.8"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Bifunctor",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "GHC.Generics",
        "Prelude"
      ],
      "bifunctors": [],
      "binary": [
        "Data.Binary"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntMap.Strict",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "keys": [
        "Data.Key"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Class",
        "Control.Monad.Trans"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "semigroupoids": [
        "Data.Functor.Apply",
        "Data.Functor.Bind",
        "Data.Semigroup.Bifoldable",
        "Data.Semigroup.Bitraversable"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Fusion.Bundle.Monadic",
        "Data.Vector.Fusion.Bundle.Size",
        "Data.Vector.Fusion.Stream.Monadic",
        "Data.Vector.Generic"
      ],
      "vector-instances": [
        "Data.Vector.Instances"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Chronicle.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Chronicle",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Aeson",
      "Data.Aeson.Encoding",
      "Data.Align",
      "Data.Align.Key",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Binary",
      "Data.Bitraversable",
      "Data.Data",
      "Data.Default.Class",
      "Data.Foldable",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IntMap",
      "Data.IntMap.Strict",
      "Data.Key",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Semigroup",
      "Data.Semigroup.Bifoldable",
      "Data.Semigroup.Bitraversable",
      "Data.Sequence",
      "Data.Set",
      "Data.These",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Fusion.Bundle.Monadic",
      "Data.Vector.Fusion.Bundle.Size",
      "Data.Vector.Fusion.Stream.Monadic",
      "Data.Vector.Fusion.Stream.Size",
      "Data.Vector.Generic",
      "Data.Vector.Instances",
      "GHC.Generics",
      "Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Function",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.These",
      "Data.Align",
      "Data.Align.Key",
      "Control.Monad.Chronicle",
      "Control.Monad.Chronicle.Class",
      "Control.Monad.Trans.Chronicle"
    ],
    "name": "these",
    "version": "0.7.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.IORef",
        "Data.Maybe",
        "Foreign",
        "Foreign.C",
        "Prelude",
        "System.Environment"
      ],
      "bindings-DSL": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "data-default": [
        "Data.Default"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.BZlib",
      "Data.Conduit.BZlib.Internal",
      "Data.Conduit.List",
      "Data.Default",
      "Data.IORef",
      "Data.Maybe",
      "Foreign",
      "Foreign.C",
      "Prelude",
      "System.Environment",
      "System.Random",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "Data.Conduit.BZlib"
    ],
    "name": "bzlib-conduit",
    "version": "0.2.1.4"
  },
  {
    "dependencies": {
      "GenericPretty": [
        "Text.PrettyPrint.GenericPretty"
      ],
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "GHC.Base",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.IO.Exception",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "fgl": [
        "Data.Graph.Inductive",
        "Data.Graph.Inductive.PatriciaTree",
        "Data.Graph.Inductive.Query.BFS"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.State",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data",
        "Data.Generics.Uniplate.Operations"
      ]
    },
    "imports": [
      "Array",
      "Char",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.State",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer",
      "Data.Array",
      "Data.Array.Base",
      "Data.Bits",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.Generics.Uniplate.Data",
      "Data.Generics.Uniplate.Operations",
      "Data.Graph.Inductive",
      "Data.Graph.Inductive.PatriciaTree",
      "Data.Graph.Inductive.Query.BFS",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Word",
      "Debug.Trace",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.IO.Exception",
      "GlaExts",
      "Language.Fortran.Analysis",
      "Language.Fortran.Analysis.BBlocks",
      "Language.Fortran.Analysis.DataFlow",
      "Language.Fortran.Analysis.Renaming",
      "Language.Fortran.Analysis.Types",
      "Language.Fortran.AST",
      "Language.Fortran.Lexer.FixedForm",
      "Language.Fortran.Lexer.FreeForm",
      "Language.Fortran.Parser.Any",
      "Language.Fortran.Parser.Fortran66",
      "Language.Fortran.Parser.Fortran77",
      "Language.Fortran.Parser.Fortran90",
      "Language.Fortran.ParserMonad",
      "Language.Fortran.Parser.Utils",
      "Language.Fortran.PrettyPrint",
      "Language.Fortran.Transformation.Disambiguation.Function",
      "Language.Fortran.Transformation.Grouping",
      "Language.Fortran.Transformation.TransformMonad",
      "Language.Fortran.Transformer",
      "Language.Fortran.Util.FirstParameter",
      "Language.Fortran.Util.Position",
      "Language.Fortran.Util.SecondParameter",
      "Numeric",
      "Prelude",
      "System.Console.GetOpt",
      "System.Environment",
      "Text.PrettyPrint",
      "Text.PrettyPrint.GenericPretty",
      "Text.Printf"
    ],
    "modules": [
      "Language.Fortran.Analysis",
      "Language.Fortran.Analysis.Renaming",
      "Language.Fortran.Analysis.Types",
      "Language.Fortran.Analysis.BBlocks",
      "Language.Fortran.Analysis.DataFlow",
      "Language.Fortran.AST",
      "Language.Fortran.Lexer.FixedForm",
      "Language.Fortran.Lexer.FreeForm",
      "Language.Fortran.ParserMonad",
      "Language.Fortran.Parser.Any",
      "Language.Fortran.Parser.Fortran66",
      "Language.Fortran.Parser.Fortran77",
      "Language.Fortran.Parser.Fortran90",
      "Language.Fortran.Parser.Utils",
      "Language.Fortran.PrettyPrint",
      "Language.Fortran.Transformation.Disambiguation.Function",
      "Language.Fortran.Transformation.Grouping",
      "Language.Fortran.Transformation.TransformMonad",
      "Language.Fortran.Transformer",
      "Language.Fortran.Util.Position",
      "Language.Fortran.Util.FirstParameter",
      "Language.Fortran.Util.SecondParameter"
    ],
    "name": "fortran-src",
    "version": "0.1.0.4"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Concurrent",
        "Data.Monoid",
        "Data.Version",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "extra": [
        "Control.Monad.Extra"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Method"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "wai": [
        "Network.Wai"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "werewolf": [
        "Game.Werewolf"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Monad.Extra",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Data.Aeson",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Version",
      "Game.Werewolf",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Method",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Options.Applicative",
      "Paths",
      "System.Environment",
      "System.Process",
      "Werewolf.Slack.Application",
      "Werewolf.Slack.Options",
      "Werewolf.Slack.Slack",
      "Werewolf.Slack.Version",
      "Werewolf.Slack.Werewolf"
    ],
    "modules": [],
    "name": "werewolf-slack",
    "version": "1.0.2.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Monad.IO.Class",
        "Data.Functor.Identity",
        "Data.Semigroup"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Builder.ASCII"
      ],
      "bytestring-tree-builder": [
        "ByteString.TreeBuilder"
      ],
      "contravariant": [
        "Data.Functor.Contravariant",
        "Data.Functor.Contravariant.Divisible"
      ],
      "contravariant-extras": [
        "Contravariant.Extras"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "dlist": [
        "Data.DList"
      ],
      "either": [
        "Control.Monad.Trans.Either",
        "Data.Either.Combinators"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hashtables": [
        "Data.HashTable.IO"
      ],
      "loch-th": [
        "Debug.Trace.LocationTH"
      ],
      "mtl": [
        "Control.Monad.Error.Class"
      ],
      "placeholders": [
        "Development.Placeholders"
      ],
      "postgresql-binary": [
        "PostgreSQL.Binary.Decoder",
        "PostgreSQL.Binary.Encoder"
      ],
      "postgresql-libpq": [
        "Database.PostgreSQL.LibPQ"
      ],
      "profunctors": [
        "Data.Profunctor.Unsafe"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Strict"
      ],
      "uuid": [
        "Data.UUID"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ]
    },
    "imports": [
      "BasePrelude",
      "ByteString.TreeBuilder",
      "Contravariant.Extras",
      "Control.DeepSeq",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Either",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Strict",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Attoparsec.ByteString.Char8",
      "Database.PostgreSQL.LibPQ",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Builder.ASCII",
      "Data.Default.Class",
      "Data.DList",
      "Data.Either.Combinators",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Divisible",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashTable.IO",
      "Data.Profunctor.Unsafe",
      "Data.Scientific",
      "Data.Semigroup",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Time",
      "Data.UUID",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Debug.Trace.LocationTH",
      "Development.Placeholders",
      "Hasql.Connection",
      "Hasql.Decoders",
      "Hasql.Encoders",
      "Hasql.Private.Commands",
      "Hasql.Private.Connection",
      "Hasql.Private.Decoders.Array",
      "Hasql.Private.Decoders.Composite",
      "Hasql.Private.Decoders.Result",
      "Hasql.Private.Decoders.Results",
      "Hasql.Private.Decoders.Row",
      "Hasql.Private.Decoders.Value",
      "Hasql.Private.Encoders.Array",
      "Hasql.Private.Encoders.Params",
      "Hasql.Private.Encoders.Value",
      "Hasql.Private.IO",
      "Hasql.Private.Prelude",
      "Hasql.Private.PreparedStatementRegistry",
      "Hasql.Private.PTI",
      "Hasql.Private.Query",
      "Hasql.Private.Session",
      "Hasql.Private.Settings",
      "Hasql.Query",
      "Hasql.Session",
      "Main.Connection",
      "Main.DSL",
      "Main.Prelude",
      "Main.Queries",
      "PostgreSQL.Binary.Decoder",
      "PostgreSQL.Binary.Encoder",
      "Rebase.Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.Runners"
    ],
    "modules": [
      "Hasql.Decoders",
      "Hasql.Encoders",
      "Hasql.Connection",
      "Hasql.Query",
      "Hasql.Session"
    ],
    "name": "hasql",
    "version": "0.19.15.2"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compat.ReadP",
        "Distribution.Text"
      ],
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Data.Char",
        "Data.Maybe",
        "Data.String",
        "GHC.Generics"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "lens": [
        "Control.Lens"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Lens",
      "Data.Char",
      "Data.Maybe",
      "Data.String",
      "Distribution.Compat.ReadP",
      "Distribution.Text",
      "GHC.Generics",
      "Language.Nix.Binding",
      "Language.Nix.Identifier",
      "Language.Nix.Path",
      "Prelude.Compat",
      "Test.DocTest",
      "Test.QuickCheck",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Language.Nix",
      "Language.Nix.Binding",
      "Language.Nix.Identifier",
      "Language.Nix.Path"
    ],
    "name": "language-nix",
    "version": "2.1.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "data-default-class": [],
      "exceptions": [],
      "ghc-prim": [],
      "random": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Control.Retry"
    ],
    "name": "retry",
    "version": "0.7.4.1"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Arbitrary",
        "Test.QuickCheck.Gen",
        "Test.QuickCheck.Property",
        "Test.QuickCheck.Random"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.Exts",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "derive": [
        "Data.Derive.All",
        "Data.Derive.NFData",
        "Data.DeriveTH"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.State"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "th-expand-syns": [
        "Language.Haskell.TH.ExpandSyns"
      ],
      "transformers": [],
      "tree-view": [
        "Data.Tree.View"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.State",
      "Criterion.Main",
      "Data.Comp",
      "Data.Comp.Algebra",
      "Data.Comp.Annotation",
      "Data.Comp.Arbitrary",
      "Data.Comp.Decompose",
      "Data.Comp.DeepSeq",
      "Data.Comp.Derive",
      "Data.Comp.Derive.Arbitrary",
      "Data.Comp.Derive.DeepSeq",
      "Data.Comp.Derive.Equality",
      "Data.Comp.Derive.Foldable",
      "Data.Comp.Derive.HaskellStrict",
      "Data.Comp.Derive.Ordering",
      "Data.Comp.Derive.Show",
      "Data.Comp.Derive.SmartAConstructors",
      "Data.Comp.Derive.SmartConstructors",
      "Data.Comp.Derive.Traversable",
      "Data.Comp.Derive.Utils",
      "Data.Comp.Desugar",
      "Data.Comp.Equality",
      "Data.Comp.Examples",
      "Data.Comp.Examples.Comp",
      "Data.Comp.Examples.Multi",
      "Data.Comp.ExpFunctor",
      "Data.Comp.Generic",
      "Data.Comp.Mapping",
      "Data.Comp.Matching",
      "Data.Comp.Multi",
      "Data.Comp.Multi.Algebra",
      "Data.Comp.Multi.Annotation",
      "Data.Comp.Multi.Derive",
      "Data.Comp.Multi.Derive.Equality",
      "Data.Comp.Multi.Derive.HFoldable",
      "Data.Comp.Multi.Derive.HFunctor",
      "Data.Comp.Multi.Derive.HTraversable",
      "Data.Comp.Multi.Derive.Ordering",
      "Data.Comp.Multi.Derive.Show",
      "Data.Comp.Multi.Derive.SmartAConstructors",
      "Data.Comp.Multi.Derive.SmartConstructors",
      "Data.Comp.Multi.Desugar",
      "Data.Comp.Multi.Equality",
      "Data.Comp.Multi.Generic",
      "Data.Comp.Multi.HEquality",
      "Data.Comp.Multi.HFoldable",
      "Data.Comp.Multi.HFunctor",
      "Data.Comp.Multi.HTraversable",
      "Data.Comp.Multi.Mapping",
      "Data.Comp.Multi.Ops",
      "Data.Comp.Multi.Ordering",
      "Data.Comp.Multi.Show",
      "Data.Comp.Multi.Sum",
      "Data.Comp.Multi.Term",
      "Data.Comp.Multi.Variables",
      "Data.Comp.Ops",
      "Data.Comp.Ordering",
      "Data.Comp.Show",
      "Data.Comp.Subsume",
      "Data.Comp.SubsumeCommon",
      "Data.Comp.Sum",
      "Data.Comp.Term",
      "Data.Comp.Thunk",
      "Data.Comp.Variables",
      "Data.Data",
      "Data.Derive.All",
      "Data.Derive.NFData",
      "Data.DeriveTH",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Generics.PlateDirect",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Traversable",
      "Data.Tree",
      "Data.Tree.View",
      "DataTypes",
      "DataTypes.Comp",
      "DataTypes.Standard",
      "DataTypes.Transform",
      "Examples.Common",
      "Examples.Desugar",
      "Examples.Eval",
      "Examples.EvalM",
      "Examples.Multi.Common",
      "Examples.Multi.Desugar",
      "Examples.Multi.Eval",
      "Examples.Multi.EvalI",
      "Examples.Multi.EvalM",
      "Functions.Comp",
      "Functions.Comp.Desugar",
      "Functions.Comp.Eval",
      "Functions.Comp.FreeVars",
      "Functions.Comp.Inference",
      "Functions.Standard",
      "Functions.Standard.Desugar",
      "Functions.Standard.Eval",
      "Functions.Standard.FreeVars",
      "Functions.Standard.Inference",
      "GHC.Exts",
      "Language.Haskell.TH",
      "Language.Haskell.TH.ExpandSyns",
      "Language.Haskell.TH.Syntax",
      "Multi.DataTypes.Comp",
      "Multi.Functions.Comp.Desugar",
      "Prelude",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Random",
      "Test.Utils",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Comp",
      "Data.Comp.Annotation",
      "Data.Comp.Sum",
      "Data.Comp.Term",
      "Data.Comp.Algebra",
      "Data.Comp.Equality",
      "Data.Comp.Ordering",
      "Data.Comp.DeepSeq",
      "Data.Comp.Generic",
      "Data.Comp.TermRewriting",
      "Data.Comp.Arbitrary",
      "Data.Comp.Show",
      "Data.Comp.Render",
      "Data.Comp.Variables",
      "Data.Comp.Decompose",
      "Data.Comp.Unification",
      "Data.Comp.Derive",
      "Data.Comp.Derive.Utils",
      "Data.Comp.Matching",
      "Data.Comp.Desugar",
      "Data.Comp.Mapping",
      "Data.Comp.Thunk",
      "Data.Comp.Ops",
      "Data.Comp.Projection",
      "Data.Comp.Multi",
      "Data.Comp.Multi.Term",
      "Data.Comp.Multi.Sum",
      "Data.Comp.Multi.HFunctor",
      "Data.Comp.Multi.HFoldable",
      "Data.Comp.Multi.HTraversable",
      "Data.Comp.Multi.Algebra",
      "Data.Comp.Multi.Annotation",
      "Data.Comp.Multi.Show",
      "Data.Comp.Multi.Equality",
      "Data.Comp.Multi.Ordering",
      "Data.Comp.Multi.Variables",
      "Data.Comp.Multi.Ops",
      "Data.Comp.Multi.Mapping",
      "Data.Comp.Multi.Derive",
      "Data.Comp.Multi.Generic",
      "Data.Comp.Multi.Desugar",
      "Data.Comp.Multi.Projection"
    ],
    "name": "compdata",
    "version": "0.10.1"
  },
  {
    "dependencies": {
      "base": [],
      "comonad": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "comonads-fd",
    "version": "4.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "mtl": [
        "Control.Monad.Writer"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString",
        "Network.Socket.ByteString.Lazy"
      ],
      "text": [
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Control.Monad.Writer",
      "Data.ByteString",
      "Data.List",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.ByteString.Lazy"
    ],
    "modules": [
      "Network.StatsD"
    ],
    "name": "hstatsd",
    "version": "0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Data.Data",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.Marshal.Utils",
        "GHC.Base",
        "GHC.Exts",
        "GHC.Float",
        "GHC.Int",
        "GHC.IO",
        "GHC.Ptr",
        "GHC.ST",
        "GHC.Word"
      ],
      "ghc-prim": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Data",
      "Data.Monoid",
      "Data.Primitive.Addr",
      "Data.Primitive.Array",
      "Data.Primitive.ByteArray",
      "Data.Primitive.Internal.Compat",
      "Data.Primitive.Internal.Operations",
      "Data.Primitive.MachDeps",
      "Data.Primitive.Types",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.Marshal.Utils",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Float",
      "GHC.Int",
      "GHC.IO",
      "GHC.IOBase",
      "GHC.Prim",
      "GHC.Ptr",
      "GHC.ST",
      "GHC.Word"
    ],
    "modules": [
      "Control.Monad.Primitive",
      "Data.Primitive",
      "Data.Primitive.MachDeps",
      "Data.Primitive.Types",
      "Data.Primitive.Array",
      "Data.Primitive.ByteArray",
      "Data.Primitive.Addr",
      "Data.Primitive.MutVar"
    ],
    "name": "primitive",
    "version": "0.6.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-javascriptcore",
    "version": "3.0.3"
  },
  {
    "dependencies": {
      "RefSerialize": [
        "Data.RefSerialize"
      ],
      "TCache": [
        "Data.TCache",
        "Data.TCache.DefaultPersistence",
        "Data.TCache.Defs",
        "Data.TCache.IndexQuery",
        "Data.TCache.Memoization"
      ],
      "Workflow": [
        "Control.Workflow"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Dynamic",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Debug.Trace",
        "GHC.Conc",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Internals",
        "Unsafe.Coerce"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Utf8"
      ],
      "blaze-markup": [
        "Text.Blaze.Internal"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "clientsession": [
        "Web.ClientSession"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "extensible-exceptions": [],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header"
      ],
      "monadloc": [
        "Control.Monad.Loc"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans"
      ],
      "old-time": [
        "System.Time"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "pwstore-fast": [
        "Crypto.PasswordStore"
      ],
      "random": [
        "System.Random"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [],
      "transformers": [],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ],
      "vector": [],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": [
        "Network.Wai.Parse"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "warp-tls": [
        "Network.Wai.Handler.WarpTLS"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Loc",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Resource",
      "Control.Workflow",
      "Crypto.PasswordStore",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.UTF8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Lazy",
      "Data.Conduit.List",
      "Data.Dynamic",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.RefSerialize",
      "Data.String",
      "Data.TCache",
      "Data.TCache.DefaultPersistence",
      "Data.TCache.Defs",
      "Data.TCache.IndexQuery",
      "Data.TCache.Memoization",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy.Encoding",
      "Data.Typeable",
      "Debug.Trace",
      "GHC.Conc",
      "Hack",
      "Hack.Handler.SimpleServer",
      "HSP.Monad",
      "HSP.XML",
      "HSP.XMLGenerator",
      "MFlow",
      "MFlow.Cookies",
      "MFlow.FileServer",
      "MFlow.Forms",
      "MFlow.Forms.Admin",
      "MFlow.Forms.Blaze.Html",
      "MFlow.Forms.Cache",
      "MFlow.Forms.Internals",
      "MFlow.Forms.WebApi",
      "MFlow.Forms.Widgets",
      "MFlow.Forms.XHtml",
      "MFlow.Hack",
      "MFlow.Hack.Response",
      "MFlow.Hack.XHtml",
      "MFlow.Wai",
      "MFlow.Wai.Response",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.WarpTLS",
      "Network.Wai.Parse",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Posix.Internals",
      "System.Random",
      "System.Time",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Blaze.Internal",
      "Text.Parsec",
      "Text.XHtml",
      "Text.XHtml.Strict",
      "Unsafe.Coerce",
      "Web.ClientSession"
    ],
    "modules": [
      "MFlow",
      "MFlow.Wai.Blaze.Html.All",
      "MFlow.Forms",
      "MFlow.Forms.Admin",
      "MFlow.Cookies",
      "MFlow.Wai",
      "MFlow.Forms.Blaze.Html",
      "MFlow.Forms.Test",
      "MFlow.Forms.Widgets",
      "MFlow.Forms.Internals",
      "MFlow.Forms.WebApi",
      "MFlow.Forms.Cache"
    ],
    "name": "MFlow",
    "version": "0.4.6.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Data.Bifunctor",
        "Data.Monoid"
      ],
      "bifunctors": [],
      "containers": [
        "Data.Map.Strict"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State.Strict"
      ],
      "scientific": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Identity",
      "Control.Monad.State.Strict",
      "Data.Aeson.Types",
      "Data.Bifunctor",
      "Data.Map.Strict",
      "Data.Monoid",
      "Data.Text",
      "Data.Vector",
      "Descriptive.Char",
      "Descriptive.Form",
      "Descriptive.Formlet",
      "Descriptive.JSON",
      "Descriptive.Options",
      "Test.Hspec"
    ],
    "modules": [
      "Descriptive",
      "Descriptive.Char",
      "Descriptive.Form",
      "Descriptive.Formlet",
      "Descriptive.Options",
      "Descriptive.JSON"
    ],
    "name": "descriptive",
    "version": "0.9.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.Ptr",
        "Numeric"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "mtl": [
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad.State",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.Ptr",
      "Numeric",
      "OpenSSL.Digest",
      "OpenSSL.Digest.ByteString"
    ],
    "modules": [
      "OpenSSL.Digest",
      "OpenSSL.Digest.ByteString",
      "OpenSSL.Digest.ByteString.Lazy"
    ],
    "name": "hopenssl",
    "version": "1.7"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Maybe"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ],
      "crypto-cipher-types": [
        "Crypto.Cipher.Types",
        "Crypto.Cipher.Types.Unsafe"
      ],
      "mtl": [],
      "securemem": [],
      "test-framework": [
        "Test.Framework"
      ],
      "test-framework-hunit": [
        "Test.Framework.Providers.HUnit"
      ],
      "test-framework-quickcheck2": [
        "Test.Framework.Providers.QuickCheck2"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Crypto.Cipher.Tests",
      "Crypto.Cipher.Tests.KATs",
      "Crypto.Cipher.Tests.Properties",
      "Crypto.Cipher.Types",
      "Crypto.Cipher.Types.Unsafe",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Maybe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Crypto.Cipher.Tests"
    ],
    "name": "crypto-cipher-tests",
    "version": "0.0.11"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compat.ReadP",
        "Distribution.Compiler",
        "Distribution.License",
        "Distribution.ModuleName",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Configuration",
        "Distribution.PackageDescription.Parse",
        "Distribution.Simple.Utils",
        "Distribution.System",
        "Distribution.Text",
        "Distribution.Version",
        "Language.Haskell.Extension"
      ],
      "SHA": [
        "Data.Digest.Pure.SHA"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Version",
        "GHC.Generics",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cabal2nix": [],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "distribution-nixpkgs": [
        "Distribution.Nixpkgs.License",
        "Distribution.Nixpkgs.Meta",
        "Distribution.Nixpkgs.PackageMap",
        "Language.Nix.PrettyPrinting"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hackage-db": [
        "Distribution.Hackage.DB",
        "Distribution.Hackage.DB.Parsed",
        "Distribution.Hackage.DB.Unparsed"
      ],
      "language-nix": [
        "Language.Nix",
        "Language.Nix.Identifier"
      ],
      "lens": [
        "Control.Lens",
        "Data.Set.Lens"
      ],
      "monad-par": [
        "Control.Monad.Par.IO"
      ],
      "monad-par-extras": [
        "Control.Monad.Par.Combinator"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJClass"
      ],
      "process": [
        "System.Process"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ],
      "utf8-string": [
        "Data.String.UTF8"
      ],
      "yaml": [
        "Data.Yaml"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Par.Combinator",
      "Control.Monad.Par.IO",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Maybe",
      "Data.Aeson",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Digest.Pure.SHA",
      "Data.Function",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Set.Lens",
      "Data.String",
      "Data.String.UTF8",
      "Data.Text",
      "Data.Version",
      "Data.Yaml",
      "Distribution.Compat.ReadP",
      "Distribution.Compiler",
      "Distribution.Hackage.DB",
      "Distribution.Hackage.DB.Parsed",
      "Distribution.Hackage.DB.Unparsed",
      "Distribution.License",
      "Distribution.ModuleName",
      "Distribution.Nixpkgs.Fetch",
      "Distribution.Nixpkgs.Haskell",
      "Distribution.Nixpkgs.Haskell.BuildInfo",
      "Distribution.Nixpkgs.Haskell.Constraint",
      "Distribution.Nixpkgs.Haskell.Derivation",
      "Distribution.Nixpkgs.Haskell.FromCabal",
      "Distribution.Nixpkgs.Haskell.FromCabal.Configuration",
      "Distribution.Nixpkgs.Haskell.FromCabal.Flags",
      "Distribution.Nixpkgs.Haskell.FromCabal.License",
      "Distribution.Nixpkgs.Haskell.FromCabal.Name",
      "Distribution.Nixpkgs.Haskell.FromCabal.Normalize",
      "Distribution.Nixpkgs.Haskell.FromCabal.PostProcess",
      "Distribution.Nixpkgs.Haskell.Hackage",
      "Distribution.Nixpkgs.Haskell.OrphanInstances",
      "Distribution.Nixpkgs.Haskell.PackageSourceSpec",
      "Distribution.Nixpkgs.License",
      "Distribution.Nixpkgs.Meta",
      "Distribution.Nixpkgs.PackageMap",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Configuration",
      "Distribution.PackageDescription.Parse",
      "Distribution.Simple.Utils",
      "Distribution.System",
      "Distribution.Text",
      "Distribution.Version",
      "GHC.Generics",
      "HackageGit",
      "Language.Haskell.Extension",
      "Language.Nix",
      "Language.Nix.Identifier",
      "Language.Nix.PrettyPrinting",
      "Options.Applicative",
      "Paths",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.PrettyPrint.HughesPJClass"
    ],
    "modules": [
      "Distribution.Nixpkgs.Fetch",
      "Distribution.Nixpkgs.Haskell",
      "Distribution.Nixpkgs.Haskell.BuildInfo",
      "Distribution.Nixpkgs.Haskell.Constraint",
      "Distribution.Nixpkgs.Haskell.Derivation",
      "Distribution.Nixpkgs.Haskell.FromCabal",
      "Distribution.Nixpkgs.Haskell.FromCabal.Configuration",
      "Distribution.Nixpkgs.Haskell.FromCabal.Flags",
      "Distribution.Nixpkgs.Haskell.FromCabal.License",
      "Distribution.Nixpkgs.Haskell.FromCabal.Name",
      "Distribution.Nixpkgs.Haskell.FromCabal.Normalize",
      "Distribution.Nixpkgs.Haskell.FromCabal.PostProcess",
      "Distribution.Nixpkgs.Haskell.Hackage",
      "Distribution.Nixpkgs.Haskell.OrphanInstances",
      "Distribution.Nixpkgs.Haskell.PackageSourceSpec"
    ],
    "name": "cabal2nix",
    "version": "2.0.2"
  },
  {
    "dependencies": {
      "acid-state": [
        "Data.Acid",
        "Data.Acid.Advanced",
        "Data.Acid.Local"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "authenticate": [
        "Web.Authenticate.OpenId",
        "Web.Authenticate.OpenId.Providers"
      ],
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Data.Data",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Unique",
        "GHC.Generics",
        "Prelude",
        "System.IO"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "boomerang": [
        "Text.Boomerang.TH"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "email-validate": [
        "Text.Email.Validate"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "happstack-hsp": [
        "Happstack.Server.HSP.HTML",
        "Happstack.Server.XMLGenT"
      ],
      "happstack-jmacro": [
        "Happstack.Server.JMacro"
      ],
      "happstack-server": [
        "Happstack.Server"
      ],
      "hsp": [
        "HSP",
        "HSP.HTML4"
      ],
      "hsx-jmacro": [
        "HSP.JMacro"
      ],
      "hsx2hs": [
        "Language.Haskell.HSX.QQ"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "ixset-typed": [
        "Data.IxSet.Typed"
      ],
      "jmacro": [
        "Language.Javascript.JMacro"
      ],
      "jwt": [
        "Web.JWT"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.At"
      ],
      "mime-mail": [
        "Network.Mail.Mime"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "pwstore-purehaskell": [
        "Crypto.PasswordStore"
      ],
      "random": [
        "System.Random"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "shakespeare": [
        "Text.Shakespeare.I18N"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "userid": [
        "Data.UserId"
      ],
      "web-routes": [
        "Web.Routes"
      ],
      "web-routes-boomerang": [
        "Web.Routes.Boomerang"
      ],
      "web-routes-happstack": [
        "Web.Routes.Happstack"
      ],
      "web-routes-hsp": [
        "Web.Routes.XMLGenT"
      ],
      "web-routes-th": [
        "Web.Routes.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Control.Exception",
      "Control.Lens",
      "Control.Lens.At",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Crypto.PasswordStore",
      "Data.Acid",
      "Data.Acid.Advanced",
      "Data.Acid.Local",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Data",
      "Data.Default",
      "Data.HashMap.Strict",
      "Data.IxSet.Typed",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.SafeCopy",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Data.Unique",
      "Data.UserId",
      "GHC.Generics",
      "Happstack.Authenticate.Controller",
      "Happstack.Authenticate.Core",
      "Happstack.Authenticate.OpenId.Controllers",
      "Happstack.Authenticate.OpenId.Core",
      "Happstack.Authenticate.OpenId.Partials",
      "Happstack.Authenticate.OpenId.PartialsURL",
      "Happstack.Authenticate.OpenId.URL",
      "Happstack.Authenticate.Password.Controllers",
      "Happstack.Authenticate.Password.Core",
      "Happstack.Authenticate.Password.Partials",
      "Happstack.Authenticate.Password.PartialsURL",
      "Happstack.Authenticate.Password.URL",
      "Happstack.Server",
      "Happstack.Server.HSP.HTML",
      "Happstack.Server.JMacro",
      "Happstack.Server.XMLGenT",
      "HSP",
      "HSP.HTML4",
      "HSP.JMacro",
      "Language.Haskell.HSX.QQ",
      "Language.Javascript.JMacro",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.Mail.Mime",
      "Prelude",
      "System.FilePath",
      "System.IO",
      "System.Random",
      "Text.Boomerang.TH",
      "Text.Email.Validate",
      "Text.Shakespeare.I18N",
      "Web.Authenticate.OpenId",
      "Web.Authenticate.OpenId.Providers",
      "Web.JWT",
      "Web.Routes",
      "Web.Routes.Boomerang",
      "Web.Routes.Happstack",
      "Web.Routes.TH",
      "Web.Routes.XMLGenT"
    ],
    "modules": [
      "Happstack.Authenticate.Core",
      "Happstack.Authenticate.Controller",
      "Happstack.Authenticate.Route",
      "Happstack.Authenticate.Password.Controllers",
      "Happstack.Authenticate.Password.Core",
      "Happstack.Authenticate.Password.Partials",
      "Happstack.Authenticate.Password.PartialsURL",
      "Happstack.Authenticate.Password.Route",
      "Happstack.Authenticate.Password.URL",
      "Happstack.Authenticate.OpenId.Controllers",
      "Happstack.Authenticate.OpenId.Core",
      "Happstack.Authenticate.OpenId.Partials",
      "Happstack.Authenticate.OpenId.PartialsURL",
      "Happstack.Authenticate.OpenId.Route",
      "Happstack.Authenticate.OpenId.URL"
    ],
    "name": "happstack-authenticate",
    "version": "2.3.4.5"
  },
  {
    "dependencies": {
      "base": [
        "Data.Int",
        "Data.Monoid",
        "Prelude"
      ]
    },
    "imports": [
      "Data.DotNet.TimeSpan.Internal",
      "Data.Int",
      "Data.Monoid",
      "Prelude"
    ],
    "modules": [
      "Data.DotNet.TimeSpan",
      "Data.DotNet.TimeSpan.Internal"
    ],
    "name": "dotnet-timespan",
    "version": "0.0.1.0"
  },
  {
    "dependencies": {
      "Spock-api": [
        "Web.Spock.Api"
      ],
      "Spock-core": [
        "Web.Spock.Core"
      ],
      "base": [],
      "hvect": [
        "Data.HVect"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Monad.Trans",
      "Data.HVect",
      "Web.Spock.Api",
      "Web.Spock.Core"
    ],
    "modules": [
      "Web.Spock.Api.Server"
    ],
    "name": "Spock-api-server",
    "version": "0.11.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "mwc-random": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.Vector"
    ],
    "modules": [
      "Data.RNG"
    ],
    "name": "rng-utils",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [],
      "cipher-aes": [
        "Crypto.Cipher.AES"
      ],
      "cipher-blowfish": [
        "Crypto.Cipher.Blowfish"
      ],
      "cipher-camellia": [
        "Crypto.Cipher.Camellia"
      ],
      "cipher-des": [
        "Crypto.Cipher.DES",
        "Crypto.Cipher.TripleDES"
      ],
      "cipher-rc4": [],
      "crypto-cipher-types": [
        "Crypto.Cipher.Types"
      ]
    },
    "imports": [
      "Crypto.Cipher.AES",
      "Crypto.Cipher.Blowfish",
      "Crypto.Cipher.Camellia",
      "Crypto.Cipher.DES",
      "Crypto.Cipher.TripleDES",
      "Crypto.Cipher.Types"
    ],
    "modules": [
      "Crypto.Cipher"
    ],
    "name": "cryptocipher",
    "version": "0.6.2"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.EMR",
      "Test.AWS.EMR",
      "Test.AWS.EMR.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.EMR",
      "Network.AWS.EMR.AddInstanceGroups",
      "Network.AWS.EMR.AddJobFlowSteps",
      "Network.AWS.EMR.AddTags",
      "Network.AWS.EMR.DescribeCluster",
      "Network.AWS.EMR.DescribeStep",
      "Network.AWS.EMR.ListBootstrapActions",
      "Network.AWS.EMR.ListClusters",
      "Network.AWS.EMR.ListInstanceGroups",
      "Network.AWS.EMR.ListInstances",
      "Network.AWS.EMR.ListSteps",
      "Network.AWS.EMR.ModifyInstanceGroups",
      "Network.AWS.EMR.RemoveTags",
      "Network.AWS.EMR.RunJobFlow",
      "Network.AWS.EMR.SetTerminationProtection",
      "Network.AWS.EMR.SetVisibleToAllUsers",
      "Network.AWS.EMR.TerminateJobFlows",
      "Network.AWS.EMR.Types",
      "Network.AWS.EMR.Waiters"
    ],
    "name": "amazonka-emr",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Data",
        "Data.Int",
        "Data.Typeable",
        "Data.Word",
        "System.Exit",
        "Text.Printf"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Data",
      "Data.Int",
      "Data.Typeable",
      "Data.Word",
      "Language.Haskell.TH",
      "System.Exit",
      "TestNat",
      "Text.Printf",
      "TypeLevel.Number.Classes",
      "TypeLevel.Number.Int",
      "TypeLevel.Number.Int.Types",
      "TypeLevel.Number.Nat",
      "TypeLevel.Number.Nat.TH",
      "TypeLevel.Number.Nat.Types",
      "TypeLevel.Reify",
      "TypeLevel.Util"
    ],
    "modules": [
      "TypeLevel.Number.Classes",
      "TypeLevel.Number.Nat",
      "TypeLevel.Number.Nat.Num",
      "TypeLevel.Number.Int",
      "TypeLevel.Boolean",
      "TypeLevel.Reify"
    ],
    "name": "type-level-numbers",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.Typeable"
      ]
    },
    "imports": [
      "Control.Concurrent.Async",
      "Control.Concurrent.Cache",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Data.Typeable"
    ],
    "modules": [
      "System.IO.Memoize",
      "Control.Concurrent.Cache"
    ],
    "name": "io-memoize",
    "version": "1.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Unsafe",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "ghc-prim": [],
      "text": [
        "Data.Text",
        "Data.Text.Array",
        "Data.Text.Internal"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.ST.Unsafe",
      "Criterion.Main",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Double.Conversion.ByteString",
      "Data.Double.Conversion.FFI",
      "Data.Double.Conversion.Text",
      "Data.Text",
      "Data.Text.Array",
      "Data.Text.Internal",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "GHC.Prim",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Text.Show.ByteString"
    ],
    "modules": [
      "Data.Double.Conversion.ByteString",
      "Data.Double.Conversion.Text"
    ],
    "name": "double-conversion",
    "version": "2.0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable"
      ],
      "containers": [],
      "control-monad-free": [
        "Control.Monad.Free"
      ],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State.Lazy",
        "Control.Monad.Trans"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Free",
      "Control.Monad.Reader",
      "Control.Monad.State.Lazy",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Maybe",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Typeable",
      "System.Console.Haskeline",
      "System.Console.Wizard",
      "System.Console.Wizard.Internal"
    ],
    "modules": [
      "System.Console.Wizard",
      "System.Console.Wizard.Internal",
      "System.Console.Wizard.Haskeline",
      "System.Console.Wizard.BasicIO",
      "System.Console.Wizard.Pure"
    ],
    "name": "wizards",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.List"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.List"
    ],
    "modules": [
      "Math.ContinuedFraction"
    ],
    "name": "continued-fractions",
    "version": "0.9.1.1"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "async": [],
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Set"
      ],
      "deepseq": [],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [
        "System.Process"
      ],
      "process-extras": [
        "System.Process.ByteString",
        "System.Process.Text"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA",
        "Text.Regex.TDFA.String"
      ],
      "stm": [
        "Control.Concurrent.STM.TVar",
        "Control.Monad.STM"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "tasty": [
        "Test.Tasty",
        "Test.Tasty.Options",
        "Test.Tasty.Providers",
        "Test.Tasty.Runners"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM.TVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.STM",
      "Data.ByteString",
      "Data.Char",
      "Data.Foldable",
      "Data.IntMap",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Set",
      "Data.Tagged",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Typeable",
      "Options.Applicative",
      "Prelude",
      "System.Console.ANSI",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.Process",
      "System.Process.ByteString",
      "System.Process.Text",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Test.Tasty.Runners",
      "Test.Tasty.Silver",
      "Test.Tasty.Silver.Advanced",
      "Test.Tasty.Silver.Filter",
      "Test.Tasty.Silver.Interactive",
      "Test.Tasty.Silver.Interactive.Run",
      "Test.Tasty.Silver.Internal",
      "Text.Printf",
      "Text.Regex.TDFA",
      "Text.Regex.TDFA.String"
    ],
    "modules": [
      "Test.Tasty.Silver",
      "Test.Tasty.Silver.Advanced",
      "Test.Tasty.Silver.Filter",
      "Test.Tasty.Silver.Interactive",
      "Test.Tasty.Silver.Interactive.Run",
      "Test.Tasty.Silver.Internal"
    ],
    "name": "tasty-silver",
    "version": "3.1.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Data.Dynamic",
        "Data.Foldable",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude",
        "System.CPUTime",
        "System.Environment",
        "System.Mem.StableName",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "data-reify": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Data.Dynamic",
      "Data.Foldable",
      "Data.IntMap",
      "Data.Reify",
      "Data.Reify.Graph",
      "Data.Traversable",
      "Data.Typeable",
      "Prelude",
      "System.CPUTime",
      "System.Environment",
      "System.Mem.StableName",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Reify",
      "Data.Reify.Graph"
    ],
    "name": "data-reify",
    "version": "0.6.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.Storable"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "crypto-cipher-types": [
        "Crypto.Cipher.Types"
      ],
      "securemem": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Crypto.Cipher.Benchmarks",
      "Crypto.Cipher.DES",
      "Crypto.Cipher.DES.Primitive",
      "Crypto.Cipher.DES.Serialization",
      "Crypto.Cipher.Tests",
      "Crypto.Cipher.TripleDES",
      "Crypto.Cipher.Types",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Test"
    ],
    "modules": [
      "Crypto.Cipher.DES",
      "Crypto.Cipher.TripleDES"
    ],
    "name": "cipher-des",
    "version": "0.0.6"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "parallel": [
        "Control.Parallel.Strategies"
      ]
    },
    "imports": [
      "Control.Parallel.Strategies",
      "Data.List",
      "Data.Number.CReal",
      "Numeric.AD",
      "Text.Groom"
    ],
    "modules": [
      "Numeric.Integration.TanhSinh"
    ],
    "name": "integration",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.Fix",
        "Data.Monoid",
        "Data.Semigroup"
      ],
      "semigroups": []
    },
    "imports": [
      "Control.Monad.Fix",
      "Data.Monoid",
      "Data.Semigroup"
    ],
    "modules": [
      "Data.Zero"
    ],
    "name": "zero",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Data",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "Numeric",
        "Prelude",
        "Text.ParserCombinators.ReadP",
        "Text.Read.Lex"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Word",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Numeric",
      "Prelude",
      "Test.Hspec",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Text.Printf.TH",
      "Text.Read.Lex"
    ],
    "modules": [
      "Text.Printf.TH"
    ],
    "name": "th-printf",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cassava": [
        "Data.Csv"
      ],
      "containers": [
        "Data.Set"
      ],
      "megaparsec": [
        "Text.Megaparsec"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Csv",
      "Data.Csv.Parser.Megaparsec",
      "Data.Data",
      "Data.HashMap.Strict",
      "Data.Set",
      "Data.Vector",
      "Data.Word",
      "Test.Hspec",
      "Test.Hspec.Megaparsec",
      "Text.Megaparsec"
    ],
    "modules": [
      "Data.Csv.Parser.Megaparsec"
    ],
    "name": "cassava-megaparsec",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "network": []
    },
    "imports": [
      "Network.Socket.Splice.Internal"
    ],
    "modules": [
      "Network.Socket.Splice"
    ],
    "name": "splice",
    "version": "0.6.1.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CognitoIdentityProvider",
      "Test.AWS.CognitoIdentityProvider",
      "Test.AWS.CognitoIdentityProvider.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CognitoIdentityProvider",
      "Network.AWS.CognitoIdentityProvider.AddCustomAttributes",
      "Network.AWS.CognitoIdentityProvider.AdminConfirmSignUp",
      "Network.AWS.CognitoIdentityProvider.AdminDeleteUser",
      "Network.AWS.CognitoIdentityProvider.AdminDeleteUserAttributes",
      "Network.AWS.CognitoIdentityProvider.AdminDisableUser",
      "Network.AWS.CognitoIdentityProvider.AdminEnableUser",
      "Network.AWS.CognitoIdentityProvider.AdminGetUser",
      "Network.AWS.CognitoIdentityProvider.AdminResetUserPassword",
      "Network.AWS.CognitoIdentityProvider.AdminSetUserSettings",
      "Network.AWS.CognitoIdentityProvider.AdminUpdateUserAttributes",
      "Network.AWS.CognitoIdentityProvider.ChangePassword",
      "Network.AWS.CognitoIdentityProvider.ConfirmForgotPassword",
      "Network.AWS.CognitoIdentityProvider.ConfirmSignUp",
      "Network.AWS.CognitoIdentityProvider.CreateUserPool",
      "Network.AWS.CognitoIdentityProvider.CreateUserPoolClient",
      "Network.AWS.CognitoIdentityProvider.DeleteUser",
      "Network.AWS.CognitoIdentityProvider.DeleteUserAttributes",
      "Network.AWS.CognitoIdentityProvider.DeleteUserPool",
      "Network.AWS.CognitoIdentityProvider.DeleteUserPoolClient",
      "Network.AWS.CognitoIdentityProvider.DescribeUserPool",
      "Network.AWS.CognitoIdentityProvider.DescribeUserPoolClient",
      "Network.AWS.CognitoIdentityProvider.ForgotPassword",
      "Network.AWS.CognitoIdentityProvider.GetUser",
      "Network.AWS.CognitoIdentityProvider.GetUserAttributeVerificationCode",
      "Network.AWS.CognitoIdentityProvider.ListUserPoolClients",
      "Network.AWS.CognitoIdentityProvider.ListUserPools",
      "Network.AWS.CognitoIdentityProvider.ListUsers",
      "Network.AWS.CognitoIdentityProvider.ResendConfirmationCode",
      "Network.AWS.CognitoIdentityProvider.SetUserSettings",
      "Network.AWS.CognitoIdentityProvider.SignUp",
      "Network.AWS.CognitoIdentityProvider.Types",
      "Network.AWS.CognitoIdentityProvider.UpdateUserAttributes",
      "Network.AWS.CognitoIdentityProvider.UpdateUserPool",
      "Network.AWS.CognitoIdentityProvider.UpdateUserPoolClient",
      "Network.AWS.CognitoIdentityProvider.VerifyUserAttribute",
      "Network.AWS.CognitoIdentityProvider.Waiters"
    ],
    "name": "amazonka-cognito-idp",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Monoid"
      ],
      "lens-family": [
        "Lens.Family2",
        "Lens.Family2.State.Strict",
        "Lens.Family2.Stock",
        "Lens.Family2.Unchecked"
      ],
      "lens-family-core": [
        "Lens.Family"
      ],
      "lens-family-th": [
        "Lens.Family2.TH"
      ],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict",
        "Data.Functor.Constant"
      ]
    },
    "imports": [
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.State.Strict",
      "Data.Function",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Lens.Family",
      "Lens.Family2",
      "Lens.Family2.State.Strict",
      "Lens.Family2.Stock",
      "Lens.Family2.TH",
      "Lens.Family2.Unchecked"
    ],
    "modules": [
      "Lens.Simple"
    ],
    "name": "lens-simple",
    "version": "0.1.0.9"
  },
  {
    "dependencies": {
      "base": [],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "text": [
        "Data.Text"
      ],
      "th-lift": [
        "Language.Haskell.TH.Lift"
      ],
      "uuid-types": [
        "Data.UUID.Types"
      ],
      "web-routes": [
        "Web.Routes.PathInfo"
      ]
    },
    "imports": [
      "Data.SafeCopy",
      "Data.Text",
      "Data.UUID.Types",
      "Language.Haskell.TH.Lift",
      "Web.Routes.PathInfo"
    ],
    "modules": [
      "Data.UUID.Orphans"
    ],
    "name": "uuid-orphans",
    "version": "1.4.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.Parser"
      ],
      "base": [
        "Control.Exception",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Ratio",
        "Data.String",
        "Data.Traversable",
        "Debug.Trace",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "base-compat": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [],
      "data-lens-light": [],
      "directory": [],
      "fay": [],
      "filepath": [],
      "ghc-paths": [
        "GHC.Paths"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Annotated"
      ],
      "language-ecmascript": [],
      "mtl": [
        "Control.Monad.RWS"
      ],
      "mtl-compat": [],
      "optparse-applicative": [],
      "process": [],
      "safe": [],
      "sourcemap": [
        "SourceMap.Types"
      ],
      "split": [],
      "spoon": [],
      "syb": [],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "transformers-compat": [],
      "traverse-with-class": [],
      "type-eq": [],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "CodeWorld",
      "Compile.Records",
      "Control.Exception",
      "Control.Monad.RWS",
      "Data.Aeson.Parser",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Data",
      "Data.Defined",
      "Data.Either",
      "Data.Function",
      "Data.Generics.Uniplate.Data",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.LocalStorage",
      "Data.Map",
      "Data.Maybe",
      "Data.Mutex",
      "Data.MutMap",
      "Data.MutMap.Internal",
      "Data.Nullable",
      "Data.Ord",
      "Data.Ratio",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Time",
      "Data.Traversable",
      "Data.Var",
      "Data.Vector",
      "Debug.Trace",
      "ExportEThingAll",
      "ExportList",
      "ExportQualified",
      "Fay.Exts",
      "Fay.Exts.NoAnnotation",
      "Fay.Exts.Scoped",
      "Fay.Unsafe",
      "FFI",
      "FromString.Dep",
      "FromString.DepDep",
      "FromString.FayText",
      "GHC.Paths",
      "HidePreludeImport",
      "ImportList1.A",
      "ImportList1.B",
      "ImportType2I.A",
      "ImportType2I.B",
      "Issue215.B",
      "Language.Haskell.Exts.Annotated",
      "Language.Haskell.Names",
      "Language.Haskell.Names.GlobalSymbolTable",
      "Language.Haskell.Names.LocalSymbolTable",
      "Language.Haskell.Names.Recursive",
      "Language.Haskell.Names.Types",
      "ModuleRecordClash.R",
      "ModuleReExport.ExportsIdentifier",
      "ModuleReExport.ExportsModule",
      "NestedImporting",
      "NestedImporting2.A",
      "Prelude",
      "QualifiedImport.X",
      "QualifiedImport.Y",
      "RecordImport2",
      "ReExport1",
      "ReExport2",
      "SourceMap.Types",
      "T190",
      "Test.CommandLine",
      "Test.Compile",
      "Test.Convert",
      "Test.Desugar",
      "Unsafe.Coerce",
      "X",
      "Y"
    ],
    "modules": [
      "Fay",
      "Fay.Compiler",
      "Fay.Compiler.Desugar",
      "Fay.Compiler.Parse",
      "Fay.Compiler.Prelude",
      "Fay.Config",
      "Fay.Convert",
      "Fay.FFI",
      "Fay.Types",
      "Fay.Types.CompileError",
      "Fay.Types.CompileResult"
    ],
    "name": "fay",
    "version": "0.23.1.12"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Data",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Typeable",
        "GHC.Generics",
        "Numeric.Natural"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Catch",
      "Data.Data",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Pagination",
      "Data.Typeable",
      "GHC.Generics",
      "Numeric.Natural",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Pagination"
    ],
    "name": "pagination",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.IO",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ]
    },
    "imports": [
      "Codec.Binary.UTF8.Generic",
      "Codec.Binary.UTF8.String",
      "Control.Exception",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.IO",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Codec.Binary.UTF8.String",
      "Codec.Binary.UTF8.Generic",
      "Data.String.UTF8",
      "Data.ByteString.UTF8",
      "Data.ByteString.Lazy.UTF8"
    ],
    "name": "utf8-string",
    "version": "1.0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Dynamic",
        "Data.Either",
        "Data.Maybe",
        "Data.Monoid",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "safe": [
        "Safe"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Maybe"
      ],
      "transformers-compat": [],
      "unexceptionalio": [
        "UnexceptionalIO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Error.Safe",
      "Control.Error.Script",
      "Control.Error.Util",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Maybe",
      "Data.Dynamic",
      "Data.Either",
      "Data.EitherR",
      "Data.Maybe",
      "Data.Monoid",
      "Safe",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "UnexceptionalIO"
    ],
    "modules": [
      "Control.Error",
      "Control.Error.Safe",
      "Control.Error.Script",
      "Control.Error.Util",
      "Data.EitherR"
    ],
    "name": "errors",
    "version": "2.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bool",
        "Data.Char",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Ratio",
        "Data.String",
        "Prelude",
        "Text.Show"
      ]
    },
    "imports": [
      "Data.Bool",
      "Data.Char",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.Ratio",
      "Data.String",
      "Prelude",
      "Text.Show"
    ],
    "modules": [
      "Data.String.Combinators"
    ],
    "name": "string-combinators",
    "version": "0.6.0.5"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.IArray",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Safe",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.ForeignPtr",
        "GHC.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "microlens": [
        "Lens.Micro",
        "Lens.Micro.Internal"
      ],
      "transformers": [
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Array.IArray",
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Int",
      "Data.IntMap",
      "Data.Map",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Traversable",
      "Data.Tree",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Safe",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.ForeignPtr",
      "GHC.IO",
      "Lens.Micro",
      "Lens.Micro.GHC.Internal",
      "Lens.Micro.Internal"
    ],
    "modules": [
      "Lens.Micro.GHC",
      "Lens.Micro.GHC.Internal"
    ],
    "name": "microlens-ghc",
    "version": "0.4.7.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "persistent": [
        "Database.Persist",
        "Database.Persist.Sql"
      ],
      "persistent-template": [
        "Database.Persist.TH"
      ],
      "resource-pool": [
        "Data.Pool"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader"
      ],
      "yesod-core": [
        "Yesod.Core",
        "Yesod.Core.Types"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Control.Exception",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Database.Persist",
      "Database.Persist.Sql",
      "Database.Persist.Sqlite",
      "Database.Persist.TH",
      "Data.Conduit",
      "Data.Pool",
      "Data.Text",
      "Network.Wai.Test",
      "Test.Hspec",
      "Yesod.Core",
      "Yesod.Core.Types",
      "Yesod.Persist",
      "Yesod.Persist.Core"
    ],
    "modules": [
      "Yesod.Persist",
      "Yesod.Persist.Core"
    ],
    "name": "yesod-persistent",
    "version": "1.4.0.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "Prelude"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "containers": [
        "Data.IntMap.Lazy",
        "Data.Map.Lazy",
        "Data.Set"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.State.Strict"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.State.Strict",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IntMap.Lazy",
      "Data.Map.Lazy",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Proxy",
      "Data.Sequence",
      "Data.Set",
      "Data.Traversable",
      "Data.Vector",
      "Prelude"
    ],
    "modules": [
      "Data.Witherable"
    ],
    "name": "witherable",
    "version": "0.1.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe",
        "Prelude"
      ],
      "base-compat": [],
      "deepseq": [],
      "hashable": [
        "Data.Hashable"
      ],
      "psqueues": [
        "Data.HashPSQ"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Hashable",
      "Data.HashPSQ",
      "Data.LruCache",
      "Data.LruCache.SpecHelper",
      "Data.Maybe",
      "Data.Set",
      "Data.Vector",
      "Prelude",
      "Test.Hspec",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic"
    ],
    "modules": [
      "Data.LruCache",
      "Data.LruCache.IO",
      "Data.LruCache.IO.Finalizer",
      "Data.LruCache.Internal"
    ],
    "name": "lrucaching",
    "version": "0.3.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Games",
      "Network.Google.Games.Types",
      "Network.Google.Resource.Games.AchievementDefinitions.List",
      "Network.Google.Resource.Games.Achievements.Increment",
      "Network.Google.Resource.Games.Achievements.List",
      "Network.Google.Resource.Games.Achievements.Reveal",
      "Network.Google.Resource.Games.Achievements.SetStepsAtLeast",
      "Network.Google.Resource.Games.Achievements.Unlock",
      "Network.Google.Resource.Games.Achievements.UpdateMultiple",
      "Network.Google.Resource.Games.Applications.Get",
      "Network.Google.Resource.Games.Applications.Played",
      "Network.Google.Resource.Games.Applications.Verify",
      "Network.Google.Resource.Games.Events.ListByPlayer",
      "Network.Google.Resource.Games.Events.ListDefinitions",
      "Network.Google.Resource.Games.Events.Record",
      "Network.Google.Resource.Games.Leaderboards.Get",
      "Network.Google.Resource.Games.Leaderboards.List",
      "Network.Google.Resource.Games.Metagame.GetMetagameConfig",
      "Network.Google.Resource.Games.Metagame.ListCategoriesByPlayer",
      "Network.Google.Resource.Games.Players.Get",
      "Network.Google.Resource.Games.Players.List",
      "Network.Google.Resource.Games.Pushtokens.Remove",
      "Network.Google.Resource.Games.Pushtokens.Update",
      "Network.Google.Resource.Games.QuestMilestones.Claim",
      "Network.Google.Resource.Games.Quests.Accept",
      "Network.Google.Resource.Games.Quests.List",
      "Network.Google.Resource.Games.Revisions.Check",
      "Network.Google.Resource.Games.Rooms.Create",
      "Network.Google.Resource.Games.Rooms.Decline",
      "Network.Google.Resource.Games.Rooms.Dismiss",
      "Network.Google.Resource.Games.Rooms.Get",
      "Network.Google.Resource.Games.Rooms.Join",
      "Network.Google.Resource.Games.Rooms.Leave",
      "Network.Google.Resource.Games.Rooms.List",
      "Network.Google.Resource.Games.Rooms.ReportStatus",
      "Network.Google.Resource.Games.Scores.Get",
      "Network.Google.Resource.Games.Scores.List",
      "Network.Google.Resource.Games.Scores.ListWindow",
      "Network.Google.Resource.Games.Scores.Submit",
      "Network.Google.Resource.Games.Scores.SubmitMultiple",
      "Network.Google.Resource.Games.Snapshots.Get",
      "Network.Google.Resource.Games.Snapshots.List",
      "Network.Google.Resource.Games.TurnBasedMatches.Cancel",
      "Network.Google.Resource.Games.TurnBasedMatches.Create",
      "Network.Google.Resource.Games.TurnBasedMatches.Decline",
      "Network.Google.Resource.Games.TurnBasedMatches.Dismiss",
      "Network.Google.Resource.Games.TurnBasedMatches.Finish",
      "Network.Google.Resource.Games.TurnBasedMatches.Get",
      "Network.Google.Resource.Games.TurnBasedMatches.Join",
      "Network.Google.Resource.Games.TurnBasedMatches.Leave",
      "Network.Google.Resource.Games.TurnBasedMatches.LeaveTurn",
      "Network.Google.Resource.Games.TurnBasedMatches.List",
      "Network.Google.Resource.Games.TurnBasedMatches.Rematch",
      "Network.Google.Resource.Games.TurnBasedMatches.Sync",
      "Network.Google.Resource.Games.TurnBasedMatches.TakeTurn"
    ],
    "name": "gogol-games",
    "version": "0.1.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.ST",
      "Data.Monoid",
      "MonadLib",
      "MonadLib.Derive",
      "Prelude",
      "System.Exit"
    ],
    "modules": [
      "MonadLib",
      "MonadLib.Monads",
      "MonadLib.Derive"
    ],
    "name": "monadLib",
    "version": "3.7.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Char",
        "GHC.Read",
        "GHC.Show",
        "Text.ParserCombinators.ReadP"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Char",
      "GHC.Read",
      "GHC.Show",
      "Test.Framework",
      "Test.Framework.Providers.API",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit.Base",
      "Text.ParserCombinators.ReadP",
      "Text.Show.Unicode"
    ],
    "modules": [
      "Text.Show.Unicode"
    ],
    "name": "unicode-show",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Char"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Char",
      "Language.Haskell.TH",
      "Lens.Family.THCore"
    ],
    "modules": [
      "Lens.Family.TH",
      "Lens.Family2.TH",
      "Lens.Family.THCore"
    ],
    "name": "lens-family-th",
    "version": "0.5.0.0"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.Text",
        "Data.Attoparsec.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Conc",
        "GHC.ForeignPtr",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Internal",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.Lift",
        "Data.Conduit.List"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch",
        "Control.Monad.Catch.Pure"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "process": [],
      "resourcet": [
        "Control.Monad.Trans.Resource",
        "Control.Monad.Trans.Resource.Internal"
      ],
      "stm": [],
      "streaming-commons": [
        "Data.Streaming.Blaze",
        "Data.Streaming.ByteString.Builder.Class",
        "Data.Streaming.FileRead",
        "Data.Streaming.Filesystem",
        "Data.Streaming.Network",
        "Data.Streaming.Process",
        "Data.Streaming.Process.Internal",
        "Data.Streaming.Text",
        "Data.Streaming.Zlib"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Internal",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Catch.Pure",
      "Control.Monad.IO.Class",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Control.Monad.ST.Lazy",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Resource.Internal",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Criterion.Main",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Types",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Internal",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.Blaze",
      "Data.Conduit.ByteString.Builder",
      "Data.Conduit.Filesystem",
      "Data.Conduit.Internal",
      "Data.Conduit.Lazy",
      "Data.Conduit.Lift",
      "Data.Conduit.List",
      "Data.Conduit.Network",
      "Data.Conduit.Process",
      "Data.Conduit.Text",
      "Data.Conduit.Zlib",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.Streaming.Blaze",
      "Data.Streaming.ByteString.Builder.Class",
      "Data.Streaming.FileRead",
      "Data.Streaming.Filesystem",
      "Data.Streaming.Network",
      "Data.Streaming.Process",
      "Data.Streaming.Process.Internal",
      "Data.Streaming.Text",
      "Data.Streaming.Zlib",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Internal",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Typeable",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Conc",
      "GHC.ForeignPtr",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Prelude",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Gen"
    ],
    "modules": [
      "Data.Conduit.Attoparsec",
      "Data.Conduit.Binary",
      "Data.Conduit.Blaze",
      "Data.Conduit.ByteString.Builder",
      "Data.Conduit.Filesystem",
      "Data.Conduit.Lazy",
      "Data.Conduit.Network",
      "Data.Conduit.Network.UDP",
      "Data.Conduit.Process",
      "Data.Conduit.Text",
      "Data.Conduit.Zlib"
    ],
    "name": "conduit-extra",
    "version": "1.1.13.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Data",
        "Data.List",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Numeric"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Data",
      "Data.List",
      "Data.String",
      "Data.Traversable",
      "Data.Typeable",
      "Numeric",
      "SMTLib1",
      "SMTLib1.AST",
      "SMTLib1.PP",
      "SMTLib1.QF",
      "SMTLib2.AST",
      "SMTLib2.Core",
      "SMTLib2.PP",
      "Text.PrettyPrint"
    ],
    "modules": [
      "SMTLib1",
      "SMTLib1.QF_BV",
      "SMTLib1.QF_AUFBV",
      "SMTLib2",
      "SMTLib2.Compat1",
      "SMTLib2.Core",
      "SMTLib2.BitVector",
      "SMTLib2.Array",
      "SMTLib2.Int"
    ],
    "name": "smtLib",
    "version": "1.0.8"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "aeson-compat": [
        "Data.Aeson.Compat"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "GHC.Generics",
        "Prelude",
        "System.IO",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "ghc-prim": [],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "monad-control": [],
      "monad-logger": [],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "persistent": [
        "Database.Persist",
        "Database.Persist.Class",
        "Database.Persist.Quasi",
        "Database.Persist.Sql",
        "Database.Persist.Types"
      ],
      "tagged": [],
      "template-haskell": [
        "Language.Haskell.TH.Lib",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Compat",
      "Database.Persist",
      "Database.Persist.Class",
      "Database.Persist.Quasi",
      "Database.Persist.Sql",
      "Database.Persist.TH",
      "Database.Persist.Types",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Functor.Identity",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "GHC.Generics",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "System.IO",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Text.Read",
      "Web.HttpApiData",
      "Web.PathPieces"
    ],
    "modules": [
      "Database.Persist.TH"
    ],
    "name": "persistent-template",
    "version": "2.5.1.6"
  },
  {
    "dependencies": {
      "base": [
        "GHC.Exts",
        "GHC.IO"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "list-t": [
        "ListT"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "partial-handler": [
        "PartialHandler"
      ],
      "stm-containers": [
        "STMContainers.Multimap"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader"
      ]
    },
    "imports": [
      "BasePrelude",
      "Control.Concurrent.SSem",
      "Control.Monad.Morph",
      "Control.Monad.Trans.Reader",
      "GHC.Exts",
      "GHC.IO",
      "ListT",
      "PartialHandler",
      "SlaveThread",
      "STMContainers.Multimap",
      "Test.Framework",
      "Test.QuickCheck.Instances"
    ],
    "modules": [
      "SlaveThread"
    ],
    "name": "slave-thread",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad.IO.Class",
        "Data.Monoid"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.IO.Class",
      "Control.Monad.Managed",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Monad.Managed",
      "Control.Monad.Managed.Safe"
    ],
    "name": "managed",
    "version": "1.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "data-default": [
        "Data.Default"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "serversession": [
        "Web.ServerSession.Core",
        "Web.ServerSession.Core.Internal"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vault": [
        "Data.Vault.Lazy"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-session": [
        "Network.Wai.Session"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Default",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Vault.Lazy",
      "Network.Wai",
      "Network.Wai.Session",
      "Web.Cookie",
      "Web.PathPieces",
      "Web.ServerSession.Core",
      "Web.ServerSession.Core.Internal",
      "Web.ServerSession.Frontend.Wai.Internal"
    ],
    "modules": [
      "Web.ServerSession.Frontend.Wai",
      "Web.ServerSession.Frontend.Wai.Internal"
    ],
    "name": "serversession-frontend-wai",
    "version": "1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude",
        "System.Exit"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Criterion.Main",
      "Criterion.Types",
      "Data.Bits",
      "Data.Foldable",
      "Data.IntervalMap",
      "Data.IntervalMap.FingerTree",
      "Data.IntervalMap.Generic.Base",
      "Data.IntervalMap.Generic.Interval",
      "Data.IntervalMap.Generic.Lazy",
      "Data.IntervalMap.Generic.Strict",
      "Data.IntervalMap.Interval",
      "Data.IntervalMap.Lazy",
      "Data.IntervalMap.Strict",
      "Data.IntervalSet",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.SegmentTree",
      "Data.Set",
      "Data.Traversable",
      "IntRange",
      "IvMapSortedList",
      "Prelude",
      "RBColorInt",
      "RBColorIntBase",
      "RBColorNode",
      "RBColorNodeBase",
      "System.Exit",
      "System.Random",
      "Test.QuickCheck",
      "Test.QuickCheck.Test",
      "Weigh"
    ],
    "modules": [
      "Data.IntervalMap",
      "Data.IntervalMap.Lazy",
      "Data.IntervalMap.Strict",
      "Data.IntervalMap.Interval",
      "Data.IntervalMap.Generic.Interval",
      "Data.IntervalMap.Generic.Lazy",
      "Data.IntervalMap.Generic.Strict",
      "Data.IntervalSet"
    ],
    "name": "IntervalMap",
    "version": "0.5.1.1"
  },
  {
    "dependencies": {
      "acid-state": [
        "Data.Acid",
        "Data.Acid.Advanced",
        "Data.Acid.Local",
        "Data.Acid.Memory"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Typeable"
      ],
      "containers": [
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "serversession": [
        "Web.ServerSession.Core",
        "Web.ServerSession.Core.Internal",
        "Web.ServerSession.Core.StorageTests"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Data.Acid",
      "Data.Acid.Advanced",
      "Data.Acid.Local",
      "Data.Acid.Memory",
      "Data.HashMap.Strict",
      "Data.SafeCopy",
      "Data.Set",
      "Data.Typeable",
      "Test.Hspec",
      "Web.ServerSession.Backend.Acid",
      "Web.ServerSession.Backend.Acid.Internal",
      "Web.ServerSession.Core",
      "Web.ServerSession.Core.Internal",
      "Web.ServerSession.Core.StorageTests"
    ],
    "modules": [
      "Web.ServerSession.Backend.Acid",
      "Web.ServerSession.Backend.Acid.Internal"
    ],
    "name": "serversession-backend-acid-state",
    "version": "1.0.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Debug.Trace",
        "GHC.Exts",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "Text.Printf"
      ],
      "cpphs": [],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Pos"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ]
    },
    "imports": [
      "Array",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Array",
      "Data.Array.Base",
      "Data.Bits",
      "Data.Char",
      "Data.Data",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Word",
      "Debug.Trace",
      "GHC.Exts",
      "GHC.Generics",
      "GlaExts",
      "Language.Java.Lexer",
      "Language.Java.Parser",
      "Language.Java.Pretty",
      "Language.Java.Syntax",
      "Numeric",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Test",
      "Text.Parsec",
      "Text.Parsec.Pos",
      "Text.PrettyPrint",
      "Text.Printf"
    ],
    "modules": [
      "Language.Java.Lexer",
      "Language.Java.Syntax",
      "Language.Java.Parser",
      "Language.Java.Pretty"
    ],
    "name": "language-java",
    "version": "0.2.8"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.EC2",
      "Test.AWS.EC2",
      "Test.AWS.EC2.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.EC2",
      "Network.AWS.EC2.AcceptVPCPeeringConnection",
      "Network.AWS.EC2.AllocateAddress",
      "Network.AWS.EC2.AllocateHosts",
      "Network.AWS.EC2.AssignPrivateIPAddresses",
      "Network.AWS.EC2.AssociateAddress",
      "Network.AWS.EC2.AssociateDHCPOptions",
      "Network.AWS.EC2.AssociateRouteTable",
      "Network.AWS.EC2.AttachClassicLinkVPC",
      "Network.AWS.EC2.AttachInternetGateway",
      "Network.AWS.EC2.AttachNetworkInterface",
      "Network.AWS.EC2.AttachVPNGateway",
      "Network.AWS.EC2.AttachVolume",
      "Network.AWS.EC2.AuthorizeSecurityGroupEgress",
      "Network.AWS.EC2.AuthorizeSecurityGroupIngress",
      "Network.AWS.EC2.BundleInstance",
      "Network.AWS.EC2.CancelBundleTask",
      "Network.AWS.EC2.CancelConversionTask",
      "Network.AWS.EC2.CancelExportTask",
      "Network.AWS.EC2.CancelImportTask",
      "Network.AWS.EC2.CancelReservedInstancesListing",
      "Network.AWS.EC2.CancelSpotFleetRequests",
      "Network.AWS.EC2.CancelSpotInstanceRequests",
      "Network.AWS.EC2.ConfirmProductInstance",
      "Network.AWS.EC2.CopyImage",
      "Network.AWS.EC2.CopySnapshot",
      "Network.AWS.EC2.CreateCustomerGateway",
      "Network.AWS.EC2.CreateDHCPOptions",
      "Network.AWS.EC2.CreateFlowLogs",
      "Network.AWS.EC2.CreateImage",
      "Network.AWS.EC2.CreateInstanceExportTask",
      "Network.AWS.EC2.CreateInternetGateway",
      "Network.AWS.EC2.CreateKeyPair",
      "Network.AWS.EC2.CreateNatGateway",
      "Network.AWS.EC2.CreateNetworkACL",
      "Network.AWS.EC2.CreateNetworkACLEntry",
      "Network.AWS.EC2.CreateNetworkInterface",
      "Network.AWS.EC2.CreatePlacementGroup",
      "Network.AWS.EC2.CreateReservedInstancesListing",
      "Network.AWS.EC2.CreateRoute",
      "Network.AWS.EC2.CreateRouteTable",
      "Network.AWS.EC2.CreateSecurityGroup",
      "Network.AWS.EC2.CreateSnapshot",
      "Network.AWS.EC2.CreateSpotDatafeedSubscription",
      "Network.AWS.EC2.CreateSubnet",
      "Network.AWS.EC2.CreateTags",
      "Network.AWS.EC2.CreateVPC",
      "Network.AWS.EC2.CreateVPCEndpoint",
      "Network.AWS.EC2.CreateVPCPeeringConnection",
      "Network.AWS.EC2.CreateVPNConnection",
      "Network.AWS.EC2.CreateVPNConnectionRoute",
      "Network.AWS.EC2.CreateVPNGateway",
      "Network.AWS.EC2.CreateVolume",
      "Network.AWS.EC2.DeleteCustomerGateway",
      "Network.AWS.EC2.DeleteDHCPOptions",
      "Network.AWS.EC2.DeleteFlowLogs",
      "Network.AWS.EC2.DeleteInternetGateway",
      "Network.AWS.EC2.DeleteKeyPair",
      "Network.AWS.EC2.DeleteNatGateway",
      "Network.AWS.EC2.DeleteNetworkACL",
      "Network.AWS.EC2.DeleteNetworkACLEntry",
      "Network.AWS.EC2.DeleteNetworkInterface",
      "Network.AWS.EC2.DeletePlacementGroup",
      "Network.AWS.EC2.DeleteRoute",
      "Network.AWS.EC2.DeleteRouteTable",
      "Network.AWS.EC2.DeleteSecurityGroup",
      "Network.AWS.EC2.DeleteSnapshot",
      "Network.AWS.EC2.DeleteSpotDatafeedSubscription",
      "Network.AWS.EC2.DeleteSubnet",
      "Network.AWS.EC2.DeleteTags",
      "Network.AWS.EC2.DeleteVPC",
      "Network.AWS.EC2.DeleteVPCEndpoints",
      "Network.AWS.EC2.DeleteVPCPeeringConnection",
      "Network.AWS.EC2.DeleteVPNConnection",
      "Network.AWS.EC2.DeleteVPNConnectionRoute",
      "Network.AWS.EC2.DeleteVPNGateway",
      "Network.AWS.EC2.DeleteVolume",
      "Network.AWS.EC2.DeregisterImage",
      "Network.AWS.EC2.DescribeAccountAttributes",
      "Network.AWS.EC2.DescribeAddresses",
      "Network.AWS.EC2.DescribeAvailabilityZones",
      "Network.AWS.EC2.DescribeBundleTasks",
      "Network.AWS.EC2.DescribeClassicLinkInstances",
      "Network.AWS.EC2.DescribeConversionTasks",
      "Network.AWS.EC2.DescribeCustomerGateways",
      "Network.AWS.EC2.DescribeDHCPOptions",
      "Network.AWS.EC2.DescribeExportTasks",
      "Network.AWS.EC2.DescribeFlowLogs",
      "Network.AWS.EC2.DescribeHosts",
      "Network.AWS.EC2.DescribeIdFormat",
      "Network.AWS.EC2.DescribeImageAttribute",
      "Network.AWS.EC2.DescribeImages",
      "Network.AWS.EC2.DescribeImportImageTasks",
      "Network.AWS.EC2.DescribeImportSnapshotTasks",
      "Network.AWS.EC2.DescribeInstanceAttribute",
      "Network.AWS.EC2.DescribeInstanceStatus",
      "Network.AWS.EC2.DescribeInstances",
      "Network.AWS.EC2.DescribeInternetGateways",
      "Network.AWS.EC2.DescribeKeyPairs",
      "Network.AWS.EC2.DescribeMovingAddresses",
      "Network.AWS.EC2.DescribeNatGateways",
      "Network.AWS.EC2.DescribeNetworkACLs",
      "Network.AWS.EC2.DescribeNetworkInterfaceAttribute",
      "Network.AWS.EC2.DescribeNetworkInterfaces",
      "Network.AWS.EC2.DescribePlacementGroups",
      "Network.AWS.EC2.DescribePrefixLists",
      "Network.AWS.EC2.DescribeRegions",
      "Network.AWS.EC2.DescribeReservedInstances",
      "Network.AWS.EC2.DescribeReservedInstancesListings",
      "Network.AWS.EC2.DescribeReservedInstancesModifications",
      "Network.AWS.EC2.DescribeReservedInstancesOfferings",
      "Network.AWS.EC2.DescribeRouteTables",
      "Network.AWS.EC2.DescribeScheduledInstanceAvailability",
      "Network.AWS.EC2.DescribeScheduledInstances",
      "Network.AWS.EC2.DescribeSecurityGroups",
      "Network.AWS.EC2.DescribeSnapshotAttribute",
      "Network.AWS.EC2.DescribeSnapshots",
      "Network.AWS.EC2.DescribeSpotDatafeedSubscription",
      "Network.AWS.EC2.DescribeSpotFleetInstances",
      "Network.AWS.EC2.DescribeSpotFleetRequestHistory",
      "Network.AWS.EC2.DescribeSpotFleetRequests",
      "Network.AWS.EC2.DescribeSpotInstanceRequests",
      "Network.AWS.EC2.DescribeSpotPriceHistory",
      "Network.AWS.EC2.DescribeSubnets",
      "Network.AWS.EC2.DescribeTags",
      "Network.AWS.EC2.DescribeVPCAttribute",
      "Network.AWS.EC2.DescribeVPCClassicLink",
      "Network.AWS.EC2.DescribeVPCClassicLinkDNSSupport",
      "Network.AWS.EC2.DescribeVPCEndpointServices",
      "Network.AWS.EC2.DescribeVPCEndpoints",
      "Network.AWS.EC2.DescribeVPCPeeringConnections",
      "Network.AWS.EC2.DescribeVPCs",
      "Network.AWS.EC2.DescribeVPNConnections",
      "Network.AWS.EC2.DescribeVPNGateways",
      "Network.AWS.EC2.DescribeVolumeAttribute",
      "Network.AWS.EC2.DescribeVolumeStatus",
      "Network.AWS.EC2.DescribeVolumes",
      "Network.AWS.EC2.DetachClassicLinkVPC",
      "Network.AWS.EC2.DetachInternetGateway",
      "Network.AWS.EC2.DetachNetworkInterface",
      "Network.AWS.EC2.DetachVPNGateway",
      "Network.AWS.EC2.DetachVolume",
      "Network.AWS.EC2.DisableVGWRoutePropagation",
      "Network.AWS.EC2.DisableVPCClassicLink",
      "Network.AWS.EC2.DisableVPCClassicLinkDNSSupport",
      "Network.AWS.EC2.DisassociateAddress",
      "Network.AWS.EC2.DisassociateRouteTable",
      "Network.AWS.EC2.EnableVGWRoutePropagation",
      "Network.AWS.EC2.EnableVPCClassicLink",
      "Network.AWS.EC2.EnableVPCClassicLinkDNSSupport",
      "Network.AWS.EC2.EnableVolumeIO",
      "Network.AWS.EC2.GetConsoleOutput",
      "Network.AWS.EC2.GetPasswordData",
      "Network.AWS.EC2.ImportImage",
      "Network.AWS.EC2.ImportInstance",
      "Network.AWS.EC2.ImportKeyPair",
      "Network.AWS.EC2.ImportSnapshot",
      "Network.AWS.EC2.ImportVolume",
      "Network.AWS.EC2.ModifyHosts",
      "Network.AWS.EC2.ModifyIdFormat",
      "Network.AWS.EC2.ModifyImageAttribute",
      "Network.AWS.EC2.ModifyInstanceAttribute",
      "Network.AWS.EC2.ModifyInstancePlacement",
      "Network.AWS.EC2.ModifyNetworkInterfaceAttribute",
      "Network.AWS.EC2.ModifyReservedInstances",
      "Network.AWS.EC2.ModifySnapshotAttribute",
      "Network.AWS.EC2.ModifySpotFleetRequest",
      "Network.AWS.EC2.ModifySubnetAttribute",
      "Network.AWS.EC2.ModifyVPCAttribute",
      "Network.AWS.EC2.ModifyVPCEndpoint",
      "Network.AWS.EC2.ModifyVPCPeeringConnectionOptions",
      "Network.AWS.EC2.ModifyVolumeAttribute",
      "Network.AWS.EC2.MonitorInstances",
      "Network.AWS.EC2.MoveAddressToVPC",
      "Network.AWS.EC2.PurchaseReservedInstancesOffering",
      "Network.AWS.EC2.PurchaseScheduledInstances",
      "Network.AWS.EC2.RebootInstances",
      "Network.AWS.EC2.RegisterImage",
      "Network.AWS.EC2.RejectVPCPeeringConnection",
      "Network.AWS.EC2.ReleaseAddress",
      "Network.AWS.EC2.ReleaseHosts",
      "Network.AWS.EC2.ReplaceNetworkACLAssociation",
      "Network.AWS.EC2.ReplaceNetworkACLEntry",
      "Network.AWS.EC2.ReplaceRoute",
      "Network.AWS.EC2.ReplaceRouteTableAssociation",
      "Network.AWS.EC2.ReportInstanceStatus",
      "Network.AWS.EC2.RequestSpotFleet",
      "Network.AWS.EC2.RequestSpotInstances",
      "Network.AWS.EC2.ResetImageAttribute",
      "Network.AWS.EC2.ResetInstanceAttribute",
      "Network.AWS.EC2.ResetNetworkInterfaceAttribute",
      "Network.AWS.EC2.ResetSnapshotAttribute",
      "Network.AWS.EC2.RestoreAddressToClassic",
      "Network.AWS.EC2.RevokeSecurityGroupEgress",
      "Network.AWS.EC2.RevokeSecurityGroupIngress",
      "Network.AWS.EC2.RunInstances",
      "Network.AWS.EC2.RunScheduledInstances",
      "Network.AWS.EC2.StartInstances",
      "Network.AWS.EC2.StopInstances",
      "Network.AWS.EC2.TerminateInstances",
      "Network.AWS.EC2.Types",
      "Network.AWS.EC2.UnassignPrivateIPAddresses",
      "Network.AWS.EC2.UnmonitorInstances",
      "Network.AWS.EC2.Waiters"
    ],
    "name": "amazonka-ec2",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode",
        "Data.Aeson.Parser",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.Number"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Fixed",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Word",
        "Numeric",
        "Numeric.Natural",
        "Prelude",
        "System.IO",
        "System.Timeout"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "blaze-markup": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Set"
      ],
      "exceptions": [],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "resource-pool": [
        "Data.Pool"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource",
        "Data.Acquire"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "silently": [
        "System.IO.Silently"
      ],
      "tagged": [],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.Writer"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Reader",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Writer",
      "Data.Acquire",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Parser",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.Number",
      "Database.Persist",
      "Database.Persist.Class",
      "Database.Persist.Class.DeleteCascade",
      "Database.Persist.Class.PersistConfig",
      "Database.Persist.Class.PersistEntity",
      "Database.Persist.Class.PersistField",
      "Database.Persist.Class.PersistQuery",
      "Database.Persist.Class.PersistStore",
      "Database.Persist.Class.PersistUnique",
      "Database.Persist.Quasi",
      "Database.Persist.Sql.Class",
      "Database.Persist.Sql.Internal",
      "Database.Persist.Sql.Migration",
      "Database.Persist.Sql.Orphan.PersistQuery",
      "Database.Persist.Sql.Orphan.PersistStore",
      "Database.Persist.Sql.Orphan.PersistUnique",
      "Database.Persist.Sql.Raw",
      "Database.Persist.Sql.Run",
      "Database.Persist.Sql.Types",
      "Database.Persist.Sql.Types.Internal",
      "Database.Persist.Sql.Util",
      "Database.Persist.Types",
      "Database.Persist.Types.Base",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Fixed",
      "Data.Functor",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Pool",
      "Data.Proxy",
      "Data.Scientific",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Read",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Vector",
      "Data.Word",
      "Language.Haskell.TH.Syntax",
      "Numeric",
      "Numeric.Natural",
      "Prelude",
      "System.IO",
      "System.IO.Silently",
      "System.Locale",
      "System.Log.FastLogger",
      "System.Timeout",
      "Test.Hspec",
      "Text.Blaze.Html",
      "Text.Blaze.Html.Renderer.Text",
      "Web.HttpApiData",
      "Web.PathPieces"
    ],
    "modules": [
      "Database.Persist",
      "Database.Persist.Quasi",
      "Database.Persist.Types",
      "Database.Persist.Class",
      "Database.Persist.Sql",
      "Database.Persist.Sql.Util",
      "Database.Persist.Sql.Types.Internal"
    ],
    "name": "persistent",
    "version": "2.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude"
      ],
      "containers": [],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.List",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Arrow.Kleisli.Class",
      "Control.Arrow.List.Class",
      "Control.Arrow.ListLike.Class",
      "Control.Category",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.List",
      "Control.Monad.Sequence",
      "Control.Monad.Trans",
      "Data.Foldable",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Traversable",
      "Prelude"
    ],
    "modules": [
      "Control.Arrow.Kleisli.Class",
      "Control.Arrow.List.Class",
      "Control.Arrow.ListLike.Class",
      "Control.Arrow.List",
      "Control.Arrow.Sequence",
      "Control.Monad.Sequence"
    ],
    "name": "arrow-list",
    "version": "0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Foreign.C",
        "GHC.IO.Handle.FD",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Internals",
        "System.Posix.Types"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Exception",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Data.Bits",
      "Distribution.Compat.Exception",
      "Distribution.Compat.TempFile",
      "Foreign.C",
      "GHC.Handle",
      "GHC.IO.Handle.FD",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.Posix",
      "System.Posix.Internals",
      "System.Posix.Types"
    ],
    "modules": [
      "System.IO.Temp"
    ],
    "name": "temporary-rc",
    "version": "1.2.0.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Monad.IO.Class",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.String",
        "Data.Typeable",
        "GHC.Generics"
      ],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "lens": [
        "Control.Lens"
      ],
      "lens-aeson": [
        "Data.Aeson.Lens"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader"
      ],
      "servant": [
        "Servant.API"
      ],
      "servant-client": [
        "Servant.Client"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Data.Aeson",
      "Data.Aeson.Lens",
      "Data.Aeson.Types",
      "Data.Data",
      "Data.Foldable",
      "Data.List",
      "Data.Monoid",
      "Data.Proxy",
      "Data.String",
      "Data.Text",
      "Data.Time.Clock",
      "Data.Typeable",
      "GHC.Generics",
      "Network.HTTP.Client",
      "Servant.API",
      "Servant.Client",
      "System.FilePath.Glob",
      "Test.DocTest",
      "Web.HttpApiData",
      "Web.Yahoo.Finance.API",
      "Web.Yahoo.Finance.API.CSV",
      "Web.Yahoo.Finance.API.JSON",
      "Web.Yahoo.Finance.API.JSON.Internal",
      "Web.Yahoo.Finance.API.YQL",
      "Web.Yahoo.Finance.Types"
    ],
    "modules": [
      "Web.Yahoo.Finance",
      "Web.Yahoo.Finance.API",
      "Web.Yahoo.Finance.API.CSV",
      "Web.Yahoo.Finance.API.JSON",
      "Web.Yahoo.Finance.API.JSON.Internal",
      "Web.Yahoo.Finance.API.YQL",
      "Web.Yahoo.Finance.Types"
    ],
    "name": "yahoo-finance-api",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Foldable",
      "Data.LCA.View",
      "Data.Monoid",
      "Data.Traversable",
      "Prelude",
      "Test.DocTest"
    ],
    "modules": [
      "Data.LCA.Online",
      "Data.LCA.Online.Monoidal",
      "Data.LCA.Online.Naive",
      "Data.LCA.View"
    ],
    "name": "lca",
    "version": "0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Types",
        "GHC.IO.Encoding",
        "GHC.IO.Encoding.Failure",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Foldable",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.Types",
      "GHC.IO.Encoding",
      "GHC.IO.Encoding.Failure",
      "Prelude",
      "System.Console.Haskeline",
      "System.Console.Haskeline.Backend",
      "System.Console.Haskeline.Backend.DumbTerm",
      "System.Console.Haskeline.Backend.Posix",
      "System.Console.Haskeline.Backend.Posix.Encoder",
      "System.Console.Haskeline.Backend.Posix.IConv",
      "System.Console.Haskeline.Backend.Terminfo",
      "System.Console.Haskeline.Backend.WCWidth",
      "System.Console.Haskeline.Backend.Win32",
      "System.Console.Haskeline.Command",
      "System.Console.Haskeline.Command.Completion",
      "System.Console.Haskeline.Command.History",
      "System.Console.Haskeline.Command.KillRing",
      "System.Console.Haskeline.Command.Undo",
      "System.Console.Haskeline.Completion",
      "System.Console.Haskeline.Directory",
      "System.Console.Haskeline.Emacs",
      "System.Console.Haskeline.History",
      "System.Console.Haskeline.InputT",
      "System.Console.Haskeline.IO",
      "System.Console.Haskeline.Key",
      "System.Console.Haskeline.LineState",
      "System.Console.Haskeline.MonadException",
      "System.Console.Haskeline.Monads",
      "System.Console.Haskeline.Prefs",
      "System.Console.Haskeline.Recover",
      "System.Console.Haskeline.RunCommand",
      "System.Console.Haskeline.Term",
      "System.Console.Haskeline.Vi",
      "System.Console.Terminfo",
      "System.Console.Terminfo.Base",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.IO.Error"
    ],
    "modules": [
      "System.Console.Haskeline",
      "System.Console.Haskeline.Completion",
      "System.Console.Haskeline.MonadException",
      "System.Console.Haskeline.History",
      "System.Console.Haskeline.IO"
    ],
    "name": "haskeline",
    "version": "0.7.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Prelude",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Reader",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.IntMap",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Tree",
      "Data.Vector",
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Data.IOData",
      "Data.Builder",
      "Data.ChunkedZip"
    ],
    "name": "chunked-data",
    "version": "0.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "System.Environment"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "syb": [
        "Data.Generics"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Data.Functor.Identity",
      "Data.Generics",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Lambdabot.Parser",
      "Lambdabot.Pointful",
      "Language.Haskell.Exts",
      "System.Environment"
    ],
    "modules": [
      "Lambdabot.Pointful"
    ],
    "name": "pointful",
    "version": "1.0.8"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Arbitrary",
        "Test.QuickCheck.Gen"
      ],
      "array": [
        "Data.Array.IArray",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Int",
        "Data.Ratio",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "old-time": [
        "System.Time"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.TAI"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Array.IArray",
      "Data.Array.Unboxed",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Map",
      "Data.Ratio",
      "Data.Scientific",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.Time.Clock.TAI",
      "Data.Tree",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "System.Time",
      "Test.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Function",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Instances.LegacyNumeric"
    ],
    "modules": [
      "Test.QuickCheck.Instances"
    ],
    "name": "quickcheck-instances",
    "version": "0.3.12"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.LatencyTest",
      "Network.Google.LatencyTest.Types",
      "Network.Google.Resource.Cloudlatencytest.Statscollection.Updateaggregatedstats",
      "Network.Google.Resource.Cloudlatencytest.Statscollection.Updatestats"
    ],
    "name": "gogol-latencytest",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Traversable",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Traversable",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Codec.Text.Detect"
    ],
    "name": "charsetdetect-ae",
    "version": "1.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.IORef",
        "Data.STRef"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Cont",
      "Control.Monad.Prompt",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.IORef",
      "Data.STRef"
    ],
    "modules": [
      "Control.Monad.Prompt"
    ],
    "name": "MonadPrompt",
    "version": "1.0.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Prelude",
        "System.Environment",
        "Text.Read"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Prelude",
      "System.Environment",
      "System.FilePath.Glob",
      "Test.DocTest",
      "Text.Read"
    ],
    "modules": [
      "System.ReadEnvVar"
    ],
    "name": "read-env-var",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.InstalledPackageInfo",
        "Distribution.License",
        "Distribution.ModuleName",
        "Distribution.Package",
        "Distribution.ParseUtils",
        "Distribution.Simple.Compiler",
        "Distribution.Simple.Utils",
        "Distribution.Text",
        "Distribution.Verbosity"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Version",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Extension"
      ],
      "hse-cpp": [
        "Language.Haskell.Exts.Annotated.CPP"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Types"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "transformers": [
        "Control.Monad.Trans.Except"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Cont",
      "Control.Monad.Error",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans.Except",
      "Control.Monad.Writer",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Tagged",
      "Data.Typeable",
      "Data.Version",
      "Distribution.HaskellSuite.Compiler",
      "Distribution.HaskellSuite.Modules",
      "Distribution.HaskellSuite.Packages",
      "Distribution.InstalledPackageInfo",
      "Distribution.License",
      "Distribution.ModuleName",
      "Distribution.Package",
      "Distribution.ParseUtils",
      "Distribution.Simple.Compiler",
      "Distribution.Simple.Utils",
      "Distribution.Text",
      "Distribution.Verbosity",
      "Language.Haskell.Exts.Annotated.CPP",
      "Language.Haskell.Exts.Extension",
      "Options.Applicative",
      "Options.Applicative.Types",
      "Paths",
      "System.Directory",
      "System.FilePath",
      "Text.Printf"
    ],
    "modules": [
      "Distribution.HaskellSuite",
      "Distribution.HaskellSuite.Compiler",
      "Distribution.HaskellSuite.Packages",
      "Distribution.HaskellSuite.Modules"
    ],
    "name": "haskell-packages",
    "version": "0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.IORef",
        "Data.Monoid",
        "System.IO"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ],
      "bytestring-builder": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "network": [],
      "text": [],
      "transformers": [],
      "vault": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.IORef",
      "Data.Monoid",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Internal",
      "System.IO",
      "Test.Hspec",
      "Test.Hspec.QuickCheck"
    ],
    "modules": [
      "Network.Wai",
      "Network.Wai.Internal"
    ],
    "name": "wai",
    "version": "3.2.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe"
      ],
      "containers": [
        "Data.Map"
      ],
      "hmatrix": [],
      "hmatrix-gsl": [],
      "hmatrix-special": [],
      "hquantlib": [],
      "mersenne-random": [],
      "parallel": [],
      "statistics": [],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Calendar.WeekDate",
        "Data.Time.LocalTime"
      ],
      "vector": [
        "Data.Vector.Unboxed"
      ],
      "vector-algorithms": []
    },
    "imports": [
      "Data.Map",
      "Data.Maybe",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Calendar.WeekDate",
      "Data.Time.LocalTime",
      "Data.Vector.Unboxed",
      "QuantLib.Currencies.America",
      "QuantLib.Currencies.Europe",
      "QuantLib.Currency",
      "QuantLib.Event",
      "QuantLib.Instruments.Instrument",
      "QuantLib.Instruments.Stock",
      "QuantLib.Math",
      "QuantLib.Math.Copulas",
      "QuantLib.Math.InverseNormal",
      "QuantLib.Models.Volatility",
      "QuantLib.Money",
      "QuantLib.Options",
      "QuantLib.Position",
      "QuantLib.Priceable",
      "QuantLib.Prices",
      "QuantLib.PricingEngines.BlackFormula",
      "QuantLib.Stochastic",
      "QuantLib.Stochastic.Discretize",
      "QuantLib.Stochastic.Process",
      "QuantLib.Stochastic.Random",
      "QuantLib.Time.Date",
      "QuantLib.Time.DayCounter",
      "QuantLib.TimeSeries",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck"
    ],
    "modules": [
      "QuantLib",
      "QuantLib.Event",
      "QuantLib.Instruments",
      "QuantLib.Currencies",
      "QuantLib.Stochastic",
      "QuantLib.Priceable",
      "QuantLib.PricingEngines",
      "QuantLib.PricingEngines.BlackFormula",
      "QuantLib.Quotes",
      "QuantLib.Time",
      "QuantLib.TimeSeries",
      "QuantLib.Money",
      "QuantLib.Math",
      "QuantLib.Math.Copulas",
      "QuantLib.Models",
      "QuantLib.Models.Volatility",
      "QuantLib.Prices",
      "QuantLib.Position",
      "QuantLib.Options",
      "QuantLib.Methods.MonteCarlo"
    ],
    "name": "hquantlib",
    "version": "0.0.3.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Traversable",
        "GHC.Generics",
        "Prelude",
        "System.Exit"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "deepseq-generics": [
        "Control.DeepSeq.Generics"
      ],
      "heap": [
        "Data.Heap"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.DeepSeq.Generics",
      "Control.Monad",
      "Control.Monad.Random",
      "Criterion.Main",
      "Data.Bits",
      "Data.Foldable",
      "Data.Function",
      "Data.Heap",
      "Data.KdMap.Dynamic",
      "Data.KdMap.Static",
      "Data.KdTree.Dynamic",
      "Data.KdTree.Static",
      "Data.List",
      "Data.Maybe",
      "Data.Ord",
      "Data.Point2d",
      "Data.Traversable",
      "GHC.Generics",
      "Prelude",
      "System.Exit",
      "System.Random.Mersenne.Pure64",
      "Test.QuickCheck",
      "Test.QuickCheck.All"
    ],
    "modules": [
      "Data.KdMap.Static",
      "Data.KdTree.Static",
      "Data.KdMap.Dynamic",
      "Data.KdTree.Dynamic"
    ],
    "name": "kdt",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Coerce",
        "Data.Int",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.Concurrent",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.OverloadedLabels",
        "GHC.Stack",
        "GHC.TypeLits"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Coerce",
      "Data.GI.Base.Attributes",
      "Data.GI.Base.BasicConversions",
      "Data.GI.Base.BasicTypes",
      "Data.GI.Base.Closure",
      "Data.GI.Base.Constructible",
      "Data.GI.Base.GError",
      "Data.GI.Base.GHashTable",
      "Data.GI.Base.GObject",
      "Data.GI.Base.GParamSpec",
      "Data.GI.Base.GType",
      "Data.GI.Base.GValue",
      "Data.GI.Base.GVariant",
      "Data.GI.Base.ManagedPtr",
      "Data.GI.Base.Overloading",
      "Data.GI.Base.Properties",
      "Data.GI.Base.Signals",
      "Data.GI.Base.Utils",
      "Data.Int",
      "Data.Proxy",
      "Data.Text",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.Concurrent",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "GHC.OverloadedLabels",
      "GHC.Stack",
      "GHC.TypeLits"
    ],
    "modules": [
      "Data.GI.Base",
      "Data.GI.Base.Attributes",
      "Data.GI.Base.BasicConversions",
      "Data.GI.Base.BasicTypes",
      "Data.GI.Base.Closure",
      "Data.GI.Base.Constructible",
      "Data.GI.Base.GError",
      "Data.GI.Base.GHashTable",
      "Data.GI.Base.GObject",
      "Data.GI.Base.GType",
      "Data.GI.Base.GValue",
      "Data.GI.Base.GVariant",
      "Data.GI.Base.ManagedPtr",
      "Data.GI.Base.GParamSpec",
      "Data.GI.Base.Overloading",
      "Data.GI.Base.Properties",
      "Data.GI.Base.ShortPrelude",
      "Data.GI.Base.Signals",
      "Data.GI.Base.Utils"
    ],
    "name": "haskell-gi-base",
    "version": "0.18.4"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [],
      "authenticate-oauth": [
        "Web.Authenticate.OAuth"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Attoparsec",
        "Data.Conduit.Binary"
      ],
      "containers": [
        "Data.Map"
      ],
      "data-default": [
        "Data.Default"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-client": [
        "Network.HTTP.Client",
        "Network.HTTP.Client.MultipartFormData"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar"
      ],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "twitter-types": [
        "Web.Twitter.Types"
      ],
      "twitter-types-lens": [
        "Web.Twitter.Types.Lens"
      ]
    },
    "imports": [
      "Build",
      "Common",
      "Control.Applicative",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Resource",
      "Data.Aeson",
      "Data.Aeson.Lens",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Attoparsec",
      "Data.Conduit.Binary",
      "Data.Conduit.Internal",
      "Data.Conduit.List",
      "Data.Data",
      "Data.Default",
      "Data.Foldable",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Traversable",
      "Data.Typeable",
      "Language.Haskell.HLint",
      "Language.Haskell.TH",
      "Network.HTTP.Client",
      "Network.HTTP.Client.MultipartFormData",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.URI",
      "Prelude",
      "Spec",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "Test.DocTest",
      "Test.Hspec",
      "TestUtils",
      "Unsafe.Coerce",
      "Web.Authenticate.OAuth",
      "Web.Scotty",
      "Web.Twitter.Conduit",
      "Web.Twitter.Conduit.Api",
      "Web.Twitter.Conduit.Base",
      "Web.Twitter.Conduit.Cursor",
      "Web.Twitter.Conduit.Lens",
      "Web.Twitter.Conduit.Parameters",
      "Web.Twitter.Conduit.Parameters.TH",
      "Web.Twitter.Conduit.Request",
      "Web.Twitter.Conduit.Response",
      "Web.Twitter.Conduit.Status",
      "Web.Twitter.Conduit.Stream",
      "Web.Twitter.Conduit.Types",
      "Web.Twitter.Types",
      "Web.Twitter.Types.Lens"
    ],
    "modules": [
      "Web.Twitter.Conduit",
      "Web.Twitter.Conduit.Lens",
      "Web.Twitter.Conduit.Types",
      "Web.Twitter.Conduit.Api",
      "Web.Twitter.Conduit.Stream",
      "Web.Twitter.Conduit.Status",
      "Web.Twitter.Conduit.Base",
      "Web.Twitter.Conduit.Request",
      "Web.Twitter.Conduit.Response",
      "Web.Twitter.Conduit.Cursor",
      "Web.Twitter.Conduit.Parameters",
      "Web.Twitter.Conduit.Parameters.TH"
    ],
    "name": "twitter-conduit",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "asn1-encoding": [
        "Data.ASN1.BinaryEncoding",
        "Data.ASN1.Encoding"
      ],
      "asn1-types": [
        "Data.ASN1.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [],
      "cryptonite": [
        "Crypto.Hash",
        "Crypto.Number.Basic",
        "Crypto.Number.Serialize",
        "Crypto.PubKey.DSA",
        "Crypto.PubKey.ECC.ECDSA",
        "Crypto.PubKey.ECC.Prim",
        "Crypto.PubKey.ECC.Types",
        "Crypto.PubKey.RSA.PKCS15"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "hourglass": [
        "Data.Hourglass",
        "System.Hourglass"
      ],
      "memory": [
        "Data.ByteArray"
      ],
      "mtl": [],
      "pem": [],
      "x509": [
        "Data.X509"
      ],
      "x509-store": [
        "Data.X509.CertificateStore"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Monad",
      "Crypto.Hash",
      "Crypto.Number.Basic",
      "Crypto.Number.Serialize",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.ECC.ECDSA",
      "Crypto.PubKey.ECC.Prim",
      "Crypto.PubKey.ECC.Types",
      "Crypto.PubKey.RSA.PKCS15",
      "Data.ASN1.BinaryEncoding",
      "Data.ASN1.Encoding",
      "Data.ASN1.Types",
      "Data.Byteable",
      "Data.ByteArray",
      "Data.ByteString",
      "Data.Char",
      "Data.Default.Class",
      "Data.Hourglass",
      "Data.List",
      "Data.Maybe",
      "Data.X509",
      "Data.X509.CertificateStore",
      "Data.X509.Validation.Cache",
      "Data.X509.Validation.Fingerprint",
      "Data.X509.Validation.Signature",
      "Data.X509.Validation.Types",
      "System.Hourglass"
    ],
    "modules": [
      "Data.X509.Validation"
    ],
    "name": "x509-validation",
    "version": "1.6.5"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Traversable",
        "Data.Tuple",
        "GHC.Generics",
        "Prelude",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "cron": [
        "System.Cron.Parser",
        "System.Cron.Schedule"
      ],
      "directory": [
        "System.Directory"
      ],
      "email-validate": [
        "Text.Email.Validate"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hslogger": [
        "System.Log.Logger"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "lens": [
        "Control.Lens",
        "Data.ByteString.Lens",
        "Data.Text.Lens"
      ],
      "mime-mail": [
        "Network.Mail.Mime"
      ],
      "network-uri": [
        "Network.URI"
      ],
      "semigroups": [],
      "strict": [
        "System.IO.Strict"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "validation": [
        "Data.Validation"
      ],
      "wreq": [
        "Network.Wreq"
      ]
    },
    "imports": [
      "Control.Concurrent.Async",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lens",
      "Data.Foldable",
      "Data.Functor",
      "Data.Hashable",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lens",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Validation",
      "GHC.Generics",
      "Network.HTTP.Client",
      "Network.Mail.Mime",
      "Network.ScrapeChanges",
      "Network.ScrapeChanges.Domain",
      "Network.ScrapeChanges.Internal",
      "Network.ScrapeChanges.Internal.Test",
      "Network.URI",
      "Network.Wreq",
      "Prelude",
      "System.Cron.Parser",
      "System.Cron.Schedule",
      "System.Directory",
      "System.FilePath",
      "System.IO.Error",
      "System.IO.Strict",
      "System.Log.Logger",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Email.Validate",
      "Text.Shakespeare.Text"
    ],
    "modules": [
      "Network.ScrapeChanges",
      "Network.ScrapeChanges.Domain",
      "Network.ScrapeChanges.Internal"
    ],
    "name": "scrape-changes",
    "version": "0.1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hxt": [
        "Text.XML.HXT.Core"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.Trans"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "process": [
        "System.Process"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.Trans",
      "Data.List",
      "Data.List.Split",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Typeable",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "Text.ParserCombinators.Parsec",
      "Text.XML.HXT.Core",
      "VCSWrapper.Common.Process",
      "VCSWrapper.Common.TemporaryFiles",
      "VCSWrapper.Common.Types",
      "VCSWrapper.Common.VCSMonad",
      "VCSWrapper.Git.Parsers",
      "VCSWrapper.Git.Process",
      "VCSWrapper.Git.Types",
      "VCSWrapper.Mercurial",
      "VCSWrapper.Mercurial.Parsers",
      "VCSWrapper.Mercurial.Process",
      "VCSWrapper.Mercurial.Types",
      "VCSWrapper.Svn",
      "VCSWrapper.Svn.Parsers",
      "VCSWrapper.Svn.Process",
      "VCSWrapper.Svn.Types"
    ],
    "modules": [
      "VCSWrapper.Common",
      "VCSWrapper.Git",
      "VCSWrapper.Svn",
      "VCSWrapper.Mercurial"
    ],
    "name": "vcswrapper",
    "version": "0.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.List",
        "Data.Monoid",
        "Prelude"
      ],
      "mtl": [
        "Control.Monad.Identity"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Identity",
      "Data.Edison.Assoc",
      "Data.Edison.Coll",
      "Data.Edison.Prelude",
      "Data.Edison.Seq",
      "Data.Edison.Seq.ListSeq",
      "Data.List",
      "Data.Monoid",
      "Prelude"
    ],
    "modules": [
      "Data.Edison",
      "Data.Edison.Prelude",
      "Data.Edison.Sym",
      "Data.Edison.Assoc",
      "Data.Edison.Coll",
      "Data.Edison.Coll.Utils",
      "Data.Edison.Seq",
      "Data.Edison.Seq.ListSeq"
    ],
    "name": "EdisonAPI",
    "version": "1.3.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "GHC.IO.Handle.Types",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem.Weak",
        "System.Timeout"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc-prim": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "mime-types": [
        "Network.Mime"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "random": [
        "System.Random"
      ],
      "streaming-commons": [
        "Data.Streaming.Network",
        "Data.Streaming.Zlib"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.State.Strict",
      "Data.Array.Base",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Default.Class",
      "Data.Foldable",
      "Data.Function",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Streaming.Network",
      "Data.Streaming.Zlib",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Read",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "GHC.Generics",
      "GHC.IO.Handle.Types",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Body",
      "Network.HTTP.Client.Connection",
      "Network.HTTP.Client.Cookies",
      "Network.HTTP.Client.Core",
      "Network.HTTP.Client.Headers",
      "Network.HTTP.Client.Internal",
      "Network.HTTP.Client.Manager",
      "Network.HTTP.Client.Request",
      "Network.HTTP.Client.Response",
      "Network.HTTP.Client.Types",
      "Network.HTTP.Client.Util",
      "Network.HTTP.Types",
      "Network.Mime",
      "Network.PublicSuffixList.Create",
      "Network.PublicSuffixList.DataStructure",
      "Network.PublicSuffixList.Lookup",
      "Network.PublicSuffixList.Serialize",
      "Network.PublicSuffixList.Types",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.URI",
      "Numeric",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Mem.Weak",
      "System.Random",
      "System.Timeout",
      "Test.Hspec",
      "Web.Cookie"
    ],
    "modules": [
      "Network.HTTP.Client",
      "Network.HTTP.Client.MultipartFormData",
      "Network.HTTP.Client.Internal"
    ],
    "name": "http-client",
    "version": "0.4.31.1"
  },
  {
    "dependencies": {
      "base": [],
      "hsndfile": [
        "Sound.File.Sndfile",
        "Sound.File.Sndfile.Buffer"
      ],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Data.Vector.Generic",
      "Data.Vector.Storable",
      "Sound.File.Sndfile",
      "Sound.File.Sndfile.Buffer",
      "Sound.File.Sndfile.Buffer.Vector"
    ],
    "modules": [
      "Sound.File.Sndfile.Buffer.Vector",
      "Sound.File.Sndfile.Buffer.Vector.Examples"
    ],
    "name": "hsndfile-vector",
    "version": "0.5.2"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes"
      ],
      "blaze-markup": [
        "Text.Blaze.Internal"
      ],
      "clay": [
        "Clay"
      ],
      "comonad": [],
      "lucid": [
        "Lucid"
      ],
      "mmorph": [],
      "monad-control": [],
      "monad-logger": [],
      "mtl": [],
      "path-extra": [],
      "resourcet": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "transformers-base": [],
      "urlpath": []
    },
    "imports": [
      "Clay",
      "Data.Markup.Class",
      "Data.Markup.Library",
      "Data.Markup.Types",
      "Data.Text",
      "Data.Text.Lazy",
      "Lucid",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Internal"
    ],
    "modules": [
      "Data.Markup",
      "Data.Markup.Types",
      "Data.Markup.Class",
      "Data.Markup.Library"
    ],
    "name": "markup",
    "version": "3.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Typeable",
        "Prelude"
      ],
      "bytestring": [],
      "containers": [],
      "protocol-buffers": [
        "Text.ProtocolBuffers",
        "Text.ProtocolBuffers.Header",
        "Text.ProtocolBuffers.Reflections",
        "Text.ProtocolBuffers.WireMessage"
      ]
    },
    "imports": [
      "Data.Data",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Typeable",
      "Prelude",
      "Text.DescriptorProtos",
      "Text.DescriptorProtos.DescriptorProto",
      "Text.DescriptorProtos.DescriptorProto.ExtensionRange",
      "Text.DescriptorProtos.DescriptorProto.ReservedRange",
      "Text.DescriptorProtos.EnumDescriptorProto",
      "Text.DescriptorProtos.EnumOptions",
      "Text.DescriptorProtos.EnumValueDescriptorProto",
      "Text.DescriptorProtos.EnumValueOptions",
      "Text.DescriptorProtos.FieldDescriptorProto",
      "Text.DescriptorProtos.FieldDescriptorProto.Label",
      "Text.DescriptorProtos.FieldDescriptorProto.Type",
      "Text.DescriptorProtos.FieldOptions",
      "Text.DescriptorProtos.FieldOptions.CType",
      "Text.DescriptorProtos.FieldOptions.JSType",
      "Text.DescriptorProtos.FileDescriptorProto",
      "Text.DescriptorProtos.FileOptions",
      "Text.DescriptorProtos.FileOptions.OptimizeMode",
      "Text.DescriptorProtos.MessageOptions",
      "Text.DescriptorProtos.MethodDescriptorProto",
      "Text.DescriptorProtos.MethodOptions",
      "Text.DescriptorProtos.OneofDescriptorProto",
      "Text.DescriptorProtos.ServiceDescriptorProto",
      "Text.DescriptorProtos.ServiceOptions",
      "Text.DescriptorProtos.SourceCodeInfo",
      "Text.DescriptorProtos.SourceCodeInfo.Location",
      "Text.DescriptorProtos.UninterpretedOption",
      "Text.DescriptorProtos.UninterpretedOption.NamePart",
      "Text.ProtocolBuffers",
      "Text.ProtocolBuffers.Header",
      "Text.ProtocolBuffers.Reflections",
      "Text.ProtocolBuffers.WireMessage"
    ],
    "modules": [
      "Text.DescriptorProtos.Options",
      "Text.DescriptorProtos",
      "Text.DescriptorProtos.DescriptorProto",
      "Text.DescriptorProtos.DescriptorProto.ExtensionRange",
      "Text.DescriptorProtos.DescriptorProto.ReservedRange",
      "Text.DescriptorProtos.EnumDescriptorProto",
      "Text.DescriptorProtos.EnumOptions",
      "Text.DescriptorProtos.EnumValueDescriptorProto",
      "Text.DescriptorProtos.EnumValueOptions",
      "Text.DescriptorProtos.FieldDescriptorProto",
      "Text.DescriptorProtos.FieldDescriptorProto.Label",
      "Text.DescriptorProtos.FieldDescriptorProto.Type",
      "Text.DescriptorProtos.FieldOptions",
      "Text.DescriptorProtos.FieldOptions.CType",
      "Text.DescriptorProtos.FieldOptions.JSType",
      "Text.DescriptorProtos.FileDescriptorProto",
      "Text.DescriptorProtos.FileDescriptorSet",
      "Text.DescriptorProtos.FileOptions",
      "Text.DescriptorProtos.FileOptions.OptimizeMode",
      "Text.DescriptorProtos.MessageOptions",
      "Text.DescriptorProtos.MethodDescriptorProto",
      "Text.DescriptorProtos.MethodOptions",
      "Text.DescriptorProtos.OneofDescriptorProto",
      "Text.DescriptorProtos.ServiceDescriptorProto",
      "Text.DescriptorProtos.ServiceOptions",
      "Text.DescriptorProtos.SourceCodeInfo",
      "Text.DescriptorProtos.SourceCodeInfo.Location",
      "Text.DescriptorProtos.UninterpretedOption",
      "Text.DescriptorProtos.UninterpretedOption.NamePart"
    ],
    "name": "protocol-buffers-descriptor",
    "version": "2.4.0"
  },
  {
    "dependencies": {
      "ShellCheck": [],
      "base": [
        "Control.Monad.IO.Class",
        "Prelude",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "free": [],
      "language-dockerfile": [],
      "mtl": [],
      "parsec": [
        "Text.Parsec.Token"
      ],
      "pretty": [],
      "split": [],
      "template-haskell": [],
      "th-lift": [],
      "th-lift-instances": [],
      "transformers": []
    },
    "imports": [
      "Control.Monad.IO.Class",
      "Data.ByteString.Char8",
      "Language.Dockerfile.EDSL",
      "Language.Dockerfile.EDSL.Quasi",
      "Language.Dockerfile.EDSL.Types",
      "Language.Dockerfile.Parser",
      "Language.Dockerfile.PrettyPrint",
      "Language.Dockerfile.Syntax",
      "Prelude",
      "System.Environment",
      "Test.Hspec",
      "Text.Parsec.Token"
    ],
    "modules": [
      "Language.Dockerfile",
      "Language.Dockerfile.Parser",
      "Language.Dockerfile.PrettyPrint",
      "Language.Dockerfile.Normalize",
      "Language.Dockerfile.Rules",
      "Language.Dockerfile.Syntax",
      "Language.Dockerfile.Lexer",
      "Language.Dockerfile.Bash",
      "Language.Dockerfile.FormatCheck",
      "Language.Dockerfile.Syntax.Lift",
      "Language.Dockerfile.EDSL",
      "Language.Dockerfile.EDSL.Quasi",
      "Language.Dockerfile.EDSL.Types"
    ],
    "name": "language-dockerfile",
    "version": "0.3.4.0"
  },
  {
    "dependencies": {
      "asn1-encoding": [
        "Data.ASN1.BinaryEncoding",
        "Data.ASN1.Encoding"
      ],
      "asn1-types": [
        "Data.ASN1.Types"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Word",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cereal": [
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ],
      "cryptonite": [
        "Crypto.Cipher.AES",
        "Crypto.Cipher.RC4",
        "Crypto.Cipher.TripleDES",
        "Crypto.Cipher.Types",
        "Crypto.Error",
        "Crypto.Hash",
        "Crypto.Number.Basic",
        "Crypto.Number.Serialize",
        "Crypto.PubKey.DH",
        "Crypto.PubKey.DSA",
        "Crypto.PubKey.ECC.DH",
        "Crypto.PubKey.ECC.ECDSA",
        "Crypto.PubKey.ECC.Prim",
        "Crypto.PubKey.ECC.Types",
        "Crypto.PubKey.RSA",
        "Crypto.PubKey.RSA.PKCS15",
        "Crypto.Random",
        "Crypto.Random.Types"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "memory": [
        "Data.ByteArray"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Error.Class",
        "Control.Monad.Except",
        "Control.Monad.State"
      ],
      "transformers": [],
      "x509": [
        "Data.X509"
      ],
      "x509-store": [
        "Data.X509.CertificateStore",
        "Data.X509.File",
        "Data.X509.Memory"
      ],
      "x509-validation": [
        "Data.X509.Validation"
      ]
    },
    "imports": [
      "Certificate",
      "Ciphers",
      "Connection",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Error.Class",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.State",
      "Criterion.Main",
      "Crypto.Cipher.AES",
      "Crypto.Cipher.RC4",
      "Crypto.Cipher.TripleDES",
      "Crypto.Cipher.Types",
      "Crypto.Error",
      "Crypto.Hash",
      "Crypto.Number.Basic",
      "Crypto.Number.Serialize",
      "Crypto.PubKey.DH",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.ECC.DH",
      "Crypto.PubKey.ECC.ECDSA",
      "Crypto.PubKey.ECC.Prim",
      "Crypto.PubKey.ECC.Types",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.PKCS15",
      "Crypto.Random",
      "Crypto.Random.Types",
      "Data.ASN1.BinaryEncoding",
      "Data.ASN1.Encoding",
      "Data.ASN1.Types",
      "Data.Bits",
      "Data.ByteArray",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Default.Class",
      "Data.Hourglass",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Word",
      "Data.X509",
      "Data.X509.CertificateStore",
      "Data.X509.File",
      "Data.X509.Memory",
      "Data.X509.Validation",
      "Hans.NetworkStack",
      "Marshalling",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.TLS",
      "Network.TLS.Backend",
      "Network.TLS.Cap",
      "Network.TLS.Cipher",
      "Network.TLS.Compression",
      "Network.TLS.Context",
      "Network.TLS.Context.Internal",
      "Network.TLS.Core",
      "Network.TLS.Credentials",
      "Network.TLS.Crypto",
      "Network.TLS.Crypto.DH",
      "Network.TLS.Crypto.ECDH",
      "Network.TLS.ErrT",
      "Network.TLS.Extension",
      "Network.TLS.Extension.EC",
      "Network.TLS.Extra.Cipher",
      "Network.TLS.Handshake",
      "Network.TLS.Handshake.Certificate",
      "Network.TLS.Handshake.Client",
      "Network.TLS.Handshake.Common",
      "Network.TLS.Handshake.Key",
      "Network.TLS.Handshake.Process",
      "Network.TLS.Handshake.Server",
      "Network.TLS.Handshake.Signature",
      "Network.TLS.Handshake.State",
      "Network.TLS.Hooks",
      "Network.TLS.Imports",
      "Network.TLS.Internal",
      "Network.TLS.IO",
      "Network.TLS.MAC",
      "Network.TLS.Measurement",
      "Network.TLS.Packet",
      "Network.TLS.Parameters",
      "Network.TLS.Receiving",
      "Network.TLS.Record",
      "Network.TLS.Record.Disengage",
      "Network.TLS.Record.Engage",
      "Network.TLS.Record.State",
      "Network.TLS.Record.Types",
      "Network.TLS.RNG",
      "Network.TLS.Sending",
      "Network.TLS.Session",
      "Network.TLS.State",
      "Network.TLS.Struct",
      "Network.TLS.Types",
      "Network.TLS.Util",
      "Network.TLS.Util.Serialization",
      "Network.TLS.Wire",
      "Network.TLS.X509",
      "PipeChan",
      "Prelude",
      "PubKey",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Timeout",
      "Test.QuickCheck.Monadic",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Network.TLS",
      "Network.TLS.Cipher",
      "Network.TLS.Compression",
      "Network.TLS.Internal",
      "Network.TLS.Extra",
      "Network.TLS.Extra.Cipher"
    ],
    "name": "tls",
    "version": "1.3.8"
  },
  {
    "dependencies": {
      "base": [],
      "constraints": [],
      "exceptions": [],
      "monad-control": [],
      "monad-unlift": [],
      "mtl": [],
      "mutable-containers": [],
      "resourcet": [],
      "stm": [],
      "transformers": [],
      "transformers-base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Control.Monad.Trans.State.Ref",
      "Control.Monad.Trans.Writer.Ref",
      "Control.Monad.Trans.RWS.Ref"
    ],
    "name": "monad-unlift-ref",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Data.Typeable",
        "Prelude",
        "Text.Read"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Char",
      "Data.Foldable",
      "Data.Heap",
      "Data.Heap.Internal",
      "Data.Heap.Item",
      "Data.List",
      "Data.Monoid",
      "Data.Ord",
      "Data.Typeable",
      "Prelude",
      "Test.Heap",
      "Test.Heap.Common",
      "Test.Heap.Internal",
      "Test.Heap.Item",
      "Test.QuickCheck",
      "Text.Read"
    ],
    "modules": [
      "Data.Heap"
    ],
    "name": "heap",
    "version": "1.0.3"
  },
  {
    "dependencies": {
      "base": [],
      "old-time": [
        "System.Time"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Data.Time",
      "System.Time"
    ],
    "modules": [
      "Data.Time.Compat"
    ],
    "name": "time-compat",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Bits",
      "Data.Int",
      "Data.List",
      "Math.Combinatorics.Exact.Primes"
    ],
    "modules": [
      "Math.Combinatorics.Exact.Primes",
      "Math.Combinatorics.Exact.Factorial",
      "Math.Combinatorics.Exact.Binomial"
    ],
    "name": "exact-combinatorics",
    "version": "0.2.0.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Debug.Trace",
        "Prelude"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "varying": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Varying",
      "Control.Varying.Core",
      "Control.Varying.Event",
      "Control.Varying.Spline",
      "Control.Varying.Time",
      "Control.Varying.Tween",
      "Criterion.Main",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Data.Time.Clock",
      "Debug.Trace",
      "Prelude",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Control.Varying",
      "Control.Varying.Core",
      "Control.Varying.Time",
      "Control.Varying.Event",
      "Control.Varying.Tween",
      "Control.Varying.Spline"
    ],
    "name": "varying",
    "version": "0.5.0.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AppState",
      "Network.Google.AppState.Types",
      "Network.Google.Resource.AppState.States.Clear",
      "Network.Google.Resource.AppState.States.Delete",
      "Network.Google.Resource.AppState.States.Get",
      "Network.Google.Resource.AppState.States.List",
      "Network.Google.Resource.AppState.States.Update"
    ],
    "name": "gogol-appstate",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Either",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Sum",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.Environment"
      ],
      "monad-parallel": [
        "Control.Monad.Parallel"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Coroutine",
      "Control.Monad.Coroutine.Nested",
      "Control.Monad.Coroutine.SuspensionFunctors",
      "Control.Monad.IO.Class",
      "Control.Monad.Parallel",
      "Control.Monad.Trans.Class",
      "Control.Parallel",
      "Criterion.Main",
      "Data.Either",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Sum",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Prelude",
      "System.Environment"
    ],
    "modules": [
      "Control.Monad.Coroutine",
      "Control.Monad.Coroutine.SuspensionFunctors",
      "Control.Monad.Coroutine.Nested"
    ],
    "name": "monad-coroutine",
    "version": "0.9.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "connection": [
        "Network.Connection"
      ],
      "irc-conduit": [
        "Network.IRC.Conduit"
      ],
      "irc-ctcp": [
        "Network.IRC.CTCP"
      ],
      "network-conduit-tls": [
        "Data.Conduit.Network.TLS"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "stm-conduit": [
        "Data.Conduit.TMChan"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Format"
      ],
      "tls": [
        "Network.TLS"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader"
      ],
      "x509": [
        "Data.X509"
      ],
      "x509-store": [
        "Data.X509.CertificateStore"
      ],
      "x509-validation": [
        "Data.X509.Validation"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Reader",
      "Data.ByteString",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Network.TLS",
      "Data.Conduit.TMChan",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.X509",
      "Data.X509.CertificateStore",
      "Data.X509.Validation",
      "Network.Connection",
      "Network.IRC.Client.Handlers",
      "Network.IRC.Client.Internal",
      "Network.IRC.Client.Types",
      "Network.IRC.Client.Utils",
      "Network.IRC.Conduit",
      "Network.IRC.CTCP",
      "Network.TLS",
      "System.Locale"
    ],
    "modules": [
      "Network.IRC.Client",
      "Network.IRC.Client.Handlers",
      "Network.IRC.Client.Types",
      "Network.IRC.Client.Utils",
      "Network.IRC.Client.Internal"
    ],
    "name": "irc-client",
    "version": "0.4.4.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Word",
        "Foreign.C",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Array",
        "GHC.IO.Handle.FD",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Types"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Monad",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Word",
      "Foreign.C",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Array",
      "GHC.IO.Handle.FD",
      "System.IO",
      "System.IO.Error",
      "System.PosixCompat.Files",
      "System.PosixCompat.Internal.Time",
      "System.PosixCompat.Temp",
      "System.PosixCompat.Time",
      "System.PosixCompat.Types",
      "System.PosixCompat.Unistd",
      "System.PosixCompat.User",
      "System.Posix.Temp",
      "System.Posix.Time",
      "System.Posix.Types",
      "System.Posix.Unistd",
      "System.Time"
    ],
    "modules": [
      "System.PosixCompat",
      "System.PosixCompat.Extensions",
      "System.PosixCompat.Files",
      "System.PosixCompat.Temp",
      "System.PosixCompat.Time",
      "System.PosixCompat.Types",
      "System.PosixCompat.Unistd",
      "System.PosixCompat.User"
    ],
    "name": "unix-compat",
    "version": "0.4.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Function",
        "Data.List"
      ],
      "boomerang": [
        "Text.Boomerang",
        "Text.Boomerang.Texts"
      ],
      "mtl": [],
      "parsec": [
        "Text.Parsec.Pos",
        "Text.ParserCombinators.Parsec.Prim"
      ],
      "text": [
        "Data.Text"
      ],
      "web-routes": [
        "Web.Routes"
      ]
    },
    "imports": [
      "Data.Function",
      "Data.List",
      "Data.Text",
      "Text.Boomerang",
      "Text.Boomerang.Texts",
      "Text.Parsec.Pos",
      "Text.ParserCombinators.Parsec.Prim",
      "Web.Routes"
    ],
    "modules": [
      "Web.Routes.Boomerang"
    ],
    "name": "web-routes-boomerang",
    "version": "0.28.4.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.Base",
        "GHC.Exts"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Trans.State.Lazy",
      "Criterion",
      "Criterion.Main",
      "Data.Foldable",
      "Data.List",
      "Data.List.Index",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Vector",
      "Functions",
      "GHC.Base",
      "GHC.Exts",
      "Test.Hspec"
    ],
    "modules": [
      "Data.List.Index"
    ],
    "name": "ilist",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Coerce",
        "Data.Dynamic",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Data.Typeable"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "vinyl": [
        "Data.Vinyl.TypeLevel"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Lens",
      "Criterion.Main",
      "Data.Coerce",
      "Data.Dynamic",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Tagged",
      "Data.Typeable",
      "Data.Union",
      "Data.Union.Prism",
      "Data.Vinyl.TypeLevel"
    ],
    "modules": [
      "Data.Union"
    ],
    "name": "union",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "GHC.Paths"
    ],
    "name": "ghc-paths",
    "version": "0.1.0.9"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CognitoSync",
      "Test.AWS.CognitoSync",
      "Test.AWS.CognitoSync.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CognitoSync",
      "Network.AWS.CognitoSync.BulkPublish",
      "Network.AWS.CognitoSync.DeleteDataset",
      "Network.AWS.CognitoSync.DescribeDataset",
      "Network.AWS.CognitoSync.DescribeIdentityPoolUsage",
      "Network.AWS.CognitoSync.DescribeIdentityUsage",
      "Network.AWS.CognitoSync.GetBulkPublishDetails",
      "Network.AWS.CognitoSync.GetCognitoEvents",
      "Network.AWS.CognitoSync.GetIdentityPoolConfiguration",
      "Network.AWS.CognitoSync.ListDatasets",
      "Network.AWS.CognitoSync.ListIdentityPoolUsage",
      "Network.AWS.CognitoSync.ListRecords",
      "Network.AWS.CognitoSync.RegisterDevice",
      "Network.AWS.CognitoSync.SetCognitoEvents",
      "Network.AWS.CognitoSync.SetIdentityPoolConfiguration",
      "Network.AWS.CognitoSync.SubscribeToDataset",
      "Network.AWS.CognitoSync.Types",
      "Network.AWS.CognitoSync.UnsubscribeFromDataset",
      "Network.AWS.CognitoSync.UpdateRecords",
      "Network.AWS.CognitoSync.Waiters"
    ],
    "name": "amazonka-cognito-sync",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.ReplicaPoolUpdater",
      "Network.Google.ReplicaPoolUpdater.Types",
      "Network.Google.Resource.ReplicaPoolUpdater.RollingUpdates.Cancel",
      "Network.Google.Resource.ReplicaPoolUpdater.RollingUpdates.Get",
      "Network.Google.Resource.ReplicaPoolUpdater.RollingUpdates.Insert",
      "Network.Google.Resource.ReplicaPoolUpdater.RollingUpdates.List",
      "Network.Google.Resource.ReplicaPoolUpdater.RollingUpdates.ListInstanceUpdates",
      "Network.Google.Resource.ReplicaPoolUpdater.RollingUpdates.Pause",
      "Network.Google.Resource.ReplicaPoolUpdater.RollingUpdates.Resume",
      "Network.Google.Resource.ReplicaPoolUpdater.RollingUpdates.Rollback",
      "Network.Google.Resource.ReplicaPoolUpdater.ZoneOperations.Get",
      "Network.Google.Resource.ReplicaPoolUpdater.ZoneOperations.List"
    ],
    "name": "gogol-replicapool-updater",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Aeson",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Text",
      "Data.Vector",
      "Test.Hspec",
      "Test.HUnit",
      "Web.Simple.Templates.Language",
      "Web.Simple.Templates.LanguageSpec",
      "Web.Simple.Templates.Parser",
      "Web.Simple.Templates.ParserSpec",
      "Web.Simple.Templates.Types"
    ],
    "modules": [
      "Web.Simple.Templates.Language",
      "Web.Simple.Templates.Parser",
      "Web.Simple.Templates.Types"
    ],
    "name": "simple-templates",
    "version": "0.8.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "comonad": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "comonad-transformers",
    "version": "4.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.SQL.BackupRuns.Delete",
      "Network.Google.Resource.SQL.BackupRuns.Get",
      "Network.Google.Resource.SQL.BackupRuns.List",
      "Network.Google.Resource.SQL.Databases.Delete",
      "Network.Google.Resource.SQL.Databases.Get",
      "Network.Google.Resource.SQL.Databases.Insert",
      "Network.Google.Resource.SQL.Databases.List",
      "Network.Google.Resource.SQL.Databases.Patch",
      "Network.Google.Resource.SQL.Databases.Update",
      "Network.Google.Resource.SQL.Flags.List",
      "Network.Google.Resource.SQL.Instances.Clone",
      "Network.Google.Resource.SQL.Instances.Delete",
      "Network.Google.Resource.SQL.Instances.Export",
      "Network.Google.Resource.SQL.Instances.Failover",
      "Network.Google.Resource.SQL.Instances.Get",
      "Network.Google.Resource.SQL.Instances.Import",
      "Network.Google.Resource.SQL.Instances.Insert",
      "Network.Google.Resource.SQL.Instances.List",
      "Network.Google.Resource.SQL.Instances.Patch",
      "Network.Google.Resource.SQL.Instances.PromoteReplica",
      "Network.Google.Resource.SQL.Instances.ResetSSLConfig",
      "Network.Google.Resource.SQL.Instances.Restart",
      "Network.Google.Resource.SQL.Instances.RestoreBackup",
      "Network.Google.Resource.SQL.Instances.StartReplica",
      "Network.Google.Resource.SQL.Instances.StopReplica",
      "Network.Google.Resource.SQL.Instances.Update",
      "Network.Google.Resource.SQL.Operations.Get",
      "Network.Google.Resource.SQL.Operations.List",
      "Network.Google.Resource.SQL.SSLCerts.CreateEphemeral",
      "Network.Google.Resource.SQL.SSLCerts.Delete",
      "Network.Google.Resource.SQL.SSLCerts.Get",
      "Network.Google.Resource.SQL.SSLCerts.Insert",
      "Network.Google.Resource.SQL.SSLCerts.List",
      "Network.Google.Resource.SQL.Tiers.List",
      "Network.Google.Resource.SQL.Users.Delete",
      "Network.Google.Resource.SQL.Users.Insert",
      "Network.Google.Resource.SQL.Users.List",
      "Network.Google.Resource.SQL.Users.Update",
      "Network.Google.SQLAdmin",
      "Network.Google.SQLAdmin.Types"
    ],
    "name": "gogol-sqladmin",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Traversable",
        "Data.Typeable"
      ],
      "data-default": [
        "Data.Default"
      ],
      "hashable": [],
      "hspec": [
        "Test.Hspec"
      ],
      "hspec-core": [
        "Test.Hspec.Core.Spec"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "stm": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "unordered-containers": [],
      "webdriver": [
        "Test.WebDriver",
        "Test.WebDriver.Capabilities",
        "Test.WebDriver.Commands",
        "Test.WebDriver.Config",
        "Test.WebDriver.Session"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.State",
      "Data.Aeson",
      "Data.Default",
      "Data.IORef",
      "Data.Text",
      "Data.Traversable",
      "Data.Typeable",
      "Test.Hspec",
      "Test.Hspec.Core.Spec",
      "Test.HUnit",
      "Test.WebDriver",
      "Test.WebDriver.Capabilities",
      "Test.WebDriver.Commands",
      "Test.WebDriver.Config",
      "Test.WebDriver.Session"
    ],
    "modules": [
      "Test.Hspec.WebDriver"
    ],
    "name": "hspec-webdriver",
    "version": "1.2.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.Word"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "io-streams": [
        "System.IO.Streams",
        "System.IO.Streams.Attoparsec"
      ],
      "pdf-toolbox-core": [
        "Pdf.Toolbox.Core",
        "Pdf.Toolbox.Core.Parsers.Object"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Functor",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Word",
      "Pdf.Toolbox.Content.Encoding.MacRoman",
      "Pdf.Toolbox.Content.Encoding.WinAnsi",
      "Pdf.Toolbox.Content.FontInfo",
      "Pdf.Toolbox.Content.GlyphList",
      "Pdf.Toolbox.Content.Ops",
      "Pdf.Toolbox.Content.Parser",
      "Pdf.Toolbox.Content.Processor",
      "Pdf.Toolbox.Content.TexGlyphList",
      "Pdf.Toolbox.Content.Transform",
      "Pdf.Toolbox.Content.UnicodeCMap",
      "Pdf.Toolbox.Core",
      "Pdf.Toolbox.Core.Parsers.Object",
      "System.IO.Streams",
      "System.IO.Streams.Attoparsec"
    ],
    "modules": [
      "Pdf.Toolbox.Content",
      "Pdf.Toolbox.Content.Parser",
      "Pdf.Toolbox.Content.Ops",
      "Pdf.Toolbox.Content.Processor",
      "Pdf.Toolbox.Content.Transform",
      "Pdf.Toolbox.Content.UnicodeCMap",
      "Pdf.Toolbox.Content.FontInfo",
      "Pdf.Toolbox.Content.GlyphList",
      "Pdf.Toolbox.Content.TexGlyphList",
      "Pdf.Toolbox.Content.Encoding.WinAnsi",
      "Pdf.Toolbox.Content.Encoding.MacRoman"
    ],
    "name": "pdf-toolbox-content",
    "version": "0.0.5.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.ModuleName",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Check",
        "Distribution.PackageDescription.Parse",
        "Distribution.System",
        "Distribution.Text",
        "Distribution.Verbosity",
        "Distribution.Version"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Generics",
        "GHC.IO.Handle",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get"
      ],
      "binary-tagged": [
        "Data.Binary.Tagged"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "byteable": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Text"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "cryptohash": [
        "Crypto.Hash",
        "Crypto.Hash.SHA1",
        "Crypto.Hash.SHA256"
      ],
      "cryptohash-conduit": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "edit-distance": [],
      "either": [],
      "enclosed-exceptions": [
        "Control.Exception.Enclosed"
      ],
      "errors": [],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "extra": [],
      "fast-logger": [],
      "filelock": [],
      "filepath": [
        "System.FilePath"
      ],
      "fsnotify": [
        "System.FSNotify"
      ],
      "generic-deriving": [
        "Generics.Deriving.Monoid"
      ],
      "hashable": [],
      "hastache": [],
      "hit": [
        "Data.Git",
        "Data.Git.Ref",
        "Data.Git.Storage",
        "Data.Git.Storage.Object"
      ],
      "hpack": [
        "Hpack",
        "Hpack.Config"
      ],
      "hpc": [],
      "http-client": [],
      "http-client-tls": [],
      "http-conduit": [
        "Network.HTTP.Client.Conduit",
        "Network.HTTP.Conduit"
      ],
      "http-types": [],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "microlens": [
        "Lens.Micro"
      ],
      "monad-control": [],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "monad-unlift": [],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "open-browser": [],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Types"
      ],
      "path": [
        "Path"
      ],
      "path-io": [
        "Path.IO"
      ],
      "persistent": [],
      "persistent-sqlite": [],
      "persistent-template": [],
      "pretty": [],
      "process": [
        "System.Process"
      ],
      "project-template": [],
      "regex-applicative-text": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "retry": [
        "Control.Retry"
      ],
      "safe": [],
      "semigroups": [],
      "split": [],
      "stack": [],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "streaming-commons": [],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Check",
        "Codec.Archive.Tar.Entry"
      ],
      "template-haskell": [],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Read"
      ],
      "text-binary": [],
      "time": [],
      "tls": [],
      "transformers": [
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [],
      "unix-compat": [
        "System.PosixCompat.Files",
        "System.PosixCompat.User"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Unboxed"
      ],
      "vector-binary-instances": [],
      "yaml": [
        "Data.Yaml"
      ],
      "zip-archive": [
        "Codec.Archive.Zip"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Check",
      "Codec.Archive.Tar.Entry",
      "Codec.Archive.Zip",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Exception.Enclosed",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Retry",
      "Crypto.Hash",
      "Crypto.Hash.SHA1",
      "Crypto.Hash.SHA256",
      "Data.Aeson",
      "Data.Aeson.Extended",
      "Data.Aeson.Types",
      "Data.Attoparsec.Interpreter",
      "Data.Attoparsec.Text",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Tagged",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Foldable",
      "Data.Git",
      "Data.Git.Ref",
      "Data.Git.Storage",
      "Data.Git.Storage.Object",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Monoid.Extra",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Read",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "Data.Yaml",
      "Distribution.ModuleName",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Check",
      "Distribution.PackageDescription.Parse",
      "Distribution.System",
      "Distribution.Text",
      "Distribution.Verbosity",
      "Distribution.Version",
      "Generics.Deriving.Monoid",
      "GHC.Generics",
      "GHC.IO.Handle",
      "Hpack",
      "Hpack.Config",
      "Lens.Micro",
      "Network.HTTP.Client.Conduit",
      "Network.HTTP.Conduit",
      "Network.HTTP.Download.Verified",
      "Options.Applicative",
      "Options.Applicative.Args",
      "Options.Applicative.Types",
      "Path",
      "Path.IO",
      "Paths",
      "Prelude",
      "Prelude.Compat",
      "Spec",
      "Stack.BuildPlan",
      "Stack.Config",
      "Stack.Config.Nix",
      "Stack.Constants",
      "Stack.Docker",
      "Stack.Image",
      "Stack.Nix",
      "Stack.PackageDump",
      "Stack.PackageIndex",
      "Stack.Sig",
      "Stack.Sig.GPG",
      "Stack.Sig.Sign",
      "Stack.Types",
      "Stack.Types.Build",
      "Stack.Types.BuildPlan",
      "Stack.Types.Compiler",
      "Stack.Types.Config",
      "Stack.Types.Docker",
      "Stack.Types.FlagName",
      "Stack.Types.GhcPkgId",
      "Stack.Types.Image",
      "Stack.Types.Nix",
      "Stack.Types.Package",
      "Stack.Types.PackageIdentifier",
      "Stack.Types.PackageIndex",
      "Stack.Types.PackageName",
      "Stack.Types.Sig",
      "Stack.Types.StackT",
      "Stack.Types.Urls",
      "Stack.Types.Version",
      "Stack.Upload",
      "System.Console.ANSI",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FSNotify",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.PosixCompat.Files",
      "System.PosixCompat.User",
      "System.Posix.Files",
      "System.Posix.User",
      "System.Process",
      "System.Process.Read",
      "Test.Hspec",
      "Test.Hspec.QuickCheck"
    ],
    "modules": [
      "Control.Concurrent.Execute",
      "Data.Aeson.Extended",
      "Data.Attoparsec.Args",
      "Data.Attoparsec.Combinators",
      "Data.Attoparsec.Interpreter",
      "Data.Binary.VersionTagged",
      "Data.IORef.RunOnce",
      "Data.Maybe.Extra",
      "Data.Monoid.Extra",
      "Distribution.Version.Extra",
      "Network.HTTP.Download",
      "Network.HTTP.Download.Verified",
      "Options.Applicative.Args",
      "Options.Applicative.Builder.Extra",
      "Options.Applicative.Complicated",
      "Path.Extra",
      "Path.Find",
      "Paths_stack",
      "Stack.Build",
      "Stack.Build.Cache",
      "Stack.Build.ConstructPlan",
      "Stack.Build.Execute",
      "Stack.Build.Haddock",
      "Stack.Build.Installed",
      "Stack.Build.Source",
      "Stack.Build.Target",
      "Stack.BuildPlan",
      "Stack.Clean",
      "Stack.Config",
      "Stack.Config.Build",
      "Stack.Config.Urls",
      "Stack.Config.Docker",
      "Stack.Config.Nix",
      "Stack.ConfigCmd",
      "Stack.Constants",
      "Stack.Coverage",
      "Stack.Docker",
      "Stack.Docker.GlobalDB",
      "Stack.Dot",
      "Stack.Exec",
      "Stack.Fetch",
      "Stack.FileWatch",
      "Stack.GhcPkg",
      "Stack.Ghci",
      "Stack.Ide",
      "Stack.Image",
      "Stack.Init",
      "Stack.New",
      "Stack.Nix",
      "Stack.Options",
      "Stack.Package",
      "Stack.PackageDump",
      "Stack.PackageIndex",
      "Stack.SDist",
      "Stack.Setup",
      "Stack.Setup.Installed",
      "Stack.Sig",
      "Stack.Sig.GPG",
      "Stack.Sig.Sign",
      "Stack.Solver",
      "Stack.Types",
      "Stack.Types.Build",
      "Stack.Types.BuildPlan",
      "Stack.Types.Urls",
      "Stack.Types.Compiler",
      "Stack.Types.Config",
      "Stack.Types.Config.Build",
      "Stack.Types.Docker",
      "Stack.Types.FlagName",
      "Stack.Types.GhcPkgId",
      "Stack.Types.Image",
      "Stack.Types.Internal",
      "Stack.Types.Nix",
      "Stack.Types.Package",
      "Stack.Types.PackageIdentifier",
      "Stack.Types.PackageIndex",
      "Stack.Types.PackageName",
      "Stack.Types.Sig",
      "Stack.Types.StackT",
      "Stack.Types.TemplateName",
      "Stack.Types.Version",
      "Stack.Upgrade",
      "Stack.Upload",
      "System.Process.Log",
      "System.Process.PagerEditor",
      "System.Process.Read",
      "System.Process.Run"
    ],
    "name": "stack",
    "version": "1.1.2"
  },
  {
    "dependencies": {
      "async": [],
      "base": [],
      "clock": [],
      "stm": [],
      "time": [],
      "unbounded-delays": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Control.Concurrent.AlarmClock"
    ],
    "name": "alarmclock",
    "version": "0.4.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "Foreign.C",
        "Foreign.ForeignPtr.Unsafe",
        "GHC.Base",
        "GHC.Word",
        "Numeric",
        "Prelude",
        "System.CPUTime",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "deepseq": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.ByteString",
      "Blaze.ByteString.Builder.Char8",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Blaze.ByteString.Builder.Compat.Write",
      "Blaze.ByteString.Builder.Html.Utf8",
      "Blaze.ByteString.Builder.Internal",
      "Blaze.ByteString.Builder.Internal.Write",
      "Blaze.ByteString.Builder.Word",
      "Blaze.ByteString.Builder.Write",
      "Codec.Binary.UTF8.Light",
      "Codec.Binary.UTF8.String",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Reader",
      "Criterion",
      "Criterion.Config",
      "Criterion.Environment",
      "Criterion.Main",
      "Criterion.Monad",
      "Criterion.Types",
      "Data.Accessor",
      "Data.Binary",
      "Data.Binary.Builder",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Base64",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Builder.Internal",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Prim.Internal",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Base",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Colour",
      "Data.Colour.Names",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "Foreign.C",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.UPtr",
      "GHC.Base",
      "GHC.Word",
      "Graphics.Rendering.Chart",
      "Graphics.Rendering.Chart.Grid",
      "Graphics.Rendering.Chart.Gtk",
      "Network",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.ByteString.Lazy",
      "Numeric",
      "Prelude",
      "Statistics.Types",
      "System",
      "System.CPUTime",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Printf",
      "Throughput.BinaryBuilder",
      "Throughput.BinaryBuilderDeclarative",
      "Throughput.BinaryPut",
      "Throughput.BlazeBuilder",
      "Throughput.BlazeBuilderDeclarative",
      "Throughput.BlazePut",
      "Throughput.BlazePutMonad",
      "Throughput.Memory",
      "Throughput.Utils"
    ],
    "modules": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Int",
      "Blaze.ByteString.Builder.Word",
      "Blaze.ByteString.Builder.ByteString",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Blaze.ByteString.Builder.Char8",
      "Blaze.ByteString.Builder.Html.Utf8",
      "Blaze.ByteString.Builder.HTTP",
      "Blaze.ByteString.Builder.Compat.Write",
      "Blaze.ByteString.Builder.Internal.Write"
    ],
    "name": "blaze-builder",
    "version": "0.4.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Version"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ],
      "data-default": [
        "Data.Default"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lens": [
        "Control.Lens"
      ],
      "optparse-applicative": [
        "Options.Applicative.Builder",
        "Options.Applicative.Extra",
        "Options.Applicative.Types"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": [],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Cursor"
      ],
      "xml-hamlet": [
        "Text.Hamlet.XML"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Except",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.State",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.UTF8",
      "Data.CaseInsensitive",
      "Data.Default",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Version",
      "Network",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Network.Protocol.HTTP.DAV",
      "Network.Protocol.HTTP.DAV.TH",
      "Network.URI",
      "Options.Applicative.Builder",
      "Options.Applicative.Extra",
      "Options.Applicative.Types",
      "Paths",
      "System.Console.Haskeline",
      "Text.Hamlet.XML",
      "Text.XML",
      "Text.XML.Cursor"
    ],
    "modules": [
      "Network.Protocol.HTTP.DAV"
    ],
    "name": "DAV",
    "version": "1.3.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "scalpel": [
        "Text.HTML.Scalpel"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Time",
      "System.FilePath",
      "Test.Hspec",
      "Text.HTML.Scalpel",
      "Web.WikiCFP.Scraper",
      "Web.WikiCFP.Scraper.Scalpel",
      "Web.WikiCFP.Scraper.Type"
    ],
    "modules": [
      "Web.WikiCFP.Scraper"
    ],
    "name": "wikicfp-scraper",
    "version": "0.1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "GHC.Generics"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec.Combinator",
        "Text.ParserCombinators.Parsec.Error",
        "Text.ParserCombinators.Parsec.Pos",
        "Text.ParserCombinators.Parsec.Prim"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Read"
      ],
      "utf8-string": [
        "Codec.Binary.UTF8.String"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Codec.Binary.UTF8.String",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Cont",
      "Control.Monad.Error",
      "Control.Monad.Fix",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Read",
      "GHC.Generics",
      "Network.HTTP.Types",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.ParserCombinators.Parsec.Combinator",
      "Text.ParserCombinators.Parsec.Error",
      "Text.ParserCombinators.Parsec.Pos",
      "Text.ParserCombinators.Parsec.Prim",
      "Web.Routes",
      "Web.Routes.Base",
      "Web.Routes.PathInfo",
      "Web.Routes.QuickCheck",
      "Web.Routes.RouteT",
      "Web.Routes.Site"
    ],
    "modules": [
      "Web.Routes",
      "Web.Routes.Base",
      "Web.Routes.PathInfo",
      "Web.Routes.QuickCheck",
      "Web.Routes.RouteT",
      "Web.Routes.Site"
    ],
    "name": "web-routes",
    "version": "0.27.11"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [],
      "bytestring": [],
      "scientific": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Text"
    ],
    "modules": [
      "Data.CSS.Syntax.Tokens"
    ],
    "name": "css-syntax",
    "version": "0.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Map",
      "Data.RFC5051.Types",
      "Data.RFC5051.UnicodeData"
    ],
    "modules": [
      "Data.RFC5051"
    ],
    "name": "rfc5051",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "GHC.Exts",
        "Prelude",
        "Text.Read",
        "Unsafe.Coerce"
      ],
      "containers": [],
      "dependent-sum": [
        "Data.Dependent.Sum",
        "Data.GADT.Compare",
        "Data.Some"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Dependent.Map.Internal",
      "Data.Dependent.Map.PtrEquality",
      "Data.Dependent.Map.Typeable",
      "Data.Dependent.Sum",
      "Data.GADT.Compare",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Some",
      "Data.Typeable",
      "GHC.Exts",
      "Prelude",
      "Text.Read",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Dependent.Map"
    ],
    "name": "dependent-map",
    "version": "0.2.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Class"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "AlphaAssertions",
      "BenchLam",
      "Calc",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.DeepSeq.Generics",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Class",
      "Criterion",
      "Criterion.Main",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Contravariant",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Ratio",
      "Data.Set",
      "Data.Typeable",
      "GHC.Generics",
      "Language.Haskell.TH",
      "ParallelReduction",
      "Prelude",
      "PropOpenClose",
      "TestACompare",
      "TestCalc",
      "TestParallelReduction",
      "Test.QuickCheck",
      "TestShiftEmbed",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "TestTH",
      "TinyLam",
      "Unbound.Generics.LocallyNameless",
      "Unbound.Generics.LocallyNameless.Alpha",
      "Unbound.Generics.LocallyNameless.Bind",
      "Unbound.Generics.LocallyNameless.Embed",
      "Unbound.Generics.LocallyNameless.Fresh",
      "Unbound.Generics.LocallyNameless.Internal.Fold",
      "Unbound.Generics.LocallyNameless.Internal.Iso",
      "Unbound.Generics.LocallyNameless.Internal.Lens",
      "Unbound.Generics.LocallyNameless.LFresh",
      "Unbound.Generics.LocallyNameless.Name",
      "Unbound.Generics.LocallyNameless.Operations",
      "Unbound.Generics.LocallyNameless.Rebind",
      "Unbound.Generics.LocallyNameless.Rec",
      "Unbound.Generics.LocallyNameless.Shift",
      "Unbound.Generics.LocallyNameless.Subst",
      "Unbound.Generics.LocallyNameless.TH",
      "Unbound.Generics.PermM"
    ],
    "modules": [
      "Unbound.Generics.LocallyNameless",
      "Unbound.Generics.LocallyNameless.Name",
      "Unbound.Generics.LocallyNameless.Fresh",
      "Unbound.Generics.LocallyNameless.LFresh",
      "Unbound.Generics.LocallyNameless.Alpha",
      "Unbound.Generics.LocallyNameless.Bind",
      "Unbound.Generics.LocallyNameless.Rebind",
      "Unbound.Generics.LocallyNameless.Embed",
      "Unbound.Generics.LocallyNameless.Shift",
      "Unbound.Generics.LocallyNameless.Operations",
      "Unbound.Generics.LocallyNameless.Unsafe",
      "Unbound.Generics.LocallyNameless.Internal.Fold",
      "Unbound.Generics.LocallyNameless.Internal.Iso",
      "Unbound.Generics.LocallyNameless.Internal.Lens",
      "Unbound.Generics.LocallyNameless.Rec",
      "Unbound.Generics.LocallyNameless.TH",
      "Unbound.Generics.PermM",
      "Unbound.Generics.LocallyNameless.Subst"
    ],
    "name": "unbound-generics",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.List.Split",
      "Data.List.Split.Internals"
    ],
    "name": "split",
    "version": "0.2.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "base-compat": [
        "System.Environment.Compat",
        "System.Exit.Compat"
      ],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "filepath": [
        "System.FilePath.Posix"
      ],
      "hapistrano": [],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "process": [
        "System.Process"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.Trans.Either",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Time",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Environment.Compat",
      "System.Exit",
      "System.Exit.Compat",
      "System.FilePath.Posix",
      "System.Hapistrano",
      "System.Hapistrano.Types",
      "System.IO",
      "System.IO.Temp",
      "System.Process",
      "Test.Hspec"
    ],
    "modules": [
      "System.Hapistrano"
    ],
    "name": "hapistrano",
    "version": "0.2.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Fixed"
      ],
      "lens": [
        "Control.Lens"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Lens",
      "Data.Fixed",
      "Data.Time"
    ],
    "modules": [
      "Data.Time.Timelens"
    ],
    "name": "timelens",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Data.Int",
        "Data.Maybe",
        "Data.String",
        "Data.Typeable",
        "System.IO.Unsafe"
      ],
      "bcrypt": [
        "Crypto.BCrypt"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock"
      ]
    },
    "imports": [
      "Crypto.BCrypt",
      "Data.Aeson",
      "Data.Int",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock",
      "Data.Typeable",
      "System.IO.Unsafe",
      "Web.PathPieces"
    ],
    "modules": [
      "Web.Users.Types"
    ],
    "name": "users",
    "version": "0.5.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Data.Bits",
        "Data.List",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "tasty": [
        "Test.Tasty",
        "Test.Tasty.Providers"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.List",
      "Data.Typeable",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.KAT",
      "Test.Tasty.KAT.FileLoader",
      "Test.Tasty.KAT.Internal",
      "Test.Tasty.Providers"
    ],
    "modules": [
      "Test.Tasty.KAT",
      "Test.Tasty.KAT.FileLoader"
    ],
    "name": "tasty-kat",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "Glob": [
        "System.FilePath.Glob"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode",
        "Data.Aeson.Types"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Version",
        "Data.Word",
        "GHC.Generics",
        "GHC.Stats",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.Mem",
        "System.Timeout",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cassava": [
        "Data.Csv"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "criterion": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hastache": [
        "Text.Hastache",
        "Text.Hastache.Context"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.Trans"
      ],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Help",
        "Options.Applicative.Help.Pretty",
        "Options.Applicative.Types"
      ],
      "parsec": [],
      "statistics": [
        "Statistics.Function",
        "Statistics.Quantile",
        "Statistics.Regression",
        "Statistics.Resampling",
        "Statistics.Resampling.Bootstrap",
        "Statistics.Sample",
        "Statistics.Sample.KernelDensity",
        "Statistics.Types"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ],
      "time": [],
      "transformers": [
        "Control.Monad.Trans.Except"
      ],
      "transformers-compat": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Unboxed"
      ],
      "vector-algorithms": [
        "Data.Vector.Algorithms.Intro"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Except",
      "Criterion.Analysis",
      "Criterion.Config",
      "Criterion.Internal",
      "Criterion.IO",
      "Criterion.IO.Printf",
      "Criterion.Main",
      "Criterion.Main.Options",
      "Criterion.Measurement",
      "Criterion.Monad",
      "Criterion.Monad.Internal",
      "Criterion.Report",
      "Criterion.Types",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Types",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.CritBit.Map.Lazy",
      "Data.Csv",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.Judy",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Data.Vector",
      "Data.Vector.Algorithms.Intro",
      "Data.Vector.Generic",
      "Data.Vector.Unboxed",
      "Data.Version",
      "Data.Word",
      "GHC.Generics",
      "GHC.Stats",
      "Options",
      "Options.Applicative",
      "Options.Applicative.Help",
      "Options.Applicative.Help.Pretty",
      "Options.Applicative.Types",
      "Paths",
      "Pipes",
      "Pipes.Prelude",
      "Properties",
      "Statistics.Function",
      "Statistics.Quantile",
      "Statistics.Regression",
      "Statistics.Resampling",
      "Statistics.Resampling.Bootstrap",
      "Statistics.Sample",
      "Statistics.Sample.KernelDensity",
      "Statistics.Types",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Glob",
      "System.IO",
      "System.Mem",
      "System.Random.MWC",
      "System.Timeout",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Hastache",
      "Text.Hastache.Context",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.Printf"
    ],
    "modules": [
      "Criterion",
      "Criterion.Analysis",
      "Criterion.IO",
      "Criterion.IO.Printf",
      "Criterion.Internal",
      "Criterion.Main",
      "Criterion.Main.Options",
      "Criterion.Measurement",
      "Criterion.Monad",
      "Criterion.Report",
      "Criterion.Types"
    ],
    "name": "criterion",
    "version": "1.1.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ECR",
      "Test.AWS.ECR",
      "Test.AWS.ECR.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ECR",
      "Network.AWS.ECR.BatchCheckLayerAvailability",
      "Network.AWS.ECR.BatchDeleteImage",
      "Network.AWS.ECR.BatchGetImage",
      "Network.AWS.ECR.CompleteLayerUpload",
      "Network.AWS.ECR.CreateRepository",
      "Network.AWS.ECR.DeleteRepository",
      "Network.AWS.ECR.DeleteRepositoryPolicy",
      "Network.AWS.ECR.DescribeRepositories",
      "Network.AWS.ECR.GetAuthorizationToken",
      "Network.AWS.ECR.GetDownloadURLForLayer",
      "Network.AWS.ECR.GetRepositoryPolicy",
      "Network.AWS.ECR.InitiateLayerUpload",
      "Network.AWS.ECR.ListImages",
      "Network.AWS.ECR.PutImage",
      "Network.AWS.ECR.SetRepositoryPolicy",
      "Network.AWS.ECR.Types",
      "Network.AWS.ECR.UploadLayerPart",
      "Network.AWS.ECR.Waiters"
    ],
    "name": "amazonka-ecr",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "concatenative": [
        "Control.Concatenative"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Pos",
        "Text.Parsec.Token"
      ]
    },
    "imports": [
      "Control.Concatenative",
      "Control.Monad.State",
      "Text.Parsec",
      "Text.Parsec.Pos",
      "Text.Parsec.Token"
    ],
    "modules": [
      "Text.Parsec.Indent"
    ],
    "name": "indents",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Functor.Identity",
        "Data.Maybe",
        "Data.Typeable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Dependent.Sum",
      "Data.Dependent.Sum.Typeable",
      "Data.Functor.Identity",
      "Data.GADT.Compare",
      "Data.GADT.Show",
      "Data.Maybe",
      "Data.Typeable"
    ],
    "modules": [
      "Data.Dependent.Sum",
      "Data.GADT.Compare",
      "Data.GADT.Show",
      "Data.Some"
    ],
    "name": "dependent-sum",
    "version": "0.3.2.2"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [
        "Control.Exception",
        "Prelude"
      ],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "bytestring-builder": [],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "clock": [
        "System.Clock"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [],
      "filepath": [],
      "io-streams": [
        "System.IO.Streams",
        "System.IO.Streams.Concurrent",
        "System.IO.Streams.Debug"
      ],
      "io-streams-haproxy": [
        "System.IO.Streams.Network.HAProxy"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "mtl": [],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "old-locale": [],
      "snap-core": [
        "Snap.Test",
        "Snap.Types.Headers",
        "Snap.Util.Proxy"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "transformers": [],
      "unix-compat": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Exception.Lifted",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.CaseInsensitive",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Vector.Unboxed",
      "Network.Http.Client",
      "Network.Http.Types",
      "Network.Socket",
      "Network.Socket.ByteString",
      "OpenSSL.Session",
      "Paths",
      "Prelude",
      "Snap.Http.Server.Types",
      "Snap.Internal.Http.Parser.Benchmark",
      "Snap.Internal.Http.Server.Address.Tests",
      "Snap.Internal.Http.Server.Clock",
      "Snap.Internal.Http.Server.Parser.Tests",
      "Snap.Internal.Http.Server.Session.Tests",
      "Snap.Internal.Http.Server.Socket",
      "Snap.Internal.Http.Server.Socket.Tests",
      "Snap.Internal.Http.Server.Thread",
      "Snap.Internal.Http.Server.TimeoutManager",
      "Snap.Internal.Http.Server.TimeoutManager.Tests",
      "Snap.Internal.Http.Server.TLS",
      "Snap.Internal.Http.Server.Types",
      "Snap.Test",
      "Snap.Types.Headers",
      "Snap.Util.Proxy",
      "System.Clock",
      "System.IO.Streams",
      "System.IO.Streams.Concurrent",
      "System.IO.Streams.Debug",
      "System.IO.Streams.Network.HAProxy",
      "System.IO.Streams.SSL",
      "System.Posix",
      "System.SendFile",
      "System.SendFile.Darwin",
      "System.SendFile.FreeBSD",
      "System.SendFile.Linux",
      "System.SendFile.Tests",
      "Test.Blackbox",
      "Test.Framework.Runners.Console",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "Snap.Http.Server",
      "Snap.Http.Server.Config",
      "Snap.Http.Server.Types",
      "Snap.Internal.Http.Server.Config",
      "Snap.Internal.Http.Server.Types",
      "System.FastLogger"
    ],
    "name": "snap-server",
    "version": "1.0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.List"
      ],
      "cpphs": [
        "Language.Preprocessor.Cpphs",
        "Language.Preprocessor.Unlit"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts",
        "Language.Haskell.Exts.Annotated"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.List",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Annotated",
      "Language.Preprocessor.Cpphs",
      "Language.Preprocessor.Unlit"
    ],
    "modules": [
      "Language.Haskell.Exts.Annotated.CPP"
    ],
    "name": "hse-cpp",
    "version": "0.1"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Monoid",
        "Prelude"
      ],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes"
      ],
      "blaze-markup": [
        "Text.Blaze"
      ],
      "data-default": [],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Prim"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Read"
      ]
    },
    "imports": [
      "ACE.Combinators",
      "ACE.Html",
      "ACE.Parsers",
      "ACE.Pretty",
      "ACE.Tokenizer",
      "ACE.Types.Pretty",
      "ACE.Types.Syntax",
      "ACE.Types.Tokens",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Identity",
      "Data.Bifunctor",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Read",
      "Prelude",
      "Test.Hspec",
      "Test.HUnit",
      "Text.Blaze",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Parsec",
      "Text.Parsec.Prim"
    ],
    "modules": [
      "ACE",
      "ACE.Types.Syntax",
      "ACE.Parsers",
      "ACE.Tokenizer",
      "ACE.Types.Tokens",
      "ACE.Combinators",
      "ACE.Types.Pretty",
      "ACE.Pretty",
      "ACE.Html"
    ],
    "name": "ace",
    "version": "0.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.IO.Class"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "cryptonite": [
        "Crypto.Hash"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Resource",
      "Crypto.Hash",
      "Data.ByteString",
      "Data.Conduit",
      "Data.Conduit.Binary"
    ],
    "modules": [
      "Crypto.Hash.Conduit"
    ],
    "name": "cryptonite-conduit",
    "version": "0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Function",
        "Data.Typeable",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Text.Read"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.Function",
      "Data.Typeable",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Text.Read"
    ],
    "modules": [
      "Numeric.Half"
    ],
    "name": "half",
    "version": "0.2.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "postgresql-simple": []
    },
    "imports": [
      "Data.List"
    ],
    "modules": [
      "Database.PostgreSQL.Helpers"
    ],
    "name": "psql-helpers",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Foreign.C",
        "Foreign.Concurrent",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Word",
      "Foreign.C",
      "Foreign.Concurrent",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Network.Curl.Code",
      "Network.Curl.Debug",
      "Network.Curl.Easy",
      "Network.Curl.Info",
      "Network.Curl.Opts",
      "Network.Curl.Post",
      "Network.Curl.Types",
      "System.IO"
    ],
    "modules": [
      "Network.Curl",
      "Network.Curl.Code",
      "Network.Curl.Info",
      "Network.Curl.Opts",
      "Network.Curl.Post",
      "Network.Curl.Types",
      "Network.Curl.Easy",
      "Network.Curl.Debug"
    ],
    "name": "curl",
    "version": "1.3.8"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cereal": [],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "resourcet": [],
      "transformers": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.List"
    ],
    "modules": [
      "Data.Conduit.Cereal",
      "Data.Conduit.Cereal.Internal"
    ],
    "name": "cereal-conduit",
    "version": "0.7.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Complex",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.STRef",
        "Data.Typeable",
        "Data.Word",
        "GHC.Base",
        "GHC.Conc",
        "GHC.Generics",
        "GHC.IO",
        "Numeric",
        "Prelude",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "erf": [],
      "math-functions": [
        "Numeric.MathFunctions.Constants",
        "Numeric.SpecFunctions",
        "Numeric.SpecFunctions.Extra",
        "Numeric.Sum"
      ],
      "monad-par": [
        "Control.Monad.Par"
      ],
      "mwc-random": [
        "System.Random.MWC",
        "System.Random.MWC.Distributions"
      ],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive.ByteArray"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ],
      "vector-algorithms": [
        "Data.Vector.Algorithms.Intro"
      ],
      "vector-binary-instances": [
        "Data.Vector.Binary"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Par",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Complex",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.List",
      "Data.Maybe",
      "Data.Ord",
      "Data.Primitive.ByteArray",
      "Data.STRef",
      "Data.Text.Lazy.IO",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Algorithms.Intro",
      "Data.Vector.Binary",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Data.Word",
      "GHC.Base",
      "GHC.Conc",
      "GHC.Generics",
      "GHC.IO",
      "GHC.IOBase",
      "Numeric",
      "Numeric.IEEE",
      "Numeric.MathFunctions.Constants",
      "Numeric.SpecFunctions",
      "Numeric.SpecFunctions.Extra",
      "Numeric.Sum",
      "Prelude",
      "Statistics.Correlation",
      "Statistics.Correlation.Kendall",
      "Statistics.Correlation.Pearson",
      "Statistics.Distribution",
      "Statistics.Distribution.Beta",
      "Statistics.Distribution.Binomial",
      "Statistics.Distribution.CauchyLorentz",
      "Statistics.Distribution.ChiSquared",
      "Statistics.Distribution.Exponential",
      "Statistics.Distribution.FDistribution",
      "Statistics.Distribution.Gamma",
      "Statistics.Distribution.Geometric",
      "Statistics.Distribution.Hypergeometric",
      "Statistics.Distribution.Laplace",
      "Statistics.Distribution.Normal",
      "Statistics.Distribution.Poisson",
      "Statistics.Distribution.Poisson.Internal",
      "Statistics.Distribution.StudentT",
      "Statistics.Distribution.Transform",
      "Statistics.Distribution.Uniform",
      "Statistics.Function",
      "Statistics.Function.Comparison",
      "Statistics.Internal",
      "Statistics.Math.RootFinding",
      "Statistics.Matrix",
      "Statistics.Matrix.Algorithms",
      "Statistics.Matrix.Mutable",
      "Statistics.Matrix.Types",
      "Statistics.Quantile",
      "Statistics.Resampling",
      "Statistics.Resampling.Bootstrap",
      "Statistics.Sample",
      "Statistics.Sample.Histogram",
      "Statistics.Sample.Internal",
      "Statistics.Sample.KernelDensity",
      "Statistics.Test.Internal",
      "Statistics.Test.KolmogorovSmirnov",
      "Statistics.Test.KruskalWallis",
      "Statistics.Test.MannWhitneyU",
      "Statistics.Test.Types",
      "Statistics.Test.WilcoxonT",
      "Statistics.Transform",
      "Statistics.Types",
      "System.IO.Unsafe",
      "System.Random.MWC",
      "System.Random.MWC.Distributions",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Property",
      "Tests.ApproxEq",
      "Tests.Correlation",
      "Tests.Distribution",
      "Tests.Function",
      "Tests.Helpers",
      "Tests.KDE",
      "Tests.Matrix",
      "Tests.Matrix.Types",
      "Tests.NonParametric",
      "Tests.NonParametric.Table",
      "Tests.Transform",
      "Text.Hastache",
      "Text.Hastache.Context",
      "Text.Printf"
    ],
    "modules": [
      "Statistics.Autocorrelation",
      "Statistics.Constants",
      "Statistics.Correlation",
      "Statistics.Correlation.Kendall",
      "Statistics.Distribution",
      "Statistics.Distribution.Beta",
      "Statistics.Distribution.Binomial",
      "Statistics.Distribution.CauchyLorentz",
      "Statistics.Distribution.ChiSquared",
      "Statistics.Distribution.Exponential",
      "Statistics.Distribution.FDistribution",
      "Statistics.Distribution.Gamma",
      "Statistics.Distribution.Geometric",
      "Statistics.Distribution.Hypergeometric",
      "Statistics.Distribution.Laplace",
      "Statistics.Distribution.Normal",
      "Statistics.Distribution.Poisson",
      "Statistics.Distribution.StudentT",
      "Statistics.Distribution.Transform",
      "Statistics.Distribution.Uniform",
      "Statistics.Function",
      "Statistics.Math.RootFinding",
      "Statistics.Matrix",
      "Statistics.Matrix.Algorithms",
      "Statistics.Matrix.Mutable",
      "Statistics.Matrix.Types",
      "Statistics.Quantile",
      "Statistics.Regression",
      "Statistics.Resampling",
      "Statistics.Resampling.Bootstrap",
      "Statistics.Sample",
      "Statistics.Sample.Histogram",
      "Statistics.Sample.KernelDensity",
      "Statistics.Sample.KernelDensity.Simple",
      "Statistics.Sample.Powers",
      "Statistics.Test.ChiSquared",
      "Statistics.Test.KolmogorovSmirnov",
      "Statistics.Test.KruskalWallis",
      "Statistics.Test.MannWhitneyU",
      "Statistics.Test.Types",
      "Statistics.Test.WilcoxonT",
      "Statistics.Transform",
      "Statistics.Types"
    ],
    "name": "statistics",
    "version": "0.13.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.Instances",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Sum",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude"
      ],
      "semigroups": [],
      "tagged": [
        "Data.Tagged"
      ],
      "transformers": [
        "Control.Monad.Trans.Identity"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Comonad.Env.Class",
      "Control.Comonad.Hoist.Class",
      "Control.Comonad.Store.Class",
      "Control.Comonad.Traced.Class",
      "Control.Comonad.Trans.Class",
      "Control.Comonad.Trans.Env",
      "Control.Comonad.Trans.Identity",
      "Control.Comonad.Trans.Store",
      "Control.Comonad.Trans.Traced",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.Instances",
      "Control.Monad.Trans.Identity",
      "Data.Data",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Functor",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Sum",
      "Data.List.NonEmpty",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Tagged",
      "Data.Traversable",
      "Data.Tree",
      "Data.Typeable",
      "Prelude"
    ],
    "modules": [
      "Control.Comonad",
      "Control.Comonad.Env",
      "Control.Comonad.Env.Class",
      "Control.Comonad.Hoist.Class",
      "Control.Comonad.Identity",
      "Control.Comonad.Store",
      "Control.Comonad.Store.Class",
      "Control.Comonad.Traced",
      "Control.Comonad.Traced.Class",
      "Control.Comonad.Trans.Class",
      "Control.Comonad.Trans.Env",
      "Control.Comonad.Trans.Identity",
      "Control.Comonad.Trans.Store",
      "Control.Comonad.Trans.Traced",
      "Data.Functor.Composition"
    ],
    "name": "comonad",
    "version": "5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List.NonEmpty"
      ],
      "containers": [
        "Data.Set"
      ],
      "hspec-expectations": [
        "Test.Hspec.Expectations"
      ],
      "megaparsec": [
        "Text.Megaparsec",
        "Text.Megaparsec.Pos",
        "Text.Megaparsec.String"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.List.NonEmpty",
      "Data.Set",
      "Test.Hspec",
      "Test.Hspec.Expectations",
      "Test.Hspec.Megaparsec",
      "Text.Megaparsec",
      "Text.Megaparsec.Pos",
      "Text.Megaparsec.String"
    ],
    "modules": [
      "Test.Hspec.Megaparsec"
    ],
    "name": "hspec-megaparsec",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "System.IO.Unsafe"
      ],
      "bytestring": [],
      "data-default-class": [],
      "filepath": [],
      "hlibsass": [
        "Bindings.Libsass"
      ],
      "monad-loops": [],
      "transformers": []
    },
    "imports": [
      "Bindings.Libsass",
      "System.IO.Unsafe",
      "Text.Sass.Values",
      "Text.Sass.Values.Internal"
    ],
    "modules": [
      "Text.Sass",
      "Text.Sass.Compilation",
      "Text.Sass.Functions",
      "Text.Sass.Options",
      "Text.Sass.Values",
      "Text.Sass.Internal",
      "Text.Sass.Functions.Internal",
      "Text.Sass.Options.Internal",
      "Text.Sass.Values.Internal",
      "Text.Sass.Values.Utils",
      "Text.Sass.Utils"
    ],
    "name": "hsass",
    "version": "0.4.0"
  },
  {
    "dependencies": {
      "base": [
        "Prelude"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ],
      "text-format": [
        "Data.Text.Buildable",
        "Data.Text.Format",
        "Data.Text.Format.Params"
      ],
      "text-show": [
        "TextShow"
      ]
    },
    "imports": [
      "Data.Text",
      "Data.Text.Buildable",
      "Data.Text.Encoding",
      "Data.Text.Format",
      "Data.Text.Format.Params",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Prelude",
      "TextShow"
    ],
    "modules": [
      "Data.Text.All",
      "Data.Text.Lazy.All"
    ],
    "name": "text-all",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.Encoding",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Data.HexString"
    ],
    "name": "hexstring",
    "version": "0.11.1"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-glib",
    "version": "2.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Function"
      ]
    },
    "imports": [
      "Data.Function"
    ],
    "modules": [
      "Data.Prototype"
    ],
    "name": "oo-prototypes",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "Diff": [
        "Data.Algorithm.Diff"
      ],
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Exception",
        "Data.Monoid"
      ],
      "base-compat": [],
      "directory": [],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [],
      "unix": [
        "System.Posix.Files"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Algorithm.Diff",
      "Data.Monoid",
      "Options.Applicative",
      "Opts",
      "System.Console.ANSI",
      "System.FilePath",
      "System.Posix.Files"
    ],
    "modules": [],
    "name": "resolve-trivial-conflicts",
    "version": "0.3.2.2"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "cryptohash": [],
      "github-types": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "uuid": [],
      "vector": []
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.Text"
    ],
    "modules": [
      "GitHub.WebHook.Handler"
    ],
    "name": "github-webhook-handler",
    "version": "0.0.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.TypeLits"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Criterion.Main",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Vinyl",
      "Data.Vinyl.Core",
      "Data.Vinyl.Derived",
      "Data.Vinyl.Functor",
      "Data.Vinyl.Lens",
      "Data.Vinyl.TypeLevel",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "GHC.TypeLits",
      "Linear",
      "System.Random.MWC"
    ],
    "modules": [
      "Data.Vinyl",
      "Data.Vinyl.Class.Method",
      "Data.Vinyl.Core",
      "Data.Vinyl.Lens",
      "Data.Vinyl.Derived",
      "Data.Vinyl.TypeLevel",
      "Data.Vinyl.Functor",
      "Data.Vinyl.Notation",
      "Data.Vinyl.Tutorial.Overview"
    ],
    "name": "vinyl",
    "version": "0.5.2"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-atk": [],
      "gi-cairo": [],
      "gi-gdk": [],
      "gi-gdkpixbuf": [],
      "gi-gio": [],
      "gi-glib": [],
      "gi-gobject": [],
      "gi-pango": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-gtk",
    "version": "3.0.3"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Gen.Unsafe"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Dynamic",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Ratio",
        "Data.Typeable",
        "Prelude",
        "System.Exit",
        "System.IO.Unsafe",
        "Text.Show.Functions"
      ],
      "containers": [],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "random": [
        "System.Random"
      ],
      "syb": [
        "Data.Generics"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Data.Array",
      "Data.Dynamic",
      "Data.Foldable",
      "Data.Function",
      "Data.Generics",
      "Data.List",
      "Data.Maybe",
      "Data.Ratio",
      "Data.Sequence",
      "Data.Typeable",
      "Prelude",
      "System.Exit",
      "System.IO.Unsafe",
      "System.Random",
      "Test.ChasingBottoms.Approx",
      "Test.ChasingBottoms.ApproxShow",
      "Test.ChasingBottoms.ApproxShow.Tests",
      "Test.ChasingBottoms.Approx.Tests",
      "Test.ChasingBottoms.ContinuousFunctions",
      "Test.ChasingBottoms.ContinuousFunctions.Tests",
      "Test.ChasingBottoms.IsBottom",
      "Test.ChasingBottoms.IsBottom.Tests",
      "Test.ChasingBottoms.IsType",
      "Test.ChasingBottoms.IsType.Tests",
      "Test.ChasingBottoms.Nat",
      "Test.ChasingBottoms.Nat.Tests",
      "Test.ChasingBottoms.SemanticOrd",
      "Test.ChasingBottoms.SemanticOrd.Tests",
      "Test.ChasingBottoms.TestUtilities",
      "Test.ChasingBottoms.TestUtilities.Generators",
      "Test.ChasingBottoms.TimeOut",
      "Test.ChasingBottoms.TimeOut.Tests",
      "Test.QuickCheck",
      "Test.QuickCheck.Gen.Unsafe",
      "Text.Show.Functions"
    ],
    "modules": [
      "Test.ChasingBottoms",
      "Test.ChasingBottoms.Approx",
      "Test.ChasingBottoms.ApproxShow",
      "Test.ChasingBottoms.ContinuousFunctions",
      "Test.ChasingBottoms.IsBottom",
      "Test.ChasingBottoms.Nat",
      "Test.ChasingBottoms.SemanticOrd",
      "Test.ChasingBottoms.TimeOut"
    ],
    "name": "ChasingBottoms",
    "version": "1.3.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Numeric",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "old-time": [
        "System.Time"
      ],
      "polyparse": [
        "Text.Parse"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Language.Preprocessor.Cpphs",
      "Language.Preprocessor.Cpphs.CppIfdef",
      "Language.Preprocessor.Cpphs.HashDefine",
      "Language.Preprocessor.Cpphs.MacroPass",
      "Language.Preprocessor.Cpphs.Options",
      "Language.Preprocessor.Cpphs.Position",
      "Language.Preprocessor.Cpphs.ReadFirst",
      "Language.Preprocessor.Cpphs.RunCpphs",
      "Language.Preprocessor.Cpphs.SymTab",
      "Language.Preprocessor.Cpphs.Tokenise",
      "Language.Preprocessor.Unlit",
      "Numeric",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Time",
      "Text.Parse"
    ],
    "modules": [
      "Language.Preprocessor.Cpphs",
      "Language.Preprocessor.Unlit"
    ],
    "name": "cpphs",
    "version": "1.20.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Data.Proxy",
        "Data.String",
        "Data.Typeable"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hxt": [
        "Text.XML.HXT.Arrow.Pickle"
      ],
      "json-schema": [
        "Data.JSON.Schema"
      ],
      "tostring": [
        "Data.String.ToString"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.JSON.Schema",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Proxy",
      "Data.String",
      "Data.String.ToString",
      "Data.Typeable",
      "Rest.StringMap.Util",
      "Text.XML.HXT.Arrow.Pickle"
    ],
    "modules": [
      "Rest.StringMap.HashMap.Lazy",
      "Rest.StringMap.HashMap.Strict",
      "Rest.StringMap.Map.Lazy",
      "Rest.StringMap.Map.Strict",
      "Rest.StringMap.Util"
    ],
    "name": "rest-stringmap",
    "version": "0.2.0.6"
  },
  {
    "dependencies": {
      "base": [
        "Foreign.C",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.Storable"
      ]
    },
    "imports": [
      "Foreign.C",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable"
    ],
    "modules": [
      "Bindings.Utilities"
    ],
    "name": "bindings-DSL",
    "version": "1.0.23"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.WorkSpaces",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.WorkSpaces",
      "Test.AWS.WorkSpaces.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.WorkSpaces",
      "Network.AWS.WorkSpaces.CreateWorkspaces",
      "Network.AWS.WorkSpaces.DescribeWorkspaceBundles",
      "Network.AWS.WorkSpaces.DescribeWorkspaceDirectories",
      "Network.AWS.WorkSpaces.DescribeWorkspaces",
      "Network.AWS.WorkSpaces.RebootWorkspaces",
      "Network.AWS.WorkSpaces.RebuildWorkspaces",
      "Network.AWS.WorkSpaces.TerminateWorkspaces",
      "Network.AWS.WorkSpaces.Types",
      "Network.AWS.WorkSpaces.Waiters"
    ],
    "name": "amazonka-workspaces",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Exts"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [
        "Data.Functor.Constant"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Foldable",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Generics.Traversable",
      "Data.Generics.Traversable.Core",
      "Data.Generics.Traversable.Instances",
      "Data.Generics.Traversable.TH",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy.Fork",
      "Data.Ratio",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Exts",
      "Language.Haskell.TH"
    ],
    "modules": [
      "Data.Generics.Traversable",
      "Data.Generics.Traversable.TH",
      "Data.Generics.Traversable.Zipper"
    ],
    "name": "traverse-with-class",
    "version": "0.2.0.4"
  },
  {
    "dependencies": {
      "base-prelude": [
        "BasePrelude"
      ],
      "contravariant": [
        "Data.Functor.Contravariant",
        "Data.Functor.Contravariant.Divisible"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "tuple-th": [
        "TupleTH"
      ]
    },
    "imports": [
      "BasePrelude",
      "Contravariant.Extras.Contrazip",
      "Contravariant.Extras.Op.Contrazip",
      "Contravariant.Extras.TH",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Divisible",
      "Language.Haskell.TH",
      "TupleTH"
    ],
    "modules": [
      "Contravariant.Extras",
      "Contravariant.Extras.Contrazip",
      "Contravariant.Extras.Op",
      "Contravariant.Extras.Op.Contrazip"
    ],
    "name": "contravariant-extras",
    "version": "0.3.3.1"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit.Lang"
      ],
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Property",
        "Test.QuickCheck.State"
      ],
      "ansi-terminal": [],
      "async": [],
      "base": [
        "Control.Exception",
        "System.CPUTime",
        "System.IO",
        "Text.ParserCombinators.ReadP"
      ],
      "deepseq": [],
      "directory": [],
      "filepath": [],
      "hspec-expectations": [],
      "quickcheck-io": [],
      "random": [],
      "setenv": [],
      "time": [],
      "transformers": []
    },
    "imports": [
      "Control.Exception",
      "System.CPUTime",
      "System.IO",
      "Test.Hspec.Core.Formatters.Internal",
      "Test.HUnit.Lang",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.State",
      "Text.ParserCombinators.ReadP"
    ],
    "modules": [
      "Test.Hspec.Meta"
    ],
    "name": "hspec-meta",
    "version": "2.2.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.DoubleClickBids",
      "Network.Google.DoubleClickBids.Types",
      "Network.Google.Resource.DoubleClickBidManager.Lineitems.Downloadlineitems",
      "Network.Google.Resource.DoubleClickBidManager.Lineitems.Uploadlineitems",
      "Network.Google.Resource.DoubleClickBidManager.Queries.CreateQuery",
      "Network.Google.Resource.DoubleClickBidManager.Queries.DeleteQuery",
      "Network.Google.Resource.DoubleClickBidManager.Queries.GetQuery",
      "Network.Google.Resource.DoubleClickBidManager.Queries.Listqueries",
      "Network.Google.Resource.DoubleClickBidManager.Queries.RunQuery",
      "Network.Google.Resource.DoubleClickBidManager.Reports.Listreports",
      "Network.Google.Resource.DoubleClickBidManager.Rubicon.Notifyproposalchange"
    ],
    "name": "gogol-doubleclick-bids",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception.Base",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "GHC.Arr",
        "GHC.Exts",
        "Numeric",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary.Get"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Builder.Extras"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Binary.Get",
      "Data.Bits",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Builder.Extras",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "GHC.Arr",
      "GHC.Disassembler",
      "GHC.Exts",
      "GHC.HeapView",
      "Language.Haskell.TH",
      "Numeric",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "System.Mem",
      "Text.Printf"
    ],
    "modules": [
      "GHC.HeapView",
      "GHC.AssertNF",
      "GHC.Disassembler",
      "GHC.HeapView.Debug"
    ],
    "name": "ghc-heap-view",
    "version": "0.5.7"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Arrow",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.Ratio",
        "Data.Word",
        "Prelude"
      ],
      "data-inttrie": [
        "Data.IntTrie"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.Array",
      "Data.Bits",
      "Data.Char",
      "Data.Int",
      "Data.IntTrie",
      "Data.MemoCombinators",
      "Data.Ratio",
      "Data.Word",
      "Prelude"
    ],
    "modules": [
      "Data.MemoCombinators",
      "Data.MemoCombinators.Class"
    ],
    "name": "data-memocombinators",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Data.Maybe",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "http-client": [
        "Network.HTTP.Client",
        "Network.HTTP.Client.MultipartFormData"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "mtl": [
        "Control.Monad.Except"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Except",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Maybe",
      "Network.HTTP.Client",
      "Network.HTTP.Client.MultipartFormData",
      "Network.HTTP.Client.TLS",
      "Prelude"
    ],
    "modules": [
      "Network.Kraken"
    ],
    "name": "kraken",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Exts",
        "Prelude",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-lens-light": [
        "Data.Lens.Light"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts",
        "Language.Haskell.Exts.Annotated",
        "Language.Haskell.Exts.Annotated.Simplify",
        "Language.Haskell.Exts.Extension",
        "Language.Haskell.Exts.Syntax"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "transformers": [
        "Data.Functor.Constant"
      ],
      "traverse-with-class": [
        "Data.Generics.Traversable",
        "Data.Generics.Traversable.TH"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.Aeson",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "DataFamilies",
      "Data.Foldable",
      "Data.Functor.Constant",
      "Data.Generics.Traversable",
      "Data.Generics.Traversable.TH",
      "Data.Generics.Uniplate.Data",
      "Data.Graph",
      "Data.Lens.Light",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "ExportListWildcards",
      "GHC.Exts",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Annotated",
      "Language.Haskell.Exts.Annotated.Simplify",
      "Language.Haskell.Exts.Extension",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.Names",
      "Language.Haskell.Names.Annotated",
      "Language.Haskell.Names.Environment",
      "Language.Haskell.Names.Exports",
      "Language.Haskell.Names.GetBound",
      "Language.Haskell.Names.GlobalSymbolTable",
      "Language.Haskell.Names.Imports",
      "Language.Haskell.Names.LocalSymbolTable",
      "Language.Haskell.Names.ModuleSymbols",
      "Language.Haskell.Names.Open",
      "Language.Haskell.Names.Open.Base",
      "Language.Haskell.Names.Open.Derived",
      "Language.Haskell.Names.Open.Instances",
      "Language.Haskell.Names.RecordWildcards",
      "Language.Haskell.Names.Recursive",
      "Language.Haskell.Names.ScopeUtils",
      "Language.Haskell.Names.SyntaxUtils",
      "Language.Haskell.Names.Types",
      "Paths",
      "Prelude",
      "Rec1",
      "Rec2",
      "Rec3",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Find",
      "System.IO",
      "Test.Tasty",
      "Test.Tasty.Golden",
      "Test.Tasty.Golden.Manage",
      "Text.Printf",
      "Text.Show.Pretty"
    ],
    "modules": [
      "Language.Haskell.Names",
      "Language.Haskell.Names.Open",
      "Language.Haskell.Names.Annotated",
      "Language.Haskell.Names.Environment",
      "Language.Haskell.Names.GlobalSymbolTable",
      "Language.Haskell.Names.LocalSymbolTable",
      "Language.Haskell.Names.Imports",
      "Language.Haskell.Names.Exports",
      "Language.Haskell.Names.ModuleSymbols",
      "Language.Haskell.Names.SyntaxUtils",
      "Language.Haskell.Names.GetBound"
    ],
    "name": "haskell-names",
    "version": "0.7.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Text"
    ],
    "modules": [
      "Control.FeatureFlag"
    ],
    "name": "feature-flags",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "data-default-instances-containers": [
        "Data.Default.Instances.Containers"
      ],
      "data-default-instances-dlist": [
        "Data.Default.Instances.DList"
      ],
      "data-default-instances-old-locale": [
        "Data.Default.Instances.OldLocale"
      ]
    },
    "imports": [
      "Data.Default.Class",
      "Data.Default.Instances.Containers",
      "Data.Default.Instances.DList",
      "Data.Default.Instances.OldLocale"
    ],
    "modules": [
      "Data.Default"
    ],
    "name": "data-default",
    "version": "0.7.1.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [
        "Control.Applicative",
        "Data.String",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "directory": [],
      "filepath": [],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Status"
      ],
      "regex-applicative": [],
      "template-haskell": [],
      "text": [
        "Data.Text"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-app-static": [
        "Network.Wai.Application.Static"
      ],
      "waitra": [],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.String",
      "Data.Text",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Status",
      "Network.Wai",
      "Network.Wai.Application.Static",
      "Network.Wai.Handler.Warp",
      "Network.Waitra",
      "Network.Waitra.Embedded",
      "System.Environment"
    ],
    "modules": [
      "Network.Waitra",
      "Network.Waitra.Embedded"
    ],
    "name": "waitra",
    "version": "0.0.4.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.Monoid"
      ],
      "haskell-src-meta": [
        "Language.Haskell.Meta"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text"
      ],
      "th-lift-instances": [
        "Instances.TH.Lift"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.Monoid",
      "Data.Text",
      "Instances.TH.Lift",
      "Language.Haskell.Meta",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Text.QuasiText"
    ],
    "name": "QuasiText",
    "version": "0.1.2.6"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Char",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "System.Environment",
        "System.IO"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Attoparsec",
        "Data.Conduit.Binary",
        "Data.Conduit.Blaze",
        "Data.Conduit.Text"
      ],
      "data-default": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.Internal"
      ],
      "transformers": [],
      "xml-conduit": [
        "Text.XML.Stream.Parse"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad.Trans.Resource",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Attoparsec",
      "Data.Conduit.Binary",
      "Data.Conduit.Blaze",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.Internal",
      "Data.Traversable",
      "System.Console.ANSI",
      "System.Environment",
      "System.IO",
      "Text.HTML.TagStream.ByteString",
      "Text.HTML.TagStream.Text",
      "Text.HTML.TagStream.Types",
      "Text.XML.Stream.Parse"
    ],
    "modules": [
      "Text.HTML.TagStream",
      "Text.HTML.TagStream.ByteString",
      "Text.HTML.TagStream.Text",
      "Text.HTML.TagStream.Types",
      "Text.HTML.TagStream.Utils",
      "Text.HTML.TagStream.Entities"
    ],
    "name": "tagstream-conduit",
    "version": "0.5.5.3"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.GameLift",
      "Test.AWS.Fixture",
      "Test.AWS.GameLift",
      "Test.AWS.GameLift.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.GameLift",
      "Network.AWS.GameLift.CreateAlias",
      "Network.AWS.GameLift.CreateBuild",
      "Network.AWS.GameLift.CreateFleet",
      "Network.AWS.GameLift.CreateGameSession",
      "Network.AWS.GameLift.CreatePlayerSession",
      "Network.AWS.GameLift.CreatePlayerSessions",
      "Network.AWS.GameLift.DeleteAlias",
      "Network.AWS.GameLift.DeleteBuild",
      "Network.AWS.GameLift.DeleteFleet",
      "Network.AWS.GameLift.DeleteScalingPolicy",
      "Network.AWS.GameLift.DescribeAlias",
      "Network.AWS.GameLift.DescribeBuild",
      "Network.AWS.GameLift.DescribeEC2InstanceLimits",
      "Network.AWS.GameLift.DescribeFleetAttributes",
      "Network.AWS.GameLift.DescribeFleetCapacity",
      "Network.AWS.GameLift.DescribeFleetEvents",
      "Network.AWS.GameLift.DescribeFleetPortSettings",
      "Network.AWS.GameLift.DescribeFleetUtilization",
      "Network.AWS.GameLift.DescribeGameSessionDetails",
      "Network.AWS.GameLift.DescribeGameSessions",
      "Network.AWS.GameLift.DescribePlayerSessions",
      "Network.AWS.GameLift.DescribeScalingPolicies",
      "Network.AWS.GameLift.GetGameSessionLogURL",
      "Network.AWS.GameLift.ListAliases",
      "Network.AWS.GameLift.ListBuilds",
      "Network.AWS.GameLift.ListFleets",
      "Network.AWS.GameLift.PutScalingPolicy",
      "Network.AWS.GameLift.RequestUploadCredentials",
      "Network.AWS.GameLift.ResolveAlias",
      "Network.AWS.GameLift.Types",
      "Network.AWS.GameLift.UpdateAlias",
      "Network.AWS.GameLift.UpdateBuild",
      "Network.AWS.GameLift.UpdateFleetAttributes",
      "Network.AWS.GameLift.UpdateFleetCapacity",
      "Network.AWS.GameLift.UpdateFleetPortSettings",
      "Network.AWS.GameLift.UpdateGameSession",
      "Network.AWS.GameLift.Waiters"
    ],
    "name": "amazonka-gamelift",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "wai": []
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Network.HTTP.Types.Status"
    ],
    "modules": [
      "Network.Wai.Middleware.Cache"
    ],
    "name": "wai-middleware-caching",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Ix",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Numeric",
        "System.Exit",
        "Text.ParserCombinators.ReadP"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "charset": [
        "Data.CharSet"
      ],
      "containers": [
        "Data.IntSet"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Prim"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ]
    },
    "imports": [
      "Build",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Types",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.CharSet",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.HashSet",
      "Data.IntSet",
      "Data.Ix",
      "Data.List",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Scientific",
      "Data.String",
      "Data.Text",
      "Data.Traversable",
      "Numeric",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "Test.DocTest",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Text.Parsec",
      "Text.Parsec.Prim",
      "Text.Parser.Char",
      "Text.Parser.Combinators",
      "Text.ParserCombinators.ReadP",
      "Text.Parser.Token",
      "Text.Parser.Token.Highlight"
    ],
    "modules": [
      "Text.Parser.Char",
      "Text.Parser.Combinators",
      "Text.Parser.LookAhead",
      "Text.Parser.Permutation",
      "Text.Parser.Expression",
      "Text.Parser.Token",
      "Text.Parser.Token.Style",
      "Text.Parser.Token.Highlight"
    ],
    "name": "parsers",
    "version": "0.12.4"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Prelude"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "blaze-markup": [
        "Text.Blaze"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Text"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy"
      ],
      "transformers": [],
      "xml-conduit": [
        "Text.XML.Stream.Parse"
      ],
      "xml-types": [
        "Data.XML.Types"
      ],
      "xss-sanitize": [
        "Text.HTML.SanitizeXSS"
      ]
    },
    "imports": [
      "Block",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Internal",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Default",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.XML.Types",
      "Inline",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "Test.Hspec",
      "Text.Blaze",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Text",
      "Text.HTML.SanitizeXSS",
      "Text.Markdown",
      "Text.Markdown.Block",
      "Text.Markdown.Inline",
      "Text.Markdown.Types",
      "Text.XML.Stream.Parse"
    ],
    "modules": [
      "Text.Markdown",
      "Text.Markdown.Block",
      "Text.Markdown.Inline"
    ],
    "name": "markdown",
    "version": "0.1.14"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [],
      "language-javascript": [
        "Language.JavaScript.Parser",
        "Language.JavaScript.Pretty.Printer",
        "Language.JavaScript.Process.Minify"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "text": [
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Applicative",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Monoid",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Language.JavaScript.Parser",
      "Language.JavaScript.Pretty.Printer",
      "Language.JavaScript.Process.Minify",
      "Options.Applicative",
      "Text.Jasmine"
    ],
    "modules": [
      "Text.Jasmine"
    ],
    "name": "hjsmin",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Prediction",
      "Network.Google.Prediction.Types",
      "Network.Google.Resource.Prediction.HostedModels.Predict",
      "Network.Google.Resource.Prediction.TrainedModels.Analyze",
      "Network.Google.Resource.Prediction.TrainedModels.Delete",
      "Network.Google.Resource.Prediction.TrainedModels.Get",
      "Network.Google.Resource.Prediction.TrainedModels.Insert",
      "Network.Google.Resource.Prediction.TrainedModels.List",
      "Network.Google.Resource.Prediction.TrainedModels.Predict",
      "Network.Google.Resource.Prediction.TrainedModels.Update"
    ],
    "name": "gogol-prediction",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Version",
        "Debug.Trace",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.Timeout"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Text",
        "Text.Blaze.Html.Renderer.Utf8",
        "Text.Blaze.XHtml5"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cheapskate": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "http-types": [
        "Network.HTTP.Types.Header",
        "Network.HTTP.Types.Status",
        "Network.HTTP.Types.URI"
      ],
      "mtl": [
        "Control.Monad.RWS"
      ],
      "syb": [],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": [
        "Network.Wai.Handler.CGI"
      ],
      "xss-sanitize": [
        "Text.HTML.SanitizeXSS"
      ]
    },
    "imports": [
      "Cheapskate",
      "Cheapskate.Html",
      "Cheapskate.Inlines",
      "Cheapskate.Parse",
      "Cheapskate.ParserCombinators",
      "Cheapskate.Types",
      "Cheapskate.Util",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.RWS",
      "Data.Aeson",
      "Data.ByteString",
      "Data.Char",
      "Data.Data",
      "Data.Default",
      "Data.Foldable",
      "Data.Generics.Uniplate.Data",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Version",
      "Debug.Trace",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.Status",
      "Network.HTTP.Types.URI",
      "Network.Wai",
      "Network.Wai.Handler.CGI",
      "Paths",
      "Prelude",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Timeout",
      "Text.Blaze.Html",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Blaze.XHtml5",
      "Text.HTML.SanitizeXSS"
    ],
    "modules": [
      "Cheapskate",
      "Cheapskate.Parse",
      "Cheapskate.Types",
      "Cheapskate.Html"
    ],
    "name": "cheapskate",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "atomic-primops": [
        "Data.Atomics"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "GHC.Conc.Sync",
        "GHC.Generics",
        "GHC.Stats",
        "Prelude",
        "System.Environment",
        "System.Mem",
        "Text.Printf"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive.Array"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ]
    },
    "imports": [
      "BenchGen",
      "Control.Applicative",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.Map",
      "Control.Concurrent.STM.Stats",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State.Strict",
      "CriterionPlus",
      "Data.Atomics",
      "Data.Bifunctor",
      "Data.Bits",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Primitive.Array",
      "Data.Set",
      "Data.SparseArray",
      "Data.Text",
      "Data.Vector",
      "Data.Word",
      "GHC.Conc.Sync",
      "GHC.Generics",
      "GHC.Stats",
      "Prelude",
      "STMContainers.Map",
      "System.Environment",
      "System.Mem",
      "System.Random.MWC",
      "System.Random.MWC.CondensedTable",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic",
      "Text.Printf"
    ],
    "modules": [
      "Control.Concurrent.STM.Map"
    ],
    "name": "ttrie",
    "version": "0.1.2.1"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [],
      "bytestring": [],
      "bytestring-conversion": [],
      "errors": [],
      "network-uri": [],
      "text": []
    },
    "imports": [
      "ParserBench",
      "WriterBench"
    ],
    "modules": [
      "Network.HTTP.Link",
      "Network.HTTP.Link.Types",
      "Network.HTTP.Link.Parser",
      "Network.HTTP.Link.Writer"
    ],
    "name": "http-link-header",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Category",
        "Data.Char",
        "Data.List",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Category",
      "Data.Char",
      "Data.List",
      "Prelude",
      "Text.Cassette.Char",
      "Text.Cassette.Combinator",
      "Text.Cassette.Lead",
      "Text.Cassette.Number",
      "Text.Cassette.Prim"
    ],
    "modules": [
      "Text.Cassette",
      "Text.Cassette.Prim",
      "Text.Cassette.Lead",
      "Text.Cassette.Combinator",
      "Text.Cassette.Char",
      "Text.Cassette.Number"
    ],
    "name": "cassette",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudSearch",
      "Test.AWS.CloudSearch",
      "Test.AWS.CloudSearch.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudSearch",
      "Network.AWS.CloudSearch.BuildSuggesters",
      "Network.AWS.CloudSearch.CreateDomain",
      "Network.AWS.CloudSearch.DefineAnalysisScheme",
      "Network.AWS.CloudSearch.DefineExpression",
      "Network.AWS.CloudSearch.DefineIndexField",
      "Network.AWS.CloudSearch.DefineSuggester",
      "Network.AWS.CloudSearch.DeleteAnalysisScheme",
      "Network.AWS.CloudSearch.DeleteDomain",
      "Network.AWS.CloudSearch.DeleteExpression",
      "Network.AWS.CloudSearch.DeleteIndexField",
      "Network.AWS.CloudSearch.DeleteSuggester",
      "Network.AWS.CloudSearch.DescribeAnalysisSchemes",
      "Network.AWS.CloudSearch.DescribeAvailabilityOptions",
      "Network.AWS.CloudSearch.DescribeDomains",
      "Network.AWS.CloudSearch.DescribeExpressions",
      "Network.AWS.CloudSearch.DescribeIndexFields",
      "Network.AWS.CloudSearch.DescribeScalingParameters",
      "Network.AWS.CloudSearch.DescribeServiceAccessPolicies",
      "Network.AWS.CloudSearch.DescribeSuggesters",
      "Network.AWS.CloudSearch.IndexDocuments",
      "Network.AWS.CloudSearch.ListDomainNames",
      "Network.AWS.CloudSearch.Types",
      "Network.AWS.CloudSearch.UpdateAvailabilityOptions",
      "Network.AWS.CloudSearch.UpdateScalingParameters",
      "Network.AWS.CloudSearch.UpdateServiceAccessPolicies",
      "Network.AWS.CloudSearch.Waiters"
    ],
    "name": "amazonka-cloudsearch",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Maybe",
        "Foreign",
        "Foreign.C",
        "System.IO.Unsafe"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "entropy": [
        "System.Entropy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Crypto.Scrypt",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.Maybe",
      "Foreign",
      "Foreign.C",
      "System.Entropy",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "Crypto.Scrypt"
    ],
    "name": "scrypt",
    "version": "0.5.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Data",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Float",
        "GHC.Generics",
        "Prelude",
        "Text.ParserCombinators.ReadP",
        "Text.Read"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [],
      "monad-primitive": [
        "Data.PrimRef"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Criterion.Main",
      "Data.Data",
      "Data.Foldable",
      "Data.Histogram",
      "Data.Histogram.Bin",
      "Data.Histogram.Bin.Bin2D",
      "Data.Histogram.Bin.BinEnum",
      "Data.Histogram.Bin.BinF",
      "Data.Histogram.Bin.BinI",
      "Data.Histogram.Bin.BinInt",
      "Data.Histogram.Bin.Classes",
      "Data.Histogram.Bin.LogBinD",
      "Data.Histogram.Bin.Read",
      "Data.Histogram.Fill",
      "Data.Histogram.Generic",
      "Data.Histogram.ST",
      "Data.Maybe",
      "Data.Monoid",
      "Data.PrimRef",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "GHC.Float",
      "GHC.Generics",
      "Prelude",
      "System.Random.MWC",
      "Text.ParserCombinators.ReadP",
      "Text.Read"
    ],
    "modules": [
      "Data.Histogram",
      "Data.Histogram.Generic",
      "Data.Histogram.Fill",
      "Data.Histogram.Bin",
      "Data.Histogram.Bin.Classes",
      "Data.Histogram.Bin.BinI",
      "Data.Histogram.Bin.BinInt",
      "Data.Histogram.Bin.BinEnum",
      "Data.Histogram.Bin.BinF",
      "Data.Histogram.Bin.LogBinD",
      "Data.Histogram.Bin.MaybeBin",
      "Data.Histogram.Bin.Bin2D",
      "Data.Histogram.Bin.Extra",
      "Data.Histogram.Bin.Read",
      "Data.Histogram.ST"
    ],
    "name": "histogram-fill",
    "version": "0.8.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe"
      ],
      "data-default": []
    },
    "imports": [
      "Data.Data",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Graphics.X11.ExtraTypes.AP",
      "Graphics.X11.ExtraTypes.DEC",
      "Graphics.X11.ExtraTypes.HP",
      "Graphics.X11.ExtraTypes.Sun",
      "Graphics.X11.ExtraTypes.XF86",
      "Graphics.X11.ExtraTypes.XorgDefault",
      "Graphics.X11.Types",
      "Graphics.X11.Xlib",
      "Graphics.X11.Xlib.Atom",
      "Graphics.X11.Xlib.Color",
      "Graphics.X11.Xlib.Context",
      "Graphics.X11.Xlib.Cursor",
      "Graphics.X11.Xlib.Display",
      "Graphics.X11.Xlib.Event",
      "Graphics.X11.Xlib.Font",
      "Graphics.X11.Xlib.Image",
      "Graphics.X11.Xlib.Misc",
      "Graphics.X11.Xlib.Region",
      "Graphics.X11.Xlib.Screen",
      "Graphics.X11.Xlib.Types",
      "Graphics.X11.Xlib.Window",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Graphics.X11",
      "Graphics.X11.Types",
      "Graphics.X11.Xlib",
      "Graphics.X11.Xlib.Atom",
      "Graphics.X11.Xlib.Color",
      "Graphics.X11.Xlib.Context",
      "Graphics.X11.Xlib.Cursor",
      "Graphics.X11.Xlib.Display",
      "Graphics.X11.Xlib.Event",
      "Graphics.X11.Xlib.Font",
      "Graphics.X11.Xlib.Misc",
      "Graphics.X11.Xlib.Region",
      "Graphics.X11.Xlib.Screen",
      "Graphics.X11.Xlib.Types",
      "Graphics.X11.Xlib.Window",
      "Graphics.X11.Xlib.Image",
      "Graphics.X11.Xlib.Extras",
      "Graphics.X11.Xinerama",
      "Graphics.X11.Xrandr",
      "Graphics.X11.XScreenSaver",
      "Graphics.X11.ExtraTypes",
      "Graphics.X11.ExtraTypes.AP",
      "Graphics.X11.ExtraTypes.DEC",
      "Graphics.X11.ExtraTypes.HP",
      "Graphics.X11.ExtraTypes.Sun",
      "Graphics.X11.ExtraTypes.XF86",
      "Graphics.X11.ExtraTypes.XorgDefault"
    ],
    "name": "X11",
    "version": "1.6.1.2"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Version",
        "GHC.Exts",
        "Numeric",
        "System.CPUTime",
        "System.Environment",
        "System.IO",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "directory": [],
      "filepath": [],
      "ghc": [],
      "ghc-paths": [
        "GHC.Paths"
      ],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "process": [
        "System.Process"
      ],
      "syb": [],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "ConLike",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "CoreUtils",
      "Data.Array",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Function",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Ord",
      "Data.Time",
      "Data.Version",
      "DynFlags",
      "Exception",
      "GHC",
      "GHC.Exts",
      "GhciMonad",
      "GHCi.ObjLink",
      "GhciTypes",
      "GhcMonad",
      "GHC.Paths",
      "HscTypes",
      "Lexer",
      "Linker",
      "Module",
      "MonadUtils",
      "Name",
      "Numeric",
      "ObjLink",
      "OccName",
      "Outputable",
      "Panic",
      "Paths",
      "SrcLoc",
      "System.Console.Haskeline",
      "System.CPUTime",
      "System.Environment",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.Process",
      "System.Win32",
      "Test.Hspec",
      "Text.Regex",
      "Util"
    ],
    "modules": [],
    "name": "intero",
    "version": "0.1.18"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Dynamic",
        "System.Exit",
        "System.IO.Error"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Data.Dynamic",
      "System.Exit",
      "System.IO.Error"
    ],
    "modules": [
      "UnexceptionalIO"
    ],
    "name": "unexceptionalio",
    "version": "0.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception"
      ],
      "base-compat": [],
      "markdown-unlit": []
    },
    "imports": [
      "Control.Exception"
    ],
    "modules": [
      "Text.Markdown.Unlit"
    ],
    "name": "markdown-unlit",
    "version": "0.4.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.RDS",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.RDS",
      "Test.AWS.RDS.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.RDS",
      "Network.AWS.RDS.AddSourceIdentifierToSubscription",
      "Network.AWS.RDS.AddTagsToResource",
      "Network.AWS.RDS.ApplyPendingMaintenanceAction",
      "Network.AWS.RDS.AuthorizeDBSecurityGroupIngress",
      "Network.AWS.RDS.CopyDBClusterSnapshot",
      "Network.AWS.RDS.CopyDBParameterGroup",
      "Network.AWS.RDS.CopyDBSnapshot",
      "Network.AWS.RDS.CopyOptionGroup",
      "Network.AWS.RDS.CreateDBCluster",
      "Network.AWS.RDS.CreateDBClusterParameterGroup",
      "Network.AWS.RDS.CreateDBClusterSnapshot",
      "Network.AWS.RDS.CreateDBInstance",
      "Network.AWS.RDS.CreateDBInstanceReadReplica",
      "Network.AWS.RDS.CreateDBParameterGroup",
      "Network.AWS.RDS.CreateDBSecurityGroup",
      "Network.AWS.RDS.CreateDBSnapshot",
      "Network.AWS.RDS.CreateDBSubnetGroup",
      "Network.AWS.RDS.CreateEventSubscription",
      "Network.AWS.RDS.CreateOptionGroup",
      "Network.AWS.RDS.DeleteDBCluster",
      "Network.AWS.RDS.DeleteDBClusterParameterGroup",
      "Network.AWS.RDS.DeleteDBClusterSnapshot",
      "Network.AWS.RDS.DeleteDBInstance",
      "Network.AWS.RDS.DeleteDBParameterGroup",
      "Network.AWS.RDS.DeleteDBSecurityGroup",
      "Network.AWS.RDS.DeleteDBSnapshot",
      "Network.AWS.RDS.DeleteDBSubnetGroup",
      "Network.AWS.RDS.DeleteEventSubscription",
      "Network.AWS.RDS.DeleteOptionGroup",
      "Network.AWS.RDS.DescribeAccountAttributes",
      "Network.AWS.RDS.DescribeCertificates",
      "Network.AWS.RDS.DescribeDBClusterParameterGroups",
      "Network.AWS.RDS.DescribeDBClusterParameters",
      "Network.AWS.RDS.DescribeDBClusterSnapshots",
      "Network.AWS.RDS.DescribeDBClusters",
      "Network.AWS.RDS.DescribeDBEngineVersions",
      "Network.AWS.RDS.DescribeDBInstances",
      "Network.AWS.RDS.DescribeDBLogFiles",
      "Network.AWS.RDS.DescribeDBParameterGroups",
      "Network.AWS.RDS.DescribeDBParameters",
      "Network.AWS.RDS.DescribeDBSecurityGroups",
      "Network.AWS.RDS.DescribeDBSnapshotAttributes",
      "Network.AWS.RDS.DescribeDBSnapshots",
      "Network.AWS.RDS.DescribeDBSubnetGroups",
      "Network.AWS.RDS.DescribeEngineDefaultClusterParameters",
      "Network.AWS.RDS.DescribeEngineDefaultParameters",
      "Network.AWS.RDS.DescribeEventCategories",
      "Network.AWS.RDS.DescribeEventSubscriptions",
      "Network.AWS.RDS.DescribeEvents",
      "Network.AWS.RDS.DescribeOptionGroupOptions",
      "Network.AWS.RDS.DescribeOptionGroups",
      "Network.AWS.RDS.DescribeOrderableDBInstanceOptions",
      "Network.AWS.RDS.DescribePendingMaintenanceActions",
      "Network.AWS.RDS.DescribeReservedDBInstances",
      "Network.AWS.RDS.DescribeReservedDBInstancesOfferings",
      "Network.AWS.RDS.DownloadDBLogFilePortion",
      "Network.AWS.RDS.FailoverDBCluster",
      "Network.AWS.RDS.ListTagsForResource",
      "Network.AWS.RDS.ModifyDBCluster",
      "Network.AWS.RDS.ModifyDBClusterParameterGroup",
      "Network.AWS.RDS.ModifyDBInstance",
      "Network.AWS.RDS.ModifyDBParameterGroup",
      "Network.AWS.RDS.ModifyDBSnapshotAttribute",
      "Network.AWS.RDS.ModifyDBSubnetGroup",
      "Network.AWS.RDS.ModifyEventSubscription",
      "Network.AWS.RDS.ModifyOptionGroup",
      "Network.AWS.RDS.PromoteReadReplica",
      "Network.AWS.RDS.PurchaseReservedDBInstancesOffering",
      "Network.AWS.RDS.RebootDBInstance",
      "Network.AWS.RDS.RemoveSourceIdentifierFromSubscription",
      "Network.AWS.RDS.RemoveTagsFromResource",
      "Network.AWS.RDS.ResetDBClusterParameterGroup",
      "Network.AWS.RDS.ResetDBParameterGroup",
      "Network.AWS.RDS.RestoreDBClusterFromSnapshot",
      "Network.AWS.RDS.RestoreDBClusterToPointInTime",
      "Network.AWS.RDS.RestoreDBInstanceFromDBSnapshot",
      "Network.AWS.RDS.RestoreDBInstanceToPointInTime",
      "Network.AWS.RDS.RevokeDBSecurityGroupIngress",
      "Network.AWS.RDS.Types",
      "Network.AWS.RDS.Waiters"
    ],
    "name": "amazonka-rds",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "clash-lib": [],
      "clash-prelude": [],
      "fgl": [],
      "lens": [],
      "mtl": [],
      "text": [
        "Data.Text.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "wl-pprint-text": []
    },
    "imports": [
      "Control.Applicative",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.Text.Lazy",
      "Paths",
      "System.FilePath"
    ],
    "modules": [
      "CLaSH.Backend.VHDL"
    ],
    "name": "clash-vhdl",
    "version": "0.6.16"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Autoscaler",
      "Network.Google.Autoscaler.Types",
      "Network.Google.Resource.Autoscaler.Autoscalers.Delete",
      "Network.Google.Resource.Autoscaler.Autoscalers.Get",
      "Network.Google.Resource.Autoscaler.Autoscalers.Insert",
      "Network.Google.Resource.Autoscaler.Autoscalers.List",
      "Network.Google.Resource.Autoscaler.Autoscalers.Patch",
      "Network.Google.Resource.Autoscaler.Autoscalers.Update",
      "Network.Google.Resource.Autoscaler.ZoneOperations.Delete",
      "Network.Google.Resource.Autoscaler.ZoneOperations.Get",
      "Network.Google.Resource.Autoscaler.ZoneOperations.List",
      "Network.Google.Resource.Autoscaler.Zones.List"
    ],
    "name": "gogol-autoscaler",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "JuicyPixels": [
        "Codec.Picture"
      ],
      "base": [
        "Control.Applicative",
        "Data.Coerce",
        "Data.Ix",
        "Data.Monoid",
        "Data.Word",
        "Prelude"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "carray": [
        "Data.Array.CArray"
      ],
      "fft": [
        "Math.FFT"
      ]
    },
    "imports": [
      "Codec.Picture",
      "Codec.Picture.ScaleDCT",
      "Control.Applicative",
      "Data.Array.CArray",
      "Data.Coerce",
      "Data.Ix",
      "Data.Monoid",
      "Data.Time",
      "Data.Word",
      "Math.FFT",
      "Prelude",
      "Prelude.Compat"
    ],
    "modules": [
      "Codec.Picture.ScaleDCT"
    ],
    "name": "JuicyPixels-scale-dct",
    "version": "0.1.1.2"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Monad",
        "Data.Complex",
        "Data.IORef",
        "Data.List",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.StablePtr",
        "Foreign.Storable",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "hmatrix": [
        "Numeric.LinearAlgebra",
        "Numeric.LinearAlgebra.Devel",
        "Numeric.LinearAlgebra.HMatrix"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "vector": [
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Complex",
      "Data.IORef",
      "Data.List",
      "Data.Vector.Storable",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "Foreign.Storable",
      "Numeric.GSL.Differentiation",
      "Numeric.GSL.Fitting",
      "Numeric.GSL.Fourier",
      "Numeric.GSL.Integration",
      "Numeric.GSL.Internal",
      "Numeric.GSL.Interpolation",
      "Numeric.GSL.Minimization",
      "Numeric.GSL.ODE",
      "Numeric.GSL.Polynomials",
      "Numeric.GSL.Root",
      "Numeric.GSL.Vector",
      "Numeric.LinearAlgebra",
      "Numeric.LinearAlgebra.Devel",
      "Numeric.LinearAlgebra.HMatrix",
      "Numeric.LinearAlgebra.Util",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "System.Random"
    ],
    "modules": [
      "Numeric.GSL.Differentiation",
      "Numeric.GSL.Integration",
      "Numeric.GSL.Fourier",
      "Numeric.GSL.Polynomials",
      "Numeric.GSL.Minimization",
      "Numeric.GSL.Root",
      "Numeric.GSL.Fitting",
      "Numeric.GSL.ODE",
      "Numeric.GSL",
      "Numeric.GSL.LinearAlgebra",
      "Numeric.GSL.Interpolation",
      "Numeric.GSL.SimulatedAnnealing",
      "Graphics.Plot"
    ],
    "name": "hmatrix-gsl",
    "version": "0.17.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "cpu": [
        "System.Endian"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Crypto.MAC.SipHash",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Endian",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Test"
    ],
    "modules": [
      "Crypto.MAC.SipHash"
    ],
    "name": "siphash",
    "version": "1.0.3"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Data.Typeable"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Typeable",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.Method",
      "Network.HTTP.Types.QueryLike",
      "Network.HTTP.Types.Status",
      "Network.HTTP.Types.URI",
      "Network.HTTP.Types.Version",
      "Test.DocTest"
    ],
    "modules": [
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.Method",
      "Network.HTTP.Types.QueryLike",
      "Network.HTTP.Types.Status",
      "Network.HTTP.Types.URI",
      "Network.HTTP.Types.Version"
    ],
    "name": "http-types",
    "version": "0.9.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.IO.Class",
        "Data.Monoid",
        "Data.String",
        "Prelude"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "fail": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "monad-control": [],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "nats": [],
      "network": [
        "Network"
      ],
      "regex-compat": [
        "Text.Regex"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "transformers-base": [],
      "transformers-compat": [],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": [
        "Network.Wai.Middleware.Gzip",
        "Network.Wai.Middleware.RequestLogger",
        "Network.Wai.Parse"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Default.Class",
      "Data.Map",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Network",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Handler.FastCGI",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Middleware.Gzip",
      "Network.Wai.Middleware.RequestLogger",
      "Network.Wai.Middleware.Static",
      "Network.Wai.Parse",
      "Prelude",
      "System.FilePath",
      "System.Random",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Regex",
      "Web.Cookie",
      "Web.Scotty",
      "Web.Scotty.Action",
      "Web.Scotty.Internal.Types",
      "Web.Scotty.Route",
      "Web.Scotty.Trans",
      "Web.Scotty.Util"
    ],
    "modules": [
      "Web.Scotty",
      "Web.Scotty.Trans",
      "Web.Scotty.Internal.Types"
    ],
    "name": "scotty",
    "version": "0.11.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Either",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "GHC.Base",
        "GHC.IO.Encoding",
        "GHC.TypeLits",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "ghc": [],
      "ghc-tcplugins-extra": [
        "GHC.TcPluginM.Extra"
      ],
      "integer-gmp": [
        "GHC.Integer",
        "GHC.Integer.Logarithms"
      ]
    },
    "imports": [
      "Coercion",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Data.Either",
      "Data.Function",
      "Data.List",
      "Data.Maybe",
      "Data.Proxy",
      "ErrorTests",
      "GHC.Base",
      "GHC.Integer",
      "GHC.Integer.Logarithms",
      "GHC.IO.Encoding",
      "GHC.TcPluginM.Extra",
      "GHC.TypeLits",
      "GHC.TypeLits.Normalise.SOP",
      "GHC.TypeLits.Normalise.Unify",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Outputable",
      "Plugins",
      "Prelude",
      "TcEvidence",
      "TcPluginM",
      "TcRnMonad",
      "TcRnTypes",
      "TcType",
      "TcTypeNats",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "TyCoRep",
      "Type",
      "TysWiredIn",
      "UniqSet",
      "Unsafe.Coerce"
    ],
    "modules": [
      "GHC.TypeLits.Normalise",
      "GHC.TypeLits.Normalise.SOP",
      "GHC.TypeLits.Normalise.Unify"
    ],
    "name": "ghc-typelits-natnormalise",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.IArray"
      ],
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Unsafe",
        "Data.Complex",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Ratio",
        "Foreign",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.ForeignPtr",
        "GHC.TypeLits",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString.Internal"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "random": [
        "System.Random"
      ],
      "split": [
        "Data.List.Split"
      ],
      "storable-complex": [],
      "vector": [
        "Data.Vector.Storable",
        "Data.Vector.Storable.Internal"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.ST.Unsafe",
      "Data.Array",
      "Data.Array.IArray",
      "Data.Binary",
      "Data.ByteString.Internal",
      "Data.Complex",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Internal",
      "Foreign",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.ForeignPtr",
      "GHC.TypeLits",
      "Internal.Algorithms",
      "Internal.CG",
      "Internal.Chain",
      "Internal.Container",
      "Internal.Conversion",
      "Internal.Convolution",
      "Internal.Devel",
      "Internal.Element",
      "Internal.Foreign",
      "Internal.IO",
      "Internal.LAPACK",
      "Internal.Matrix",
      "Internal.Modular",
      "Internal.Numeric",
      "Internal.Random",
      "Internal.Sparse",
      "Internal.ST",
      "Internal.Static",
      "Internal.Util",
      "Internal.Vector",
      "Internal.Vectorized",
      "Numeric.LinearAlgebra",
      "Numeric.LinearAlgebra.Data",
      "Numeric.Matrix",
      "Numeric.Vector",
      "System.IO.Unsafe",
      "System.Random",
      "Text.Printf",
      "Util.Misc"
    ],
    "modules": [
      "Numeric.LinearAlgebra",
      "Numeric.LinearAlgebra.Devel",
      "Numeric.LinearAlgebra.Data",
      "Numeric.LinearAlgebra.HMatrix",
      "Numeric.LinearAlgebra.Static"
    ],
    "name": "hmatrix",
    "version": "0.17.0.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.ByteString.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Ord",
        "Data.Word",
        "Numeric",
        "Prelude",
        "System.Environment",
        "Text.Printf"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Set"
      ],
      "dlist": [
        "Data.DList"
      ],
      "semigroups": [],
      "text-ldap": [],
      "transformers": [
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Trans.Writer",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.DList",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.Word",
      "Numeric",
      "Prelude",
      "System.Environment",
      "Test.QuickCheck",
      "Test.QuickCheck.Simple",
      "Text.LDAP.Data",
      "Text.LDAP.InternalParser",
      "Text.LDAP.Parser",
      "Text.LDAP.Printer",
      "Text.Printf"
    ],
    "modules": [
      "Text.LDAP.Data",
      "Text.LDAP.Parser",
      "Text.LDAP.Printer"
    ],
    "name": "text-ldap",
    "version": "0.1.1.8"
  },
  {
    "dependencies": {
      "aeson": [],
      "amazonka": [],
      "amazonka-core": [],
      "amazonka-ses": [],
      "base": [],
      "hworker": [
        "System.Hworker"
      ],
      "lens": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.HashMap.Strict",
      "Data.Text",
      "System.Hworker"
    ],
    "modules": [
      "System.Hworker.SES"
    ],
    "name": "hworker-ses",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Data",
        "Data.List",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ],
      "entropy": [
        "System.Entropy"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Crypto.Classes",
      "Crypto.CPoly",
      "Crypto.Random",
      "Crypto.Types",
      "Crypto.Util",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Data",
      "Data.List",
      "Data.Proxy",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.Tagged",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "System.Entropy",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Crypto.Classes",
      "Crypto.Types",
      "Crypto.HMAC",
      "Crypto.Random",
      "Crypto.Padding",
      "Crypto.Modes",
      "Crypto.Util",
      "Crypto.Classes.Exceptions"
    ],
    "name": "crypto-api",
    "version": "0.13.2"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Paths"
    ],
    "modules": [
      "GHCJS.CodeMirror"
    ],
    "name": "ghcjs-codemirror",
    "version": "0.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "GHC.Generics"
      ]
    },
    "imports": [
      "Data.Char",
      "GHC.Generics"
    ],
    "modules": [
      "GHC.LanguageExtensions.Type",
      "GHC.Lexeme"
    ],
    "name": "ghc-boot-th",
    "version": "8.0.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString"
      ],
      "base": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "enclosed-exceptions": [],
      "exceptions": [],
      "lifted-base": [],
      "monad-control": [],
      "mtl": [],
      "network": [
        "Network",
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "transformers": []
    },
    "imports": [
      "Data.Attoparsec.ByteString",
      "Data.ByteString",
      "Network",
      "Network.Attoparsec",
      "Network.Simple.TCP",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Network.Attoparsec"
    ],
    "name": "network-attoparsec",
    "version": "0.12.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Monoid",
        "Data.Semigroup",
        "Prelude"
      ],
      "comonad": [],
      "keys": [
        "Data.Key"
      ],
      "pointed": [
        "Data.Pointed"
      ],
      "semigroupoids": [
        "Data.Functor.Bind",
        "Data.Functor.Extend",
        "Data.Functor.Plus"
      ],
      "semigroups": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Fusion.Bundle",
        "Data.Vector.Fusion.Bundle.Size",
        "Data.Vector.Generic",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Functor.Bind",
      "Data.Functor.Extend",
      "Data.Functor.Plus",
      "Data.Key",
      "Data.Monoid",
      "Data.Pointed",
      "Data.Semigroup",
      "Data.Vector",
      "Data.Vector.Fusion.Bundle",
      "Data.Vector.Fusion.Bundle.Size",
      "Data.Vector.Fusion.Stream",
      "Data.Vector.Fusion.Stream.Size",
      "Data.Vector.Generic",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Prelude"
    ],
    "modules": [
      "Data.Vector.Instances"
    ],
    "name": "vector-instances",
    "version": "3.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.List",
        "Data.Monoid",
        "System.Environment",
        "System.IO.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Writer.Lazy"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Writer.Lazy",
      "Data.List",
      "Data.Monoid",
      "System.Directory",
      "System.Directory.PathWalk",
      "System.Environment",
      "System.FilePath",
      "System.IO.Unsafe"
    ],
    "modules": [
      "System.Directory.PathWalk"
    ],
    "name": "pathwalk",
    "version": "0.3.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid",
        "Data.Word"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cassava": [
        "Data.Csv",
        "Data.Csv.Incremental"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Csv",
      "Data.Csv.Incremental",
      "Data.HashMap.Strict",
      "Data.Monoid",
      "Data.Vector",
      "Data.Word",
      "Pipes",
      "Pipes.Csv.Encoding",
      "Pipes.Prelude"
    ],
    "modules": [
      "Pipes.Csv",
      "Pipes.Csv.Encoding"
    ],
    "name": "pipes-csv",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.IO",
        "Data.Array.ST"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bifunctor",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "GHC.Generics",
        "Prelude",
        "System.IO.Unsafe",
        "Text.Show"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Array",
      "Data.Array.IO",
      "Data.Array.ST",
      "Data.Bifunctor",
      "Data.Function",
      "Data.Functor",
      "Data.Graph.Inductive",
      "Data.Graph.Inductive.Arbitrary",
      "Data.Graph.Inductive.Basic",
      "Data.Graph.Inductive.Example",
      "Data.Graph.Inductive.Graph",
      "Data.Graph.Inductive.Graph.Properties",
      "Data.Graph.Inductive.Internal.Heap",
      "Data.Graph.Inductive.Internal.Queue",
      "Data.Graph.Inductive.Internal.RootPath",
      "Data.Graph.Inductive.Internal.Thread",
      "Data.Graph.Inductive.Monad",
      "Data.Graph.Inductive.Monad.IOArray",
      "Data.Graph.Inductive.NodeMap",
      "Data.Graph.Inductive.PatriciaTree",
      "Data.Graph.Inductive.Proxy",
      "Data.Graph.Inductive.Query",
      "Data.Graph.Inductive.Query.ArtPoint",
      "Data.Graph.Inductive.Query.BCC",
      "Data.Graph.Inductive.Query.BFS",
      "Data.Graph.Inductive.Query.DFS",
      "Data.Graph.Inductive.Query.Dominators",
      "Data.Graph.Inductive.Query.GVD",
      "Data.Graph.Inductive.Query.Indep",
      "Data.Graph.Inductive.Query.MaxFlow",
      "Data.Graph.Inductive.Query.MaxFlow2",
      "Data.Graph.Inductive.Query.Monad",
      "Data.Graph.Inductive.Query.MST",
      "Data.Graph.Inductive.Query.Properties",
      "Data.Graph.Inductive.Query.SP",
      "Data.Graph.Inductive.Query.TransClos",
      "Data.Graph.Inductive.Tree",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Tree",
      "Data.Word",
      "GHC.Generics",
      "Paths",
      "Prelude",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Text.Show"
    ],
    "modules": [
      "Data.Graph.Inductive.Internal.Heap",
      "Data.Graph.Inductive.Internal.Queue",
      "Data.Graph.Inductive.Internal.RootPath",
      "Data.Graph.Inductive.Internal.Thread",
      "Data.Graph.Inductive.Basic",
      "Data.Graph.Inductive.Example",
      "Data.Graph.Inductive.Graph",
      "Data.Graph.Inductive.Monad",
      "Data.Graph.Inductive.NodeMap",
      "Data.Graph.Inductive.PatriciaTree",
      "Data.Graph.Inductive.Query",
      "Data.Graph.Inductive.Tree",
      "Data.Graph.Inductive.Monad.IOArray",
      "Data.Graph.Inductive.Monad.STArray",
      "Data.Graph.Inductive.Query.ArtPoint",
      "Data.Graph.Inductive.Query.BCC",
      "Data.Graph.Inductive.Query.BFS",
      "Data.Graph.Inductive.Query.DFS",
      "Data.Graph.Inductive.Query.Dominators",
      "Data.Graph.Inductive.Query.GVD",
      "Data.Graph.Inductive.Query.Indep",
      "Data.Graph.Inductive.Query.MST",
      "Data.Graph.Inductive.Query.MaxFlow",
      "Data.Graph.Inductive.Query.MaxFlow2",
      "Data.Graph.Inductive.Query.Monad",
      "Data.Graph.Inductive.Query.SP",
      "Data.Graph.Inductive.Query.TransClos",
      "Data.Graph.Inductive"
    ],
    "name": "fgl",
    "version": "5.5.3.0"
  },
  {
    "dependencies": {
      "JuicyPixels": [
        "Codec.Picture"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Version",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "cli": [
        "Console.Options"
      ],
      "pixelated-avatar-generator": [],
      "pureMD5": [
        "Data.Digest.Pure.MD5"
      ],
      "random": [
        "System.Random"
      ],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Codec.Picture",
      "Console.Options",
      "Control.Concurrent.Async",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Digest.Pure.MD5",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Version",
      "Graphics.Avatars.Pixelated",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Graphics.Avatars.Pixelated"
    ],
    "name": "pixelated-avatar-generator",
    "version": "0.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Instances",
        "Data.Complex",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "GHC.Generics"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader",
        "Data.Functor.Reverse"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Build",
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Monad",
      "Control.Monad.Instances",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Reader",
      "Data.Complex",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.List",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Proxy",
      "Data.Tagged",
      "GHC.Generics",
      "System.Directory",
      "System.FilePath",
      "Test.DocTest"
    ],
    "modules": [
      "Data.Distributive"
    ],
    "name": "distributive",
    "version": "0.5.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.String"
      ],
      "containers": [
        "Data.Map"
      ],
      "dlist": [
        "Data.DList"
      ],
      "mtl": [
        "Control.Monad.Writer.Strict"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "xml-conduit": [
        "Text.XML"
      ],
      "xml-types": []
    },
    "imports": [
      "Control.Monad.Writer.Strict",
      "Data.DList",
      "Data.Map",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Text.XML",
      "Text.XML.Writer"
    ],
    "modules": [
      "Text.XML.Writer"
    ],
    "name": "xml-conduit-writer",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "ReadArgs": [
        "ReadArgs"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bool",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Word",
        "GHC.Exts",
        "Prelude",
        "System.Environment",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "safe": [
        "Safe"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "CorePrelude",
      "Data.Bool",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Sequence",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "GHC.Exts",
      "Prelude",
      "ReadArgs",
      "Safe",
      "System.Environment",
      "System.FilePath",
      "System.IO.Error"
    ],
    "modules": [
      "BasicPrelude",
      "CorePrelude"
    ],
    "name": "basic-prelude",
    "version": "0.6.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Config",
      "Test.AWS.Config",
      "Test.AWS.Config.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Config",
      "Network.AWS.Config.DeleteConfigRule",
      "Network.AWS.Config.DeleteDeliveryChannel",
      "Network.AWS.Config.DeliverConfigSnapshot",
      "Network.AWS.Config.DescribeComplianceByConfigRule",
      "Network.AWS.Config.DescribeComplianceByResource",
      "Network.AWS.Config.DescribeConfigRuleEvaluationStatus",
      "Network.AWS.Config.DescribeConfigRules",
      "Network.AWS.Config.DescribeConfigurationRecorderStatus",
      "Network.AWS.Config.DescribeConfigurationRecorders",
      "Network.AWS.Config.DescribeDeliveryChannelStatus",
      "Network.AWS.Config.DescribeDeliveryChannels",
      "Network.AWS.Config.GetComplianceDetailsByConfigRule",
      "Network.AWS.Config.GetComplianceDetailsByResource",
      "Network.AWS.Config.GetComplianceSummaryByConfigRule",
      "Network.AWS.Config.GetComplianceSummaryByResourceType",
      "Network.AWS.Config.GetResourceConfigHistory",
      "Network.AWS.Config.ListDiscoveredResources",
      "Network.AWS.Config.PutConfigRule",
      "Network.AWS.Config.PutConfigurationRecorder",
      "Network.AWS.Config.PutDeliveryChannel",
      "Network.AWS.Config.PutEvaluations",
      "Network.AWS.Config.StartConfigurationRecorder",
      "Network.AWS.Config.StopConfigurationRecorder",
      "Network.AWS.Config.Types",
      "Network.AWS.Config.Waiters"
    ],
    "name": "amazonka-config",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.List"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ]
    },
    "imports": [
      "Data.BEncode.Lexer",
      "Data.Binary",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "Data.BEncode",
      "Data.BEncode.Lexer",
      "Data.BEncode.Parser"
    ],
    "name": "bencode",
    "version": "0.6.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Int",
        "Data.Monoid"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "microlens": [
        "Lens.Micro",
        "Lens.Micro.Internal"
      ],
      "microlens-ghc": [
        "Lens.Micro.GHC"
      ],
      "microlens-mtl": [
        "Lens.Micro.Mtl"
      ],
      "microlens-th": [
        "Lens.Micro.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.Int",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Lens.Micro",
      "Lens.Micro.GHC",
      "Lens.Micro.Internal",
      "Lens.Micro.Mtl",
      "Lens.Micro.Platform.Internal",
      "Lens.Micro.TH"
    ],
    "modules": [
      "Lens.Micro.Platform",
      "Lens.Micro.Platform.Internal"
    ],
    "name": "microlens-platform",
    "version": "0.3.7.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.IoT",
      "Test.AWS.Fixture",
      "Test.AWS.IoT",
      "Test.AWS.IoT.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.IoT",
      "Network.AWS.IoT.AcceptCertificateTransfer",
      "Network.AWS.IoT.AttachPrincipalPolicy",
      "Network.AWS.IoT.AttachThingPrincipal",
      "Network.AWS.IoT.CancelCertificateTransfer",
      "Network.AWS.IoT.CreateCertificateFromCsr",
      "Network.AWS.IoT.CreateKeysAndCertificate",
      "Network.AWS.IoT.CreatePolicy",
      "Network.AWS.IoT.CreatePolicyVersion",
      "Network.AWS.IoT.CreateThing",
      "Network.AWS.IoT.CreateTopicRule",
      "Network.AWS.IoT.DeleteCACertificate",
      "Network.AWS.IoT.DeleteCertificate",
      "Network.AWS.IoT.DeletePolicy",
      "Network.AWS.IoT.DeletePolicyVersion",
      "Network.AWS.IoT.DeleteRegistrationCode",
      "Network.AWS.IoT.DeleteThing",
      "Network.AWS.IoT.DeleteTopicRule",
      "Network.AWS.IoT.DescribeCACertificate",
      "Network.AWS.IoT.DescribeCertificate",
      "Network.AWS.IoT.DescribeEndpoint",
      "Network.AWS.IoT.DescribeThing",
      "Network.AWS.IoT.DetachPrincipalPolicy",
      "Network.AWS.IoT.DetachThingPrincipal",
      "Network.AWS.IoT.DisableTopicRule",
      "Network.AWS.IoT.EnableTopicRule",
      "Network.AWS.IoT.GetLoggingOptions",
      "Network.AWS.IoT.GetPolicy",
      "Network.AWS.IoT.GetPolicyVersion",
      "Network.AWS.IoT.GetRegistrationCode",
      "Network.AWS.IoT.GetTopicRule",
      "Network.AWS.IoT.ListCACertificates",
      "Network.AWS.IoT.ListCertificates",
      "Network.AWS.IoT.ListCertificatesByCA",
      "Network.AWS.IoT.ListPolicies",
      "Network.AWS.IoT.ListPolicyVersions",
      "Network.AWS.IoT.ListPrincipalPolicies",
      "Network.AWS.IoT.ListPrincipalThings",
      "Network.AWS.IoT.ListThingPrincipals",
      "Network.AWS.IoT.ListThings",
      "Network.AWS.IoT.ListTopicRules",
      "Network.AWS.IoT.RegisterCACertificate",
      "Network.AWS.IoT.RegisterCertificate",
      "Network.AWS.IoT.RejectCertificateTransfer",
      "Network.AWS.IoT.ReplaceTopicRule",
      "Network.AWS.IoT.SetDefaultPolicyVersion",
      "Network.AWS.IoT.SetLoggingOptions",
      "Network.AWS.IoT.TransferCertificate",
      "Network.AWS.IoT.Types",
      "Network.AWS.IoT.UpdateCACertificate",
      "Network.AWS.IoT.UpdateCertificate",
      "Network.AWS.IoT.UpdateThing",
      "Network.AWS.IoT.Waiters"
    ],
    "name": "amazonka-iot",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Monad",
      "Prelude"
    ],
    "modules": [
      "Focus"
    ],
    "name": "focus",
    "version": "0.1.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Prelude"
      ],
      "tasty": [
        "Test.Tasty"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.List",
      "Data.Maybe",
      "Language.Haskell.TH",
      "Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Test.Tasty.TH"
    ],
    "name": "tasty-th",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "GHC.Exts",
        "GHC.Fingerprint.Type",
        "GHC.StaticPtr",
        "System.IO.Unsafe",
        "Unsafe.Coerce"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "rank1dynamic": [
        "Data.Rank1Dynamic",
        "Data.Rank1Typeable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Data.Binary",
      "Data.ByteString.Lazy",
      "Data.Map",
      "Data.Rank1Dynamic",
      "Data.Rank1Typeable",
      "GHC.Exts",
      "GHC.Fingerprint.Type",
      "GHC.StaticPtr",
      "System.IO.Unsafe",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Distributed.Static"
    ],
    "name": "distributed-static",
    "version": "0.3.5.0"
  },
  {
    "dependencies": {},
    "imports": [
      ""
    ],
    "modules": [
      "Data.Function.Pointless"
    ],
    "name": "pointless-fun",
    "version": "1.1.0.6"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "directory": [],
      "filepath": [],
      "http-types": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wai": [],
      "wai-extra": [
        "Network.Wai.Parse"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder.Char.Utf8",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.Wai.Parse"
    ],
    "modules": [
      "Web.Fn"
    ],
    "name": "fn",
    "version": "0.3.0.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ElasticBeanstalk",
      "Test.AWS.ElasticBeanstalk",
      "Test.AWS.ElasticBeanstalk.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ElasticBeanstalk",
      "Network.AWS.ElasticBeanstalk.AbortEnvironmentUpdate",
      "Network.AWS.ElasticBeanstalk.ApplyEnvironmentManagedAction",
      "Network.AWS.ElasticBeanstalk.CheckDNSAvailability",
      "Network.AWS.ElasticBeanstalk.ComposeEnvironments",
      "Network.AWS.ElasticBeanstalk.CreateApplication",
      "Network.AWS.ElasticBeanstalk.CreateApplicationVersion",
      "Network.AWS.ElasticBeanstalk.CreateConfigurationTemplate",
      "Network.AWS.ElasticBeanstalk.CreateEnvironment",
      "Network.AWS.ElasticBeanstalk.CreateStorageLocation",
      "Network.AWS.ElasticBeanstalk.DeleteApplication",
      "Network.AWS.ElasticBeanstalk.DeleteApplicationVersion",
      "Network.AWS.ElasticBeanstalk.DeleteConfigurationTemplate",
      "Network.AWS.ElasticBeanstalk.DeleteEnvironmentConfiguration",
      "Network.AWS.ElasticBeanstalk.DescribeApplicationVersions",
      "Network.AWS.ElasticBeanstalk.DescribeApplications",
      "Network.AWS.ElasticBeanstalk.DescribeConfigurationOptions",
      "Network.AWS.ElasticBeanstalk.DescribeConfigurationSettings",
      "Network.AWS.ElasticBeanstalk.DescribeEnvironmentHealth",
      "Network.AWS.ElasticBeanstalk.DescribeEnvironmentManagedActionHistory",
      "Network.AWS.ElasticBeanstalk.DescribeEnvironmentManagedActions",
      "Network.AWS.ElasticBeanstalk.DescribeEnvironmentResources",
      "Network.AWS.ElasticBeanstalk.DescribeEnvironments",
      "Network.AWS.ElasticBeanstalk.DescribeEvents",
      "Network.AWS.ElasticBeanstalk.DescribeInstancesHealth",
      "Network.AWS.ElasticBeanstalk.ListAvailableSolutionStacks",
      "Network.AWS.ElasticBeanstalk.RebuildEnvironment",
      "Network.AWS.ElasticBeanstalk.RequestEnvironmentInfo",
      "Network.AWS.ElasticBeanstalk.RestartAppServer",
      "Network.AWS.ElasticBeanstalk.RetrieveEnvironmentInfo",
      "Network.AWS.ElasticBeanstalk.SwapEnvironmentCNAMEs",
      "Network.AWS.ElasticBeanstalk.TerminateEnvironment",
      "Network.AWS.ElasticBeanstalk.Types",
      "Network.AWS.ElasticBeanstalk.UpdateApplication",
      "Network.AWS.ElasticBeanstalk.UpdateApplicationVersion",
      "Network.AWS.ElasticBeanstalk.UpdateConfigurationTemplate",
      "Network.AWS.ElasticBeanstalk.UpdateEnvironment",
      "Network.AWS.ElasticBeanstalk.ValidateConfigurationSettings",
      "Network.AWS.ElasticBeanstalk.Waiters"
    ],
    "name": "amazonka-elasticbeanstalk",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "data-default": [
        "Data.Default"
      ],
      "gpolyline": [
        "GPolyline"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [
        "Data.Functor.Constant"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Default",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "GPolyline",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Prelude",
      "Strive.Actions",
      "Strive.Actions.Activities",
      "Strive.Actions.Athletes",
      "Strive.Actions.Authentication",
      "Strive.Actions.Clubs",
      "Strive.Actions.Comments",
      "Strive.Actions.Efforts",
      "Strive.Actions.Friends",
      "Strive.Actions.Gear",
      "Strive.Actions.Kudos",
      "Strive.Actions.Photos",
      "Strive.Actions.Segments",
      "Strive.Actions.Streams",
      "Strive.Actions.Uploads",
      "Strive.Aliases",
      "Strive.Client",
      "Strive.Enums",
      "Strive.Internal.HTTP",
      "Strive.Internal.Lenses",
      "Strive.Internal.Options",
      "Strive.Internal.TH",
      "Strive.Lenses",
      "Strive.Options",
      "Strive.Options.Activities",
      "Strive.Options.Athletes",
      "Strive.Options.Authentication",
      "Strive.Options.Clubs",
      "Strive.Options.Comments",
      "Strive.Options.Friends",
      "Strive.Options.Kudos",
      "Strive.Options.Segments",
      "Strive.Options.Streams",
      "Strive.Options.Uploads",
      "Strive.Types",
      "Strive.Types.Activities",
      "Strive.Types.Athletes",
      "Strive.Types.Authentication",
      "Strive.Types.Clubs",
      "Strive.Types.Comments",
      "Strive.Types.Efforts",
      "Strive.Types.Gear",
      "Strive.Types.Photos",
      "Strive.Types.Polylines",
      "Strive.Types.Segments",
      "Strive.Types.Streams",
      "Strive.Types.Uploads",
      "Strive.Utilities"
    ],
    "modules": [
      "Strive",
      "Strive.Actions",
      "Strive.Actions.Activities",
      "Strive.Actions.Athletes",
      "Strive.Actions.Authentication",
      "Strive.Actions.Clubs",
      "Strive.Actions.Comments",
      "Strive.Actions.Efforts",
      "Strive.Actions.Friends",
      "Strive.Actions.Gear",
      "Strive.Actions.Kudos",
      "Strive.Actions.Photos",
      "Strive.Actions.Segments",
      "Strive.Actions.Streams",
      "Strive.Actions.Uploads",
      "Strive.Aliases",
      "Strive.Client",
      "Strive.Enums",
      "Strive.Internal.HTTP",
      "Strive.Internal.Lenses",
      "Strive.Internal.Options",
      "Strive.Internal.TH",
      "Strive.Lenses",
      "Strive.Options",
      "Strive.Options.Activities",
      "Strive.Options.Athletes",
      "Strive.Options.Authentication",
      "Strive.Options.Clubs",
      "Strive.Options.Comments",
      "Strive.Options.Friends",
      "Strive.Options.Kudos",
      "Strive.Options.Segments",
      "Strive.Options.Streams",
      "Strive.Options.Uploads",
      "Strive.Types",
      "Strive.Types.Activities",
      "Strive.Types.Athletes",
      "Strive.Types.Authentication",
      "Strive.Types.Clubs",
      "Strive.Types.Comments",
      "Strive.Types.Efforts",
      "Strive.Types.Gear",
      "Strive.Types.Photos",
      "Strive.Types.Polylines",
      "Strive.Types.Segments",
      "Strive.Types.Streams",
      "Strive.Types.Uploads",
      "Strive.Utilities"
    ],
    "name": "strive",
    "version": "3.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Drive",
      "Network.Google.Drive.Types",
      "Network.Google.Resource.Drive.About.Get",
      "Network.Google.Resource.Drive.Changes.GetStartPageToken",
      "Network.Google.Resource.Drive.Changes.List",
      "Network.Google.Resource.Drive.Changes.Watch",
      "Network.Google.Resource.Drive.Channels.Stop",
      "Network.Google.Resource.Drive.Comments.Create",
      "Network.Google.Resource.Drive.Comments.Delete",
      "Network.Google.Resource.Drive.Comments.Get",
      "Network.Google.Resource.Drive.Comments.List",
      "Network.Google.Resource.Drive.Comments.Update",
      "Network.Google.Resource.Drive.Files.Copy",
      "Network.Google.Resource.Drive.Files.Create",
      "Network.Google.Resource.Drive.Files.Delete",
      "Network.Google.Resource.Drive.Files.EmptyTrash",
      "Network.Google.Resource.Drive.Files.Export",
      "Network.Google.Resource.Drive.Files.GenerateIds",
      "Network.Google.Resource.Drive.Files.Get",
      "Network.Google.Resource.Drive.Files.List",
      "Network.Google.Resource.Drive.Files.Update",
      "Network.Google.Resource.Drive.Files.Watch",
      "Network.Google.Resource.Drive.Permissions.Create",
      "Network.Google.Resource.Drive.Permissions.Delete",
      "Network.Google.Resource.Drive.Permissions.Get",
      "Network.Google.Resource.Drive.Permissions.List",
      "Network.Google.Resource.Drive.Permissions.Update",
      "Network.Google.Resource.Drive.Replies.Create",
      "Network.Google.Resource.Drive.Replies.Delete",
      "Network.Google.Resource.Drive.Replies.Get",
      "Network.Google.Resource.Drive.Replies.List",
      "Network.Google.Resource.Drive.Replies.Update",
      "Network.Google.Resource.Drive.Revisions.Delete",
      "Network.Google.Resource.Drive.Revisions.Get",
      "Network.Google.Resource.Drive.Revisions.List",
      "Network.Google.Resource.Drive.Revisions.Update"
    ],
    "name": "gogol-drive",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "HsOpenSSL": [
        "OpenSSL",
        "OpenSSL.Session"
      ],
      "base": [
        "Control.Exception"
      ],
      "http-client": [
        "Network.HTTP.Client",
        "Network.HTTP.Client.Internal"
      ],
      "network": [
        "Network.Socket"
      ]
    },
    "imports": [
      "Control.Exception",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Internal",
      "Network.HTTP.Client.OpenSSL",
      "Network.HTTP.Types",
      "Network.Socket",
      "OpenSSL",
      "OpenSSL.Session",
      "Test.Hspec"
    ],
    "modules": [
      "Network.HTTP.Client.OpenSSL"
    ],
    "name": "http-client-openssl",
    "version": "0.2.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ],
      "operational": [
        "Control.Monad.Operational"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Operational",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Monad.Operational.Class"
    ],
    "name": "operational-class",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.IdentityToolkit",
      "Network.Google.IdentityToolkit.Types",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.CreateAuthURI",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.DeleteAccount",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.DownloadAccount",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.GetAccountInfo",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.GetOOBConfirmationCode",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.GetProjectConfig",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.GetPublicKeys",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.GetRecaptchaParam",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.ResetPassword",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.SetAccountInfo",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.SetProjectConfig",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.SignOutUser",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.SignupNewUser",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.UploadAccount",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.VerifyAssertion",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.VerifyCustomToken",
      "Network.Google.Resource.IdentityToolkit.RelyingParty.VerifyPassword"
    ],
    "name": "gogol-identity-toolkit",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "System.Exit",
        "System.IO"
      ],
      "deepseq": []
    },
    "imports": [
      "Control.Monad",
      "Data.Char",
      "Example",
      "HUnitTestBase",
      "HUnitTestExtended",
      "System.Exit",
      "System.IO",
      "TerminalTest",
      "Test.HUnit",
      "Test.HUnit.Base",
      "Test.HUnit.Lang",
      "Test.HUnit.Terminal",
      "Test.HUnit.Text"
    ],
    "modules": [
      "Test.HUnit.Base",
      "Test.HUnit.Lang",
      "Test.HUnit.Terminal",
      "Test.HUnit.Text",
      "Test.HUnit"
    ],
    "name": "HUnit",
    "version": "1.3.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ]
    },
    "imports": [
      "Data.BoundingBox.Range",
      "Data.Monoid",
      "Data.Vector.Class",
      "Data.Vector.V1",
      "Data.Vector.V2",
      "Data.Vector.V3",
      "Data.Vector.V4"
    ],
    "modules": [
      "Data.Vector.Class",
      "Data.Vector.V1",
      "Data.Vector.V2",
      "Data.Vector.V3",
      "Data.Vector.V4",
      "Data.Vector.Transform.T1",
      "Data.Vector.Transform.T2",
      "Data.Vector.Transform.T3",
      "Data.Vector.Transform.T4",
      "Data.BoundingBox.Range",
      "Data.BoundingBox.B1",
      "Data.BoundingBox.B2",
      "Data.BoundingBox.B3",
      "Data.BoundingBox.B4"
    ],
    "name": "AC-Vector",
    "version": "2.3.2"
  },
  {
    "dependencies": {
      "MonadRandom": [
        "Control.Monad.Random"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "System.IO.Error",
        "Text.Read"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "containers": [
        "Data.IntMap.Strict",
        "Data.Map.Strict"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "random": [],
      "semigroups": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Auto.Blip",
      "Control.Auto.Blip.Internal",
      "Control.Auto.Core",
      "Control.Auto.Effects",
      "Control.Auto.Generate",
      "Control.Auto.Interval",
      "Control.Auto.Process",
      "Control.Auto.Run",
      "Control.Auto.Serialize",
      "Control.Auto.Switch",
      "Control.Auto.Time",
      "Control.Category",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Random",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Bits",
      "Data.ByteString",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.IntMap.Strict",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Profunctor",
      "Data.Semigroup",
      "Data.Serialize",
      "Data.String",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "GHC.Generics",
      "Prelude",
      "System.IO.Error",
      "Text.Read"
    ],
    "modules": [
      "Control.Auto",
      "Control.Auto.Blip",
      "Control.Auto.Blip.Internal",
      "Control.Auto.Collection",
      "Control.Auto.Core",
      "Control.Auto.Effects",
      "Control.Auto.Generate",
      "Control.Auto.Interval",
      "Control.Auto.Process",
      "Control.Auto.Process.Random",
      "Control.Auto.Run",
      "Control.Auto.Serialize",
      "Control.Auto.Switch",
      "Control.Auto.Time"
    ],
    "name": "auto",
    "version": "0.4.3.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.IO.Exception",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem",
        "System.Posix.Internals",
        "System.Posix.Types"
      ],
      "cpphs": [
        "Language.Preprocessor.Unlit"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ]
    },
    "imports": [
      "Array",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.Trans",
      "Data.Array",
      "Data.Array.Repa",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Generics",
      "Data.GraphViz.Attributes.Colors",
      "Data.GraphViz.Parsing",
      "Data.GraphViz.Printing",
      "Data.GraphViz.Util",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Extensions",
      "Foo",
      "Foreign",
      "Foreign.C",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.IO.Exception",
      "GHC.Prim",
      "GHC.Types",
      "GlaExts",
      "Here",
      "Language.C.Data.Ident",
      "Language.C.Data.InputStream",
      "Language.C.Data.Name",
      "Language.C.Data.Node",
      "Language.C.Data.Position",
      "Language.C.Data.RList",
      "Language.C.Parser.Builtin",
      "Language.C.Parser.Lexer",
      "Language.C.Parser.ParserMonad",
      "Language.C.Parser.Tokens",
      "Language.C.Syntax",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Annotated",
      "Language.Haskell.Exts.Annotated.Build",
      "Language.Haskell.Exts.Annotated.Comments",
      "Language.Haskell.Exts.Annotated.ExactPrint",
      "Language.Haskell.Exts.Annotated.Fixity",
      "Language.Haskell.Exts.Annotated.Parser",
      "Language.Haskell.Exts.Annotated.Simplify",
      "Language.Haskell.Exts.Annotated.Syntax",
      "Language.Haskell.Exts.Build",
      "Language.Haskell.Exts.Comments",
      "Language.Haskell.Exts.Extension",
      "Language.Haskell.Exts.ExtScheme",
      "Language.Haskell.Exts.Fixity",
      "Language.Haskell.Exts.InternalLexer",
      "Language.Haskell.Exts.InternalParser",
      "Language.Haskell.Exts.Lexer",
      "Language.Haskell.Exts.ParseMonad",
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.ParseSyntax",
      "Language.Haskell.Exts.ParseUtils",
      "Language.Haskell.Exts.Pretty",
      "Language.Haskell.Exts.SrcLoc",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.TH",
      "Language.Preprocessor.Unlit",
      "Prelude",
      "Prelude.Unicode",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.MMap",
      "System.IO.Unsafe",
      "System.Mem",
      "System.Posix.Files",
      "System.Posix.Internals",
      "System.Posix.Types",
      "System.Time",
      "System.Win32",
      "Test.QuickCheck",
      "Test.SmallCheck.Series",
      "Test.Tasty",
      "Test.Tasty.Golden",
      "Test.Tasty.Golden.Manage",
      "Test.Tasty.SmallCheck",
      "Text.PrettyPrint",
      "Text.Show.Pretty"
    ],
    "modules": [
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Lexer",
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.Pretty",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.Exts.Extension",
      "Language.Haskell.Exts.Build",
      "Language.Haskell.Exts.Fixity",
      "Language.Haskell.Exts.Comments",
      "Language.Haskell.Exts.SrcLoc",
      "Language.Haskell.Exts.Annotated",
      "Language.Haskell.Exts.Annotated.Syntax",
      "Language.Haskell.Exts.Annotated.Fixity",
      "Language.Haskell.Exts.Annotated.Build",
      "Language.Haskell.Exts.Annotated.ExactPrint",
      "Language.Haskell.Exts.Annotated.Simplify",
      "Language.Haskell.Exts.Annotated.Parser",
      "Language.Haskell.Exts.Annotated.Comments"
    ],
    "name": "haskell-src-exts",
    "version": "1.17.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Typeable",
        "Prelude"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TChan",
        "Control.Monad.STM"
      ],
      "stm-delay": [
        "Control.Concurrent.STM.Delay"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.Delay",
      "Control.Concurrent.STM.TChan",
      "Control.Exception",
      "Control.FoldDebounce",
      "Control.Monad",
      "Control.Monad.STM",
      "Data.Default.Class",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Time",
      "Data.Typeable",
      "Prelude",
      "Test.Hspec"
    ],
    "modules": [
      "Control.FoldDebounce"
    ],
    "name": "fold-debounce",
    "version": "0.2.0.3"
  },
  {
    "dependencies": {
      "array": [],
      "base": [],
      "cairo": [
        "Graphics.Rendering.Cairo"
      ],
      "containers": [],
      "directory": [],
      "glib": [],
      "mtl": [],
      "pretty": [],
      "process": [],
      "text": []
    },
    "imports": [
      "Graphics.Rendering.Cairo",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.Gdk.EventM"
    ],
    "modules": [
      "Graphics.Rendering.Pango",
      "Graphics.Rendering.Pango.Font",
      "Graphics.Rendering.Pango.Enums",
      "Graphics.Rendering.Pango.Context",
      "Graphics.Rendering.Pango.Layout",
      "Graphics.Rendering.Pango.Rendering",
      "Graphics.Rendering.Pango.Markup",
      "Graphics.Rendering.Pango.Cairo",
      "Graphics.Rendering.Pango.Types",
      "Graphics.Rendering.Pango.BasicTypes",
      "Graphics.Rendering.Pango.Structs",
      "Graphics.Rendering.Pango.Attributes"
    ],
    "name": "pango",
    "version": "0.13.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.List",
        "Data.Typeable",
        "GHC.Conc.Sync"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.IO.Control",
      "Control.Monad.Trans.Control",
      "Data.Hashable",
      "Data.IORef",
      "Data.List",
      "Data.Time.Clock",
      "Data.Typeable",
      "Data.Vector",
      "GHC.Conc.Sync"
    ],
    "modules": [
      "Data.Pool"
    ],
    "name": "resource-pool",
    "version": "0.2.3.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "Prelude"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "directory": [],
      "mtl": [
        "Control.Monad.State"
      ],
      "network": [],
      "text": [],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad.State",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.CaseInsensitive",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.Typeable",
      "Data.Word",
      "Network.Http.Internal",
      "Network.Http.RequestBuilder",
      "Prelude"
    ],
    "modules": [
      "Network.Http.Types",
      "Network.Http.RequestBuilder",
      "Network.Http.Internal"
    ],
    "name": "http-common",
    "version": "0.8.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes"
      ],
      "blaze-markup": [
        "Text.Blaze.Internal"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Internal",
      "Text.Parsec",
      "Text.XmlHtml.HTML.Parse",
      "Text.XmlHtml.HTML.Render",
      "Text.XmlHtml.XML.Parse",
      "Text.XmlHtml.XML.Render"
    ],
    "modules": [
      "Text.XmlHtml",
      "Text.XmlHtml.Cursor",
      "Text.XmlHtml.HTML.Meta",
      "Text.Blaze.Renderer.XmlHtml"
    ],
    "name": "xmlhtml",
    "version": "0.2.3.5"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Numeric",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [],
      "matrix": [
        "Data.Matrix"
      ],
      "parsec": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ],
      "wl-pprint-extras": [
        "Text.PrettyPrint.Free"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.ByteString",
      "Data.Char",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Matrix",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Sequence",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Numeric",
      "Paths",
      "System.Exit",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Text.LaTeX",
      "Text.LaTeX.Base",
      "Text.LaTeX.Base.Class",
      "Text.LaTeX.Base.Commands",
      "Text.LaTeX.Base.Parser",
      "Text.LaTeX.Base.Render",
      "Text.LaTeX.Base.Syntax",
      "Text.LaTeX.Base.Texy",
      "Text.LaTeX.Base.Types",
      "Text.LaTeX.Base.Warnings",
      "Text.LaTeX.Base.Writer",
      "Text.LaTeX.Packages.AMSMath",
      "Text.LaTeX.Packages.Beamer",
      "Text.LaTeX.Packages.Color",
      "Text.LaTeX.Packages.Fancyhdr",
      "Text.LaTeX.Packages.Inputenc",
      "Text.LaTeX.Packages.TikZ",
      "Text.LaTeX.Packages.TikZ.PathBuilder",
      "Text.LaTeX.Packages.TikZ.Simple",
      "Text.LaTeX.Packages.TikZ.Syntax",
      "Text.LaTeX.Packages.Trees",
      "Text.LaTeX.Packages.Trees.Qtree",
      "Text.PrettyPrint.Free"
    ],
    "modules": [
      "Text.LaTeX",
      "Text.LaTeX.Base",
      "Text.LaTeX.Base.Class",
      "Text.LaTeX.Base.Commands",
      "Text.LaTeX.Base.Parser",
      "Text.LaTeX.Base.Pretty",
      "Text.LaTeX.Base.Render",
      "Text.LaTeX.Base.Syntax",
      "Text.LaTeX.Base.Texy",
      "Text.LaTeX.Base.Types",
      "Text.LaTeX.Base.Writer",
      "Text.LaTeX.Base.Warnings",
      "Text.LaTeX.Packages.AMSFonts",
      "Text.LaTeX.Packages.AMSMath",
      "Text.LaTeX.Packages.AMSSymb",
      "Text.LaTeX.Packages.AMSThm",
      "Text.LaTeX.Packages.Babel",
      "Text.LaTeX.Packages.Beamer",
      "Text.LaTeX.Packages.Color",
      "Text.LaTeX.Packages.Fancyhdr",
      "Text.LaTeX.Packages.Fontenc",
      "Text.LaTeX.Packages.Geometry",
      "Text.LaTeX.Packages.Graphicx",
      "Text.LaTeX.Packages.Hyperref",
      "Text.LaTeX.Packages.Inputenc",
      "Text.LaTeX.Packages.QRCode",
      "Text.LaTeX.Packages.Relsize",
      "Text.LaTeX.Packages.Trees",
      "Text.LaTeX.Packages.Trees.Qtree",
      "Text.LaTeX.Packages.TikZ",
      "Text.LaTeX.Packages.TikZ.PathBuilder",
      "Text.LaTeX.Packages.TikZ.Simple",
      "Text.LaTeX.Packages.TikZ.Syntax"
    ],
    "name": "HaTeX",
    "version": "3.17.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-html": [],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "servant": []
    },
    "imports": [
      "Network.HTTP.Media"
    ],
    "modules": [
      "Servant.HTML.Blaze"
    ],
    "name": "servant-blaze",
    "version": "0.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "GHC.Exts",
        "Prelude"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.CompactMap",
      "Data.CompactMap.Generic",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Map.Strict",
      "Data.Vector",
      "Data.Vector.Generic",
      "GHC.Exts",
      "Prelude",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.CompactMap",
      "Data.CompactMap.Generic"
    ],
    "name": "compactmap",
    "version": "0.1.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Traversable",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "loop": [
        "Control.Loop"
      ],
      "primitive": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Loop",
      "Control.Monad",
      "Criterion.Main",
      "Data.Foldable",
      "Data.Matrix",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Prelude",
      "System.Exit",
      "System.IO",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Matrix"
    ],
    "name": "matrix",
    "version": "0.3.5.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception.Base",
        "Foreign",
        "Foreign.C.Types"
      ],
      "signal": []
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception.Base",
      "Foreign",
      "Foreign.C.Types",
      "System.Posix.Signals",
      "System.Signal"
    ],
    "modules": [
      "System.Signal"
    ],
    "name": "signal",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable"
      ]
    },
    "imports": [
      "Data.Data",
      "Data.List",
      "Data.Monoid",
      "Data.Typeable"
    ],
    "modules": [
      "Data.Loc"
    ],
    "name": "srcloc",
    "version": "0.5.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "cereal": [],
      "containers": [
        "Data.Map.Lazy",
        "Data.Set"
      ],
      "deepseq": [],
      "protobuf": [],
      "text": [
        "Data.Text"
      ],
      "th-printf": [],
      "transformers": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.Map.Lazy",
      "Data.Set",
      "Data.Text",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "Geography.VectorTile.Geometry",
      "Geography.VectorTile.Protobuf.Internal",
      "Geography.VectorTile.VectorTile"
    ],
    "modules": [
      "Geography.VectorTile",
      "Geography.VectorTile.VectorTile",
      "Geography.VectorTile.Protobuf",
      "Geography.VectorTile.Protobuf.Internal",
      "Geography.VectorTile.Geometry",
      "Geography.VectorTile.Util"
    ],
    "name": "vectortiles",
    "version": "1.2.0"
  },
  {
    "dependencies": {
      "StateVar": [],
      "array": [],
      "base": [
        "Control.Arrow",
        "Control.Category",
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "GHC.Generics"
      ],
      "bifunctors": [
        "Data.Bifunctor.Product",
        "Data.Bifunctor.Sum"
      ],
      "comonad": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "contravariant": [],
      "ghc-prim": [],
      "profunctors": [],
      "semigroups": [],
      "stm": [],
      "tagged": [],
      "template-haskell": [],
      "transformers": [
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": [],
      "unordered-containers": []
    },
    "imports": [
      "Control.Arrow",
      "Control.Category",
      "Control.Monad.ST",
      "Control.Monad.ST.Lazy",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Bifunctor.Product",
      "Data.Bifunctor.Sum",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Functor.Invariant",
      "Data.Functor.Invariant.TH",
      "Data.Map",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Set",
      "Data.Traversable",
      "GHC.Generics",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Test.QuickCheck.Function"
    ],
    "modules": [
      "Data.Functor.Invariant",
      "Data.Functor.Invariant.TH"
    ],
    "name": "invariant",
    "version": "0.4"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck.Property",
        "Test.QuickCheck.Random",
        "Test.QuickCheck.State",
        "Test.QuickCheck.Test"
      ],
      "extensible-exceptions": [],
      "test-framework": [
        "Test.Framework.Providers.API"
      ]
    },
    "imports": [
      "Data.Typeable",
      "System.Random",
      "Test.Framework.Providers.API",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Random",
      "Test.QuickCheck.State",
      "Test.QuickCheck.Test"
    ],
    "modules": [
      "Test.Framework.Providers.QuickCheck2"
    ],
    "name": "test-framework-quickcheck2",
    "version": "0.3.0.3"
  },
  {
    "dependencies": {
      "NumInstances": [],
      "base": [
        "Data.Foldable"
      ],
      "blank-canvas": [
        "Graphics.Blank",
        "Graphics.Blank.Style"
      ],
      "cmdargs": [],
      "containers": [],
      "data-default-class": [],
      "diagrams-core": [],
      "diagrams-lib": [],
      "lens": [],
      "mtl": [],
      "optparse-applicative": [],
      "statestack": [
        "Control.Monad.StateStack"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Monad.StateStack",
      "Data.Foldable",
      "Data.Text",
      "Graphics.Blank",
      "Graphics.Blank.Style"
    ],
    "modules": [
      "Diagrams.Backend.Canvas",
      "Diagrams.Backend.Canvas.CmdLine"
    ],
    "name": "diagrams-canvas",
    "version": "1.3.0.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.List",
        "Prelude"
      ],
      "hmatrix": [
        "Numeric.LinearAlgebra"
      ],
      "safe": [
        "Safe"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.List",
      "Numeric.LinearAlgebra",
      "Prelude",
      "Safe"
    ],
    "modules": [
      "Data.Algorithm.CubicSpline"
    ],
    "name": "cubicspline",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AdExchangeSeller",
      "Network.Google.AdExchangeSeller.Types",
      "Network.Google.Resource.AdExchangeSeller.Accounts.AdClients.List",
      "Network.Google.Resource.AdExchangeSeller.Accounts.Alerts.List",
      "Network.Google.Resource.AdExchangeSeller.Accounts.CustomChannels.Get",
      "Network.Google.Resource.AdExchangeSeller.Accounts.CustomChannels.List",
      "Network.Google.Resource.AdExchangeSeller.Accounts.Get",
      "Network.Google.Resource.AdExchangeSeller.Accounts.List",
      "Network.Google.Resource.AdExchangeSeller.Accounts.Metadata.Dimensions.List",
      "Network.Google.Resource.AdExchangeSeller.Accounts.Metadata.Metrics.List",
      "Network.Google.Resource.AdExchangeSeller.Accounts.PreferredDeals.Get",
      "Network.Google.Resource.AdExchangeSeller.Accounts.PreferredDeals.List",
      "Network.Google.Resource.AdExchangeSeller.Accounts.Reports.Generate",
      "Network.Google.Resource.AdExchangeSeller.Accounts.Reports.Saved.Generate",
      "Network.Google.Resource.AdExchangeSeller.Accounts.Reports.Saved.List",
      "Network.Google.Resource.AdExchangeSeller.Accounts.URLChannels.List"
    ],
    "name": "gogol-adexchange-seller",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.MountPoints"
    ],
    "name": "mountpoints",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Monoid",
        "Prelude"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Prelude",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Text.CSS.Parse",
      "Text.CSS.Render"
    ],
    "modules": [
      "Text.CSS.Parse",
      "Text.CSS.Render"
    ],
    "name": "css-text",
    "version": "0.1.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Maybe",
        "System.Environment"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.Maybe",
      "System.Directory",
      "System.Environment",
      "System.FilePath"
    ],
    "modules": [
      "System.Environment.XDG.BaseDir"
    ],
    "name": "xdg-basedir",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Foldable",
      "Data.Hashable",
      "Data.IntMap",
      "Data.Monoid",
      "Data.Traversable",
      "Prelude"
    ],
    "modules": [
      "Data.Renderable"
    ],
    "name": "renderable",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "base-compat": [],
      "charset": [
        "Data.CharSet",
        "Data.CharSet.Unicode.Category"
      ],
      "filepath": [],
      "lens": [],
      "servant": [],
      "servant-foreign": [],
      "servant-js": [],
      "servant-server": [],
      "stm": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "warp": []
    },
    "imports": [
      "Data.CharSet",
      "Data.CharSet.Unicode.Category",
      "Data.Text",
      "Servant.JS",
      "Servant.JS.Angular",
      "Servant.JS.Axios",
      "Servant.JS.JQuery",
      "Servant.JS.Vanilla"
    ],
    "modules": [
      "Servant.JS",
      "Servant.JS.Angular",
      "Servant.JS.Axios",
      "Servant.JS.Internal",
      "Servant.JS.JQuery",
      "Servant.JS.Vanilla"
    ],
    "name": "servant-js",
    "version": "0.8.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Either",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.String",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cryptonite": [
        "Crypto.Cipher.AES",
        "Crypto.Cipher.ChaChaPoly1305",
        "Crypto.Cipher.Types",
        "Crypto.Error",
        "Crypto.Hash",
        "Crypto.MAC.HMAC",
        "Crypto.MAC.Poly1305",
        "Crypto.PubKey.Curve25519",
        "Crypto.PubKey.Ed448",
        "Crypto.Random.Entropy"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "exceptions": [
        "Control.Monad.Catch.Pure"
      ],
      "free": [
        "Control.Monad.Free.Church",
        "Control.Monad.Free.TH"
      ],
      "lens": [
        "Control.Lens"
      ],
      "memory": [
        "Data.ByteArray"
      ],
      "monad-coroutine": [
        "Control.Monad.Coroutine",
        "Control.Monad.Coroutine.SuspensionFunctors"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "safe-exceptions": [
        "Control.Exception.Safe"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Client",
      "Control.Arrow",
      "Control.AutoUpdate",
      "Control.Concurrent.Async",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Safe",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Catch.Pure",
      "Control.Monad.Coroutine",
      "Control.Monad.Coroutine.SuspensionFunctors",
      "Control.Monad.Free.Church",
      "Control.Monad.Free.TH",
      "Control.Monad.State",
      "Control.Monad.Trans.Class",
      "Criterion.Main",
      "Crypto.Cipher.AES",
      "Crypto.Cipher.ChaChaPoly1305",
      "Crypto.Cipher.Types",
      "Crypto.Error",
      "Crypto.Hash",
      "Crypto.MAC.HMAC",
      "Crypto.MAC.Poly1305",
      "Crypto.Noise",
      "Crypto.Noise.Cipher",
      "Crypto.Noise.Cipher.AESGCM",
      "Crypto.Noise.Cipher.ChaChaPoly1305",
      "Crypto.Noise.DH",
      "Crypto.Noise.DH.Curve25519",
      "Crypto.Noise.DH.Curve448",
      "Crypto.Noise.HandshakePatterns",
      "Crypto.Noise.Hash",
      "Crypto.Noise.Hash.BLAKE2b",
      "Crypto.Noise.Hash.BLAKE2s",
      "Crypto.Noise.Hash.SHA256",
      "Crypto.Noise.Hash.SHA512",
      "Crypto.Noise.Internal.CipherState",
      "Crypto.Noise.Internal.Handshake",
      "Crypto.Noise.Internal.HandshakePattern",
      "Crypto.Noise.Internal.NoiseState",
      "Crypto.Noise.Internal.SymmetricState",
      "Crypto.Noise.Internal.Types",
      "Crypto.PubKey.Curve25519",
      "Crypto.PubKey.Ed448",
      "Crypto.Random.Entropy",
      "Data.Aeson",
      "Data.Attoparsec.ByteString",
      "Data.Bits",
      "Data.ByteArray",
      "Data.ByteArray.Extend",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Either",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.UnixTime",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Generate",
      "Handshakes",
      "Language.Haskell.HLint",
      "Log",
      "Network.Simple.TCP",
      "Network.Socket",
      "Parse",
      "Prelude",
      "Server",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Log.FastLogger",
      "System.Posix",
      "System.Posix.Files",
      "System.Timeout",
      "Types",
      "VectorFile",
      "Verify"
    ],
    "modules": [
      "Crypto.Noise",
      "Crypto.Noise.Cipher",
      "Crypto.Noise.Cipher.AESGCM",
      "Crypto.Noise.Cipher.ChaChaPoly1305",
      "Crypto.Noise.DH",
      "Crypto.Noise.DH.Curve25519",
      "Crypto.Noise.DH.Curve448",
      "Crypto.Noise.HandshakePatterns",
      "Crypto.Noise.Hash",
      "Crypto.Noise.Hash.BLAKE2b",
      "Crypto.Noise.Hash.BLAKE2s",
      "Crypto.Noise.Hash.SHA256",
      "Crypto.Noise.Hash.SHA512",
      "Crypto.Noise.Internal.CipherState",
      "Crypto.Noise.Internal.HandshakePattern",
      "Crypto.Noise.Internal.Handshake",
      "Crypto.Noise.Internal.NoiseState",
      "Crypto.Noise.Internal.SymmetricState",
      "Crypto.Noise.Internal.Types",
      "Data.ByteArray.Extend"
    ],
    "name": "cacophony",
    "version": "0.8.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "base": [
        "Data.Char",
        "Prelude"
      ],
      "lens": [
        "Control.Lens"
      ],
      "split": [
        "Data.List.Split"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": []
    },
    "imports": [
      "Control.Lens",
      "Data.Aeson",
      "Data.Aeson.APIFieldJsonTH",
      "Data.Aeson.TH",
      "Data.Char",
      "Data.List.Split",
      "Language.Haskell.TH",
      "Prelude",
      "Test.HUnit"
    ],
    "modules": [
      "Data.Aeson.APIFieldJsonTH"
    ],
    "name": "api-field-json-th",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ]
    },
    "imports": [
      "Data.List",
      "Data.Universe.Helpers"
    ],
    "modules": [
      "Data.Universe.Class",
      "Data.Universe.Helpers"
    ],
    "name": "universe-base",
    "version": "1.0.2.1"
  },
  {
    "dependencies": {
      "base": [],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "dlist": [
        "Data.DList"
      ]
    },
    "imports": [
      "Data.Default.Class",
      "Data.DList"
    ],
    "modules": [
      "Data.Default.Instances.DList"
    ],
    "name": "data-default-instances-dlist",
    "version": "0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "mtl": [
        "Control.Monad.Writer"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Error",
        "Text.ParserCombinators.Parsec.Pos"
      ],
      "syb": [
        "Data.Generics"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Writer",
      "Data.Char",
      "Data.Generics",
      "Data.List",
      "Data.Monoid",
      "Data.Typeable",
      "Language.Haskell.Preprocessor.Ast",
      "Language.Haskell.Preprocessor.Error",
      "Language.Haskell.Preprocessor.Lexer",
      "Language.Haskell.Preprocessor.Loc",
      "Language.Haskell.Preprocessor.Parser",
      "Language.Haskell.Preprocessor.Printer",
      "Language.Haskell.Preprocessor.SynSpec",
      "Language.Haskell.Preprocessor.Token",
      "Language.Haskell.Preprocessor.Util",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Error",
      "Text.ParserCombinators.Parsec.Pos"
    ],
    "modules": [
      "Language.Haskell.Preprocessor",
      "Language.Haskell.Preprocessor.Ast",
      "Language.Haskell.Preprocessor.Error",
      "Language.Haskell.Preprocessor.Loc",
      "Language.Haskell.Preprocessor.Parser",
      "Language.Haskell.Preprocessor.Printer",
      "Language.Haskell.Preprocessor.SynSpec",
      "Language.Haskell.Preprocessor.Token",
      "Language.Haskell.Preprocessor.Util"
    ],
    "name": "preprocessor-tools",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.Types"
      ],
      "attoparsec": [],
      "base": [
        "Data.Data",
        "Data.Int",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Word",
        "GHC.Generics",
        "Numeric.Natural",
        "Prelude"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "conduit": [
        "Data.Conduit.List"
      ],
      "dlist": [
        "Data.DList"
      ],
      "exceptions": [],
      "hashable": [
        "Data.Hashable"
      ],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-media": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lens": [
        "Control.Lens"
      ],
      "memory": [
        "Data.ByteArray.Encoding"
      ],
      "resourcet": [],
      "scientific": [],
      "servant": [
        "Servant.API",
        "Servant.Utils.Links"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.Int",
        "Data.Text.Read"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Lens",
      "Data.Aeson.Types",
      "Data.ByteArray.Encoding",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Conduit.List",
      "Data.Data",
      "Data.DList",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Text.Read",
      "Data.Time",
      "Data.Word",
      "GHC.Generics",
      "Network.Google.Data.Base64",
      "Network.Google.Data.JSON",
      "Network.Google.Data.Numeric",
      "Network.Google.Data.Time",
      "Network.Google.Types",
      "Network.HTTP.Client",
      "Network.HTTP.Types",
      "Numeric.Natural",
      "Prelude",
      "Servant.API",
      "Servant.Utils.Links",
      "Web.HttpApiData"
    ],
    "modules": [
      "Network.Google.Data.Base64",
      "Network.Google.Data.JSON",
      "Network.Google.Data.Numeric",
      "Network.Google.Data.Time",
      "Network.Google.Prelude",
      "Network.Google.Types"
    ],
    "name": "gogol-core",
    "version": "0.1.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Complex",
      "Foreign.Ptr",
      "Foreign.Storable"
    ],
    "modules": [
      "Foreign.Storable.Complex"
    ],
    "name": "storable-complex",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ],
      "transformers": [
        "Control.Monad.Signatures",
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Signatures",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Lift.StT",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Monad.Trans.Lift.Local",
      "Control.Monad.Trans.Lift.CallCC",
      "Control.Monad.Trans.Lift.Catch",
      "Control.Monad.Trans.Lift.Listen",
      "Control.Monad.Trans.Lift.Pass",
      "Control.Monad.Trans.Lift.StT"
    ],
    "name": "transformers-lift",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.ST"
      ],
      "base": [
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Ix",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "GHC.Arr"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "random": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Array.Base",
      "Data.Array.ST",
      "Data.Bits",
      "Data.Char",
      "Data.IntMap",
      "Data.Ix",
      "Data.List",
      "Data.Monoid",
      "Data.Word",
      "GHC.Arr",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Text.EditDistance",
      "Text.EditDistance.ArrayUtilities",
      "Text.EditDistance.Bits",
      "Text.EditDistance.EditCosts",
      "Text.EditDistance.MonadUtilities",
      "Text.EditDistance.SquareSTUArray",
      "Text.EditDistance.STUArray",
      "Text.EditDistance.Tests.EditOperationOntology",
      "Text.EditDistance.Tests.Properties"
    ],
    "modules": [
      "Text.EditDistance"
    ],
    "name": "edit-distance",
    "version": "0.2.2.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Codec.Binary.UTF8.String",
      "Control.Exception",
      "Control.Monad",
      "Data.Functor",
      "Data.List",
      "Data.Maybe",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Graphics.Win32.GDI.Clip",
      "Graphics.X11.Xlib",
      "Graphics.X11.Xlib.Extras",
      "System.Clipboard.Windows",
      "System.Clipboard.X11",
      "System.Directory",
      "System.IO",
      "System.Posix.Process",
      "System.Win32.Mem"
    ],
    "modules": [
      "System.Clipboard"
    ],
    "name": "Clipboard",
    "version": "2.3.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "Prelude",
        "Text.Read"
      ],
      "containers": [
        "Data.IntMap.Strict",
        "Data.IntSet",
        "Data.Map.Strict",
        "Data.Set"
      ]
    },
    "imports": [
      "Data.Data",
      "Data.Foldable",
      "Data.IntMap.Strict",
      "Data.IntSet",
      "Data.List",
      "Data.Map.Strict",
      "Data.Monoid",
      "Data.MultiSet",
      "Data.Set",
      "Data.Typeable",
      "List",
      "Prelude",
      "QuickCheck",
      "Text.Read"
    ],
    "modules": [
      "Data.MultiSet",
      "Data.IntMultiSet"
    ],
    "name": "multiset",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "Diff": [
        "Data.Algorithm.Diff",
        "Data.Algorithm.DiffOutput"
      ],
      "HTF": [],
      "HUnit": [
        "Test.HUnit",
        "Test.HUnit.Base",
        "Test.HUnit.Lang"
      ],
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Property"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "array": [
        "Data.Array.IO"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Data.Typeable",
        "Data.Version",
        "GHC.Conc",
        "GHC.Exts",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "base64-bytestring": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "cpphs": [
        "Language.Preprocessor.Cpphs"
      ],
      "directory": [
        "System.Directory"
      ],
      "haskell-src": [
        "Language.Haskell.Parser",
        "Language.Haskell.Pretty"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.RWS",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans"
      ],
      "old-time": [
        "System.Time"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "regex-compat": [
        "Text.Regex"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock"
      ],
      "vector": [
        "Data.Vector"
      ],
      "xmlgen": [
        "Text.XML.Generator"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.RWS",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Control",
      "Data.Aeson",
      "Data.Aeson.Encode.Pretty",
      "Data.Aeson.TH",
      "Data.Algorithm.Diff",
      "Data.Algorithm.DiffOutput",
      "Data.Array.IO",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Typeable",
      "Data.Vector",
      "Data.Version",
      "FailFast",
      "GHC.Conc",
      "GHC.Exts",
      "Language.Haskell.Parser",
      "Language.Haskell.Pretty",
      "Language.Haskell.TH.Quote",
      "Language.Preprocessor.Cpphs",
      "MaxCurTime",
      "MaxPrevTime",
      "MyPkg.A",
      "MyPkg.B",
      "Paths",
      "Prelude",
      "PrevFactor",
      "Quasi",
      "SortByPrevTime",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Posix.Env",
      "System.Posix.IO",
      "System.Posix.Terminal",
      "System.Process",
      "System.Random",
      "System.Time",
      "Test.Framework",
      "Test.Framework.AssertM",
      "Test.Framework.BlackBoxTest",
      "Test.Framework.CmdlineOptions",
      "Test.Framework.Colors",
      "Test.Framework.Diff",
      "Test.Framework.History",
      "Test.Framework.HUnitWrapper",
      "Test.Framework.JsonOutput",
      "Test.Framework.Location",
      "Test.Framework.Preprocessor",
      "Test.Framework.Pretty",
      "Test.Framework.PrettyHaskell",
      "Test.Framework.Process",
      "Test.Framework.QuickCheckWrapper",
      "Test.Framework.TestInterface",
      "Test.Framework.TestManager",
      "Test.Framework.TestReporter",
      "Test.Framework.TestTypes",
      "Test.Framework.ThreadPool",
      "Test.Framework.Utils",
      "Test.Framework.XmlOutput",
      "Test.HUnit",
      "Test.HUnit.Base",
      "Test.HUnit.Lang",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Text.PrettyPrint",
      "Text.Printf",
      "Text.Regex",
      "Text.XML.Generator",
      "Tutorial",
      "UniqTests1",
      "UniqTests2"
    ],
    "modules": [
      "Test.Framework",
      "Test.Framework.HUnitWrapper",
      "Test.Framework.TestManager",
      "Test.Framework.TestInterface",
      "Test.Framework.TestTypes",
      "Test.Framework.TestReporter",
      "Test.Framework.History",
      "Test.Framework.CmdlineOptions",
      "Test.Framework.QuickCheckWrapper",
      "Test.Framework.BlackBoxTest",
      "Test.Framework.Location",
      "Test.Framework.Tutorial",
      "Test.Framework.Pretty",
      "Test.Framework.JsonOutput",
      "Test.Framework.XmlOutput",
      "Test.Framework.ThreadPool",
      "Test.Framework.AssertM",
      "Test.Framework.Colors",
      "Test.Framework.PrettyHaskell",
      "Test.Framework.Preprocessor"
    ],
    "name": "HTF",
    "version": "0.13.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.SNS",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.SNS",
      "Test.AWS.SNS.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.SNS",
      "Network.AWS.SNS.AddPermission",
      "Network.AWS.SNS.ConfirmSubscription",
      "Network.AWS.SNS.CreatePlatformApplication",
      "Network.AWS.SNS.CreatePlatformEndpoint",
      "Network.AWS.SNS.CreateTopic",
      "Network.AWS.SNS.DeleteEndpoint",
      "Network.AWS.SNS.DeletePlatformApplication",
      "Network.AWS.SNS.DeleteTopic",
      "Network.AWS.SNS.GetEndpointAttributes",
      "Network.AWS.SNS.GetPlatformApplicationAttributes",
      "Network.AWS.SNS.GetSubscriptionAttributes",
      "Network.AWS.SNS.GetTopicAttributes",
      "Network.AWS.SNS.ListEndpointsByPlatformApplication",
      "Network.AWS.SNS.ListPlatformApplications",
      "Network.AWS.SNS.ListSubscriptions",
      "Network.AWS.SNS.ListSubscriptionsByTopic",
      "Network.AWS.SNS.ListTopics",
      "Network.AWS.SNS.Publish",
      "Network.AWS.SNS.RemovePermission",
      "Network.AWS.SNS.SetEndpointAttributes",
      "Network.AWS.SNS.SetPlatformApplicationAttributes",
      "Network.AWS.SNS.SetSubscriptionAttributes",
      "Network.AWS.SNS.SetTopicAttributes",
      "Network.AWS.SNS.Subscribe",
      "Network.AWS.SNS.Types",
      "Network.AWS.SNS.Unsubscribe",
      "Network.AWS.SNS.Waiters"
    ],
    "name": "amazonka-sns",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe",
        "Data.Typeable.Internal",
        "GHC.Generics"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "pureMD5": [
        "Data.Digest.Pure.MD5"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Tagged.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Digest.Pure.MD5",
      "Data.Maybe",
      "Data.Typeable.Internal",
      "GHC.Generics"
    ],
    "modules": [
      "Data.Binary.Tagged",
      "Data.Binary.Tagged.Internal"
    ],
    "name": "tagged-binary",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Functor",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Error",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Numeric",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP"
      ],
      "bytestring": [
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "fixed": [
        "Numeric.Fixed"
      ],
      "half": [
        "Numeric.Half"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Functor",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Word",
      "DeclarationParser",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Error",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Graphics.GL.AMD",
      "Graphics.GL.AMD.BlendMinmaxFactor",
      "Graphics.GL.AMD.DebugOutput",
      "Graphics.GL.AMD.DepthClampSeparate",
      "Graphics.GL.AMD.DrawBuffersBlend",
      "Graphics.GL.AMD.GPUShaderHalfFloat",
      "Graphics.GL.AMD.GPUShaderInt64",
      "Graphics.GL.AMD.InterleavedElements",
      "Graphics.GL.AMD.MultiDrawIndirect",
      "Graphics.GL.AMD.NameGenDelete",
      "Graphics.GL.AMD.OcclusionQueryEvent",
      "Graphics.GL.AMD.PerformanceMonitor",
      "Graphics.GL.AMD.PinnedMemory",
      "Graphics.GL.AMD.QueryBufferObject",
      "Graphics.GL.AMD.SamplePositions",
      "Graphics.GL.AMD.SeamlessCubemapPerTexture",
      "Graphics.GL.AMD.SparseTexture",
      "Graphics.GL.AMD.StencilOperationExtended",
      "Graphics.GL.AMD.TransformFeedback4",
      "Graphics.GL.AMD.VertexShaderTessellator",
      "Graphics.GL.APPLE",
      "Graphics.GL.APPLE.AuxDepthStencil",
      "Graphics.GL.APPLE.ClientStorage",
      "Graphics.GL.APPLE.ElementArray",
      "Graphics.GL.APPLE.Fence",
      "Graphics.GL.APPLE.FloatPixels",
      "Graphics.GL.APPLE.FlushBufferRange",
      "Graphics.GL.APPLE.ObjectPurgeable",
      "Graphics.GL.APPLE.RGB422",
      "Graphics.GL.APPLE.RowBytes",
      "Graphics.GL.APPLE.SpecularVector",
      "Graphics.GL.APPLE.TextureRange",
      "Graphics.GL.APPLE.TransformHint",
      "Graphics.GL.APPLE.VertexArrayObject",
      "Graphics.GL.APPLE.VertexArrayRange",
      "Graphics.GL.APPLE.VertexProgramEvaluators",
      "Graphics.GL.APPLE.YCbCr422",
      "Graphics.GL.ARB",
      "Graphics.GL.ARB.BaseInstance",
      "Graphics.GL.ARB.BindlessTexture",
      "Graphics.GL.ARB.BlendFuncExtended",
      "Graphics.GL.ARB.BufferStorage",
      "Graphics.GL.ARB.ClearBufferObject",
      "Graphics.GL.ARB.ClearTexture",
      "Graphics.GL.ARB.CLEvent",
      "Graphics.GL.ARB.ClipControl",
      "Graphics.GL.ARB.ColorBufferFloat",
      "Graphics.GL.ARB.CompressedTexturePixelStorage",
      "Graphics.GL.ARB.ComputeShader",
      "Graphics.GL.ARB.ComputeVariableGroupSize",
      "Graphics.GL.ARB.ConditionalRenderInverted",
      "Graphics.GL.ARB.CopyBuffer",
      "Graphics.GL.ARB.CopyImage",
      "Graphics.GL.ARB.CullDistance",
      "Graphics.GL.ARB.DebugOutput",
      "Graphics.GL.ARB.DepthBufferFloat",
      "Graphics.GL.ARB.DepthClamp",
      "Graphics.GL.ARB.DepthTexture",
      "Graphics.GL.ARB.DirectStateAccess",
      "Graphics.GL.ARB.DrawBuffers",
      "Graphics.GL.ARB.DrawBuffersBlend",
      "Graphics.GL.ARB.DrawElementsBaseVertex",
      "Graphics.GL.ARB.DrawIndirect",
      "Graphics.GL.ARB.DrawInstanced",
      "Graphics.GL.ARB.EnhancedLayouts",
      "Graphics.GL.ARB.ES2Compatibility",
      "Graphics.GL.ARB.ES31Compatibility",
      "Graphics.GL.ARB.ES32Compatibility",
      "Graphics.GL.ARB.ES3Compatibility",
      "Graphics.GL.ARB.ExplicitUniformLocation",
      "Graphics.GL.ARB.FragmentProgram",
      "Graphics.GL.ARB.FragmentShader",
      "Graphics.GL.ARB.FramebufferNoAttachments",
      "Graphics.GL.ARB.FramebufferObjectCompatibility",
      "Graphics.GL.ARB.FramebufferObjectCore",
      "Graphics.GL.ARB.FramebufferSRGB",
      "Graphics.GL.ARB.GeometryShader4",
      "Graphics.GL.ARB.GetProgramBinary",
      "Graphics.GL.ARB.GetTextureSubImage",
      "Graphics.GL.ARB.GPUShader5",
      "Graphics.GL.ARB.GPUShaderFP64",
      "Graphics.GL.ARB.GPUShaderInt64",
      "Graphics.GL.ARB.HalfFloatPixel",
      "Graphics.GL.ARB.HalfFloatVertex",
      "Graphics.GL.ARB.ImagingCompatibility",
      "Graphics.GL.ARB.ImagingCore",
      "Graphics.GL.ARB.IndirectParameters",
      "Graphics.GL.ARB.InstancedArrays",
      "Graphics.GL.ARB.InternalformatQuery",
      "Graphics.GL.ARB.InternalformatQuery2",
      "Graphics.GL.ARB.InvalidateSubdata",
      "Graphics.GL.ARB.MapBufferAlignment",
      "Graphics.GL.ARB.MapBufferRange",
      "Graphics.GL.ARB.MatrixPalette",
      "Graphics.GL.ARB.MultiBind",
      "Graphics.GL.ARB.MultiDrawIndirect",
      "Graphics.GL.ARB.Multisample",
      "Graphics.GL.ARB.Multitexture",
      "Graphics.GL.ARB.OcclusionQuery",
      "Graphics.GL.ARB.OcclusionQuery2",
      "Graphics.GL.ARB.ParallelShaderCompile",
      "Graphics.GL.ARB.PipelineStatisticsQuery",
      "Graphics.GL.ARB.PixelBufferObject",
      "Graphics.GL.ARB.PointParameters",
      "Graphics.GL.ARB.PointSprite",
      "Graphics.GL.ARB.ProgramInterfaceQuery",
      "Graphics.GL.ARB.ProvokingVertex",
      "Graphics.GL.ARB.QueryBufferObject",
      "Graphics.GL.ARB.RobustnessCompatibility",
      "Graphics.GL.ARB.RobustnessCore",
      "Graphics.GL.ARB.SampleLocations",
      "Graphics.GL.ARB.SamplerObjects",
      "Graphics.GL.ARB.SampleShading",
      "Graphics.GL.ARB.SeamlessCubeMap",
      "Graphics.GL.ARB.SeamlessCubemapPerTexture",
      "Graphics.GL.ARB.SeparateShaderObjects",
      "Graphics.GL.ARB.ShaderAtomicCounters",
      "Graphics.GL.ARB.ShaderImageLoadStore",
      "Graphics.GL.ARB.ShaderObjects",
      "Graphics.GL.ARB.ShaderStorageBufferObject",
      "Graphics.GL.ARB.ShaderSubroutine",
      "Graphics.GL.ARB.ShadingLanguage100",
      "Graphics.GL.ARB.ShadingLanguageInclude",
      "Graphics.GL.ARB.Shadow",
      "Graphics.GL.ARB.ShadowAmbient",
      "Graphics.GL.ARB.SparseBuffer",
      "Graphics.GL.ARB.SparseTexture",
      "Graphics.GL.ARB.StencilTexturing",
      "Graphics.GL.ARB.Sync",
      "Graphics.GL.ARB.TessellationShader",
      "Graphics.GL.ARB.TextureBarrier",
      "Graphics.GL.ARB.TextureBorderClamp",
      "Graphics.GL.ARB.TextureBufferObject",
      "Graphics.GL.ARB.TextureBufferObjectRGB32",
      "Graphics.GL.ARB.TextureBufferRange",
      "Graphics.GL.ARB.TextureCompression",
      "Graphics.GL.ARB.TextureCompressionBPTC",
      "Graphics.GL.ARB.TextureCompressionRGTC",
      "Graphics.GL.ARB.TextureCubeMap",
      "Graphics.GL.ARB.TextureCubeMapArray",
      "Graphics.GL.ARB.TextureEnvCombine",
      "Graphics.GL.ARB.TextureEnvDot3",
      "Graphics.GL.ARB.TextureFilterMinmax",
      "Graphics.GL.ARB.TextureFloat",
      "Graphics.GL.ARB.TextureGather",
      "Graphics.GL.ARB.TextureMirrorClampToEdge",
      "Graphics.GL.ARB.TextureMirroredRepeat",
      "Graphics.GL.ARB.TextureMultisample",
      "Graphics.GL.ARB.TextureRectangle",
      "Graphics.GL.ARB.TextureRG",
      "Graphics.GL.ARB.TextureRGB10A2UI",
      "Graphics.GL.ARB.TextureStencil8",
      "Graphics.GL.ARB.TextureStorage",
      "Graphics.GL.ARB.TextureStorageMultisample",
      "Graphics.GL.ARB.TextureSwizzle",
      "Graphics.GL.ARB.TextureView",
      "Graphics.GL.ARB.TimerQuery",
      "Graphics.GL.ARB.TransformFeedback2",
      "Graphics.GL.ARB.TransformFeedback3",
      "Graphics.GL.ARB.TransformFeedbackInstanced",
      "Graphics.GL.ARB.TransformFeedbackOverflowQuery",
      "Graphics.GL.ARB.TransposeMatrix",
      "Graphics.GL.ARB.UniformBufferObject",
      "Graphics.GL.ARB.VertexArrayBGRA",
      "Graphics.GL.ARB.VertexArrayObject",
      "Graphics.GL.ARB.VertexAttrib64Bit",
      "Graphics.GL.ARB.VertexAttribBinding",
      "Graphics.GL.ARB.VertexBlend",
      "Graphics.GL.ARB.VertexBufferObject",
      "Graphics.GL.ARB.VertexProgram",
      "Graphics.GL.ARB.VertexShader",
      "Graphics.GL.ARB.VertexType10f11f11fRev",
      "Graphics.GL.ARB.VertexType2101010RevCompatibility",
      "Graphics.GL.ARB.VertexType2101010RevCore",
      "Graphics.GL.ARB.ViewportArray",
      "Graphics.GL.ARB.WindowPos",
      "Graphics.GL.ATI",
      "Graphics.GL.ATI.DrawBuffers",
      "Graphics.GL.ATI.ElementArray",
      "Graphics.GL.ATI.EnvmapBumpmap",
      "Graphics.GL.ATI.FragmentShader",
      "Graphics.GL.ATI.MapObjectBuffer",
      "Graphics.GL.ATI.Meminfo",
      "Graphics.GL.ATI.PixelFormatFloat",
      "Graphics.GL.ATI.PNTriangles",
      "Graphics.GL.ATI.SeparateStencil",
      "Graphics.GL.ATI.TextFragmentShader",
      "Graphics.GL.ATI.TextureEnvCombine3",
      "Graphics.GL.ATI.TextureFloat",
      "Graphics.GL.ATI.TextureMirrorOnce",
      "Graphics.GL.ATI.VertexArrayObject",
      "Graphics.GL.ATI.VertexAttribArrayObject",
      "Graphics.GL.ATI.VertexStreams",
      "Graphics.GL.Compatibility45",
      "Graphics.GL.EXT",
      "Graphics.GL.EXT.ABGR",
      "Graphics.GL.EXT.BGRA",
      "Graphics.GL.EXT.BindableUniform",
      "Graphics.GL.EXT.BlendColor",
      "Graphics.GL.EXT.BlendEquationSeparate",
      "Graphics.GL.EXT.BlendFuncSeparate",
      "Graphics.GL.EXT.BlendMinmax",
      "Graphics.GL.EXT.BlendSubtract",
      "Graphics.GL.EXT.ClipVolumeHint",
      "Graphics.GL.EXT.CMYKA",
      "Graphics.GL.EXT.ColorSubtable",
      "Graphics.GL.EXT.CompiledVertexArray",
      "Graphics.GL.EXT.Convolution",
      "Graphics.GL.EXT.CoordinateFrame",
      "Graphics.GL.EXT.CopyTexture",
      "Graphics.GL.EXT.CullVertex",
      "Graphics.GL.EXT.DebugLabel",
      "Graphics.GL.EXT.DebugMarker",
      "Graphics.GL.EXT.DepthBoundsTest",
      "Graphics.GL.EXT.DirectStateAccess",
      "Graphics.GL.EXT.DrawBuffers2",
      "Graphics.GL.EXT.DrawInstanced",
      "Graphics.GL.EXT.DrawRangeElements",
      "Graphics.GL.ExtensionPredicates",
      "Graphics.GL.EXT.FogCoord",
      "Graphics.GL.EXT.FourTwoTwoPixels",
      "Graphics.GL.EXT.FramebufferBlit",
      "Graphics.GL.EXT.FramebufferMultisample",
      "Graphics.GL.EXT.FramebufferMultisampleBlitScaled",
      "Graphics.GL.EXT.FramebufferObject",
      "Graphics.GL.EXT.FramebufferSRGB",
      "Graphics.GL.EXT.GeometryShader4",
      "Graphics.GL.EXT.GPUProgramParameters",
      "Graphics.GL.EXT.GPUShader4",
      "Graphics.GL.EXT.Histogram",
      "Graphics.GL.EXT.IndexArrayFormats",
      "Graphics.GL.EXT.IndexFunc",
      "Graphics.GL.EXT.IndexMaterial",
      "Graphics.GL.EXT.LightTexture",
      "Graphics.GL.EXT.MultiDrawArrays",
      "Graphics.GL.EXT.Multisample",
      "Graphics.GL.EXT.PackedDepthStencil",
      "Graphics.GL.EXT.PackedFloat",
      "Graphics.GL.EXT.PackedPixels",
      "Graphics.GL.EXT.PalettedTexture",
      "Graphics.GL.EXT.PixelBufferObject",
      "Graphics.GL.EXT.PixelTransform",
      "Graphics.GL.EXT.PointParameters",
      "Graphics.GL.EXT.PolygonOffset",
      "Graphics.GL.EXT.PolygonOffsetClamp",
      "Graphics.GL.EXT.ProvokingVertex",
      "Graphics.GL.EXT.RasterMultisample",
      "Graphics.GL.EXT.RescaleNormal",
      "Graphics.GL.EXT.SecondaryColor",
      "Graphics.GL.EXT.SeparateShaderObjects",
      "Graphics.GL.EXT.SeparateSpecularColor",
      "Graphics.GL.EXT.ShaderImageLoadStore",
      "Graphics.GL.EXT.SharedTexturePalette",
      "Graphics.GL.EXT.StencilClearTag",
      "Graphics.GL.EXT.StencilTwoSide",
      "Graphics.GL.EXT.StencilWrap",
      "Graphics.GL.EXT.Subtexture",
      "Graphics.GL.EXT.Texture",
      "Graphics.GL.EXT.Texture3D",
      "Graphics.GL.EXT.TextureArray",
      "Graphics.GL.EXT.TextureBufferObject",
      "Graphics.GL.EXT.TextureCompressionLATC",
      "Graphics.GL.EXT.TextureCompressionRGTC",
      "Graphics.GL.EXT.TextureCompressionS3TC",
      "Graphics.GL.EXT.TextureCubeMap",
      "Graphics.GL.EXT.TextureEnvCombine",
      "Graphics.GL.EXT.TextureEnvDot3",
      "Graphics.GL.EXT.TextureFilterAnisotropic",
      "Graphics.GL.EXT.TextureFilterMinmax",
      "Graphics.GL.EXT.TextureInteger",
      "Graphics.GL.EXT.TextureLODBias",
      "Graphics.GL.EXT.TextureMirrorClamp",
      "Graphics.GL.EXT.TextureObject",
      "Graphics.GL.EXT.TexturePerturbNormal",
      "Graphics.GL.EXT.TextureSharedExponent",
      "Graphics.GL.EXT.TextureSNorm",
      "Graphics.GL.EXT.TextureSRGB",
      "Graphics.GL.EXT.TextureSRGBDecode",
      "Graphics.GL.EXT.TextureSwizzle",
      "Graphics.GL.EXT.TimerQuery",
      "Graphics.GL.EXT.TransformFeedback",
      "Graphics.GL.EXT.VertexArray",
      "Graphics.GL.EXT.VertexArrayBGRA",
      "Graphics.GL.EXT.VertexAttrib64Bit",
      "Graphics.GL.EXT.VertexShader",
      "Graphics.GL.EXT.VertexWeighting",
      "Graphics.GL.EXT.WindowRectangles",
      "Graphics.GL.EXT.X11SyncObject",
      "Graphics.GL.Foreign",
      "Graphics.GL.Functions",
      "Graphics.GL.Functions.F01",
      "Graphics.GL.Functions.F02",
      "Graphics.GL.Functions.F03",
      "Graphics.GL.Functions.F04",
      "Graphics.GL.Functions.F05",
      "Graphics.GL.Functions.F06",
      "Graphics.GL.Functions.F07",
      "Graphics.GL.Functions.F08",
      "Graphics.GL.Functions.F09",
      "Graphics.GL.Functions.F10",
      "Graphics.GL.Functions.F11",
      "Graphics.GL.Functions.F12",
      "Graphics.GL.Functions.F13",
      "Graphics.GL.Functions.F14",
      "Graphics.GL.Functions.F15",
      "Graphics.GL.Functions.F16",
      "Graphics.GL.Functions.F17",
      "Graphics.GL.Functions.F18",
      "Graphics.GL.Functions.F19",
      "Graphics.GL.Functions.F20",
      "Graphics.GL.Functions.F21",
      "Graphics.GL.Functions.F22",
      "Graphics.GL.Functions.F23",
      "Graphics.GL.Functions.F24",
      "Graphics.GL.Functions.F25",
      "Graphics.GL.Functions.F26",
      "Graphics.GL.Functions.F27",
      "Graphics.GL.Functions.F28",
      "Graphics.GL.Functions.F29",
      "Graphics.GL.Functions.F30",
      "Graphics.GL.Functions.F31",
      "Graphics.GL.Functions.F32",
      "Graphics.GL.GetProcAddress",
      "Graphics.GL.GREMEDY",
      "Graphics.GL.GREMEDY.FrameTerminator",
      "Graphics.GL.GREMEDY.StringMarker",
      "Graphics.GL.HP",
      "Graphics.GL.HP.ConvolutionBorderModes",
      "Graphics.GL.HP.ImageTransform",
      "Graphics.GL.HP.OcclusionTest",
      "Graphics.GL.HP.TextureLighting",
      "Graphics.GL.IBM",
      "Graphics.GL.IBM.CullVertex",
      "Graphics.GL.IBM.MultimodeDrawArrays",
      "Graphics.GL.IBM.RasterposClip",
      "Graphics.GL.IBM.StaticData",
      "Graphics.GL.IBM.TextureMirroredRepeat",
      "Graphics.GL.IBM.VertexArrayLists",
      "Graphics.GL.INGR",
      "Graphics.GL.INGR.BlendFuncSeparate",
      "Graphics.GL.INGR.ColorClamp",
      "Graphics.GL.INGR.InterlaceRead",
      "Graphics.GL.INTEL",
      "Graphics.GL.INTEL.ConservativeRasterization",
      "Graphics.GL.INTEL.FramebufferCmaa",
      "Graphics.GL.INTEL.MapTexture",
      "Graphics.GL.INTEL.ParallelArrays",
      "Graphics.GL.INTEL.PerformanceQuery",
      "Graphics.GL.KHR",
      "Graphics.GL.KHR.BlendEquationAdvanced",
      "Graphics.GL.KHR.BlendEquationAdvancedCoherent",
      "Graphics.GL.KHR.ContextFlushControl",
      "Graphics.GL.KHR.DebugCompatibility",
      "Graphics.GL.KHR.DebugCore",
      "Graphics.GL.KHR.NoError",
      "Graphics.GL.KHR.Robustness",
      "Graphics.GL.KHR.TextureCompressionASTCHDR",
      "Graphics.GL.KHR.TextureCompressionASTCLDR",
      "Graphics.GL.MESA",
      "Graphics.GL.MESA.PackInvert",
      "Graphics.GL.MESA.ResizeBuffers",
      "Graphics.GL.MESA.WindowPos",
      "Graphics.GL.MESAX",
      "Graphics.GL.MESAX.TextureStack",
      "Graphics.GL.MESA.YCbCrTexture",
      "Graphics.GL.NV",
      "Graphics.GL.NV.BindlessMultiDrawIndirect",
      "Graphics.GL.NV.BindlessMultiDrawIndirectCount",
      "Graphics.GL.NV.BindlessTexture",
      "Graphics.GL.NV.BlendEquationAdvanced",
      "Graphics.GL.NV.BlendEquationAdvancedCoherent",
      "Graphics.GL.NV.ClipSpaceWScaling",
      "Graphics.GL.NV.CommandList",
      "Graphics.GL.NV.ComputeProgram5",
      "Graphics.GL.NV.ConditionalRender",
      "Graphics.GL.NV.ConservativeRaster",
      "Graphics.GL.NV.ConservativeRasterDilate",
      "Graphics.GL.NV.ConservativeRasterPreSnapTriangles",
      "Graphics.GL.NV.CopyDepthToColor",
      "Graphics.GL.NV.CopyImage",
      "Graphics.GL.NV.DeepTexture3D",
      "Graphics.GL.NV.DepthBufferFloat",
      "Graphics.GL.NV.DepthClamp",
      "Graphics.GL.NV.DrawTexture",
      "Graphics.GL.NV.Evaluators",
      "Graphics.GL.NV.ExplicitMultisample",
      "Graphics.GL.NV.Fence",
      "Graphics.GL.NV.FillRectangle",
      "Graphics.GL.NV.FloatBuffer",
      "Graphics.GL.NV.FogDistance",
      "Graphics.GL.NV.FragmentCoverageToColor",
      "Graphics.GL.NV.FragmentProgram",
      "Graphics.GL.NV.FragmentProgram2",
      "Graphics.GL.NV.FramebufferMixedSamples",
      "Graphics.GL.NV.FramebufferMultisampleCoverage",
      "Graphics.GL.NV.GeometryProgram4",
      "Graphics.GL.NV.GPUProgram4",
      "Graphics.GL.NV.GPUProgram5",
      "Graphics.GL.NV.GPUShader5",
      "Graphics.GL.NV.HalfFloat",
      "Graphics.GL.NV.InternalformatSampleQuery",
      "Graphics.GL.NV.LightMaxExponent",
      "Graphics.GL.NV.MultisampleCoverage",
      "Graphics.GL.NV.MultisampleFilterHint",
      "Graphics.GL.NV.OcclusionQuery",
      "Graphics.GL.NV.PackedDepthStencil",
      "Graphics.GL.NV.ParameterBufferObject",
      "Graphics.GL.NV.PathRenderingCompatibility",
      "Graphics.GL.NV.PathRenderingCore",
      "Graphics.GL.NV.PathRenderingSharedEdge",
      "Graphics.GL.NV.PixelDataRange",
      "Graphics.GL.NV.PointSprite",
      "Graphics.GL.NV.PresentVideo",
      "Graphics.GL.NV.PrimitiveRestart",
      "Graphics.GL.NV.RegisterCombiners",
      "Graphics.GL.NV.RegisterCombiners2",
      "Graphics.GL.NV.RobustnessVideoMemoryPurge",
      "Graphics.GL.NV.SampleLocations",
      "Graphics.GL.NV.ShaderBufferLoad",
      "Graphics.GL.NV.ShaderBufferStore",
      "Graphics.GL.NV.ShaderThreadGroup",
      "Graphics.GL.NV.TessellationProgram5",
      "Graphics.GL.NV.TexgenEmboss",
      "Graphics.GL.NV.TexgenReflection",
      "Graphics.GL.NV.TextureBarrier",
      "Graphics.GL.NV.TextureEnvCombine4",
      "Graphics.GL.NV.TextureExpandNormal",
      "Graphics.GL.NV.TextureMultisample",
      "Graphics.GL.NV.TextureRectangle",
      "Graphics.GL.NV.TextureShader",
      "Graphics.GL.NV.TextureShader2",
      "Graphics.GL.NV.TextureShader3",
      "Graphics.GL.NV.TransformFeedback",
      "Graphics.GL.NV.TransformFeedback2",
      "Graphics.GL.NV.UniformBufferUnifiedMemory",
      "Graphics.GL.NV.VDPAUInterop",
      "Graphics.GL.NV.VertexArrayRange",
      "Graphics.GL.NV.VertexArrayRange2",
      "Graphics.GL.NV.VertexAttribInteger64Bit",
      "Graphics.GL.NV.VertexBufferUnifiedMemory",
      "Graphics.GL.NV.VertexProgram",
      "Graphics.GL.NV.VertexProgram2Option",
      "Graphics.GL.NV.VertexProgram3",
      "Graphics.GL.NV.VertexProgram4",
      "Graphics.GL.NV.VideoCapture",
      "Graphics.GL.NV.ViewportSwizzle",
      "Graphics.GL.NVX",
      "Graphics.GL.NVX.ConditionalRender",
      "Graphics.GL.NVX.GPUMemoryInfo",
      "Graphics.GL.OES",
      "Graphics.GL.OES.ByteCoordinates",
      "Graphics.GL.OES.CompressedPalettedTexture",
      "Graphics.GL.OES.FixedPoint",
      "Graphics.GL.OES.QueryMatrix",
      "Graphics.GL.OES.ReadFormat",
      "Graphics.GL.OES.SinglePrecision",
      "Graphics.GL.OML",
      "Graphics.GL.OML.Interlace",
      "Graphics.GL.OML.Resample",
      "Graphics.GL.OML.Subsample",
      "Graphics.GL.OVR",
      "Graphics.GL.OVR.Multiview",
      "Graphics.GL.PGI",
      "Graphics.GL.PGI.MiscHints",
      "Graphics.GL.PGI.VertexHints",
      "Graphics.GL.REND",
      "Graphics.GL.REND.ScreenCoordinates",
      "Graphics.GL.S3",
      "Graphics.GL.S3.S3TC",
      "Graphics.GL.SGI",
      "Graphics.GL.SGI.ColorMatrix",
      "Graphics.GL.SGI.ColorTable",
      "Graphics.GL.SGIS",
      "Graphics.GL.SGIS.DetailTexture",
      "Graphics.GL.SGIS.FogFunction",
      "Graphics.GL.SGIS.GenerateMipmap",
      "Graphics.GL.SGIS.Multisample",
      "Graphics.GL.SGIS.PixelTexture",
      "Graphics.GL.SGIS.PointLineTexgen",
      "Graphics.GL.SGIS.PointParameters",
      "Graphics.GL.SGIS.SharpenTexture",
      "Graphics.GL.SGIS.Texture4D",
      "Graphics.GL.SGIS.TextureBorderClamp",
      "Graphics.GL.SGIS.TextureColorMask",
      "Graphics.GL.SGIS.TextureEdgeClamp",
      "Graphics.GL.SGIS.TextureFilter4",
      "Graphics.GL.SGIS.TextureLOD",
      "Graphics.GL.SGIS.TextureSelect",
      "Graphics.GL.SGI.TextureColorTable",
      "Graphics.GL.SGIX",
      "Graphics.GL.SGIX.Async",
      "Graphics.GL.SGIX.AsyncHistogram",
      "Graphics.GL.SGIX.AsyncPixel",
      "Graphics.GL.SGIX.BlendAlphaMinmax",
      "Graphics.GL.SGIX.CalligraphicFragment",
      "Graphics.GL.SGIX.Clipmap",
      "Graphics.GL.SGIX.ConvolutionAccuracy",
      "Graphics.GL.SGIX.DepthTexture",
      "Graphics.GL.SGIX.FlushRaster",
      "Graphics.GL.SGIX.FogOffset",
      "Graphics.GL.SGIX.FragmentLighting",
      "Graphics.GL.SGIX.Framezoom",
      "Graphics.GL.SGIX.IglooInterface",
      "Graphics.GL.SGIX.Instruments",
      "Graphics.GL.SGIX.Interlace",
      "Graphics.GL.SGIX.IrInstrument1",
      "Graphics.GL.SGIX.ListPriority",
      "Graphics.GL.SGIX.PixelTexture",
      "Graphics.GL.SGIX.PixelTiles",
      "Graphics.GL.SGIX.PolynomialFFD",
      "Graphics.GL.SGIX.ReferencePlane",
      "Graphics.GL.SGIX.Resample",
      "Graphics.GL.SGIX.ScalebiasHint",
      "Graphics.GL.SGIX.Shadow",
      "Graphics.GL.SGIX.ShadowAmbient",
      "Graphics.GL.SGIX.Sprite",
      "Graphics.GL.SGIX.Subsample",
      "Graphics.GL.SGIX.TagSampleBuffer",
      "Graphics.GL.SGIX.TextureAddEnv",
      "Graphics.GL.SGIX.TextureCoordinateClamp",
      "Graphics.GL.SGIX.TextureLODBias",
      "Graphics.GL.SGIX.TextureMultiBuffer",
      "Graphics.GL.SGIX.TextureScaleBias",
      "Graphics.GL.SGIX.VertexPreclip",
      "Graphics.GL.SGIX.YCrCb",
      "Graphics.GL.SGIX.YCrCbA",
      "Graphics.GL.SUN",
      "Graphics.GL.SUN.ConvolutionBorderModes",
      "Graphics.GL.SUN.GlobalAlpha",
      "Graphics.GL.SUN.MeshArray",
      "Graphics.GL.SUN.SliceAccum",
      "Graphics.GL.SUN.TriangleList",
      "Graphics.GL.SUN.Vertex",
      "Graphics.GL.SUNX",
      "Graphics.GL.SUNX.ConstantData",
      "Graphics.GL.ThreeDFX",
      "Graphics.GL.ThreeDFX.Multisample",
      "Graphics.GL.ThreeDFX.Tbuffer",
      "Graphics.GL.ThreeDFX.TextureCompressionFXT1",
      "Graphics.GL.Tokens",
      "Graphics.GL.Types",
      "Graphics.GL.WIN",
      "Graphics.GL.WIN.PhongShading",
      "Graphics.GL.WIN.SpecularFog",
      "MangledRegistry",
      "ManPages",
      "Numeric",
      "Numeric.Fixed",
      "Numeric.Half",
      "Registry",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "Text.ParserCombinators.ReadP",
      "Text.PrettyPrint.HughesPJClass",
      "Text.XML.HXT.Core"
    ],
    "modules": [
      "Graphics.GL",
      "Graphics.GL.AMD",
      "Graphics.GL.AMD.BlendMinmaxFactor",
      "Graphics.GL.AMD.DebugOutput",
      "Graphics.GL.AMD.DepthClampSeparate",
      "Graphics.GL.AMD.DrawBuffersBlend",
      "Graphics.GL.AMD.GPUShaderHalfFloat",
      "Graphics.GL.AMD.GPUShaderInt64",
      "Graphics.GL.AMD.InterleavedElements",
      "Graphics.GL.AMD.MultiDrawIndirect",
      "Graphics.GL.AMD.NameGenDelete",
      "Graphics.GL.AMD.OcclusionQueryEvent",
      "Graphics.GL.AMD.PerformanceMonitor",
      "Graphics.GL.AMD.PinnedMemory",
      "Graphics.GL.AMD.QueryBufferObject",
      "Graphics.GL.AMD.SamplePositions",
      "Graphics.GL.AMD.SeamlessCubemapPerTexture",
      "Graphics.GL.AMD.SparseTexture",
      "Graphics.GL.AMD.StencilOperationExtended",
      "Graphics.GL.AMD.TransformFeedback4",
      "Graphics.GL.AMD.VertexShaderTessellator",
      "Graphics.GL.APPLE",
      "Graphics.GL.APPLE.AuxDepthStencil",
      "Graphics.GL.APPLE.ClientStorage",
      "Graphics.GL.APPLE.ElementArray",
      "Graphics.GL.APPLE.Fence",
      "Graphics.GL.APPLE.FloatPixels",
      "Graphics.GL.APPLE.FlushBufferRange",
      "Graphics.GL.APPLE.ObjectPurgeable",
      "Graphics.GL.APPLE.RGB422",
      "Graphics.GL.APPLE.RowBytes",
      "Graphics.GL.APPLE.SpecularVector",
      "Graphics.GL.APPLE.TextureRange",
      "Graphics.GL.APPLE.TransformHint",
      "Graphics.GL.APPLE.VertexArrayObject",
      "Graphics.GL.APPLE.VertexArrayRange",
      "Graphics.GL.APPLE.VertexProgramEvaluators",
      "Graphics.GL.APPLE.YCbCr422",
      "Graphics.GL.ARB",
      "Graphics.GL.ARB.BaseInstance",
      "Graphics.GL.ARB.BindlessTexture",
      "Graphics.GL.ARB.BlendFuncExtended",
      "Graphics.GL.ARB.BufferStorage",
      "Graphics.GL.ARB.CLEvent",
      "Graphics.GL.ARB.ClearBufferObject",
      "Graphics.GL.ARB.ClearTexture",
      "Graphics.GL.ARB.ClipControl",
      "Graphics.GL.ARB.ColorBufferFloat",
      "Graphics.GL.ARB.CompressedTexturePixelStorage",
      "Graphics.GL.ARB.ComputeShader",
      "Graphics.GL.ARB.ComputeVariableGroupSize",
      "Graphics.GL.ARB.ConditionalRenderInverted",
      "Graphics.GL.ARB.CopyBuffer",
      "Graphics.GL.ARB.CopyImage",
      "Graphics.GL.ARB.CullDistance",
      "Graphics.GL.ARB.DebugOutput",
      "Graphics.GL.ARB.DepthBufferFloat",
      "Graphics.GL.ARB.DepthClamp",
      "Graphics.GL.ARB.DepthTexture",
      "Graphics.GL.ARB.DirectStateAccess",
      "Graphics.GL.ARB.DrawBuffers",
      "Graphics.GL.ARB.DrawBuffersBlend",
      "Graphics.GL.ARB.DrawElementsBaseVertex",
      "Graphics.GL.ARB.DrawIndirect",
      "Graphics.GL.ARB.DrawInstanced",
      "Graphics.GL.ARB.ES2Compatibility",
      "Graphics.GL.ARB.ES31Compatibility",
      "Graphics.GL.ARB.ES32Compatibility",
      "Graphics.GL.ARB.ES3Compatibility",
      "Graphics.GL.ARB.EnhancedLayouts",
      "Graphics.GL.ARB.ExplicitUniformLocation",
      "Graphics.GL.ARB.FragmentProgram",
      "Graphics.GL.ARB.FragmentShader",
      "Graphics.GL.ARB.FramebufferNoAttachments",
      "Graphics.GL.ARB.FramebufferObjectCompatibility",
      "Graphics.GL.ARB.FramebufferObjectCore",
      "Graphics.GL.ARB.FramebufferSRGB",
      "Graphics.GL.ARB.GPUShader5",
      "Graphics.GL.ARB.GPUShaderFP64",
      "Graphics.GL.ARB.GPUShaderInt64",
      "Graphics.GL.ARB.GeometryShader4",
      "Graphics.GL.ARB.GetProgramBinary",
      "Graphics.GL.ARB.GetTextureSubImage",
      "Graphics.GL.ARB.HalfFloatPixel",
      "Graphics.GL.ARB.HalfFloatVertex",
      "Graphics.GL.ARB.ImagingCompatibility",
      "Graphics.GL.ARB.ImagingCore",
      "Graphics.GL.ARB.IndirectParameters",
      "Graphics.GL.ARB.InstancedArrays",
      "Graphics.GL.ARB.InternalformatQuery",
      "Graphics.GL.ARB.InternalformatQuery2",
      "Graphics.GL.ARB.InvalidateSubdata",
      "Graphics.GL.ARB.MapBufferAlignment",
      "Graphics.GL.ARB.MapBufferRange",
      "Graphics.GL.ARB.MatrixPalette",
      "Graphics.GL.ARB.MultiBind",
      "Graphics.GL.ARB.MultiDrawIndirect",
      "Graphics.GL.ARB.Multisample",
      "Graphics.GL.ARB.Multitexture",
      "Graphics.GL.ARB.OcclusionQuery",
      "Graphics.GL.ARB.OcclusionQuery2",
      "Graphics.GL.ARB.ParallelShaderCompile",
      "Graphics.GL.ARB.PipelineStatisticsQuery",
      "Graphics.GL.ARB.PixelBufferObject",
      "Graphics.GL.ARB.PointParameters",
      "Graphics.GL.ARB.PointSprite",
      "Graphics.GL.ARB.ProgramInterfaceQuery",
      "Graphics.GL.ARB.ProvokingVertex",
      "Graphics.GL.ARB.QueryBufferObject",
      "Graphics.GL.ARB.RobustnessCompatibility",
      "Graphics.GL.ARB.RobustnessCore",
      "Graphics.GL.ARB.SampleLocations",
      "Graphics.GL.ARB.SampleShading",
      "Graphics.GL.ARB.SamplerObjects",
      "Graphics.GL.ARB.SeamlessCubeMap",
      "Graphics.GL.ARB.SeamlessCubemapPerTexture",
      "Graphics.GL.ARB.SeparateShaderObjects",
      "Graphics.GL.ARB.ShaderAtomicCounters",
      "Graphics.GL.ARB.ShaderImageLoadStore",
      "Graphics.GL.ARB.ShaderObjects",
      "Graphics.GL.ARB.ShaderStorageBufferObject",
      "Graphics.GL.ARB.ShaderSubroutine",
      "Graphics.GL.ARB.ShadingLanguage100",
      "Graphics.GL.ARB.ShadingLanguageInclude",
      "Graphics.GL.ARB.Shadow",
      "Graphics.GL.ARB.ShadowAmbient",
      "Graphics.GL.ARB.SparseBuffer",
      "Graphics.GL.ARB.SparseTexture",
      "Graphics.GL.ARB.StencilTexturing",
      "Graphics.GL.ARB.Sync",
      "Graphics.GL.ARB.TessellationShader",
      "Graphics.GL.ARB.TextureBarrier",
      "Graphics.GL.ARB.TextureBorderClamp",
      "Graphics.GL.ARB.TextureBufferObject",
      "Graphics.GL.ARB.TextureBufferObjectRGB32",
      "Graphics.GL.ARB.TextureBufferRange",
      "Graphics.GL.ARB.TextureCompression",
      "Graphics.GL.ARB.TextureCompressionBPTC",
      "Graphics.GL.ARB.TextureCompressionRGTC",
      "Graphics.GL.ARB.TextureCubeMap",
      "Graphics.GL.ARB.TextureCubeMapArray",
      "Graphics.GL.ARB.TextureEnvCombine",
      "Graphics.GL.ARB.TextureEnvDot3",
      "Graphics.GL.ARB.TextureFilterMinmax",
      "Graphics.GL.ARB.TextureFloat",
      "Graphics.GL.ARB.TextureGather",
      "Graphics.GL.ARB.TextureMirrorClampToEdge",
      "Graphics.GL.ARB.TextureMirroredRepeat",
      "Graphics.GL.ARB.TextureMultisample",
      "Graphics.GL.ARB.TextureRG",
      "Graphics.GL.ARB.TextureRGB10A2UI",
      "Graphics.GL.ARB.TextureRectangle",
      "Graphics.GL.ARB.TextureStencil8",
      "Graphics.GL.ARB.TextureStorage",
      "Graphics.GL.ARB.TextureStorageMultisample",
      "Graphics.GL.ARB.TextureSwizzle",
      "Graphics.GL.ARB.TextureView",
      "Graphics.GL.ARB.TimerQuery",
      "Graphics.GL.ARB.TransformFeedback2",
      "Graphics.GL.ARB.TransformFeedback3",
      "Graphics.GL.ARB.TransformFeedbackInstanced",
      "Graphics.GL.ARB.TransformFeedbackOverflowQuery",
      "Graphics.GL.ARB.TransposeMatrix",
      "Graphics.GL.ARB.UniformBufferObject",
      "Graphics.GL.ARB.VertexArrayBGRA",
      "Graphics.GL.ARB.VertexArrayObject",
      "Graphics.GL.ARB.VertexAttrib64Bit",
      "Graphics.GL.ARB.VertexAttribBinding",
      "Graphics.GL.ARB.VertexBlend",
      "Graphics.GL.ARB.VertexBufferObject",
      "Graphics.GL.ARB.VertexProgram",
      "Graphics.GL.ARB.VertexShader",
      "Graphics.GL.ARB.VertexType10f11f11fRev",
      "Graphics.GL.ARB.VertexType2101010RevCompatibility",
      "Graphics.GL.ARB.VertexType2101010RevCore",
      "Graphics.GL.ARB.ViewportArray",
      "Graphics.GL.ARB.WindowPos",
      "Graphics.GL.ATI",
      "Graphics.GL.ATI.DrawBuffers",
      "Graphics.GL.ATI.ElementArray",
      "Graphics.GL.ATI.EnvmapBumpmap",
      "Graphics.GL.ATI.FragmentShader",
      "Graphics.GL.ATI.MapObjectBuffer",
      "Graphics.GL.ATI.Meminfo",
      "Graphics.GL.ATI.PNTriangles",
      "Graphics.GL.ATI.PixelFormatFloat",
      "Graphics.GL.ATI.SeparateStencil",
      "Graphics.GL.ATI.TextFragmentShader",
      "Graphics.GL.ATI.TextureEnvCombine3",
      "Graphics.GL.ATI.TextureFloat",
      "Graphics.GL.ATI.TextureMirrorOnce",
      "Graphics.GL.ATI.VertexArrayObject",
      "Graphics.GL.ATI.VertexAttribArrayObject",
      "Graphics.GL.ATI.VertexStreams",
      "Graphics.GL.Compatibility30",
      "Graphics.GL.Compatibility31",
      "Graphics.GL.Compatibility32",
      "Graphics.GL.Compatibility33",
      "Graphics.GL.Compatibility40",
      "Graphics.GL.Compatibility41",
      "Graphics.GL.Compatibility42",
      "Graphics.GL.Compatibility43",
      "Graphics.GL.Compatibility44",
      "Graphics.GL.Compatibility45",
      "Graphics.GL.Core30",
      "Graphics.GL.Core31",
      "Graphics.GL.Core32",
      "Graphics.GL.Core33",
      "Graphics.GL.Core40",
      "Graphics.GL.Core41",
      "Graphics.GL.Core42",
      "Graphics.GL.Core43",
      "Graphics.GL.Core44",
      "Graphics.GL.Core45",
      "Graphics.GL.EXT",
      "Graphics.GL.EXT.ABGR",
      "Graphics.GL.EXT.BGRA",
      "Graphics.GL.EXT.BindableUniform",
      "Graphics.GL.EXT.BlendColor",
      "Graphics.GL.EXT.BlendEquationSeparate",
      "Graphics.GL.EXT.BlendFuncSeparate",
      "Graphics.GL.EXT.BlendMinmax",
      "Graphics.GL.EXT.BlendSubtract",
      "Graphics.GL.EXT.CMYKA",
      "Graphics.GL.EXT.ClipVolumeHint",
      "Graphics.GL.EXT.ColorSubtable",
      "Graphics.GL.EXT.CompiledVertexArray",
      "Graphics.GL.EXT.Convolution",
      "Graphics.GL.EXT.CoordinateFrame",
      "Graphics.GL.EXT.CopyTexture",
      "Graphics.GL.EXT.CullVertex",
      "Graphics.GL.EXT.DebugLabel",
      "Graphics.GL.EXT.DebugMarker",
      "Graphics.GL.EXT.DepthBoundsTest",
      "Graphics.GL.EXT.DirectStateAccess",
      "Graphics.GL.EXT.DrawBuffers2",
      "Graphics.GL.EXT.DrawInstanced",
      "Graphics.GL.EXT.DrawRangeElements",
      "Graphics.GL.EXT.FogCoord",
      "Graphics.GL.EXT.FourTwoTwoPixels",
      "Graphics.GL.EXT.FramebufferBlit",
      "Graphics.GL.EXT.FramebufferMultisample",
      "Graphics.GL.EXT.FramebufferMultisampleBlitScaled",
      "Graphics.GL.EXT.FramebufferObject",
      "Graphics.GL.EXT.FramebufferSRGB",
      "Graphics.GL.EXT.GPUProgramParameters",
      "Graphics.GL.EXT.GPUShader4",
      "Graphics.GL.EXT.GeometryShader4",
      "Graphics.GL.EXT.Histogram",
      "Graphics.GL.EXT.IndexArrayFormats",
      "Graphics.GL.EXT.IndexFunc",
      "Graphics.GL.EXT.IndexMaterial",
      "Graphics.GL.EXT.LightTexture",
      "Graphics.GL.EXT.MultiDrawArrays",
      "Graphics.GL.EXT.Multisample",
      "Graphics.GL.EXT.PackedDepthStencil",
      "Graphics.GL.EXT.PackedFloat",
      "Graphics.GL.EXT.PackedPixels",
      "Graphics.GL.EXT.PalettedTexture",
      "Graphics.GL.EXT.PixelBufferObject",
      "Graphics.GL.EXT.PixelTransform",
      "Graphics.GL.EXT.PointParameters",
      "Graphics.GL.EXT.PolygonOffset",
      "Graphics.GL.EXT.PolygonOffsetClamp",
      "Graphics.GL.EXT.ProvokingVertex",
      "Graphics.GL.EXT.RasterMultisample",
      "Graphics.GL.EXT.RescaleNormal",
      "Graphics.GL.EXT.SecondaryColor",
      "Graphics.GL.EXT.SeparateShaderObjects",
      "Graphics.GL.EXT.SeparateSpecularColor",
      "Graphics.GL.EXT.ShaderImageLoadStore",
      "Graphics.GL.EXT.SharedTexturePalette",
      "Graphics.GL.EXT.StencilClearTag",
      "Graphics.GL.EXT.StencilTwoSide",
      "Graphics.GL.EXT.StencilWrap",
      "Graphics.GL.EXT.Subtexture",
      "Graphics.GL.EXT.Texture",
      "Graphics.GL.EXT.Texture3D",
      "Graphics.GL.EXT.TextureArray",
      "Graphics.GL.EXT.TextureBufferObject",
      "Graphics.GL.EXT.TextureCompressionLATC",
      "Graphics.GL.EXT.TextureCompressionRGTC",
      "Graphics.GL.EXT.TextureCompressionS3TC",
      "Graphics.GL.EXT.TextureCubeMap",
      "Graphics.GL.EXT.TextureEnvCombine",
      "Graphics.GL.EXT.TextureEnvDot3",
      "Graphics.GL.EXT.TextureFilterAnisotropic",
      "Graphics.GL.EXT.TextureFilterMinmax",
      "Graphics.GL.EXT.TextureInteger",
      "Graphics.GL.EXT.TextureLODBias",
      "Graphics.GL.EXT.TextureMirrorClamp",
      "Graphics.GL.EXT.TextureObject",
      "Graphics.GL.EXT.TexturePerturbNormal",
      "Graphics.GL.EXT.TextureSNorm",
      "Graphics.GL.EXT.TextureSRGB",
      "Graphics.GL.EXT.TextureSRGBDecode",
      "Graphics.GL.EXT.TextureSharedExponent",
      "Graphics.GL.EXT.TextureSwizzle",
      "Graphics.GL.EXT.TimerQuery",
      "Graphics.GL.EXT.TransformFeedback",
      "Graphics.GL.EXT.VertexArray",
      "Graphics.GL.EXT.VertexArrayBGRA",
      "Graphics.GL.EXT.VertexAttrib64Bit",
      "Graphics.GL.EXT.VertexShader",
      "Graphics.GL.EXT.VertexWeighting",
      "Graphics.GL.EXT.WindowRectangles",
      "Graphics.GL.EXT.X11SyncObject",
      "Graphics.GL.Functions",
      "Graphics.GL.GREMEDY",
      "Graphics.GL.GREMEDY.FrameTerminator",
      "Graphics.GL.GREMEDY.StringMarker",
      "Graphics.GL.GetProcAddress",
      "Graphics.GL.Groups",
      "Graphics.GL.HP",
      "Graphics.GL.HP.ConvolutionBorderModes",
      "Graphics.GL.HP.ImageTransform",
      "Graphics.GL.HP.OcclusionTest",
      "Graphics.GL.HP.TextureLighting",
      "Graphics.GL.IBM",
      "Graphics.GL.IBM.CullVertex",
      "Graphics.GL.IBM.MultimodeDrawArrays",
      "Graphics.GL.IBM.RasterposClip",
      "Graphics.GL.IBM.StaticData",
      "Graphics.GL.IBM.TextureMirroredRepeat",
      "Graphics.GL.IBM.VertexArrayLists",
      "Graphics.GL.INGR",
      "Graphics.GL.INGR.BlendFuncSeparate",
      "Graphics.GL.INGR.ColorClamp",
      "Graphics.GL.INGR.InterlaceRead",
      "Graphics.GL.INTEL",
      "Graphics.GL.INTEL.ConservativeRasterization",
      "Graphics.GL.INTEL.FramebufferCmaa",
      "Graphics.GL.INTEL.MapTexture",
      "Graphics.GL.INTEL.ParallelArrays",
      "Graphics.GL.INTEL.PerformanceQuery",
      "Graphics.GL.KHR",
      "Graphics.GL.KHR.BlendEquationAdvanced",
      "Graphics.GL.KHR.BlendEquationAdvancedCoherent",
      "Graphics.GL.KHR.ContextFlushControl",
      "Graphics.GL.KHR.DebugCompatibility",
      "Graphics.GL.KHR.DebugCore",
      "Graphics.GL.KHR.NoError",
      "Graphics.GL.KHR.Robustness",
      "Graphics.GL.KHR.TextureCompressionASTCHDR",
      "Graphics.GL.KHR.TextureCompressionASTCLDR",
      "Graphics.GL.MESA",
      "Graphics.GL.MESA.PackInvert",
      "Graphics.GL.MESA.ResizeBuffers",
      "Graphics.GL.MESA.WindowPos",
      "Graphics.GL.MESA.YCbCrTexture",
      "Graphics.GL.MESAX",
      "Graphics.GL.MESAX.TextureStack",
      "Graphics.GL.NV",
      "Graphics.GL.NV.BindlessMultiDrawIndirect",
      "Graphics.GL.NV.BindlessMultiDrawIndirectCount",
      "Graphics.GL.NV.BindlessTexture",
      "Graphics.GL.NV.BlendEquationAdvanced",
      "Graphics.GL.NV.BlendEquationAdvancedCoherent",
      "Graphics.GL.NV.ClipSpaceWScaling",
      "Graphics.GL.NV.CommandList",
      "Graphics.GL.NV.ComputeProgram5",
      "Graphics.GL.NV.ConditionalRender",
      "Graphics.GL.NV.ConservativeRaster",
      "Graphics.GL.NV.ConservativeRasterDilate",
      "Graphics.GL.NV.ConservativeRasterPreSnapTriangles",
      "Graphics.GL.NV.CopyDepthToColor",
      "Graphics.GL.NV.CopyImage",
      "Graphics.GL.NV.DeepTexture3D",
      "Graphics.GL.NV.DepthBufferFloat",
      "Graphics.GL.NV.DepthClamp",
      "Graphics.GL.NV.DrawTexture",
      "Graphics.GL.NV.Evaluators",
      "Graphics.GL.NV.ExplicitMultisample",
      "Graphics.GL.NV.Fence",
      "Graphics.GL.NV.FillRectangle",
      "Graphics.GL.NV.FloatBuffer",
      "Graphics.GL.NV.FogDistance",
      "Graphics.GL.NV.FragmentCoverageToColor",
      "Graphics.GL.NV.FragmentProgram",
      "Graphics.GL.NV.FragmentProgram2",
      "Graphics.GL.NV.FramebufferMixedSamples",
      "Graphics.GL.NV.FramebufferMultisampleCoverage",
      "Graphics.GL.NV.GPUProgram4",
      "Graphics.GL.NV.GPUProgram5",
      "Graphics.GL.NV.GPUShader5",
      "Graphics.GL.NV.GeometryProgram4",
      "Graphics.GL.NV.HalfFloat",
      "Graphics.GL.NV.InternalformatSampleQuery",
      "Graphics.GL.NV.LightMaxExponent",
      "Graphics.GL.NV.MultisampleCoverage",
      "Graphics.GL.NV.MultisampleFilterHint",
      "Graphics.GL.NV.OcclusionQuery",
      "Graphics.GL.NV.PackedDepthStencil",
      "Graphics.GL.NV.ParameterBufferObject",
      "Graphics.GL.NV.PathRenderingCompatibility",
      "Graphics.GL.NV.PathRenderingCore",
      "Graphics.GL.NV.PathRenderingSharedEdge",
      "Graphics.GL.NV.PixelDataRange",
      "Graphics.GL.NV.PointSprite",
      "Graphics.GL.NV.PresentVideo",
      "Graphics.GL.NV.PrimitiveRestart",
      "Graphics.GL.NV.RegisterCombiners",
      "Graphics.GL.NV.RegisterCombiners2",
      "Graphics.GL.NV.RobustnessVideoMemoryPurge",
      "Graphics.GL.NV.SampleLocations",
      "Graphics.GL.NV.ShaderBufferLoad",
      "Graphics.GL.NV.ShaderBufferStore",
      "Graphics.GL.NV.ShaderThreadGroup",
      "Graphics.GL.NV.TessellationProgram5",
      "Graphics.GL.NV.TexgenEmboss",
      "Graphics.GL.NV.TexgenReflection",
      "Graphics.GL.NV.TextureBarrier",
      "Graphics.GL.NV.TextureEnvCombine4",
      "Graphics.GL.NV.TextureExpandNormal",
      "Graphics.GL.NV.TextureMultisample",
      "Graphics.GL.NV.TextureRectangle",
      "Graphics.GL.NV.TextureShader",
      "Graphics.GL.NV.TextureShader2",
      "Graphics.GL.NV.TextureShader3",
      "Graphics.GL.NV.TransformFeedback",
      "Graphics.GL.NV.TransformFeedback2",
      "Graphics.GL.NV.UniformBufferUnifiedMemory",
      "Graphics.GL.NV.VDPAUInterop",
      "Graphics.GL.NV.VertexArrayRange",
      "Graphics.GL.NV.VertexArrayRange2",
      "Graphics.GL.NV.VertexAttribInteger64Bit",
      "Graphics.GL.NV.VertexBufferUnifiedMemory",
      "Graphics.GL.NV.VertexProgram",
      "Graphics.GL.NV.VertexProgram2Option",
      "Graphics.GL.NV.VertexProgram3",
      "Graphics.GL.NV.VertexProgram4",
      "Graphics.GL.NV.VideoCapture",
      "Graphics.GL.NV.ViewportSwizzle",
      "Graphics.GL.NVX",
      "Graphics.GL.NVX.ConditionalRender",
      "Graphics.GL.NVX.GPUMemoryInfo",
      "Graphics.GL.OES",
      "Graphics.GL.OES.ByteCoordinates",
      "Graphics.GL.OES.CompressedPalettedTexture",
      "Graphics.GL.OES.FixedPoint",
      "Graphics.GL.OES.QueryMatrix",
      "Graphics.GL.OES.ReadFormat",
      "Graphics.GL.OES.SinglePrecision",
      "Graphics.GL.OML",
      "Graphics.GL.OML.Interlace",
      "Graphics.GL.OML.Resample",
      "Graphics.GL.OML.Subsample",
      "Graphics.GL.OVR",
      "Graphics.GL.OVR.Multiview",
      "Graphics.GL.PGI",
      "Graphics.GL.PGI.MiscHints",
      "Graphics.GL.PGI.VertexHints",
      "Graphics.GL.REND",
      "Graphics.GL.REND.ScreenCoordinates",
      "Graphics.GL.S3",
      "Graphics.GL.S3.S3TC",
      "Graphics.GL.SGI",
      "Graphics.GL.SGI.ColorMatrix",
      "Graphics.GL.SGI.ColorTable",
      "Graphics.GL.SGI.TextureColorTable",
      "Graphics.GL.SGIS",
      "Graphics.GL.SGIS.DetailTexture",
      "Graphics.GL.SGIS.FogFunction",
      "Graphics.GL.SGIS.GenerateMipmap",
      "Graphics.GL.SGIS.Multisample",
      "Graphics.GL.SGIS.PixelTexture",
      "Graphics.GL.SGIS.PointLineTexgen",
      "Graphics.GL.SGIS.PointParameters",
      "Graphics.GL.SGIS.SharpenTexture",
      "Graphics.GL.SGIS.Texture4D",
      "Graphics.GL.SGIS.TextureBorderClamp",
      "Graphics.GL.SGIS.TextureColorMask",
      "Graphics.GL.SGIS.TextureEdgeClamp",
      "Graphics.GL.SGIS.TextureFilter4",
      "Graphics.GL.SGIS.TextureLOD",
      "Graphics.GL.SGIS.TextureSelect",
      "Graphics.GL.SGIX",
      "Graphics.GL.SGIX.Async",
      "Graphics.GL.SGIX.AsyncHistogram",
      "Graphics.GL.SGIX.AsyncPixel",
      "Graphics.GL.SGIX.BlendAlphaMinmax",
      "Graphics.GL.SGIX.CalligraphicFragment",
      "Graphics.GL.SGIX.Clipmap",
      "Graphics.GL.SGIX.ConvolutionAccuracy",
      "Graphics.GL.SGIX.DepthTexture",
      "Graphics.GL.SGIX.FlushRaster",
      "Graphics.GL.SGIX.FogOffset",
      "Graphics.GL.SGIX.FragmentLighting",
      "Graphics.GL.SGIX.Framezoom",
      "Graphics.GL.SGIX.IglooInterface",
      "Graphics.GL.SGIX.Instruments",
      "Graphics.GL.SGIX.Interlace",
      "Graphics.GL.SGIX.IrInstrument1",
      "Graphics.GL.SGIX.ListPriority",
      "Graphics.GL.SGIX.PixelTexture",
      "Graphics.GL.SGIX.PixelTiles",
      "Graphics.GL.SGIX.PolynomialFFD",
      "Graphics.GL.SGIX.ReferencePlane",
      "Graphics.GL.SGIX.Resample",
      "Graphics.GL.SGIX.ScalebiasHint",
      "Graphics.GL.SGIX.Shadow",
      "Graphics.GL.SGIX.ShadowAmbient",
      "Graphics.GL.SGIX.Sprite",
      "Graphics.GL.SGIX.Subsample",
      "Graphics.GL.SGIX.TagSampleBuffer",
      "Graphics.GL.SGIX.TextureAddEnv",
      "Graphics.GL.SGIX.TextureCoordinateClamp",
      "Graphics.GL.SGIX.TextureLODBias",
      "Graphics.GL.SGIX.TextureMultiBuffer",
      "Graphics.GL.SGIX.TextureScaleBias",
      "Graphics.GL.SGIX.VertexPreclip",
      "Graphics.GL.SGIX.YCrCb",
      "Graphics.GL.SGIX.YCrCbA",
      "Graphics.GL.SUN",
      "Graphics.GL.SUN.ConvolutionBorderModes",
      "Graphics.GL.SUN.GlobalAlpha",
      "Graphics.GL.SUN.MeshArray",
      "Graphics.GL.SUN.SliceAccum",
      "Graphics.GL.SUN.TriangleList",
      "Graphics.GL.SUN.Vertex",
      "Graphics.GL.SUNX",
      "Graphics.GL.SUNX.ConstantData",
      "Graphics.GL.ThreeDFX",
      "Graphics.GL.ThreeDFX.Multisample",
      "Graphics.GL.ThreeDFX.Tbuffer",
      "Graphics.GL.ThreeDFX.TextureCompressionFXT1",
      "Graphics.GL.Tokens",
      "Graphics.GL.Types",
      "Graphics.GL.Version10",
      "Graphics.GL.Version11",
      "Graphics.GL.Version12",
      "Graphics.GL.Version13",
      "Graphics.GL.Version14",
      "Graphics.GL.Version15",
      "Graphics.GL.Version20",
      "Graphics.GL.Version21",
      "Graphics.GL.WIN",
      "Graphics.GL.WIN.PhongShading",
      "Graphics.GL.WIN.SpecularFog"
    ],
    "name": "OpenGLRaw",
    "version": "3.2.3.0"
  },
  {
    "dependencies": {
      "base": [],
      "hw-bits": [],
      "hw-prim": [],
      "hw-rankselect": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Data.Vector",
      "Data.Vector.Storable",
      "HaskellWorks.Data.Succinct.BalancedParens.BalancedParens",
      "HaskellWorks.Data.Succinct.BalancedParens.CloseAt",
      "HaskellWorks.Data.Succinct.BalancedParens.Enclose",
      "HaskellWorks.Data.Succinct.BalancedParens.FindClose",
      "HaskellWorks.Data.Succinct.BalancedParens.FindCloseN",
      "HaskellWorks.Data.Succinct.BalancedParens.FindOpen",
      "HaskellWorks.Data.Succinct.BalancedParens.FindOpenN",
      "HaskellWorks.Data.Succinct.BalancedParens.OpenAt",
      "HaskellWorks.Data.Succinct.BalancedParens.Simple",
      "HaskellWorks.Data.Succinct.Excess.Excess0",
      "HaskellWorks.Data.Succinct.Excess.Excess1"
    ],
    "modules": [
      "HaskellWorks.Data.Succinct.BalancedParens",
      "HaskellWorks.Data.Succinct.BalancedParens.BalancedParens",
      "HaskellWorks.Data.Succinct.BalancedParens.Broadword",
      "HaskellWorks.Data.Succinct.BalancedParens.CloseAt",
      "HaskellWorks.Data.Succinct.BalancedParens.Enclose",
      "HaskellWorks.Data.Succinct.BalancedParens.FindClose",
      "HaskellWorks.Data.Succinct.BalancedParens.FindCloseN",
      "HaskellWorks.Data.Succinct.BalancedParens.FindOpen",
      "HaskellWorks.Data.Succinct.BalancedParens.FindOpenN",
      "HaskellWorks.Data.Succinct.BalancedParens.NewCloseAt",
      "HaskellWorks.Data.Succinct.BalancedParens.NewOpenAt",
      "HaskellWorks.Data.Succinct.BalancedParens.OpenAt",
      "HaskellWorks.Data.Succinct.BalancedParens.RangeMinMax",
      "HaskellWorks.Data.Succinct.BalancedParens.RangeMinMax2",
      "HaskellWorks.Data.Succinct.BalancedParens.Simple",
      "HaskellWorks.Data.Succinct.Excess",
      "HaskellWorks.Data.Succinct.Excess.Excess0",
      "HaskellWorks.Data.Succinct.Excess.Excess1",
      "HaskellWorks.Data.Succinct.Excess.MinMaxExcess0",
      "HaskellWorks.Data.Succinct.Excess.MinMaxExcess1",
      "HaskellWorks.Data.Succinct.NearestNeighbour",
      "HaskellWorks.Data.Succinct.RankSelect",
      "HaskellWorks.Data.Succinct.RankSelect.Binary",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.Basic",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.Basic.Rank0",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.Basic.Rank1",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.Basic.Select0",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.Basic.Select1",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.CsPoppy",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.CsPoppy2",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.Poppy512",
      "HaskellWorks.Data.Succinct.RankSelect.Binary.Poppy512S",
      "HaskellWorks.Data.Succinct.RankSelect.Internal"
    ],
    "name": "hw-rankselect",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compat.Binary",
        "Distribution.Compat.CreatePipe",
        "Distribution.Compat.Environment",
        "Distribution.Compat.Exception",
        "Distribution.Compat.Internal.TempFile",
        "Distribution.Compat.ReadP",
        "Distribution.Compat.Semigroup",
        "Distribution.Compiler",
        "Distribution.InstalledPackageInfo",
        "Distribution.License",
        "Distribution.Make",
        "Distribution.ModuleName",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Check",
        "Distribution.PackageDescription.Configuration",
        "Distribution.PackageDescription.Parse",
        "Distribution.PackageDescription.PrettyPrint",
        "Distribution.ParseUtils",
        "Distribution.ReadE",
        "Distribution.Simple",
        "Distribution.Simple.Build",
        "Distribution.Simple.Build.Macros",
        "Distribution.Simple.BuildPaths",
        "Distribution.Simple.Build.PathsModule",
        "Distribution.Simple.BuildTarget",
        "Distribution.Simple.Command",
        "Distribution.Simple.Compiler",
        "Distribution.Simple.Configure",
        "Distribution.Simple.GHC",
        "Distribution.Simple.GHCJS",
        "Distribution.Simple.Haddock",
        "Distribution.Simple.InstallDirs",
        "Distribution.Simple.LocalBuildInfo",
        "Distribution.Simple.PackageIndex",
        "Distribution.Simple.PreProcess",
        "Distribution.Simple.Program",
        "Distribution.Simple.Program.Builtin",
        "Distribution.Simple.Program.Db",
        "Distribution.Simple.Program.Find",
        "Distribution.Simple.Program.GHC",
        "Distribution.Simple.Program.Run",
        "Distribution.Simple.Program.Strip",
        "Distribution.Simple.Program.Types",
        "Distribution.Simple.Register",
        "Distribution.Simple.Setup",
        "Distribution.Simple.SrcDist",
        "Distribution.Simple.Utils",
        "Distribution.System",
        "Distribution.Text",
        "Distribution.Utils.NubList",
        "Distribution.Verbosity",
        "Distribution.Version",
        "Language.Haskell.Extension"
      ],
      "HTTP": [
        "Network.Browser",
        "Network.HTTP",
        "Network.HTTP.Proxy",
        "Network.TCP"
      ],
      "array": [
        "Data.Array"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Control.Monad.ST.Lazy",
        "Data.Bits",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Generics",
        "GHC.IO.Encoding",
        "GHC.IO.Encoding.Failure",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Posix.Internals",
        "System.Posix.Types",
        "Text.ParserCombinators.ReadP",
        "Text.Read"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "binary": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Lazy",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "cryptohash-sha256": [
        "Crypto.Hash.SHA256"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "hackage-security": [
        "Hackage.Security.Client",
        "Hackage.Security.Client.Repository.Cache",
        "Hackage.Security.Client.Repository.HttpLib",
        "Hackage.Security.Client.Repository.Local",
        "Hackage.Security.Client.Repository.Remote",
        "Hackage.Security.Util.Checked",
        "Hackage.Security.Util.Lens",
        "Hackage.Security.Util.Path",
        "Hackage.Security.Util.Pretty",
        "Hackage.Security.Util.Some"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Lazy"
      ],
      "pretty": [
        "Text.PrettyPrint",
        "Text.PrettyPrint.HughesPJ"
      ],
      "random": [
        "System.Random"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Check",
        "Codec.Archive.Tar.Entry",
        "Codec.Archive.Tar.Index"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ],
      "zlib": [
        "Codec.Compression.GZip",
        "Codec.Compression.Zlib",
        "Codec.Compression.Zlib.Internal"
      ]
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Check",
      "Codec.Archive.Tar.Entry",
      "Codec.Archive.Tar.Index",
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib",
      "Codec.Compression.Zlib.Internal",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.ST.Lazy",
      "Control.Monad.Trans",
      "Control.Monad.Writer.Lazy",
      "Crypto.Hash.SHA256",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Graph",
      "Data.Hashable",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Map.Lazy",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Set",
      "Data.String",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Data.Tree",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Distribution.Client.BuildReports.Anonymous",
      "Distribution.Client.BuildReports.Storage",
      "Distribution.Client.BuildReports.Types",
      "Distribution.Client.BuildReports.Upload",
      "Distribution.Client.BuildTarget",
      "Distribution.Client.Check",
      "Distribution.Client.CmdBuild",
      "Distribution.Client.CmdConfigure",
      "Distribution.Client.CmdRepl",
      "Distribution.Client.Compat.ExecutablePath",
      "Distribution.Client.Compat.FilePerms",
      "Distribution.Client.Compat.Process",
      "Distribution.Client.Compat.Semaphore",
      "Distribution.Client.Compat.Time",
      "Distribution.Client.ComponentDeps",
      "Distribution.Client.Config",
      "Distribution.Client.Configure",
      "Distribution.Client.Dependency",
      "Distribution.Client.Dependency.Modular",
      "Distribution.Client.Dependency.Modular.Assignment",
      "Distribution.Client.Dependency.Modular.Builder",
      "Distribution.Client.Dependency.Modular.Configured",
      "Distribution.Client.Dependency.Modular.ConfiguredConversion",
      "Distribution.Client.Dependency.Modular.ConflictSet",
      "Distribution.Client.Dependency.Modular.Cycles",
      "Distribution.Client.Dependency.Modular.Dependency",
      "Distribution.Client.Dependency.Modular.Explore",
      "Distribution.Client.Dependency.Modular.Flag",
      "Distribution.Client.Dependency.Modular.Index",
      "Distribution.Client.Dependency.Modular.IndexConversion",
      "Distribution.Client.Dependency.Modular.Linking",
      "Distribution.Client.Dependency.Modular.Log",
      "Distribution.Client.Dependency.Modular.Message",
      "Distribution.Client.Dependency.Modular.Package",
      "Distribution.Client.Dependency.Modular.Preference",
      "Distribution.Client.Dependency.Modular.PSQ",
      "Distribution.Client.Dependency.Modular.Solver",
      "Distribution.Client.Dependency.Modular.Tree",
      "Distribution.Client.Dependency.Modular.Validate",
      "Distribution.Client.Dependency.Modular.Var",
      "Distribution.Client.Dependency.Modular.Version",
      "Distribution.Client.Dependency.TopDown",
      "Distribution.Client.Dependency.TopDown.Constraints",
      "Distribution.Client.Dependency.TopDown.Types",
      "Distribution.Client.Dependency.Types",
      "Distribution.Client.DistDirLayout",
      "Distribution.Client.Exec",
      "Distribution.Client.Fetch",
      "Distribution.Client.FetchUtils",
      "Distribution.Client.FileMonitor",
      "Distribution.Client.Freeze",
      "Distribution.Client.GenBounds",
      "Distribution.Client.Get",
      "Distribution.Client.Glob",
      "Distribution.Client.GlobalFlags",
      "Distribution.Client.GZipUtils",
      "Distribution.Client.Haddock",
      "Distribution.Client.HttpUtils",
      "Distribution.Client.IndexUtils",
      "Distribution.Client.Init",
      "Distribution.Client.Init.Heuristics",
      "Distribution.Client.Init.Licenses",
      "Distribution.Client.Init.Types",
      "Distribution.Client.Install",
      "Distribution.Client.InstallPlan",
      "Distribution.Client.InstallSymlink",
      "Distribution.Client.JobControl",
      "Distribution.Client.List",
      "Distribution.Client.Manpage",
      "Distribution.Client.PackageIndex",
      "Distribution.Client.PackageUtils",
      "Distribution.Client.ParseUtils",
      "Distribution.Client.PkgConfigDb",
      "Distribution.Client.PlanIndex",
      "Distribution.Client.ProjectConfig",
      "Distribution.Client.ProjectConfig.Legacy",
      "Distribution.Client.ProjectConfig.Types",
      "Distribution.Client.ProjectOrchestration",
      "Distribution.Client.ProjectPlanning",
      "Distribution.Client.RebuildMonad",
      "Distribution.Client.Run",
      "Distribution.Client.Sandbox",
      "Distribution.Client.Sandbox.Index",
      "Distribution.Client.Sandbox.PackageEnvironment",
      "Distribution.Client.Sandbox.Timestamp",
      "Distribution.Client.Sandbox.Types",
      "Distribution.Client.Security.HTTP",
      "Distribution.Client.Setup",
      "Distribution.Client.SetupWrapper",
      "Distribution.Client.SrcDist",
      "Distribution.Client.Tar",
      "Distribution.Client.Targets",
      "Distribution.Client.Types",
      "Distribution.Client.Update",
      "Distribution.Client.Upload",
      "Distribution.Client.Utils",
      "Distribution.Client.Utils.Json",
      "Distribution.Client.Utils.LabeledGraph",
      "Distribution.Client.Win32SelfUpgrade",
      "Distribution.Client.World",
      "Distribution.Compat.Binary",
      "Distribution.Compat.CreatePipe",
      "Distribution.Compat.Environment",
      "Distribution.Compat.Exception",
      "Distribution.Compat.Internal.TempFile",
      "Distribution.Compat.ReadP",
      "Distribution.Compat.Semigroup",
      "Distribution.Compiler",
      "Distribution.InstalledPackageInfo",
      "Distribution.License",
      "Distribution.Make",
      "Distribution.ModuleName",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Check",
      "Distribution.PackageDescription.Configuration",
      "Distribution.PackageDescription.Parse",
      "Distribution.PackageDescription.PrettyPrint",
      "Distribution.ParseUtils",
      "Distribution.ReadE",
      "Distribution.Simple",
      "Distribution.Simple.Build",
      "Distribution.Simple.Build.Macros",
      "Distribution.Simple.BuildPaths",
      "Distribution.Simple.Build.PathsModule",
      "Distribution.Simple.BuildTarget",
      "Distribution.Simple.Command",
      "Distribution.Simple.Compiler",
      "Distribution.Simple.Configure",
      "Distribution.Simple.GHC",
      "Distribution.Simple.GHCJS",
      "Distribution.Simple.Haddock",
      "Distribution.Simple.InstallDirs",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.PackageIndex",
      "Distribution.Simple.PreProcess",
      "Distribution.Simple.Program",
      "Distribution.Simple.Program.Builtin",
      "Distribution.Simple.Program.Db",
      "Distribution.Simple.Program.Find",
      "Distribution.Simple.Program.GHC",
      "Distribution.Simple.Program.Run",
      "Distribution.Simple.Program.Strip",
      "Distribution.Simple.Program.Types",
      "Distribution.Simple.Register",
      "Distribution.Simple.Setup",
      "Distribution.Simple.SrcDist",
      "Distribution.Simple.Utils",
      "Distribution.System",
      "Distribution.Text",
      "Distribution.Utils.NubList",
      "Distribution.Verbosity",
      "Distribution.Version",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Generics",
      "GHC.IO.Encoding",
      "GHC.IO.Encoding.Failure",
      "Hackage.Security.Client",
      "Hackage.Security.Client.Repository.Cache",
      "Hackage.Security.Client.Repository.HttpLib",
      "Hackage.Security.Client.Repository.Local",
      "Hackage.Security.Client.Repository.Remote",
      "Hackage.Security.Util.Checked",
      "Hackage.Security.Util.Lens",
      "Hackage.Security.Util.Path",
      "Hackage.Security.Util.Pretty",
      "Hackage.Security.Util.Some",
      "Language.Haskell.Extension",
      "Network.Browser",
      "Network.HTTP",
      "Network.HTTP.Proxy",
      "Network.TCP",
      "Network.URI",
      "Numeric",
      "P",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix.Files",
      "System.Posix.Internals",
      "System.Posix.Types",
      "System.Process",
      "System.Random",
      "System.Time",
      "System.Win32",
      "System.Win32.File",
      "System.Win32.Types",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.Options",
      "Test.Tasty.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Text.PrettyPrint",
      "Text.PrettyPrint.HughesPJ",
      "Text.Read",
      "Text.Regex.Posix",
      "UnitTests.Distribution.Client.ArbitraryInstances",
      "UnitTests.Distribution.Client.Compat.Time",
      "UnitTests.Distribution.Client.Dependency.Modular.DSL",
      "UnitTests.Distribution.Client.Dependency.Modular.PSQ",
      "UnitTests.Distribution.Client.Dependency.Modular.Solver",
      "UnitTests.Distribution.Client.FileMonitor",
      "UnitTests.Distribution.Client.Glob",
      "UnitTests.Distribution.Client.GZipUtils",
      "UnitTests.Distribution.Client.ProjectConfig",
      "UnitTests.Distribution.Client.Sandbox",
      "UnitTests.Distribution.Client.Sandbox.Timestamp",
      "UnitTests.Distribution.Client.Tar",
      "UnitTests.Distribution.Client.Targets",
      "UnitTests.Distribution.Client.UserConfig",
      "UnitTests.Options"
    ],
    "modules": [],
    "name": "cabal-install",
    "version": "1.24.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "base-prelude": [
        "BasePrelude"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "BasePrelude",
      "Data.Text",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "NeatInterpolation",
      "NeatInterpolation.Parsing",
      "NeatInterpolation.String",
      "Test.Framework",
      "Text.Parsec"
    ],
    "modules": [
      "NeatInterpolation"
    ],
    "name": "neat-interpolation",
    "version": "0.3.2.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Array",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Sequence",
      "Data.Version",
      "Foreign",
      "Foreign.C.String",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "Text.Regex.Base",
      "Text.Regex.Base.Impl",
      "Text.Regex.Base.RegexLike",
      "Text.Regex.PCRE.ByteString",
      "Text.Regex.PCRE.ByteString.Lazy",
      "Text.Regex.PCRE.Sequence",
      "Text.Regex.PCRE.String",
      "Text.Regex.PCRE.Wrap"
    ],
    "modules": [
      "Text.Regex.PCRE",
      "Text.Regex.PCRE.Wrap",
      "Text.Regex.PCRE.String",
      "Text.Regex.PCRE.Sequence",
      "Text.Regex.PCRE.ByteString",
      "Text.Regex.PCRE.ByteString.Lazy"
    ],
    "name": "regex-pcre-builtin",
    "version": "0.94.4.8.8.35"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.List",
        "Data.Ord",
        "Data.Word",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary"
      ],
      "containers": [
        "Data.Map"
      ],
      "matrices": [
        "Data.Matrix.Generic",
        "Data.Matrix.Generic.Mutable",
        "Data.Matrix.Unboxed",
        "Data.Matrix.Unboxed.Mutable"
      ],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "parallel": [
        "Control.Parallel.Strategies"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "AI.Clustering.Hierarchical",
      "AI.Clustering.Hierarchical.Internal",
      "AI.Clustering.Hierarchical.Types",
      "AI.Clustering.KMeans",
      "AI.Clustering.KMeans.Internal",
      "AI.Clustering.KMeans.Types",
      "Bench.Hierarchical",
      "Bench.KMeans",
      "Bench.Utils",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Parallel.Strategies",
      "Criterion.Main",
      "Data.Binary",
      "Data.Bits",
      "Data.Clustering.Hierarchical",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Matrix.Generic",
      "Data.Matrix.Generic.Mutable",
      "Data.Matrix.Unboxed",
      "Data.Matrix.Unboxed.Mutable",
      "Data.Ord",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Data.Word",
      "RlangQQ",
      "System.IO.Unsafe",
      "System.Random.MWC",
      "Test.Hierarchical",
      "Test.KMeans",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Test.Utils",
      "Text.Printf"
    ],
    "modules": [
      "AI.Clustering.Hierarchical",
      "AI.Clustering.Hierarchical.Internal",
      "AI.Clustering.Hierarchical.Types",
      "AI.Clustering.KMeans",
      "AI.Clustering.KMeans.Internal",
      "AI.Clustering.KMeans.Types",
      "AI.Clustering.Utils"
    ],
    "name": "clustering",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Time",
      "System.Locale"
    ],
    "modules": [
      "Data.Time.Format.Human"
    ],
    "name": "friendly-time",
    "version": "0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.Fail",
        "Control.Monad.IO.Class",
        "Data.Bifunctor",
        "Data.Functor.Identity",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Semigroup",
        "Data.Void"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Short"
      ],
      "containers": [
        "Data.IntMap.Strict",
        "Data.IntSet",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "contravariant": [
        "Data.Functor.Contravariant",
        "Data.Functor.Contravariant.Divisible"
      ],
      "contravariant-extras": [
        "Contravariant.Extras"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "dlist": [
        "Data.DList"
      ],
      "either": [
        "Control.Monad.Trans.Either",
        "Data.Either.Combinators",
        "Data.Either.Validation"
      ],
      "fail": [],
      "hashable": [
        "Data.Hashable"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "profunctors": [
        "Data.Profunctor",
        "Data.Profunctor.Unsafe"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "semigroupoids": [
        "Data.Bifunctor.Apply",
        "Data.Functor.Alt",
        "Data.Functor.Apply",
        "Data.Functor.Bind",
        "Data.Functor.Extend",
        "Data.Functor.Plus",
        "Data.Semigroup.Bifoldable",
        "Data.Semigroup.Bitraversable",
        "Data.Semigroup.Foldable",
        "Data.Semigroupoid",
        "Data.Semigroup.Traversable"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "uuid": [
        "Data.UUID"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ],
      "void": [
        "Data.Void.Unsafe"
      ]
    },
    "imports": [
      "BasePrelude",
      "Contravariant.Extras",
      "Control.DeepSeq",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fail",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Either",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.Bifunctor",
      "Data.Bifunctor.Apply",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Short",
      "Data.DList",
      "Data.Either.Combinators",
      "Data.Either.Validation",
      "Data.Functor.Alt",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Divisible",
      "Data.Functor.Extend",
      "Data.Functor.Identity",
      "Data.Functor.Plus",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IntMap.Strict",
      "Data.IntSet",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map.Strict",
      "Data.Profunctor",
      "Data.Profunctor.Unsafe",
      "Data.Scientific",
      "Data.Semigroup",
      "Data.Semigroup.Bifoldable",
      "Data.Semigroup.Bitraversable",
      "Data.Semigroup.Foldable",
      "Data.Semigroupoid",
      "Data.Semigroup.Traversable",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Time",
      "Data.UUID",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Void",
      "Data.Void.Unsafe",
      "Rebase.Contravariant.Extras",
      "Rebase.Control.DeepSeq",
      "Rebase.Control.Monad.Cont.Class",
      "Rebase.Control.Monad.Error.Class",
      "Rebase.Control.Monad.Fail",
      "Rebase.Control.Monad.IO.Class",
      "Rebase.Control.Monad.Reader.Class",
      "Rebase.Control.Monad.State.Class",
      "Rebase.Control.Monad.Trans.Class",
      "Rebase.Control.Monad.Trans.Cont",
      "Rebase.Control.Monad.Trans.Either",
      "Rebase.Control.Monad.Trans.Except",
      "Rebase.Control.Monad.Trans.Maybe",
      "Rebase.Control.Monad.Trans.Reader",
      "Rebase.Control.Monad.Trans.State.Strict",
      "Rebase.Control.Monad.Trans.Writer.Strict",
      "Rebase.Control.Monad.Writer.Class",
      "Rebase.Data.Bifunctor",
      "Rebase.Data.Bifunctor.Apply",
      "Rebase.Data.ByteString",
      "Rebase.Data.DList",
      "Rebase.Data.Either.Combinators",
      "Rebase.Data.Either.Validation",
      "Rebase.Data.Functor.Alt",
      "Rebase.Data.Functor.Apply",
      "Rebase.Data.Functor.Bind",
      "Rebase.Data.Functor.Contravariant",
      "Rebase.Data.Functor.Contravariant.Divisible",
      "Rebase.Data.Functor.Extend",
      "Rebase.Data.Functor.Identity",
      "Rebase.Data.Functor.Plus",
      "Rebase.Data.Hashable",
      "Rebase.Data.HashMap.Strict",
      "Rebase.Data.HashSet",
      "Rebase.Data.IntMap.Strict",
      "Rebase.Data.IntSet",
      "Rebase.Data.List",
      "Rebase.Data.List1",
      "Rebase.Data.List.NonEmpty",
      "Rebase.Data.Map.Strict",
      "Rebase.Data.Profunctor.Unsafe",
      "Rebase.Data.Scientific",
      "Rebase.Data.Semigroup",
      "Rebase.Data.Semigroup.Bifoldable",
      "Rebase.Data.Semigroup.Bitraversable",
      "Rebase.Data.Semigroup.Foldable",
      "Rebase.Data.Semigroupoid",
      "Rebase.Data.Semigroup.Traversable",
      "Rebase.Data.Sequence",
      "Rebase.Data.Set",
      "Rebase.Data.Text",
      "Rebase.Data.Time",
      "Rebase.Data.UUID",
      "Rebase.Data.Vector",
      "Rebase.Data.Void",
      "Rebase.Data.Void.Unsafe"
    ],
    "modules": [
      "Rebase.Prelude",
      "Rebase.Data.List1",
      "Rebase.Data.Functor.Identity",
      "Rebase.Data.Bifunctor",
      "Rebase.Data.List",
      "Rebase.Data.Hashable",
      "Rebase.Data.IntMap.Strict",
      "Rebase.Data.IntSet",
      "Rebase.Data.Map.Strict",
      "Rebase.Data.Sequence",
      "Rebase.Data.Set",
      "Rebase.Data.HashMap.Strict",
      "Rebase.Data.HashSet",
      "Rebase.Data.Vector",
      "Rebase.Data.Vector.Mutable",
      "Rebase.Data.ByteString",
      "Rebase.Data.ByteString.Char8",
      "Rebase.Data.ByteString.Lazy",
      "Rebase.Data.ByteString.Lazy.Char8",
      "Rebase.Data.ByteString.Short",
      "Rebase.Data.Text",
      "Rebase.Data.Text.Encoding.Error",
      "Rebase.Data.Text.Lazy",
      "Rebase.Data.Text.Lazy.Builder",
      "Rebase.Data.Time",
      "Rebase.Data.Scientific",
      "Rebase.Data.UUID",
      "Rebase.Data.DList",
      "Rebase.Data.Void",
      "Rebase.Data.Void.Unsafe",
      "Rebase.Data.Profunctor",
      "Rebase.Data.Profunctor.Unsafe",
      "Rebase.Data.Functor.Contravariant",
      "Rebase.Data.Functor.Contravariant.Divisible",
      "Rebase.Contravariant.Extras",
      "Rebase.Data.Semigroup",
      "Rebase.Data.List.NonEmpty",
      "Rebase.Data.Bifunctor.Apply",
      "Rebase.Data.Functor.Alt",
      "Rebase.Data.Functor.Apply",
      "Rebase.Data.Functor.Bind",
      "Rebase.Data.Functor.Extend",
      "Rebase.Data.Functor.Plus",
      "Rebase.Data.Semigroup.Bifoldable",
      "Rebase.Data.Semigroup.Bitraversable",
      "Rebase.Data.Semigroup.Foldable",
      "Rebase.Data.Semigroup.Traversable",
      "Rebase.Data.Semigroupoid",
      "Rebase.Control.DeepSeq",
      "Rebase.Control.Monad.IO.Class",
      "Rebase.Control.Monad.Trans.Class",
      "Rebase.Control.Monad.Trans.Cont",
      "Rebase.Control.Monad.Trans.Except",
      "Rebase.Control.Monad.Trans.Maybe",
      "Rebase.Control.Monad.Trans.Reader",
      "Rebase.Control.Monad.Trans.State.Lazy",
      "Rebase.Control.Monad.Trans.State.Strict",
      "Rebase.Control.Monad.Trans.Writer.Lazy",
      "Rebase.Control.Monad.Trans.Writer.Strict",
      "Rebase.Control.Monad.Cont.Class",
      "Rebase.Control.Monad.Error.Class",
      "Rebase.Control.Monad.Reader.Class",
      "Rebase.Control.Monad.State.Class",
      "Rebase.Control.Monad.Writer.Class",
      "Rebase.Control.Monad.Trans.Either",
      "Rebase.Data.Either.Combinators",
      "Rebase.Data.Either.Validation",
      "Rebase.Control.Monad.Fail"
    ],
    "name": "rebase",
    "version": "1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Data.Foldable",
        "Data.List.NonEmpty"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "conduit": [
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "cryptonite": [],
      "deepseq": [],
      "exceptions": [],
      "hashable": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header"
      ],
      "lens": [],
      "memory": [
        "Data.ByteArray.Encoding"
      ],
      "mtl": [],
      "resourcet": [],
      "scientific": [
        "Data.Text.Lazy.Builder.Scientific"
      ],
      "semigroups": [],
      "tagged": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.Int",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "xml-conduit": [
        "Text.XML.Stream.Render"
      ],
      "xml-types": []
    },
    "imports": [
      "Data.Aeson.Types",
      "Data.Attoparsec.Text",
      "Data.ByteArray.Encoding",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.List.NonEmpty",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Text.Lazy.Builder.Scientific",
      "Data.Text.Lazy.Encoding",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Test.AWS.Data.Base64",
      "Test.AWS.Data.List",
      "Test.AWS.Data.Maybe",
      "Test.AWS.Data.Numeric",
      "Test.AWS.Data.Path",
      "Test.AWS.Data.Time",
      "Test.AWS.Error",
      "Test.AWS.Sign.V4",
      "Test.QuickCheck.Unicode",
      "Text.XML.Stream.Render"
    ],
    "modules": [
      "Network.AWS.Compat.Locale",
      "Network.AWS.Compat.Time",
      "Network.AWS.Data.Base64",
      "Network.AWS.Data.Body",
      "Network.AWS.Data.ByteString",
      "Network.AWS.Data.Crypto",
      "Network.AWS.Data.Headers",
      "Network.AWS.Data.JSON",
      "Network.AWS.Data.List1",
      "Network.AWS.Data.Log",
      "Network.AWS.Data.Map",
      "Network.AWS.Data.Numeric",
      "Network.AWS.Data.Path",
      "Network.AWS.Data.Query",
      "Network.AWS.Data.Sensitive",
      "Network.AWS.Data.Text",
      "Network.AWS.Data.Time",
      "Network.AWS.Data.XML",
      "Network.AWS.Endpoint",
      "Network.AWS.Error",
      "Network.AWS.Lens",
      "Network.AWS.Pager",
      "Network.AWS.Prelude",
      "Network.AWS.Request",
      "Network.AWS.Response",
      "Network.AWS.Sign.V2",
      "Network.AWS.Sign.V4",
      "Network.AWS.Types",
      "Network.AWS.Waiter"
    ],
    "name": "amazonka-core",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "data-default": [],
      "file-embed": [],
      "pcre-light": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "yaml": []
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.Text",
      "Data.Text.Encoding"
    ],
    "modules": [
      "Web.UAParser"
    ],
    "name": "ua-parser",
    "version": "0.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Data",
        "Data.List",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Storable",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "network": [
        "Network",
        "Network.BSD",
        "Network.Socket",
        "Network.Socket.ByteString"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Data",
      "Data.List",
      "Data.Serialize",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Storable",
      "Network",
      "Network.BSD",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socks5",
      "Network.Socks5.Command",
      "Network.Socks5.Conf",
      "Network.Socks5.Lowlevel",
      "Network.Socks5.Parse",
      "Network.Socks5.Types",
      "Network.Socks5.Wire",
      "Numeric",
      "Prelude",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Network.Socks5",
      "Network.Socks5.Lowlevel",
      "Network.Socks5.Types"
    ],
    "name": "socks",
    "version": "0.5.5"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Discovery",
      "Test.AWS.Discovery",
      "Test.AWS.Discovery.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Discovery",
      "Network.AWS.Discovery.CreateTags",
      "Network.AWS.Discovery.DeleteTags",
      "Network.AWS.Discovery.DescribeAgents",
      "Network.AWS.Discovery.DescribeConfigurations",
      "Network.AWS.Discovery.DescribeExportConfigurations",
      "Network.AWS.Discovery.DescribeTags",
      "Network.AWS.Discovery.ExportConfigurations",
      "Network.AWS.Discovery.ListConfigurations",
      "Network.AWS.Discovery.StartDataCollectionByAgentIds",
      "Network.AWS.Discovery.StopDataCollectionByAgentIds",
      "Network.AWS.Discovery.Types",
      "Network.AWS.Discovery.Waiters"
    ],
    "name": "amazonka-discovery",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Word",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "ghc-prim": [
        "GHC.Types"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Prim",
      "GHC.Types",
      "GHC.Word",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.ByteString.Base16",
      "Data.ByteString.Base16.Lazy"
    ],
    "name": "base16-bytestring",
    "version": "0.1.1.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Typeable",
        "Foreign.C",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "zlib": [
        "Codec.Compression.GZip",
        "Codec.Compression.Zlib",
        "Codec.Compression.Zlib.Raw"
      ]
    },
    "imports": [
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib",
      "Codec.Compression.Zlib.Raw",
      "Codec.Zlib",
      "Codec.Zlib.Lowlevel",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Typeable",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck"
    ],
    "modules": [
      "Codec.Zlib",
      "Codec.Zlib.Lowlevel"
    ],
    "name": "zlib-bindings",
    "version": "0.1.1.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Template",
      "Data.Traversable",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Text.Template"
    ],
    "name": "tinytemplate",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Types"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Text",
      "Options.Applicative",
      "Options.Applicative.Text",
      "Options.Applicative.Types"
    ],
    "modules": [
      "Options.Applicative.Text"
    ],
    "name": "optparse-text",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Tuple"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "lens-family-core": [
        "Lens.Family",
        "Lens.Family.State.Lazy",
        "Lens.Family.State.Strict",
        "Lens.Family.Stock",
        "Lens.Family.Unchecked"
      ],
      "mtl": [
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict"
      ],
      "transformers": [
        "Control.Monad.Trans.Writer.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Data.Foldable",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Map",
      "Data.Monoid",
      "Data.Set",
      "Data.Tuple",
      "Lens.Family",
      "Lens.Family2",
      "Lens.Family2.State.Lazy",
      "Lens.Family2.Unchecked",
      "Lens.Family.State.Lazy",
      "Lens.Family.State.Strict",
      "Lens.Family.Stock",
      "Lens.Family.Unchecked"
    ],
    "modules": [
      "Lens.Family2.Unchecked",
      "Lens.Family2",
      "Lens.Family2.Stock",
      "Lens.Family2.State.Lazy",
      "Lens.Family2.State.Strict",
      "Lens.Family2.State"
    ],
    "name": "lens-family",
    "version": "1.2.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "Prelude"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [],
      "cookie": [
        "Web.Cookie"
      ],
      "directory": [
        "System.Directory"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header",
        "Network.HTTP.Types.Method",
        "Network.HTTP.Types.Status",
        "Network.HTTP.Types.URI"
      ],
      "hvect": [
        "Data.HVect"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State"
      ],
      "old-locale": [],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "reroute": [
        "Web.Routing.Combinators",
        "Web.Routing.Router",
        "Web.Routing.SafeRouting"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vault": [
        "Data.Vault.Lazy"
      ],
      "wai": [
        "Network.Wai",
        "Network.Wai.Internal"
      ],
      "wai-extra": [
        "Network.Wai.Parse"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State",
      "Control.Monad.Trans.Resource",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HVect",
      "Data.IORef",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Typeable",
      "Data.Vault.Lazy",
      "Data.Word",
      "GHC.Generics",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.Method",
      "Network.HTTP.Types.Status",
      "Network.HTTP.Types.URI",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Internal",
      "Network.Wai.Parse",
      "Prelude",
      "System.Directory",
      "Test.Hspec",
      "Test.Hspec.Wai",
      "Web.Cookie",
      "Web.PathPieces",
      "Web.Routing.Combinators",
      "Web.Routing.Router",
      "Web.Routing.SafeRouting",
      "Web.Spock.Action",
      "Web.Spock.Core",
      "Web.Spock.FrameworkSpecHelper",
      "Web.Spock.Internal.Config",
      "Web.Spock.Internal.Cookies",
      "Web.Spock.Internal.CoreAction",
      "Web.Spock.Internal.Util",
      "Web.Spock.Internal.Wire"
    ],
    "modules": [
      "Web.Spock.Core",
      "Web.Spock.Action",
      "Web.Spock.Internal.Cookies",
      "Web.Spock.Internal.Util"
    ],
    "name": "Spock-core",
    "version": "0.11.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString.Builder"
      ],
      "data-default": [
        "Data.Default"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "prometheus-client": [
        "Prometheus"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Data.ByteString.Builder",
      "Data.Default",
      "Data.Text",
      "Data.Time.Clock",
      "Network.HTTP.Types",
      "Network.Wai",
      "Prometheus",
      "Test.DocTest"
    ],
    "modules": [
      "Network.Wai.Middleware.Prometheus"
    ],
    "name": "wai-middleware-prometheus",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "regex-posix": [
        "Text.Regex.Posix"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Data.List",
      "Language.Haskell.TH",
      "Text.Regex.Posix"
    ],
    "modules": [
      "Language.Haskell.Extract"
    ],
    "name": "language-haskell-extract",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "mtl": [
        "Control.Monad.Error"
      ],
      "network": [
        "Network.BSD",
        "Network.Socket"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Data.Bits",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Time",
      "Data.Time.Format",
      "Data.Word",
      "Network.BSD",
      "Network.Socket",
      "Prelude",
      "System.IO",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Log",
      "System.Log.Formatter",
      "System.Log.Handler",
      "System.Log.Handler.Simple",
      "System.Posix.Process",
      "Test.HUnit",
      "Tests"
    ],
    "modules": [
      "System.Log",
      "System.Log.Handler",
      "System.Log.Formatter",
      "System.Log.Handler.Simple",
      "System.Log.Handler.Syslog",
      "System.Log.Handler.Growl",
      "System.Log.Handler.Log4jXML",
      "System.Log.Logger"
    ],
    "name": "hslogger",
    "version": "1.2.10"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-glib": [],
      "gi-gobject": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-gio",
    "version": "2.0.3"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "bytestring-conversion": [
        "Data.ByteString.Conversion"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Status"
      ],
      "singletons": [
        "Data.Singletons",
        "Data.Singletons.TypeLits"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "vault": [
        "Data.Vault.Lazy"
      ],
      "vector": [
        "Data.Vector"
      ],
      "wai": [
        "Network.Wai",
        "Network.Wai.Internal"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Conversion",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Predicate",
      "Data.Predicate.Product",
      "Data.Predicate.Result",
      "Data.Singletons",
      "Data.Singletons.TypeLits",
      "Data.String",
      "Data.Vault.Lazy",
      "Data.Vector",
      "Data.Word",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Status",
      "Network.Wai",
      "Network.Wai.Internal",
      "Network.Wai.Predicate",
      "Network.Wai.Predicate.Accept",
      "Network.Wai.Predicate.Content",
      "Network.Wai.Predicate.Error",
      "Network.Wai.Predicate.MediaType",
      "Network.Wai.Predicate.Parser.MediaType",
      "Network.Wai.Predicate.Request",
      "Network.Wai.Predicate.Utility",
      "Prelude",
      "Tests.Data.Predicate",
      "Tests.Wai.Predicate",
      "Tests.Wai.Util",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Web.Cookie"
    ],
    "modules": [
      "Data.Predicate",
      "Network.Wai.Predicate",
      "Network.Wai.Predicate.Error",
      "Network.Wai.Predicate.MediaType",
      "Network.Wai.Predicate.Request",
      "Network.Wai.Predicate.Utility"
    ],
    "name": "wai-predicates",
    "version": "0.9.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Control.Monad.ST.Lazy.Unsafe",
        "Control.Monad.ST.Unsafe",
        "Data.Bits",
        "Data.Bool",
        "Data.Char",
        "Data.Complex",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Data.Ratio",
        "Data.STRef",
        "Data.String",
        "Data.Traversable",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Error",
        "Foreign.Marshal.Pool",
        "Foreign.Marshal.Unsafe",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Float",
        "GHC.IO",
        "GHC.IO.Exception",
        "GHC.Real",
        "Numeric",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec",
        "Text.Read",
        "Text.Read.Lex"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Compat",
      "Control.Monad.ST",
      "Control.Monad.ST.Lazy",
      "Control.Monad.ST.Lazy.Unsafe",
      "Control.Monad.ST.Unsafe",
      "Data.Bits",
      "Data.Bits.Compat",
      "Data.Bool",
      "Data.Char",
      "Data.Complex",
      "Data.Either",
      "Data.Foldable",
      "Data.Foldable.Compat",
      "Data.Function",
      "Data.Functor",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ratio",
      "Data.STRef",
      "Data.String",
      "Data.Traversable",
      "Data.Version",
      "Data.Word",
      "Data.Word.Compat",
      "Debug.Trace",
      "Foreign",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Alloc.Compat",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Array.Compat",
      "Foreign.Marshal.Compat",
      "Foreign.Marshal.Error",
      "Foreign.Marshal.Pool",
      "Foreign.Marshal.Unsafe",
      "Foreign.Marshal.Utils",
      "Foreign.Marshal.Utils.Compat",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Float",
      "GHC.IO",
      "GHC.IO.Exception",
      "GHC.Real",
      "Numeric",
      "Numeric.Compat",
      "Prelude",
      "Prelude.Compat",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Posix.Env",
      "Test.Hspec",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.Read",
      "Text.Read.Lex"
    ],
    "modules": [
      "Control.Concurrent.Compat",
      "Control.Concurrent.MVar.Compat",
      "Control.Monad.Compat",
      "Control.Monad.ST.Lazy.Unsafe.Compat",
      "Control.Monad.ST.Unsafe.Compat",
      "Data.Bits.Compat",
      "Data.Bool.Compat",
      "Data.Complex.Compat",
      "Data.Either.Compat",
      "Data.Foldable.Compat",
      "Data.Function.Compat",
      "Data.Functor.Compat",
      "Data.Functor.Const.Compat",
      "Data.IORef.Compat",
      "Data.List.Compat",
      "Data.Monoid.Compat",
      "Data.Ratio.Compat",
      "Data.STRef.Compat",
      "Data.String.Compat",
      "Data.Version.Compat",
      "Data.Word.Compat",
      "Debug.Trace.Compat",
      "Foreign.Compat",
      "Foreign.ForeignPtr.Safe.Compat",
      "Foreign.ForeignPtr.Unsafe.Compat",
      "Foreign.Marshal.Alloc.Compat",
      "Foreign.Marshal.Array.Compat",
      "Foreign.Marshal.Compat",
      "Foreign.Marshal.Safe.Compat",
      "Foreign.Marshal.Unsafe.Compat",
      "Foreign.Marshal.Utils.Compat",
      "Numeric.Compat",
      "Prelude.Compat",
      "System.Environment.Compat",
      "System.Exit.Compat",
      "System.IO.Unsafe.Compat",
      "Text.Read.Compat"
    ],
    "name": "base-compat",
    "version": "0.9.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.IO.Handle",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Types",
        "Text.Printf"
      ],
      "configurator": [
        "Data.Configurator",
        "Data.Configurator.Types"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "old-locale": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [
        "System.Process",
        "System.Process.Internals"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TChan"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Format",
        "Data.Time.LocalTime"
      ],
      "transformers": [],
      "unix": [
        "System.Posix.Directory",
        "System.Posix.Files",
        "System.Posix.Process",
        "System.Posix.Signals",
        "System.Posix.User"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ]
    },
    "imports": [
      "Angel.Config",
      "Angel.ConfigSpec",
      "Angel.Data",
      "Angel.Files",
      "Angel.Job",
      "Angel.JobSpec",
      "Angel.Log",
      "Angel.LogSpec",
      "Angel.PidFile",
      "Angel.PidFileSpec",
      "Angel.Process",
      "Angel.Util",
      "Angel.UtilSpec",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TChan",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Data.Char",
      "Data.Configurator",
      "Data.Configurator.Types",
      "Data.HashMap.Lazy",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Traversable",
      "GHC.IO.Handle",
      "Options.Applicative",
      "SpecHelper",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.Posix.Directory",
      "System.Posix.Files",
      "System.Posix.Process",
      "System.Posix.Signals",
      "System.Posix.Types",
      "System.Posix.User",
      "System.Process",
      "System.Process.Internals",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Text.Printf"
    ],
    "modules": [],
    "name": "angel",
    "version": "0.6.2"
  },
  {
    "dependencies": {
      "asn1-encoding": [
        "Data.ASN1.BinaryEncoding",
        "Data.ASN1.Encoding"
      ],
      "asn1-types": [
        "Data.ASN1.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "cryptonite": [
        "Crypto.PubKey.DSA",
        "Crypto.PubKey.RSA"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [],
      "pem": [
        "Data.PEM"
      ],
      "x509": [
        "Data.X509"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.RSA",
      "Data.ASN1.BinaryEncoding",
      "Data.ASN1.Encoding",
      "Data.ASN1.Types",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Either",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.PEM",
      "Data.X509",
      "System.Directory",
      "System.FilePath"
    ],
    "modules": [
      "Data.X509.CertificateStore",
      "Data.X509.File",
      "Data.X509.Memory"
    ],
    "name": "x509-store",
    "version": "1.6.2"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.WithLocation"
    ],
    "name": "with-location",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "System.IO"
      ],
      "chunked-data": [
        "Data.IOData"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Monad.Base",
      "Data.IOData",
      "System.IO"
    ],
    "modules": [
      "System.IO.Encoding"
    ],
    "name": "encoding-io",
    "version": "0.0.1"
  },
  {
    "dependencies": {
      "asn1-types": [
        "Data.ASN1.BitArray",
        "Data.ASN1.Types",
        "Data.ASN1.Types.Lowlevel"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Foreign"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "hourglass": [
        "Data.Hourglass"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Data.ASN1.BinaryEncoding",
      "Data.ASN1.BinaryEncoding.Parse",
      "Data.ASN1.BinaryEncoding.Writer",
      "Data.ASN1.BitArray",
      "Data.ASN1.Encoding",
      "Data.ASN1.Error",
      "Data.ASN1.Get",
      "Data.ASN1.Internal",
      "Data.ASN1.Prim",
      "Data.ASN1.Serialize",
      "Data.ASN1.Stream",
      "Data.ASN1.Types",
      "Data.ASN1.Types.Lowlevel",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Hourglass",
      "Data.List",
      "Data.Maybe",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.ASN1.Error",
      "Data.ASN1.BinaryEncoding",
      "Data.ASN1.BinaryEncoding.Raw",
      "Data.ASN1.Encoding",
      "Data.ASN1.Stream",
      "Data.ASN1.Object"
    ],
    "name": "asn1-encoding",
    "version": "0.9.4"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Support",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.Support",
      "Test.AWS.Support.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Support",
      "Network.AWS.Support.AddAttachmentsToSet",
      "Network.AWS.Support.AddCommunicationToCase",
      "Network.AWS.Support.CreateCase",
      "Network.AWS.Support.DescribeAttachment",
      "Network.AWS.Support.DescribeCases",
      "Network.AWS.Support.DescribeCommunications",
      "Network.AWS.Support.DescribeServices",
      "Network.AWS.Support.DescribeSeverityLevels",
      "Network.AWS.Support.DescribeTrustedAdvisorCheckRefreshStatuses",
      "Network.AWS.Support.DescribeTrustedAdvisorCheckResult",
      "Network.AWS.Support.DescribeTrustedAdvisorCheckSummaries",
      "Network.AWS.Support.DescribeTrustedAdvisorChecks",
      "Network.AWS.Support.RefreshTrustedAdvisorCheck",
      "Network.AWS.Support.ResolveCase",
      "Network.AWS.Support.Types",
      "Network.AWS.Support.Waiters"
    ],
    "name": "amazonka-support",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad.IO.Class",
        "Data.Monoid"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Identity",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.Trans"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad.Cont.Class",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Monad.StateStack"
    ],
    "name": "statestack",
    "version": "0.2.0.5"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "text": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.String.Conv"
    ],
    "name": "string-conv",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ApplicationAutoScaling",
      "Test.AWS.ApplicationAutoScaling",
      "Test.AWS.ApplicationAutoScaling.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ApplicationAutoScaling",
      "Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy",
      "Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget",
      "Network.AWS.ApplicationAutoScaling.DescribeScalableTargets",
      "Network.AWS.ApplicationAutoScaling.DescribeScalingActivities",
      "Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies",
      "Network.AWS.ApplicationAutoScaling.PutScalingPolicy",
      "Network.AWS.ApplicationAutoScaling.RegisterScalableTarget",
      "Network.AWS.ApplicationAutoScaling.Types",
      "Network.AWS.ApplicationAutoScaling.Waiters"
    ],
    "name": "amazonka-application-autoscaling",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bool",
        "Data.Char",
        "Data.Data",
        "Data.Eq",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Data.Semigroup",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Prelude",
        "Text.Read",
        "Text.Show"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Bool",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.CaseInsensitive.Internal",
      "Data.Char",
      "Data.Data",
      "Data.Eq",
      "Data.Function",
      "Data.Hashable",
      "Data.List",
      "Data.Monoid",
      "Data.Ord",
      "Data.Semigroup",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Data.Word",
      "NoClass",
      "Prelude",
      "Text.Read",
      "Text.Show"
    ],
    "modules": [
      "Data.CaseInsensitive",
      "Data.CaseInsensitive.Unsafe"
    ],
    "name": "case-insensitive",
    "version": "1.2.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Data.Function",
        "Data.IORef",
        "Data.Maybe",
        "System.Environment",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "cipher-aes": [
        "Crypto.Cipher.AES"
      ],
      "clientsession": [],
      "cprng-aes": [
        "Crypto.Random.AESCtr"
      ],
      "crypto-api": [
        "Crypto.Classes",
        "Crypto.Types"
      ],
      "crypto-random": [],
      "directory": [
        "System.Directory"
      ],
      "entropy": [
        "System.Entropy"
      ],
      "setenv": [
        "System.SetEnv"
      ],
      "skein": [
        "Crypto.Skein"
      ],
      "tagged": [
        "Data.Tagged"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State.Strict",
      "Criterion.Main",
      "Crypto.Cipher.AES",
      "Crypto.Classes",
      "Crypto.Random.AESCtr",
      "Crypto.Skein",
      "Crypto.Types",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.Function",
      "Data.IORef",
      "Data.Maybe",
      "Data.Serialize",
      "Data.Set",
      "Data.Tagged",
      "System.Directory",
      "System.Entropy",
      "System.Environment",
      "System.IO.Unsafe",
      "System.LookupEnv",
      "System.SetEnv",
      "Test.Hspec",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Printf",
      "Web.ClientSession"
    ],
    "modules": [
      "Web.ClientSession"
    ],
    "name": "clientsession",
    "version": "0.9.1.2"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Language.Haskell.TH",
      "Language.Haskell.TH.Compat.Data.Current",
      "Language.Haskell.TH.Compat.Data.V210"
    ],
    "modules": [
      "Language.Haskell.TH.Compat.Data"
    ],
    "name": "th-data-compat",
    "version": "0.0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "mime-types": [
        "Network.Mime"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "rest-core": [
        "Rest.Api",
        "Rest.Driver.RestM",
        "Rest.Driver.Types",
        "Rest.Run"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad.Trans",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.HashMap.Strict",
      "Data.Map",
      "Data.Text",
      "Network.HTTP.Types.Status",
      "Network.Mime",
      "Network.Wai",
      "Prelude.Compat",
      "Rest.Api",
      "Rest.Driver.RestM",
      "Rest.Driver.Types",
      "Rest.Run"
    ],
    "modules": [
      "Rest.Driver.Wai"
    ],
    "name": "rest-wai",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Int",
        "Data.List.NonEmpty"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Trans"
      ],
      "pcre-heavy": [
        "Text.Regex.PCRE.Heavy"
      ],
      "semigroups": [],
      "string-conversions": [
        "Data.String.Conversions"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Either",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Int",
      "Data.List.NonEmpty",
      "Data.String.Conversions",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Validator",
      "Test.Hspec",
      "Test.QuickCheck",
      "Text.Regex.PCRE.Heavy"
    ],
    "modules": [
      "Data.Validator"
    ],
    "name": "validate-input",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.Environment",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Zlib"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "network": [
        "Network"
      ],
      "process": [
        "System.Process"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "shelly": [
        "Shelly"
      ],
      "system-fileio": [
        "Filesystem"
      ],
      "system-filepath": [
        "Filesystem.Path.CurrentOS"
      ],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Entry"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "transformers": []
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Conduit.Zlib",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Filesystem",
      "Filesystem.Path.CurrentOS",
      "Network",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Prelude",
      "Shelly",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Process"
    ],
    "modules": [],
    "name": "cabal-src",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "GHC.IO",
        "Prelude"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "exceptions": [
        "Control.Monad.Catch",
        "Control.Monad.Catch.Pure"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Catch.Pure",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Morph",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Resource.Internal",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.Acquire.Internal",
      "Data.Functor.Identity",
      "Data.IntMap",
      "Data.IORef",
      "Data.Monoid",
      "Data.Typeable",
      "Data.Word",
      "GHC.IO",
      "Prelude"
    ],
    "modules": [
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Resource.Internal",
      "Data.Acquire",
      "Data.Acquire.Internal"
    ],
    "name": "resourcet",
    "version": "1.1.7.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Version",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.ParserCombinators.ReadP"
      ],
      "debian-build": [],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ],
      "split": [
        "Data.List.Split"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Data.Char",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Version",
      "Debian.Package.Build",
      "Debian.Package.Build.Cabal",
      "Debian.Package.Build.Command",
      "Debian.Package.Build.Monad",
      "Debian.Package.Build.Sequence",
      "Debian.Package.Data",
      "Debian.Package.Data.Hackage",
      "Debian.Package.Data.Packages",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "Text.ParserCombinators.ReadP"
    ],
    "modules": [
      "Debian.Package.Data.Hackage",
      "Debian.Package.Data.Packages",
      "Debian.Package.Data",
      "Debian.Package.Build.Monad",
      "Debian.Package.Build.Cabal",
      "Debian.Package.Build.Command",
      "Debian.Package.Build.Sequence",
      "Debian.Package.Build"
    ],
    "name": "debian-build",
    "version": "0.10.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Data.Int",
        "Data.Typeable",
        "Foreign.C.Error",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.IO.Exception",
        "GHC.IO.FD",
        "GHC.IO.Handle.Internals",
        "GHC.IO.Handle.Types",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Data.ByteString.Char8",
      "Data.Int",
      "Data.Typeable",
      "Foreign.C.Error",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Handle",
      "GHC.IOBase",
      "GHC.IO.Exception",
      "GHC.IO.FD",
      "GHC.IO.Handle.Internals",
      "GHC.IO.Handle.Types",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.SendFile",
      "Network.Socket.SendFile.Darwin",
      "Network.Socket.SendFile.FreeBSD",
      "Network.Socket.SendFile.Internal",
      "Network.Socket.SendFile.Iter",
      "Network.Socket.SendFile.Linux",
      "Network.Socket.SendFile.Portable",
      "Network.Socket.SendFile.Util",
      "Network.Socket.SendFile.Win32",
      "Prelude",
      "System.IO",
      "System.IO.Error",
      "System.Posix.Types"
    ],
    "modules": [
      "Network.Socket.SendFile",
      "Network.Socket.SendFile.Iter",
      "Network.Socket.SendFile.Handle",
      "Network.Socket.SendFile.Portable"
    ],
    "name": "sendfile",
    "version": "0.7.9"
  },
  {
    "dependencies": {
      "Cabal": [],
      "array": [
        "Data.Array",
        "Data.Array.Base",
        "Data.Array.IO"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.IORef",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "GHC.Exts",
        "GHC.IO",
        "GHC.Real",
        "GHC.Word",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.CPUTime",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "gtk2hs-buildtools": [],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ],
      "process": [
        "System.Cmd",
        "System.Process"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Attributes",
      "BaseVersion",
      "Binary",
      "C",
      "C2HSConfig",
      "C2HSState",
      "CAST",
      "CAttrs",
      "CBuiltin",
      "CHS",
      "CHSLexer",
      "CInfo",
      "CIO",
      "CNames",
      "Config",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "CParser",
      "CPretty",
      "CTokens",
      "CTrav",
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.IO",
      "Data.Bits",
      "Data.Char",
      "Data.FiniteMap",
      "Data.HashTable",
      "Data.HashTable.Class",
      "Data.HashTable.IO",
      "Data.Int",
      "Data.IORef",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.Word",
      "DLists",
      "Errors",
      "FastMutInt",
      "FileOps",
      "FNameOps",
      "Foreign",
      "Foreign.C",
      "GBMonad",
      "GenBind",
      "GenHeader",
      "GHC.Exts",
      "GHC.Handle",
      "GHC.IO",
      "GHC.IOBase",
      "GHC.Real",
      "GHC.Word",
      "Gtk2HsC2Hs",
      "HookGenerator",
      "Idents",
      "Lexers",
      "Map",
      "NameSpaces",
      "Numeric",
      "Paths",
      "Position",
      "Prelude",
      "State",
      "StateBase",
      "StateTrans",
      "Switches",
      "System.Cmd",
      "System.Console.GetOpt",
      "System.CPUTime",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Process",
      "System.Random",
      "Text.PrettyPrint.HughesPJ",
      "TypeGen",
      "UNames",
      "Version"
    ],
    "modules": [
      "Gtk2HsSetup",
      "TypeGen",
      "HookGenerator",
      "Gtk2HsC2Hs"
    ],
    "name": "gtk2hs-buildtools",
    "version": "0.13.2.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "attoparsec": [],
      "base": [
        "Control.Category",
        "GHC.TypeLits"
      ],
      "base-compat": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "bytestring-conversion": [],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "http-types": [
        "Network.HTTP.Types.Header"
      ],
      "mmorph": [],
      "mtl": [
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "network-uri": [],
      "string-conversions": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "vault": []
    },
    "imports": [
      "Control.Category",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "GHC.TypeLits",
      "Network.HTTP.Media",
      "Network.HTTP.Types.Header",
      "Servant.API.Alternative",
      "Servant.API.BasicAuth",
      "Servant.API.Capture",
      "Servant.API.Header",
      "Servant.API.QueryParam",
      "Servant.API.Raw",
      "Servant.API.RemoteHost",
      "Servant.API.ReqBody",
      "Servant.API.ResponseHeaders",
      "Servant.API.Sub",
      "Servant.API.Verbs",
      "Test.Hspec",
      "Web.HttpApiData"
    ],
    "modules": [
      "Servant.API",
      "Servant.API.Alternative",
      "Servant.API.BasicAuth",
      "Servant.API.Capture",
      "Servant.API.ContentTypes",
      "Servant.API.Experimental.Auth",
      "Servant.API.Header",
      "Servant.API.HttpVersion",
      "Servant.API.Internal.Test.ComprehensiveAPI",
      "Servant.API.IsSecure",
      "Servant.API.QueryParam",
      "Servant.API.Raw",
      "Servant.API.RemoteHost",
      "Servant.API.ReqBody",
      "Servant.API.ResponseHeaders",
      "Servant.API.Sub",
      "Servant.API.Vault",
      "Servant.API.Verbs",
      "Servant.API.WithNamedContext",
      "Servant.Utils.Links",
      "Servant.Utils.Enter"
    ],
    "name": "servant",
    "version": "0.8.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Typeable"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Trans"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Bugs",
      "Bugs.Bug2",
      "Bugs.Bug35",
      "Bugs.Bug6",
      "Bugs.Bug9",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.List",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Parsec",
      "Text.Parsec.Char",
      "Text.Parsec.Combinator",
      "Text.Parsec.Error",
      "Text.Parsec.Expr",
      "Text.Parsec.Language",
      "Text.Parsec.Perm",
      "Text.Parsec.Pos",
      "Text.Parsec.Prim",
      "Text.Parsec.String",
      "Text.Parsec.Token",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Char",
      "Text.ParserCombinators.Parsec.Combinator",
      "Text.ParserCombinators.Parsec.Error",
      "Text.ParserCombinators.Parsec.Pos",
      "Text.ParserCombinators.Parsec.Prim",
      "Util"
    ],
    "modules": [
      "Text.Parsec",
      "Text.Parsec.String",
      "Text.Parsec.ByteString",
      "Text.Parsec.ByteString.Lazy",
      "Text.Parsec.Text",
      "Text.Parsec.Text.Lazy",
      "Text.Parsec.Pos",
      "Text.Parsec.Error",
      "Text.Parsec.Prim",
      "Text.Parsec.Char",
      "Text.Parsec.Combinator",
      "Text.Parsec.Token",
      "Text.Parsec.Expr",
      "Text.Parsec.Language",
      "Text.Parsec.Perm",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Char",
      "Text.ParserCombinators.Parsec.Combinator",
      "Text.ParserCombinators.Parsec.Error",
      "Text.ParserCombinators.Parsec.Expr",
      "Text.ParserCombinators.Parsec.Language",
      "Text.ParserCombinators.Parsec.Perm",
      "Text.ParserCombinators.Parsec.Pos",
      "Text.ParserCombinators.Parsec.Prim",
      "Text.ParserCombinators.Parsec.Token"
    ],
    "name": "parsec",
    "version": "3.1.11"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.Int",
      "Data.Map",
      "Data.MessagePack",
      "Data.MessagePack.Spec",
      "Data.Serialize",
      "Data.Word",
      "Test.Framework.Providers.QuickCheck2",
      "Test.Framework.TH",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.MessagePack",
      "Data.MessagePack.Spec"
    ],
    "name": "messagepack",
    "version": "0.5.3"
  },
  {
    "dependencies": {
      "MonadRandom": [
        "Control.Monad.Random"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Arrow",
        "Control.Monad.IO.Class",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.Exit"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "extra": [
        "Control.Monad.Extra",
        "Data.List.Extra"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "interpolate": [
        "Data.String.Interpolate.IsString"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "random-shuffle": [
        "System.Random.Shuffle"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ],
      "transformers": [],
      "werewolf": []
    },
    "imports": [
      "Control.Arrow",
      "Control.Lens",
      "Control.Lens.Extra",
      "Control.Monad.Except",
      "Control.Monad.Extra",
      "Control.Monad.IO.Class",
      "Control.Monad.Random",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Function",
      "Data.List",
      "Data.List.Extra",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String.Humanise",
      "Data.String.Interpolate.Extra",
      "Data.String.Interpolate.IsString",
      "Data.Text",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Game.Werewolf",
      "Game.Werewolf.Command",
      "Game.Werewolf.Command.Global",
      "Game.Werewolf.Command.Hunter",
      "Game.Werewolf.Command.Necromancer",
      "Game.Werewolf.Command.Oracle",
      "Game.Werewolf.Command.Orphan",
      "Game.Werewolf.Command.Protector",
      "Game.Werewolf.Command.Scapegoat",
      "Game.Werewolf.Command.Seer",
      "Game.Werewolf.Command.Status",
      "Game.Werewolf.Command.Villager",
      "Game.Werewolf.Command.Werewolf",
      "Game.Werewolf.Command.Witch",
      "Game.Werewolf.Engine",
      "Game.Werewolf.Game",
      "Game.Werewolf.Message",
      "Game.Werewolf.Message.Command",
      "Game.Werewolf.Message.Engine",
      "Game.Werewolf.Message.Error",
      "Game.Werewolf.Player",
      "Game.Werewolf.Response",
      "Game.Werewolf.Role",
      "Game.Werewolf.Util",
      "Game.Werewolf.Variant",
      "Game.Werewolf.Variant.NoRoleKnowledge.Command",
      "Game.Werewolf.Variant.NoRoleKnowledge.Engine",
      "Game.Werewolf.Variant.NoRoleKnowledgeOrReveal.Command",
      "Game.Werewolf.Variant.NoRoleKnowledgeOrReveal.Engine",
      "Game.Werewolf.Variant.NoRoleReveal.Command",
      "Game.Werewolf.Variant.NoRoleReveal.Engine",
      "Game.Werewolf.Variant.Standard.Command",
      "Game.Werewolf.Variant.Standard.Engine",
      "Game.Werewolf.Variant.Standard.Error",
      "GHC.Generics",
      "Language.Haskell.TH.Quote",
      "Options.Applicative",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Random.Shuffle",
      "Werewolf.Command.Boot",
      "Werewolf.Command.Choose",
      "Werewolf.Command.Circle",
      "Werewolf.Command.Divine",
      "Werewolf.Command.End",
      "Werewolf.Command.Heal",
      "Werewolf.Command.Help",
      "Werewolf.Command.Interpret",
      "Werewolf.Command.Pass",
      "Werewolf.Command.Ping",
      "Werewolf.Command.Poison",
      "Werewolf.Command.Protect",
      "Werewolf.Command.Quit",
      "Werewolf.Command.Raise",
      "Werewolf.Command.See",
      "Werewolf.Command.Start",
      "Werewolf.Command.Status",
      "Werewolf.Command.Unvote",
      "Werewolf.Command.Version",
      "Werewolf.Command.Vote",
      "Werewolf.System",
      "Werewolf.Version"
    ],
    "modules": [
      "Control.Lens.Extra",
      "Data.String.Humanise",
      "Data.String.Interpolate.Extra",
      "Game.Werewolf",
      "Game.Werewolf.Game",
      "Game.Werewolf.Player",
      "Game.Werewolf.Response",
      "Game.Werewolf.Role",
      "Game.Werewolf.Variant"
    ],
    "name": "werewolf",
    "version": "1.5.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "base-unicode-symbols": [],
      "stm": [],
      "stm-chans": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.ProgressBar"
    ],
    "name": "terminal-progress-bar",
    "version": "0.0.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Functor",
        "Data.Int",
        "Data.Monoid",
        "Data.Word",
        "GHC.Base",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Criterion",
      "Criterion.Main",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Either",
      "Data.Functor",
      "Data.Int",
      "Data.Monoid",
      "Data.Serialize.Get",
      "Data.Text.Encoding",
      "Data.Text.Read",
      "Data.Word",
      "GHC.Base",
      "Prelude",
      "Redis.Atto",
      "Redis.Reply",
      "Redis.Scanner",
      "Scanner",
      "Scanner.Internal",
      "Test.Hspec"
    ],
    "modules": [
      "Scanner",
      "Scanner.Internal"
    ],
    "name": "scanner",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "system-filepath": [
        "Filesystem.Path.CurrentOS"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Filesystem.Path.CurrentOS"
    ],
    "modules": [
      "Data.Stringable"
    ],
    "name": "stringable",
    "version": "0.1.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Data",
        "Data.Either",
        "Data.Fixed",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "System.Environment"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "monad-control": [],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "persistent": [
        "Database.Persist.Sql",
        "Database.Persist.Sql.Types.Internal",
        "Database.Persist.Sql.Util"
      ],
      "postgresql-libpq": [
        "Database.PostgreSQL.LibPQ"
      ],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple",
        "Database.PostgreSQL.Simple.FromField",
        "Database.PostgreSQL.Simple.Internal",
        "Database.PostgreSQL.Simple.Ok",
        "Database.PostgreSQL.Simple.ToField",
        "Database.PostgreSQL.Simple.TypeInfo",
        "Database.PostgreSQL.Simple.TypeInfo.Static",
        "Database.PostgreSQL.Simple.Types"
      ],
      "resource-pool": [
        "Data.Pool"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource",
        "Data.Acquire"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder.Char8",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Writer",
      "Data.Acquire",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Database.Persist.Sql",
      "Database.Persist.Sql.Types.Internal",
      "Database.Persist.Sql.Util",
      "Database.PostgreSQL.LibPQ",
      "Database.PostgreSQL.Simple",
      "Database.PostgreSQL.Simple.FromField",
      "Database.PostgreSQL.Simple.Internal",
      "Database.PostgreSQL.Simple.Ok",
      "Database.PostgreSQL.Simple.ToField",
      "Database.PostgreSQL.Simple.TypeInfo",
      "Database.PostgreSQL.Simple.TypeInfo.Static",
      "Database.PostgreSQL.Simple.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Data",
      "Data.Either",
      "Data.Fixed",
      "Data.Function",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Pool",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Read",
      "Data.Time",
      "Data.Typeable",
      "System.Environment"
    ],
    "modules": [
      "Database.Persist.Postgresql"
    ],
    "name": "persistent-postgresql",
    "version": "2.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "Data.Data",
        "Data.String",
        "Data.Typeable",
        "System.IO.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Data.Data",
      "Data.Map",
      "Data.String",
      "Data.Symbol.Unsafe",
      "Data.Typeable",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.Symbol",
      "Data.Symbol.Unsafe"
    ],
    "name": "symbol",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Monoid"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "cryptohash": [
        "Crypto.Hash.SHA1"
      ],
      "directory": [
        "System.Directory"
      ],
      "expiring-cache-map": [
        "Caching.ExpiringCacheMap.HashECM"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header"
      ],
      "mime-types": [
        "Network.Mime"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Caching.ExpiringCacheMap.HashECM",
      "Control.Monad.Trans",
      "Crypto.Hash.SHA1",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.Mime",
      "Network.Wai",
      "System.Directory",
      "System.FilePath",
      "System.Locale"
    ],
    "modules": [
      "Network.Wai.Middleware.Static"
    ],
    "name": "wai-middleware-static",
    "version": "0.8.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.List",
        "Data.Word",
        "Numeric"
      ],
      "utf8-string": [
        "Codec.Binary.UTF8.String"
      ]
    },
    "imports": [
      "Codec.Binary.UTF8.String",
      "Data.Char",
      "Data.List",
      "Data.Word",
      "Numeric"
    ],
    "modules": [
      "Network.URL"
    ],
    "name": "url",
    "version": "2.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid"
      ],
      "microlens": [
        "Lens.Micro",
        "Lens.Micro.Internal"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "transformers": [
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Monoid",
      "Lens.Micro",
      "Lens.Micro.Internal",
      "Lens.Micro.Mtl.Internal"
    ],
    "modules": [
      "Lens.Micro.Mtl",
      "Lens.Micro.Mtl.Internal"
    ],
    "name": "microlens-mtl",
    "version": "0.1.10.0"
  },
  {
    "dependencies": {
      "OneTuple": [
        "Data.Tuple.OneTuple"
      ],
      "base": [
        "Control.Monad",
        "Data.List",
        "System.Environment"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.List",
      "Data.Tuple.Curry",
      "Data.Tuple.OneTuple",
      "Data.Tuple.Select",
      "Data.Tuple.Sequence",
      "Data.Tuple.Update",
      "System.Environment"
    ],
    "modules": [
      "Data.Tuple.All",
      "Data.Tuple.Curry",
      "Data.Tuple.Select",
      "Data.Tuple.Sequence",
      "Data.Tuple.Update"
    ],
    "name": "tuple",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Typeable",
        "Prelude",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "syb": [
        "Data.Generics"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Lib",
        "Language.Haskell.TH.Ppr",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "th-orphans": [
        "Language.Haskell.TH.Instances"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Char",
      "Data.Generics",
      "Data.IntMap",
      "Data.List",
      "Data.Typeable",
      "Language.Haskell.Exts.Annotated.Fixity",
      "Language.Haskell.Exts.Extension",
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.Pretty",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.Meta",
      "Language.Haskell.Meta.Parse",
      "Language.Haskell.Meta.Syntax.Translate",
      "Language.Haskell.Meta.Utils",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Instances",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "System.IO.Unsafe",
      "Text.ParserCombinators.ReadP",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Language.Haskell.Meta",
      "Language.Haskell.Meta.Parse",
      "Language.Haskell.Meta.Parse.Careful",
      "Language.Haskell.Meta.Syntax.Translate",
      "Language.Haskell.TH.Instances.Lift",
      "Language.Haskell.Meta.Utils"
    ],
    "name": "haskell-src-meta",
    "version": "0.6.0.14"
  },
  {
    "dependencies": {
      "ListLike": [
        "Data.ListLike"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "GHC.IO.Handle.Types",
        "Prelude",
        "System.IO",
        "Text.Printf"
      ],
      "time": [
        "Data.Time"
      ],
      "uu-interleaved": [
        "Control.Applicative.Interleaved"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Interleaved",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.ListLike",
      "Data.Maybe",
      "Data.Time",
      "Data.Word",
      "GHC.IO.Handle.Types",
      "Prelude",
      "System.IO",
      "Text.ParserCombinators.UU",
      "Text.ParserCombinators.UU.BasicInstances",
      "Text.ParserCombinators.UU.Core",
      "Text.ParserCombinators.UU.Demo.Examples",
      "Text.ParserCombinators.UU.Derived",
      "Text.ParserCombinators.UU.Utils",
      "Text.Printf"
    ],
    "modules": [
      "Text.ParserCombinators.UU",
      "Text.ParserCombinators.UU.CHANGELOG",
      "Text.ParserCombinators.UU.README",
      "Text.ParserCombinators.UU.Core",
      "Text.ParserCombinators.UU.BasicInstances",
      "Text.ParserCombinators.UU.Interleaved",
      "Text.ParserCombinators.UU.Derived",
      "Text.ParserCombinators.UU.Utils",
      "Text.ParserCombinators.UU.Idioms",
      "Text.ParserCombinators.UU.Demo.Examples"
    ],
    "name": "uu-parsinglib",
    "version": "2.9.1.1"
  },
  {
    "dependencies": {
      "MissingH": [],
      "async": [],
      "base": [],
      "directory": [],
      "extract-dependencies": [],
      "file-modules": [],
      "filepath": [],
      "lens": [],
      "lens-aeson": [],
      "process": [],
      "stack-run-auto": [],
      "stm-containers": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "wreq": []
    },
    "imports": [
      "Data.Text"
    ],
    "modules": [
      "StackRunAuto"
    ],
    "name": "stack-run-auto",
    "version": "0.1.1.4"
  },
  {
    "dependencies": {
      "base": [],
      "base16-bytestring": [
        "Data.ByteString.Base16",
        "Data.ByteString.Base16.Lazy"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64",
        "Data.ByteString.Base64.Lazy"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "errors": [
        "Control.Error.Util"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Control.Error.Util",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base16.Lazy",
      "Data.ByteString.Base64",
      "Data.ByteString.Base64.Lazy",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.Conversions",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Test.Hspec"
    ],
    "modules": [
      "Data.Text.Conversions"
    ],
    "name": "text-conversions",
    "version": "0.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Complex",
        "Data.Data",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Version",
        "Foreign.C.Error",
        "Foreign.C.Types",
        "GHC.Exts",
        "GHC.Generics",
        "System.Console.GetOpt",
        "System.Exit",
        "System.IO",
        "Text.Printf",
        "Text.Read.Lex"
      ],
      "ghc-prim": [],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.Complex",
      "Data.Data",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Traversable",
      "Data.Version",
      "Foreign.C.Error",
      "Foreign.C.Types",
      "Generics.SOP",
      "Generics.SOP.BasicFunctors",
      "Generics.SOP.Classes",
      "Generics.SOP.Constraint",
      "Generics.SOP.GGP",
      "Generics.SOP.Instances",
      "Generics.SOP.Metadata",
      "Generics.SOP.NP",
      "Generics.SOP.NS",
      "Generics.SOP.Sing",
      "Generics.SOP.TH",
      "Generics.SOP.Universe",
      "GHC.Exts",
      "GHC.Generics",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "System.Console.GetOpt",
      "System.Exit",
      "System.IO",
      "Text.Printf",
      "Text.Read.Lex"
    ],
    "modules": [
      "Generics.SOP",
      "Generics.SOP.GGP",
      "Generics.SOP.TH",
      "Generics.SOP.Dict",
      "Generics.SOP.BasicFunctors",
      "Generics.SOP.Classes",
      "Generics.SOP.Constraint",
      "Generics.SOP.Instances",
      "Generics.SOP.Metadata",
      "Generics.SOP.NP",
      "Generics.SOP.NS",
      "Generics.SOP.Universe",
      "Generics.SOP.Sing"
    ],
    "name": "generics-sop",
    "version": "0.2.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Foreign.C",
        "Foreign.Ptr"
      ],
      "bytestring": [],
      "text": []
    },
    "imports": [
      "Data.Bits",
      "Foreign.C",
      "Foreign.Ptr"
    ],
    "modules": [
      "Text.Discount"
    ],
    "name": "discount",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Fingerprint",
        "GHC.Generics",
        "GHC.IO.Device",
        "GHC.IO.FD",
        "GHC.IO.Handle.FD",
        "GHC.Ptr",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Posix.Internals",
        "System.Posix.Types",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix",
        "System.FilePath.Windows"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "process": [
        "System.Process"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Child",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Fail",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Writer",
      "Data.Array",
      "Data.Array.Unboxed",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Graph",
      "Data.IntMap",
      "Data.IntSet",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Set",
      "Data.Time",
      "Data.Traversable",
      "Data.Tree",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Distribution.Compat.Binary",
      "Distribution.Compat.Binary.Class",
      "Distribution.Compat.Binary.Generic",
      "Distribution.Compat.CopyFile",
      "Distribution.Compat.CreatePipe",
      "Distribution.Compat.Environment",
      "Distribution.Compat.Exception",
      "Distribution.Compat.GetShortPathName",
      "Distribution.Compat.Internal.TempFile",
      "Distribution.Compat.MonadFail",
      "Distribution.Compat.ReadP",
      "Distribution.Compat.Semigroup",
      "Distribution.Compiler",
      "Distribution.GetOpt",
      "Distribution.InstalledPackageInfo",
      "Distribution.Lex",
      "Distribution.License",
      "Distribution.ModuleName",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Check",
      "Distribution.PackageDescription.Configuration",
      "Distribution.PackageDescription.Parse",
      "Distribution.PackageDescription.Utils",
      "Distribution.ParseUtils",
      "Distribution.ReadE",
      "Distribution.Simple.Bench",
      "Distribution.Simple.Build",
      "Distribution.Simple.Build.Macros",
      "Distribution.Simple.BuildPaths",
      "Distribution.Simple.Build.PathsModule",
      "Distribution.Simple.BuildTarget",
      "Distribution.Simple.CCompiler",
      "Distribution.Simple.Command",
      "Distribution.Simple.Compiler",
      "Distribution.Simple.Configure",
      "Distribution.Simple.GHC",
      "Distribution.Simple.GHC.ImplInfo",
      "Distribution.Simple.GHC.Internal",
      "Distribution.Simple.GHC.IPI642",
      "Distribution.Simple.GHC.IPIConvert",
      "Distribution.Simple.GHCJS",
      "Distribution.Simple.Haddock",
      "Distribution.Simple.HaskellSuite",
      "Distribution.Simple.Hpc",
      "Distribution.Simple.Install",
      "Distribution.Simple.InstallDirs",
      "Distribution.Simple.JHC",
      "Distribution.Simple.LHC",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.PackageIndex",
      "Distribution.Simple.PreProcess",
      "Distribution.Simple.PreProcess.Unlit",
      "Distribution.Simple.Program",
      "Distribution.Simple.Program.Ar",
      "Distribution.Simple.Program.Builtin",
      "Distribution.Simple.Program.Db",
      "Distribution.Simple.Program.Find",
      "Distribution.Simple.Program.GHC",
      "Distribution.Simple.Program.HcPkg",
      "Distribution.Simple.Program.Hpc",
      "Distribution.Simple.Program.Internal",
      "Distribution.Simple.Program.Ld",
      "Distribution.Simple.Program.Run",
      "Distribution.Simple.Program.Script",
      "Distribution.Simple.Program.Strip",
      "Distribution.Simple.Program.Types",
      "Distribution.Simple.Register",
      "Distribution.Simple.Setup",
      "Distribution.Simple.SrcDist",
      "Distribution.Simple.Test",
      "Distribution.Simple.Test.ExeV10",
      "Distribution.Simple.Test.LibV09",
      "Distribution.Simple.Test.Log",
      "Distribution.Simple.UHC",
      "Distribution.Simple.UserHooks",
      "Distribution.Simple.Utils",
      "Distribution.System",
      "Distribution.TestSuite",
      "Distribution.Text",
      "Distribution.Utils.NubList",
      "Distribution.Verbosity",
      "Distribution.Version",
      "Foo",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Fingerprint",
      "GHC.Generics",
      "GHC.IOBase",
      "GHC.IO.Device",
      "GHC.IO.FD",
      "GHC.IO.Handle.FD",
      "GHC.Prim",
      "GHC.Ptr",
      "GHC.Windows",
      "Language.Haskell.Extension",
      "Lib",
      "MyLibrary",
      "Numeric",
      "PackageTests.BenchmarkStanza.Check",
      "PackageTests.DeterministicAr.Check",
      "PackageTests.Options",
      "PackageTests.PackageTester",
      "PackageTests.Tests",
      "PackageTests.TestStanza.Check",
      "PackageTests.TestSuiteTests.ExeV10.Check",
      "Parent",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.FilePath.Windows",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix",
      "System.Posix.Files",
      "System.Posix.Internals",
      "System.Posix.IO",
      "System.Posix.Types",
      "System.Process",
      "System.Win32",
      "Test.Laws",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Utils",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.Ingredients",
      "Test.Tasty.Options",
      "Test.Tasty.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.PrettyPrint",
      "Text.Read",
      "Text.Regex.Posix",
      "TH",
      "UnavailableModule",
      "UnitTests.Distribution.Compat.CreatePipe",
      "UnitTests.Distribution.Compat.ReadP",
      "UnitTests.Distribution.Simple.Program.Internal",
      "UnitTests.Distribution.Simple.Utils",
      "UnitTests.Distribution.System",
      "UnitTests.Distribution.Utils.NubList",
      "UnitTests.Distribution.Version"
    ],
    "modules": [
      "Distribution.Compat.CreatePipe",
      "Distribution.Compat.Environment",
      "Distribution.Compat.Exception",
      "Distribution.Compat.Internal.TempFile",
      "Distribution.Compat.ReadP",
      "Distribution.Compat.Semigroup",
      "Distribution.Compiler",
      "Distribution.InstalledPackageInfo",
      "Distribution.License",
      "Distribution.Make",
      "Distribution.ModuleName",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Check",
      "Distribution.PackageDescription.Configuration",
      "Distribution.PackageDescription.Parse",
      "Distribution.PackageDescription.PrettyPrint",
      "Distribution.PackageDescription.Utils",
      "Distribution.ParseUtils",
      "Distribution.ReadE",
      "Distribution.Simple",
      "Distribution.Simple.Bench",
      "Distribution.Simple.Build",
      "Distribution.Simple.Build.Macros",
      "Distribution.Simple.Build.PathsModule",
      "Distribution.Simple.BuildPaths",
      "Distribution.Simple.BuildTarget",
      "Distribution.Simple.CCompiler",
      "Distribution.Simple.Command",
      "Distribution.Simple.Compiler",
      "Distribution.Simple.Configure",
      "Distribution.Simple.GHC",
      "Distribution.Simple.GHCJS",
      "Distribution.Simple.Haddock",
      "Distribution.Simple.HaskellSuite",
      "Distribution.Simple.Hpc",
      "Distribution.Simple.Install",
      "Distribution.Simple.InstallDirs",
      "Distribution.Simple.JHC",
      "Distribution.Simple.LHC",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.PackageIndex",
      "Distribution.Simple.PreProcess",
      "Distribution.Simple.PreProcess.Unlit",
      "Distribution.Simple.Program",
      "Distribution.Simple.Program.Ar",
      "Distribution.Simple.Program.Builtin",
      "Distribution.Simple.Program.Db",
      "Distribution.Simple.Program.Find",
      "Distribution.Simple.Program.GHC",
      "Distribution.Simple.Program.HcPkg",
      "Distribution.Simple.Program.Hpc",
      "Distribution.Simple.Program.Internal",
      "Distribution.Simple.Program.Ld",
      "Distribution.Simple.Program.Run",
      "Distribution.Simple.Program.Script",
      "Distribution.Simple.Program.Strip",
      "Distribution.Simple.Program.Types",
      "Distribution.Simple.Register",
      "Distribution.Simple.Setup",
      "Distribution.Simple.SrcDist",
      "Distribution.Simple.Test",
      "Distribution.Simple.Test.ExeV10",
      "Distribution.Simple.Test.LibV09",
      "Distribution.Simple.Test.Log",
      "Distribution.Simple.UHC",
      "Distribution.Simple.UserHooks",
      "Distribution.Simple.Utils",
      "Distribution.System",
      "Distribution.TestSuite",
      "Distribution.Text",
      "Distribution.Utils.NubList",
      "Distribution.Verbosity",
      "Distribution.Version",
      "Language.Haskell.Extension",
      "Distribution.Compat.Binary"
    ],
    "name": "Cabal",
    "version": "1.24.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Char",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Foreign",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.Int",
        "GHC.Word",
        "Prelude",
        "System.IO",
        "Text.Printf"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "fixed-vector": [
        "Data.Vector.Fixed",
        "Data.Vector.Fixed.Cont",
        "Data.Vector.Fixed.Mutable"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "missing-foreign": [
        "Foreign.Marshal.MissingAlloc"
      ],
      "primitive": [
        "Data.Primitive.Array"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Char",
      "Data.Function",
      "Data.Functor",
      "Data.List",
      "Data.Primitive.Array",
      "Data.Vector.Fixed",
      "Data.Vector.Fixed.Cont",
      "Data.Vector.Fixed.Mutable",
      "Data.Yarr.Base",
      "Data.Yarr.Convolution.Eval",
      "Data.Yarr.Convolution.Repr",
      "Data.Yarr.Convolution.StaticStencils",
      "Data.Yarr.Eval",
      "Data.Yarr.Flow",
      "Data.Yarr.Fusion",
      "Data.Yarr.Repr.Delayed",
      "Data.Yarr.Repr.Foreign",
      "Data.Yarr.Repr.Separate",
      "Data.Yarr.Shape",
      "Data.Yarr.Utils.FixedVector",
      "Data.Yarr.Utils.FixedVector.Arity",
      "Data.Yarr.Utils.FixedVector.InlinableArity",
      "Data.Yarr.Utils.FixedVector.VecTuple",
      "Data.Yarr.Utils.FixedVector.VecTupleInstances",
      "Data.Yarr.Utils.Fork",
      "Data.Yarr.Utils.LowLevelFlow",
      "Data.Yarr.Utils.Parallel",
      "Data.Yarr.Utils.Primitive",
      "Data.Yarr.Utils.Split",
      "Data.Yarr.Walk",
      "Data.Yarr.Walk.Internal",
      "Data.Yarr.WorkTypes",
      "Debug.Yarr",
      "Foreign",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.MissingAlloc",
      "GHC.Conc",
      "GHC.Exts",
      "GHC.Int",
      "GHC.Prim",
      "GHC.Types",
      "GHC.Word",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Prelude",
      "System.IO",
      "Text.Printf"
    ],
    "modules": [
      "Data.Yarr",
      "Data.Yarr.Base",
      "Data.Yarr.Fusion",
      "Data.Yarr.Eval",
      "Data.Yarr.Flow",
      "Data.Yarr.Walk",
      "Data.Yarr.Shape",
      "Data.Yarr.Repr.Foreign",
      "Data.Yarr.Repr.Boxed",
      "Data.Yarr.Repr.Delayed",
      "Data.Yarr.Repr.Separate",
      "Data.Yarr.Convolution",
      "Data.Yarr.IO.List",
      "Data.Yarr.Utils.FixedVector",
      "Data.Yarr.Utils.Fork",
      "Data.Yarr.Utils.Parallel",
      "Data.Yarr.Utils.Split",
      "Data.Yarr.Utils.Primitive",
      "Debug.Yarr"
    ],
    "name": "yarr",
    "version": "1.4.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AdSenseHost",
      "Network.Google.AdSenseHost.Types",
      "Network.Google.Resource.AdSenseHost.Accounts.AdClients.Get",
      "Network.Google.Resource.AdSenseHost.Accounts.AdClients.List",
      "Network.Google.Resource.AdSenseHost.Accounts.AdUnits.Delete",
      "Network.Google.Resource.AdSenseHost.Accounts.AdUnits.Get",
      "Network.Google.Resource.AdSenseHost.Accounts.AdUnits.GetAdCode",
      "Network.Google.Resource.AdSenseHost.Accounts.AdUnits.Insert",
      "Network.Google.Resource.AdSenseHost.Accounts.AdUnits.List",
      "Network.Google.Resource.AdSenseHost.Accounts.AdUnits.Patch",
      "Network.Google.Resource.AdSenseHost.Accounts.AdUnits.Update",
      "Network.Google.Resource.AdSenseHost.Accounts.Get",
      "Network.Google.Resource.AdSenseHost.Accounts.List",
      "Network.Google.Resource.AdSenseHost.Accounts.Reports.Generate",
      "Network.Google.Resource.AdSenseHost.AdClients.Get",
      "Network.Google.Resource.AdSenseHost.AdClients.List",
      "Network.Google.Resource.AdSenseHost.AssociationSessions.Start",
      "Network.Google.Resource.AdSenseHost.AssociationSessions.Verify",
      "Network.Google.Resource.AdSenseHost.CustomChannels.Delete",
      "Network.Google.Resource.AdSenseHost.CustomChannels.Get",
      "Network.Google.Resource.AdSenseHost.CustomChannels.Insert",
      "Network.Google.Resource.AdSenseHost.CustomChannels.List",
      "Network.Google.Resource.AdSenseHost.CustomChannels.Patch",
      "Network.Google.Resource.AdSenseHost.CustomChannels.Update",
      "Network.Google.Resource.AdSenseHost.Reports.Generate",
      "Network.Google.Resource.AdSenseHost.URLChannels.Delete",
      "Network.Google.Resource.AdSenseHost.URLChannels.Insert",
      "Network.Google.Resource.AdSenseHost.URLChannels.List"
    ],
    "name": "gogol-adsense-host",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.YouTube.Activities.Insert",
      "Network.Google.Resource.YouTube.Activities.List",
      "Network.Google.Resource.YouTube.Captions.Delete",
      "Network.Google.Resource.YouTube.Captions.Download",
      "Network.Google.Resource.YouTube.Captions.Insert",
      "Network.Google.Resource.YouTube.Captions.List",
      "Network.Google.Resource.YouTube.Captions.Update",
      "Network.Google.Resource.YouTube.ChannelBanners.Insert",
      "Network.Google.Resource.YouTube.ChannelSections.Delete",
      "Network.Google.Resource.YouTube.ChannelSections.Insert",
      "Network.Google.Resource.YouTube.ChannelSections.List",
      "Network.Google.Resource.YouTube.ChannelSections.Update",
      "Network.Google.Resource.YouTube.Channels.List",
      "Network.Google.Resource.YouTube.Channels.Update",
      "Network.Google.Resource.YouTube.CommentThreads.Insert",
      "Network.Google.Resource.YouTube.CommentThreads.List",
      "Network.Google.Resource.YouTube.CommentThreads.Update",
      "Network.Google.Resource.YouTube.Comments.Delete",
      "Network.Google.Resource.YouTube.Comments.Insert",
      "Network.Google.Resource.YouTube.Comments.List",
      "Network.Google.Resource.YouTube.Comments.MarkAsSpam",
      "Network.Google.Resource.YouTube.Comments.SetModerationStatus",
      "Network.Google.Resource.YouTube.Comments.Update",
      "Network.Google.Resource.YouTube.FanFundingEvents.List",
      "Network.Google.Resource.YouTube.GuideCategories.List",
      "Network.Google.Resource.YouTube.I18nLanguages.List",
      "Network.Google.Resource.YouTube.I18nRegions.List",
      "Network.Google.Resource.YouTube.LiveBroadcasts.Bind",
      "Network.Google.Resource.YouTube.LiveBroadcasts.Control",
      "Network.Google.Resource.YouTube.LiveBroadcasts.Delete",
      "Network.Google.Resource.YouTube.LiveBroadcasts.Insert",
      "Network.Google.Resource.YouTube.LiveBroadcasts.List",
      "Network.Google.Resource.YouTube.LiveBroadcasts.Transition",
      "Network.Google.Resource.YouTube.LiveBroadcasts.Update",
      "Network.Google.Resource.YouTube.LiveChatBans.Delete",
      "Network.Google.Resource.YouTube.LiveChatBans.Insert",
      "Network.Google.Resource.YouTube.LiveChatMessages.Delete",
      "Network.Google.Resource.YouTube.LiveChatMessages.Insert",
      "Network.Google.Resource.YouTube.LiveChatMessages.List",
      "Network.Google.Resource.YouTube.LiveChatModerators.Delete",
      "Network.Google.Resource.YouTube.LiveChatModerators.Insert",
      "Network.Google.Resource.YouTube.LiveChatModerators.List",
      "Network.Google.Resource.YouTube.LiveStreams.Delete",
      "Network.Google.Resource.YouTube.LiveStreams.Insert",
      "Network.Google.Resource.YouTube.LiveStreams.List",
      "Network.Google.Resource.YouTube.LiveStreams.Update",
      "Network.Google.Resource.YouTube.PlayListItems.Delete",
      "Network.Google.Resource.YouTube.PlayListItems.Insert",
      "Network.Google.Resource.YouTube.PlayListItems.List",
      "Network.Google.Resource.YouTube.PlayListItems.Update",
      "Network.Google.Resource.YouTube.PlayLists.Delete",
      "Network.Google.Resource.YouTube.PlayLists.Insert",
      "Network.Google.Resource.YouTube.PlayLists.List",
      "Network.Google.Resource.YouTube.PlayLists.Update",
      "Network.Google.Resource.YouTube.Search.List",
      "Network.Google.Resource.YouTube.Sponsors.List",
      "Network.Google.Resource.YouTube.Subscriptions.Delete",
      "Network.Google.Resource.YouTube.Subscriptions.Insert",
      "Network.Google.Resource.YouTube.Subscriptions.List",
      "Network.Google.Resource.YouTube.Thumbnails.Set",
      "Network.Google.Resource.YouTube.VideoAbuseReportReasons.List",
      "Network.Google.Resource.YouTube.VideoCategories.List",
      "Network.Google.Resource.YouTube.Videos.Delete",
      "Network.Google.Resource.YouTube.Videos.GetRating",
      "Network.Google.Resource.YouTube.Videos.Insert",
      "Network.Google.Resource.YouTube.Videos.List",
      "Network.Google.Resource.YouTube.Videos.Rate",
      "Network.Google.Resource.YouTube.Videos.ReportAbuse",
      "Network.Google.Resource.YouTube.Videos.Update",
      "Network.Google.Resource.YouTube.Watermarks.Set",
      "Network.Google.Resource.YouTube.Watermarks.UnSet",
      "Network.Google.YouTube",
      "Network.Google.YouTube.Types"
    ],
    "name": "gogol-youtube",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.Maybe",
        "Prelude"
      ],
      "containers": [
        "Data.Set"
      ],
      "css-text": [
        "Text.CSS.Parse",
        "Text.CSS.Render"
      ],
      "tagsoup": [
        "Text.HTML.TagSoup"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "utf8-string": [
        "Codec.Binary.UTF8.String"
      ]
    },
    "imports": [
      "Codec.Binary.UTF8.String",
      "Control.Applicative",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.Maybe",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Network.URI",
      "Prelude",
      "Test.Hspec",
      "Test.HUnit",
      "Text.CSS.Parse",
      "Text.CSS.Render",
      "Text.HTML.SanitizeXSS",
      "Text.HTML.SanitizeXSS.Css",
      "Text.HTML.TagSoup"
    ],
    "modules": [
      "Text.HTML.SanitizeXSS"
    ],
    "name": "xss-sanitize",
    "version": "0.3.5.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.List"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "fsnotify": [
        "System.FSNotify"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Chan",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Resource",
      "Data.Conduit",
      "Data.Conduit.FSNotify",
      "Data.Conduit.List",
      "Data.List",
      "System.Directory",
      "System.FilePath",
      "System.FSNotify",
      "System.IO.Temp",
      "Test.Hspec"
    ],
    "modules": [
      "Data.Conduit.FSNotify"
    ],
    "name": "fsnotify-conduit",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Blogger",
      "Network.Google.Blogger.Types",
      "Network.Google.Resource.Blogger.BlogUserInfos.Get",
      "Network.Google.Resource.Blogger.Blogs.Get",
      "Network.Google.Resource.Blogger.Blogs.GetByURL",
      "Network.Google.Resource.Blogger.Blogs.ListByUser",
      "Network.Google.Resource.Blogger.Comments.Approve",
      "Network.Google.Resource.Blogger.Comments.Delete",
      "Network.Google.Resource.Blogger.Comments.Get",
      "Network.Google.Resource.Blogger.Comments.List",
      "Network.Google.Resource.Blogger.Comments.ListByBlog",
      "Network.Google.Resource.Blogger.Comments.MarkAsSpam",
      "Network.Google.Resource.Blogger.Comments.RemoveContent",
      "Network.Google.Resource.Blogger.PageViews.Get",
      "Network.Google.Resource.Blogger.Pages.Delete",
      "Network.Google.Resource.Blogger.Pages.Get",
      "Network.Google.Resource.Blogger.Pages.Insert",
      "Network.Google.Resource.Blogger.Pages.List",
      "Network.Google.Resource.Blogger.Pages.Patch",
      "Network.Google.Resource.Blogger.Pages.Publish",
      "Network.Google.Resource.Blogger.Pages.Revert",
      "Network.Google.Resource.Blogger.Pages.Update",
      "Network.Google.Resource.Blogger.PostUserInfos.Get",
      "Network.Google.Resource.Blogger.PostUserInfos.List",
      "Network.Google.Resource.Blogger.Posts.Delete",
      "Network.Google.Resource.Blogger.Posts.Get",
      "Network.Google.Resource.Blogger.Posts.GetByPath",
      "Network.Google.Resource.Blogger.Posts.Insert",
      "Network.Google.Resource.Blogger.Posts.List",
      "Network.Google.Resource.Blogger.Posts.Patch",
      "Network.Google.Resource.Blogger.Posts.Publish",
      "Network.Google.Resource.Blogger.Posts.Revert",
      "Network.Google.Resource.Blogger.Posts.Search",
      "Network.Google.Resource.Blogger.Posts.Update",
      "Network.Google.Resource.Blogger.Users.Get"
    ],
    "name": "gogol-blogger",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "fay-base": [],
      "fay-text": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "JQuery"
    ],
    "name": "fay-jquery",
    "version": "0.6.1.0"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": []
    },
    "imports": [
      "Test.DocTest",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Test.DocTest.Prop"
    ],
    "name": "doctest-prop",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Functor.Identity"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.List",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "path-extra": [
        "Path.Extended"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "transformers": [
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Cont",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.List",
      "Control.Monad.Logger",
      "Control.Monad.Morph",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Writer",
      "Data.Functor.Identity",
      "Path.Extended"
    ],
    "modules": [
      "Data.Url"
    ],
    "name": "urlpath",
    "version": "5.0.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "blaze-markup": [
        "Text.Blaze.Renderer.Text"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hamlet": [],
      "language-javascript": [
        "Language.JavaScript.Parser",
        "Language.JavaScript.Parser.AST"
      ],
      "mime-types": [
        "Network.Mime"
      ],
      "shakespeare": [
        "Text.Cassius",
        "Text.Hamlet",
        "Text.Hamlet.RT",
        "Text.Julius"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ],
      "yesod": [
        "Yesod"
      ],
      "yesod-core": [
        "Yesod.Core",
        "Yesod.Core.Widget"
      ],
      "yesod-static": [
        "Yesod.EmbeddedStatic",
        "Yesod.EmbeddedStatic.Generators",
        "Yesod.EmbeddedStatic.Types"
      ],
      "yesod-static-angular": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Monad",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Default",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Language.Haskell.TH",
      "Language.JavaScript.Parser",
      "Language.JavaScript.Parser.AST",
      "Network.Mime",
      "RunGenerator",
      "StaticSettings",
      "System.Directory",
      "System.FilePath",
      "Test.Hspec",
      "Test.Hspec.WebDriver",
      "Test.HUnit",
      "Test.WebDriver.Commands.Angular",
      "Text.Blaze.Renderer.Text",
      "Text.Cassius",
      "Text.Hamlet",
      "Text.Hamlet.RT",
      "Text.Julius",
      "Yesod",
      "Yesod.Core",
      "Yesod.Core.Widget",
      "Yesod.EmbeddedStatic",
      "Yesod.EmbeddedStatic.AngularJavascript",
      "Yesod.EmbeddedStatic.AngularJsMangle",
      "Yesod.EmbeddedStatic.Generators",
      "Yesod.EmbeddedStatic.Types",
      "Yesod.Test"
    ],
    "modules": [
      "Yesod.EmbeddedStatic.AngularJavascript"
    ],
    "name": "yesod-static-angular",
    "version": "0.1.8"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-atk": [],
      "gi-cairo": [],
      "gi-gdk": [],
      "gi-gdkpixbuf": [],
      "gi-gio": [],
      "gi-glib": [],
      "gi-gobject": [],
      "gi-gtk": [],
      "gi-javascriptcore": [],
      "gi-soup": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-webkit",
    "version": "3.0.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.KnowledgeGraphSearch",
      "Network.Google.KnowledgeGraphSearch.Types",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.Create",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.Delete",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.Get",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.GetIAMPolicy",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.Keys.Create",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.Keys.Delete",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.Keys.Get",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.Keys.List",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.List",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.SetIAMPolicy",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.SignBlob",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.TestIAMPermissions",
      "Network.Google.Resource.IAM.Projects.ServiceAccounts.Update"
    ],
    "name": "gogol-kgsearch",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "fay": [],
      "fay-base": [],
      "text": []
    },
    "imports": [
      "Fay.Text.Type"
    ],
    "modules": [
      "Fay.Text",
      "Fay.Text.Type"
    ],
    "name": "fay-text",
    "version": "0.3.2.2"
  },
  {
    "dependencies": {
      "JuicyPixels": [
        "Codec.Picture"
      ],
      "attoparsec": [
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Data.Bits",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Text.Printf",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Map"
      ],
      "lens": [
        "Control.Lens"
      ],
      "linear": [
        "Linear"
      ],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "transformers": [],
      "vector": [],
      "xml": [
        "Text.XML.Light",
        "Text.XML.Light.Input",
        "Text.XML.Light.Output",
        "Text.XML.Light.Proc"
      ]
    },
    "imports": [
      "Codec.Picture",
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad.State.Strict",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Text",
      "Data.Bits",
      "Data.ByteString",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Word",
      "Graphics.Svg.ColorParser",
      "Graphics.Svg.CssParser",
      "Graphics.Svg.CssTypes",
      "Graphics.Svg.NamedColors",
      "Graphics.Svg.PathParser",
      "Graphics.Svg.Types",
      "Graphics.Svg.XmlParser",
      "Linear",
      "Text.Printf",
      "Text.Read",
      "Text.XML.Light",
      "Text.XML.Light.Input",
      "Text.XML.Light.Output",
      "Text.XML.Light.Proc"
    ],
    "modules": [
      "Graphics.Svg",
      "Graphics.Svg.CssTypes",
      "Graphics.Svg.Types"
    ],
    "name": "svg-tree",
    "version": "0.5.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "GHC.Exts",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "curl": [
        "Network.Curl"
      ],
      "data-default": [
        "Data.Default"
      ],
      "regex-base": [
        "Text.Regex.Base.RegexLike"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA"
      ],
      "tagsoup": [
        "Text.HTML.TagSoup",
        "Text.StringLike"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Criterion.Main",
      "Data.ByteString",
      "Data.Char",
      "Data.Default",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "GHC.Exts",
      "Network.Curl",
      "System.Exit",
      "Test.HUnit",
      "Text.HTML.Scalpel",
      "Text.HTML.Scalpel.Internal.Scrape",
      "Text.HTML.Scalpel.Internal.Scrape.StringLike",
      "Text.HTML.Scalpel.Internal.Scrape.URL",
      "Text.HTML.Scalpel.Internal.Select",
      "Text.HTML.Scalpel.Internal.Select.Combinators",
      "Text.HTML.Scalpel.Internal.Select.Types",
      "Text.HTML.TagSoup",
      "Text.Regex.Base.RegexLike",
      "Text.Regex.TDFA",
      "Text.StringLike"
    ],
    "modules": [
      "Text.HTML.Scalpel"
    ],
    "name": "scalpel",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude",
        "Text.Read",
        "Text.Show"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Typeable",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "Test.DocTest",
      "Text.Read",
      "Text.Show"
    ],
    "modules": [
      "Data.Heap"
    ],
    "name": "heaps",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bifunctor",
        "Data.Functor.Identity"
      ],
      "bifunctors": [],
      "bytestring": [],
      "hashable": [
        "Data.Hashable"
      ],
      "transformers": [],
      "transformers-compat": []
    },
    "imports": [
      "Data.Bifunctor",
      "Data.Functor.Identity",
      "Data.Hashable"
    ],
    "modules": [
      "Data.Hashable.Extras"
    ],
    "name": "hashable-extras",
    "version": "0.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Foreign.C.Error",
        "Foreign.Ptr"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Foreign.C.Error",
      "Foreign.Ptr",
      "System.Posix.IO.ByteString"
    ],
    "modules": [
      "Foreign.C.Error.Safe",
      "System.Posix.IO.ByteString",
      "System.Posix.IO.ByteString.Lazy",
      "System.Posix.Types.Iovec"
    ],
    "name": "unix-bytestring",
    "version": "0.3.7.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.IORef",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "System.IO.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.DeepSeq.Generics",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.IORef",
      "Data.Typeable",
      "Data.Word",
      "GHC.Generics",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Control.DeepSeq.Generics"
    ],
    "name": "deepseq-generics",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Version",
        "Data.Word",
        "Prelude",
        "System.Exit"
      ],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hastache": [],
      "ieee754": [
        "Data.AEq"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "process": [
        "System.Process"
      ],
      "syb": [
        "Data.Generics",
        "Data.Generics.Aliases"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO",
        "Data.Text.Read"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Writer",
      "Data.AEq",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.Decimal",
      "Data.Foldable",
      "Data.Functor",
      "Data.Generics",
      "Data.Generics.Aliases",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Text.Read",
      "Data.Version",
      "Data.Word",
      "Prelude",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.Process",
      "Test.HUnit",
      "Text.Hastache",
      "Text.Hastache.Context"
    ],
    "modules": [
      "Text.Hastache",
      "Text.Hastache.Context"
    ],
    "name": "hastache",
    "version": "0.6.1"
  },
  {
    "dependencies": {
      "base": [],
      "binary": [
        "Data.Binary"
      ],
      "bitcoin-script": [
        "Data.Bitcoin.Script"
      ],
      "bitcoin-types": [
        "Data.Bitcoin.Types"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cryptohash": [
        "Crypto.Hash.SHA256"
      ],
      "hexstring": [
        "Data.HexString"
      ],
      "lens": []
    },
    "imports": [
      "Crypto.Hash.SHA256",
      "Data.Binary",
      "Data.Bitcoin.Script",
      "Data.Bitcoin.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.HexString",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Data.Bitcoin.Transaction"
    ],
    "name": "bitcoin-tx",
    "version": "0.13.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.InstalledPackageInfo",
        "Distribution.Package",
        "Distribution.Text",
        "Distribution.Version"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Char",
      "Data.Either",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Distribution.InstalledPackageInfo",
      "Distribution.Package",
      "Distribution.Text",
      "Distribution.Version",
      "Options.Applicative",
      "Sandman.InstalledPackage",
      "Sandman.PackageDb",
      "Sandman.Stack",
      "Sandman.Util",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.PosixCompat.Files",
      "System.Process"
    ],
    "modules": [],
    "name": "sandman",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "directory": [],
      "filepath": [],
      "process": [],
      "projectroot": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "hspec-setup",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.MapsEngine",
      "Network.Google.MapsEngine.Types",
      "Network.Google.Resource.MapsEngine.Assets.Get",
      "Network.Google.Resource.MapsEngine.Assets.List",
      "Network.Google.Resource.MapsEngine.Assets.Parents.List",
      "Network.Google.Resource.MapsEngine.Assets.Permissions.List",
      "Network.Google.Resource.MapsEngine.Layers.CancelProcessing",
      "Network.Google.Resource.MapsEngine.Layers.Create",
      "Network.Google.Resource.MapsEngine.Layers.Delete",
      "Network.Google.Resource.MapsEngine.Layers.Get",
      "Network.Google.Resource.MapsEngine.Layers.GetPublished",
      "Network.Google.Resource.MapsEngine.Layers.List",
      "Network.Google.Resource.MapsEngine.Layers.ListPublished",
      "Network.Google.Resource.MapsEngine.Layers.Parents.List",
      "Network.Google.Resource.MapsEngine.Layers.Patch",
      "Network.Google.Resource.MapsEngine.Layers.Permissions.BatchDelete",
      "Network.Google.Resource.MapsEngine.Layers.Permissions.BatchUpdate",
      "Network.Google.Resource.MapsEngine.Layers.Permissions.List",
      "Network.Google.Resource.MapsEngine.Layers.Process",
      "Network.Google.Resource.MapsEngine.Layers.Publish",
      "Network.Google.Resource.MapsEngine.Layers.UnPublish",
      "Network.Google.Resource.MapsEngine.Maps.Create",
      "Network.Google.Resource.MapsEngine.Maps.Delete",
      "Network.Google.Resource.MapsEngine.Maps.Get",
      "Network.Google.Resource.MapsEngine.Maps.GetPublished",
      "Network.Google.Resource.MapsEngine.Maps.List",
      "Network.Google.Resource.MapsEngine.Maps.ListPublished",
      "Network.Google.Resource.MapsEngine.Maps.Patch",
      "Network.Google.Resource.MapsEngine.Maps.Permissions.BatchDelete",
      "Network.Google.Resource.MapsEngine.Maps.Permissions.BatchUpdate",
      "Network.Google.Resource.MapsEngine.Maps.Permissions.List",
      "Network.Google.Resource.MapsEngine.Maps.Publish",
      "Network.Google.Resource.MapsEngine.Maps.UnPublish",
      "Network.Google.Resource.MapsEngine.Projects.Icons.Create",
      "Network.Google.Resource.MapsEngine.Projects.Icons.Get",
      "Network.Google.Resource.MapsEngine.Projects.Icons.List",
      "Network.Google.Resource.MapsEngine.Projects.List",
      "Network.Google.Resource.MapsEngine.RasterCollections.CancelProcessing",
      "Network.Google.Resource.MapsEngine.RasterCollections.Create",
      "Network.Google.Resource.MapsEngine.RasterCollections.Delete",
      "Network.Google.Resource.MapsEngine.RasterCollections.Get",
      "Network.Google.Resource.MapsEngine.RasterCollections.List",
      "Network.Google.Resource.MapsEngine.RasterCollections.Parents.List",
      "Network.Google.Resource.MapsEngine.RasterCollections.Patch",
      "Network.Google.Resource.MapsEngine.RasterCollections.Permissions.BatchDelete",
      "Network.Google.Resource.MapsEngine.RasterCollections.Permissions.BatchUpdate",
      "Network.Google.Resource.MapsEngine.RasterCollections.Permissions.List",
      "Network.Google.Resource.MapsEngine.RasterCollections.Process",
      "Network.Google.Resource.MapsEngine.RasterCollections.Rasters.BatchDelete",
      "Network.Google.Resource.MapsEngine.RasterCollections.Rasters.BatchInsert",
      "Network.Google.Resource.MapsEngine.RasterCollections.Rasters.List",
      "Network.Google.Resource.MapsEngine.Rasters.Delete",
      "Network.Google.Resource.MapsEngine.Rasters.Files.Insert",
      "Network.Google.Resource.MapsEngine.Rasters.Get",
      "Network.Google.Resource.MapsEngine.Rasters.List",
      "Network.Google.Resource.MapsEngine.Rasters.Parents.List",
      "Network.Google.Resource.MapsEngine.Rasters.Patch",
      "Network.Google.Resource.MapsEngine.Rasters.Permissions.BatchDelete",
      "Network.Google.Resource.MapsEngine.Rasters.Permissions.BatchUpdate",
      "Network.Google.Resource.MapsEngine.Rasters.Permissions.List",
      "Network.Google.Resource.MapsEngine.Rasters.Process",
      "Network.Google.Resource.MapsEngine.Rasters.Upload",
      "Network.Google.Resource.MapsEngine.Tables.Create",
      "Network.Google.Resource.MapsEngine.Tables.Delete",
      "Network.Google.Resource.MapsEngine.Tables.Features.BatchDelete",
      "Network.Google.Resource.MapsEngine.Tables.Features.BatchInsert",
      "Network.Google.Resource.MapsEngine.Tables.Features.BatchPatch",
      "Network.Google.Resource.MapsEngine.Tables.Features.Get",
      "Network.Google.Resource.MapsEngine.Tables.Features.List",
      "Network.Google.Resource.MapsEngine.Tables.Files.Insert",
      "Network.Google.Resource.MapsEngine.Tables.Get",
      "Network.Google.Resource.MapsEngine.Tables.List",
      "Network.Google.Resource.MapsEngine.Tables.Parents.List",
      "Network.Google.Resource.MapsEngine.Tables.Patch",
      "Network.Google.Resource.MapsEngine.Tables.Permissions.BatchDelete",
      "Network.Google.Resource.MapsEngine.Tables.Permissions.BatchUpdate",
      "Network.Google.Resource.MapsEngine.Tables.Permissions.List",
      "Network.Google.Resource.MapsEngine.Tables.Process",
      "Network.Google.Resource.MapsEngine.Tables.Upload"
    ],
    "name": "gogol-maps-engine",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base",
        "Data.Array.Unboxed"
      ],
      "base-compat": [
        "Data.Monoid.Compat",
        "Numeric.Compat",
        "Prelude.Compat"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Short"
      ],
      "bytestring-builder": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "contravariant": [],
      "generic-deriving": [
        "Generics.Deriving.Base",
        "Generics.Deriving.Instances",
        "Generics.Deriving.TH"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "integer-gmp": [
        "GHC.Integer.GMP.Internals"
      ],
      "nats": [],
      "semigroups": [],
      "tagged": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Foreign",
        "Data.Text.Internal.Fusion.Size",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.RealFloat",
        "Data.Text.Lazy.IO"
      ],
      "th-lift": [],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad.ST",
      "Control.Monad.Trans.Instances",
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.Unboxed",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Short",
      "Data.Char",
      "Data.Coerce",
      "Data.Complex",
      "Data.Data",
      "Data.Dynamic",
      "Data.Fixed",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Sum",
      "Data.Int",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Monoid.Compat",
      "Data.OldTypeable",
      "Data.OldTypeable.Internal",
      "Data.Orphans",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Foreign",
      "Data.Text.Internal.Fusion.Size",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.RealFloat",
      "Data.Text.Lazy.IO",
      "Data.Typeable",
      "Data.Typeable.Internal",
      "Data.Type.Coercion",
      "Data.Type.Equality",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Derived.DataFamilies",
      "Derived.DatatypeContexts",
      "Derived.ExistentialQuantification",
      "Derived.Infix",
      "Derived.MagicHash",
      "Derived.PolyKinds",
      "Derived.RankNTypes",
      "Derived.Records",
      "Derived.TypeSynonyms",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Generics.Deriving.Base",
      "Generics.Deriving.Instances",
      "Generics.Deriving.TH",
      "GHC.Conc",
      "GHC.Conc.Sync",
      "GHC.Conc.Windows",
      "GHC.Event",
      "GHC.Exts",
      "GHC.Fingerprint.Type",
      "GHC.ForeignPtr",
      "GHC.Generics",
      "GHC.Integer.GMP.Internals",
      "GHC.IO.Encoding.Failure",
      "GHC.IO.Encoding.Types",
      "GHC.IO.Exception",
      "GHC.IO.Handle",
      "GHC.IO.Handle.Types",
      "GHC.Natural",
      "GHC.Num",
      "GHC.Prim",
      "GHC.Ptr",
      "GHC.Real",
      "GHC.RTS.Flags",
      "GHC.Show",
      "GHC.SrcLoc",
      "GHC.Stack",
      "GHC.Stack.Types",
      "GHC.StaticPtr",
      "GHC.Stats",
      "GHC.TypeLits",
      "GHC.Types",
      "GHC.Word",
      "Instances.Control.Applicative",
      "Instances.Control.Concurrent",
      "Instances.Control.Exception",
      "Instances.Control.Monad.ST",
      "Instances.Data.Char",
      "Instances.Data.Data",
      "Instances.Data.Dynamic",
      "Instances.Data.Floating",
      "Instances.Data.Functor.Compose",
      "Instances.Data.Functor.Identity",
      "Instances.Data.Functor.Product",
      "Instances.Data.Functor.Sum",
      "Instances.Data.List.NonEmpty",
      "Instances.Data.Monoid",
      "Instances.Data.OldTypeable",
      "Instances.Data.Ord",
      "Instances.Data.Proxy",
      "Instances.Data.Semigroup",
      "Instances.Data.Text",
      "Instances.Data.Tuple",
      "Instances.Data.Typeable",
      "Instances.Data.Type.Coercion",
      "Instances.Data.Type.Equality",
      "Instances.Data.Version",
      "Instances.Foreign.C.Types",
      "Instances.Foreign.Ptr",
      "Instances.FromStringTextShow",
      "Instances.Generic",
      "Instances.GHC.Conc.Windows",
      "Instances.GHC.Event",
      "Instances.GHC.Fingerprint",
      "Instances.GHC.Generics",
      "Instances.GHC.RTS.Flags",
      "Instances.GHC.Stack",
      "Instances.GHC.StaticPtr",
      "Instances.GHC.Stats",
      "Instances.GHC.TypeLits",
      "Instances.Numeric.Natural",
      "Instances.Options",
      "Instances.System.Exit",
      "Instances.System.IO",
      "Instances.System.Posix.Types",
      "Instances.Text.Read",
      "Instances.Utils",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Syntax",
      "Numeric",
      "Numeric.Compat",
      "Numeric.Natural",
      "Prelude",
      "Prelude.Compat",
      "Spec.Utils",
      "System.Exit",
      "System.IO",
      "System.Posix.Types",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Text.Read",
      "Text.Read.Lex",
      "TextShow",
      "Text.Show",
      "TextShow.Classes",
      "TextShow.Control.Applicative",
      "TextShow.Control.Concurrent",
      "TextShow.Control.Exception",
      "TextShow.Control.Monad.ST",
      "TextShow.Data.Array",
      "TextShow.Data.Bool",
      "TextShow.Data.ByteString",
      "TextShow.Data.Char",
      "TextShow.Data.Complex",
      "TextShow.Data.Data",
      "TextShow.Data.Dynamic",
      "TextShow.Data.Either",
      "TextShow.Data.Fixed",
      "TextShow.Data.Floating",
      "TextShow.Data.Functor.Compose",
      "TextShow.Data.Functor.Identity",
      "TextShow.Data.Functor.Product",
      "TextShow.Data.Functor.Sum",
      "TextShow.Data.Integral",
      "TextShow.Data.List",
      "TextShow.Data.List.NonEmpty",
      "TextShow.Data.Maybe",
      "TextShow.Data.Monoid",
      "TextShow.Data.OldTypeable",
      "TextShow.Data.Ord",
      "TextShow.Data.Proxy",
      "TextShow.Data.Ratio",
      "TextShow.Data.Semigroup",
      "TextShow.Data.Text",
      "TextShow.Data.Tuple",
      "TextShow.Data.Typeable",
      "TextShow.Data.Typeable.Utils",
      "TextShow.Data.Type.Coercion",
      "TextShow.Data.Type.Equality",
      "TextShow.Data.Version",
      "TextShow.Data.Void",
      "TextShow.Debug.Trace",
      "Text.Show.Deriving",
      "TextShow.Foreign.C.Types",
      "TextShow.Foreign.Ptr",
      "TextShow.FromStringTextShow",
      "Text.Show.Functions",
      "TextShow.Functions",
      "TextShow.Generic",
      "TextShow.GHC.Conc.Windows",
      "TextShow.GHC.Event",
      "TextShow.GHC.Fingerprint",
      "TextShow.GHC.Generics",
      "TextShow.GHC.RTS.Flags",
      "TextShow.GHC.Stack",
      "TextShow.GHC.StaticPtr",
      "TextShow.GHC.Stats",
      "TextShow.GHC.TypeLits",
      "TextShow.Instances",
      "TextShow.Numeric.Natural",
      "TextShow.System.Exit",
      "TextShow.System.IO",
      "TextShow.System.Posix.Types",
      "TextShow.Text.Read",
      "TextShow.TH",
      "TextShow.TH.Internal",
      "TextShow.TH.Names",
      "TextShow.Utils",
      "Unsafe.Coerce"
    ],
    "modules": [
      "TextShow",
      "TextShow.Control.Applicative",
      "TextShow.Control.Concurrent",
      "TextShow.Control.Exception",
      "TextShow.Control.Monad.ST",
      "TextShow.Data.Array",
      "TextShow.Data.Bool",
      "TextShow.Data.ByteString",
      "TextShow.Data.Char",
      "TextShow.Data.Complex",
      "TextShow.Data.Data",
      "TextShow.Data.Dynamic",
      "TextShow.Data.Either",
      "TextShow.Data.Fixed",
      "TextShow.Data.Floating",
      "TextShow.Data.Functor.Compose",
      "TextShow.Data.Functor.Identity",
      "TextShow.Data.Functor.Product",
      "TextShow.Data.Functor.Sum",
      "TextShow.Debug.Trace",
      "TextShow.Debug.Trace.Generic",
      "TextShow.Debug.Trace.TH",
      "TextShow.Generic",
      "TextShow.Data.Integral",
      "TextShow.Data.List",
      "TextShow.Data.List.NonEmpty",
      "TextShow.Data.Maybe",
      "TextShow.Data.Monoid",
      "TextShow.Data.Ord",
      "TextShow.Data.Proxy",
      "TextShow.Data.Ratio",
      "TextShow.Data.Semigroup",
      "TextShow.Data.Text",
      "TextShow.Data.Tuple",
      "TextShow.Data.Typeable",
      "TextShow.Data.Version",
      "TextShow.Data.Void",
      "TextShow.Foreign.C.Types",
      "TextShow.Foreign.Ptr",
      "TextShow.Functions",
      "TextShow.GHC.Generics",
      "TextShow.Numeric.Natural",
      "TextShow.System.Exit",
      "TextShow.System.IO",
      "TextShow.System.Posix.Types",
      "TextShow.Text.Read",
      "TextShow.TH",
      "TextShow.GHC.Conc.Windows",
      "TextShow.GHC.Fingerprint",
      "TextShow.GHC.Event",
      "TextShow.GHC.Stats",
      "TextShow.GHC.TypeLits",
      "TextShow.Data.Type.Coercion",
      "TextShow.Data.Type.Equality",
      "TextShow.Data.OldTypeable",
      "TextShow.GHC.RTS.Flags",
      "TextShow.GHC.StaticPtr",
      "TextShow.GHC.Stack"
    ],
    "name": "text-show",
    "version": "3.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Data",
        "Data.Semigroup",
        "Data.Typeable"
      ],
      "containers": [],
      "semigroups": []
    },
    "imports": [
      "Control.Monad",
      "Data.Data",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Typeable"
    ],
    "modules": [
      "Data.Sequence.NonEmpty"
    ],
    "name": "non-empty-sequence",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List"
      ],
      "dependent-sum": [
        "Data.GADT.Compare",
        "Data.GADT.Show"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "th-extras": [
        "Language.Haskell.TH.Extras"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.GADT.Compare",
      "Data.GADT.Show",
      "Data.List",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Extras"
    ],
    "modules": [
      "Data.GADT.Compare.TH",
      "Data.GADT.Show.TH"
    ],
    "name": "dependent-sum-template",
    "version": "0.0.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.List",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Exts",
        "GHC.Ptr",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "crypto-random": [
        "Crypto.Random",
        "Crypto.Random.API"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Criterion.Main",
      "Crypto.Number.Basic",
      "Crypto.Number.F2m",
      "Crypto.Number.Generate",
      "Crypto.Number.ModArithmetic",
      "Crypto.Number.Prime",
      "Crypto.Number.Serialize",
      "Crypto.Random",
      "Crypto.Random.API",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.List",
      "Data.Typeable",
      "Data.Vector",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Logarithms",
      "GHC.Ptr",
      "RNG",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Crypto.Number.ModArithmetic",
      "Crypto.Number.Serialize",
      "Crypto.Number.Generate",
      "Crypto.Number.Basic",
      "Crypto.Number.Polynomial",
      "Crypto.Number.F2m",
      "Crypto.Number.Prime"
    ],
    "name": "crypto-numbers",
    "version": "0.2.7"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.ST",
        "Data.Array.Unsafe"
      ],
      "base": [
        "Data.Word",
        "Foreign",
        "GHC.ST"
      ]
    },
    "imports": [
      "Data.Array.ST",
      "Data.Array.Unsafe",
      "Data.Binary.IEEE754",
      "Data.ReinterpretCast",
      "Data.ReinterpretCast.Internal.ImplArray",
      "Data.ReinterpretCast.Internal.ImplFFI",
      "Data.Word",
      "Foreign",
      "GHC.ST"
    ],
    "modules": [
      "Data.ReinterpretCast",
      "Data.ReinterpretCast.Internal.ImplArray",
      "Data.ReinterpretCast.Internal.ImplFFI"
    ],
    "name": "reinterpret-cast",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Maybe",
        "Data.String"
      ],
      "containers": [
        "Data.Map"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "shakespeare": [
        "Text.Shakespeare.Base"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "xml-conduit": [
        "Text.XML"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.Data",
      "Data.Foldable",
      "Data.Map",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Test.Hspec",
      "Test.HUnit",
      "Text.Hamlet.XML",
      "Text.Hamlet.XMLParse",
      "Text.ParserCombinators.Parsec",
      "Text.Shakespeare.Base",
      "Text.XML"
    ],
    "modules": [
      "Text.Hamlet.XML"
    ],
    "name": "xml-hamlet",
    "version": "0.4.0.12"
  },
  {
    "dependencies": {
      "Earley": [],
      "base": [
        "Control.Monad",
        "Data.Data",
        "Data.List.NonEmpty",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "Text.Printf"
      ],
      "containers": [],
      "language-lua2": [],
      "lexer-applicative": [],
      "microlens": [
        "Lens.Micro"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "regex-applicative": [],
      "semigroups": [],
      "srcloc": [
        "Data.Loc"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashSet"
      ],
      "wl-pprint": [
        "Text.PrettyPrint.Leijen"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Data",
      "Data.HashSet",
      "Data.List.NonEmpty",
      "Data.Loc",
      "Data.Sequence",
      "Data.Typeable",
      "GHC.Generics",
      "Instances",
      "Language.Lua.Internal",
      "Language.Lua.Lexer",
      "Language.Lua.Parser",
      "Language.Lua.Pretty",
      "Language.Lua.Syntax",
      "Language.Lua.Token",
      "Lens.Micro",
      "Options.Applicative",
      "Prelude",
      "Test.Tasty.QuickCheck",
      "Text.PrettyPrint.Leijen",
      "Text.Printf"
    ],
    "modules": [
      "Language.Lua.Lexer",
      "Language.Lua.Parser",
      "Language.Lua.Pretty",
      "Language.Lua.Syntax",
      "Language.Lua.Token"
    ],
    "name": "language-lua2",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "base": [],
      "regex-applicative": [
        "Text.Regex.Applicative"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Text",
      "Text.Regex.Applicative"
    ],
    "modules": [
      "Text.Regex.Applicative.Text"
    ],
    "name": "regex-applicative-text",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Internal.Fusion",
        "Data.Text.Internal.Lazy.Fusion",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Text",
      "Data.Text.Internal.Fusion",
      "Data.Text.Internal.Lazy.Fusion",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Manipulate",
      "Data.Text.Manipulate.Internal.Fusion"
    ],
    "modules": [
      "Data.Text.Manipulate",
      "Data.Text.Lazy.Manipulate"
    ],
    "name": "text-manipulate",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.Typeable"
      ],
      "tasty": [
        "Test.Tasty.Providers"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.IORef",
      "Data.Typeable",
      "Test.Tasty.HUnit.Orig",
      "Test.Tasty.HUnit.Steps",
      "Test.Tasty.Providers"
    ],
    "modules": [
      "Test.Tasty.HUnit"
    ],
    "name": "tasty-hunit",
    "version": "0.9.2"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.Singletons.Bool"
    ],
    "name": "singleton-bool",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Maybe",
        "Numeric",
        "System.Exit"
      ],
      "containers": [
        "Data.Map"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "scotty": [
        "Web.Scotty"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Aeson",
      "Data.Default.Class",
      "Data.HashMap.Strict",
      "Data.Map",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Numeric",
      "Paths",
      "System.Exit",
      "Web.Scotty"
    ],
    "modules": [
      "Web.Scotty.Comet"
    ],
    "name": "kansas-comet",
    "version": "0.4"
  },
  {
    "dependencies": {
      "aeson": [],
      "attoparsec": [],
      "base": [
        "Data.Function",
        "Data.Int",
        "Data.Monoid",
        "GHC.Int"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "process": [],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.UTF8",
      "Data.Function",
      "Data.HashMap.Lazy",
      "Data.Int",
      "Data.Monoid",
      "Data.Text",
      "GHC.Int",
      "System.Random",
      "VLQ"
    ],
    "modules": [
      "SourceMap",
      "SourceMap.Types"
    ],
    "name": "sourcemap",
    "version": "0.1.6"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Maybe",
        "Data.Typeable"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "data-default": [],
      "hashable": [
        "Data.Hashable"
      ],
      "nonce": [
        "Crypto.Nonce"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Crypto.Nonce",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Char8",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.Maybe",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Typeable",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.Property",
      "Web.PathPieces",
      "Web.ServerSession.Core.Internal",
      "Web.ServerSession.Core.StorageTests"
    ],
    "modules": [
      "Web.ServerSession.Core",
      "Web.ServerSession.Core.Internal",
      "Web.ServerSession.Core.StorageTests"
    ],
    "name": "serversession",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Semigroup",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "Numeric"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16.Lazy"
      ],
      "base64-bytestring": [],
      "bifunctors": [],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "binary-conduit": [
        "Data.Conduit.Serialization.Binary"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "bzlib": [
        "Codec.Compression.BZip"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "crypto-cipher-types": [],
      "cryptonite": [
        "Crypto.Cipher.AES",
        "Crypto.Cipher.Blowfish",
        "Crypto.Cipher.Camellia",
        "Crypto.Cipher.TripleDES",
        "Crypto.Error",
        "Crypto.Hash",
        "Crypto.Hash.Algorithms",
        "Crypto.Hash.IO",
        "Crypto.Number.Basic",
        "Crypto.Number.ModArithmetic",
        "Crypto.Number.Serialize",
        "Crypto.PubKey.DSA",
        "Crypto.PubKey.ECC.ECDSA",
        "Crypto.PubKey.RSA",
        "Crypto.PubKey.RSA.PKCS15",
        "Crypto.Random.EntropyPool"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "errors": [
        "Control.Error.Util"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "incremental-parser": [
        "Text.ParserCombinators.Incremental.LeftBiasedLocal"
      ],
      "ixset-typed": [
        "Data.IxSet.Typed"
      ],
      "lens": [
        "Control.Lens",
        "Data.Data.Lens"
      ],
      "memory": [
        "Data.ByteArray"
      ],
      "monad-loops": [
        "Control.Monad.Loops"
      ],
      "nettle": [
        "Crypto.Nettle.Ciphers"
      ],
      "newtype": [
        "Control.Newtype"
      ],
      "openpgp-asciiarmor": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "securemem": [],
      "semigroups": [],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "wl-pprint-extras": [
        "Text.PrettyPrint.Free"
      ],
      "zlib": [
        "Codec.Compression.Zlib",
        "Codec.Compression.Zlib.Raw"
      ]
    },
    "imports": [
      "Codec.Compression.BZip",
      "Codec.Compression.Zlib",
      "Codec.Compression.Zlib.Raw",
      "Codec.Encryption.OpenPGP.Arbitrary",
      "Codec.Encryption.OpenPGP.BlockCipher",
      "Codec.Encryption.OpenPGP.CFB",
      "Codec.Encryption.OpenPGP.Compression",
      "Codec.Encryption.OpenPGP.Expirations",
      "Codec.Encryption.OpenPGP.Fingerprint",
      "Codec.Encryption.OpenPGP.Internal",
      "Codec.Encryption.OpenPGP.Internal.CryptoCipherTypes",
      "Codec.Encryption.OpenPGP.Internal.Cryptonite",
      "Codec.Encryption.OpenPGP.Internal.HOBlockCipher",
      "Codec.Encryption.OpenPGP.KeyInfo",
      "Codec.Encryption.OpenPGP.KeyringParser",
      "Codec.Encryption.OpenPGP.KeySelection",
      "Codec.Encryption.OpenPGP.Ontology",
      "Codec.Encryption.OpenPGP.S2K",
      "Codec.Encryption.OpenPGP.SecretKey",
      "Codec.Encryption.OpenPGP.Serialize",
      "Codec.Encryption.OpenPGP.SerializeForSigs",
      "Codec.Encryption.OpenPGP.Signatures",
      "Codec.Encryption.OpenPGP.Types",
      "Codec.Encryption.OpenPGP.Types.Internal.Base",
      "Codec.Encryption.OpenPGP.Types.Internal.CryptoniteNewtypes",
      "Codec.Encryption.OpenPGP.Types.Internal.PacketClass",
      "Codec.Encryption.OpenPGP.Types.Internal.PKITypes",
      "Codec.Encryption.OpenPGP.Types.Internal.Pkt",
      "Codec.Encryption.OpenPGP.Types.Internal.TK",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Error.Util",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Loops",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.State.Lazy",
      "Control.Newtype",
      "Criterion.Main",
      "Crypto.Cipher.AES",
      "Crypto.Cipher.Blowfish",
      "Crypto.Cipher.Camellia",
      "Crypto.Cipher.TripleDES",
      "Crypto.Error",
      "Crypto.Hash",
      "Crypto.Hash.Algorithms",
      "Crypto.Hash.IO",
      "Crypto.Nettle.Ciphers",
      "Crypto.Number.Basic",
      "Crypto.Number.ModArithmetic",
      "Crypto.Number.Serialize",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.ECC.ECDSA",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.PKCS15",
      "Crypto.Random.EntropyPool",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.Attoparsec.Text",
      "Data.Bifunctor",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteArray",
      "Data.ByteString",
      "Data.ByteString.Base16.Lazy",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.OpenPGP.Compression",
      "Data.Conduit.OpenPGP.Decrypt",
      "Data.Conduit.OpenPGP.Keyring",
      "Data.Conduit.OpenPGP.Keyring.Instances",
      "Data.Conduit.OpenPGP.Verify",
      "Data.Conduit.Serialization.Binary",
      "Data.Data",
      "Data.Data.Lens",
      "Data.Default.Class",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.IxSet.Typed",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Semigroup",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Data.Typeable",
      "Data.Word",
      "GHC.Generics",
      "Network.URI",
      "Numeric",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Text.ParserCombinators.Incremental.LeftBiasedLocal",
      "Text.PrettyPrint.Free"
    ],
    "modules": [
      "Codec.Encryption.OpenPGP.Types",
      "Codec.Encryption.OpenPGP.CFB",
      "Codec.Encryption.OpenPGP.Compression",
      "Codec.Encryption.OpenPGP.Expirations",
      "Codec.Encryption.OpenPGP.Fingerprint",
      "Codec.Encryption.OpenPGP.KeyInfo",
      "Codec.Encryption.OpenPGP.KeyringParser",
      "Codec.Encryption.OpenPGP.KeySelection",
      "Codec.Encryption.OpenPGP.Ontology",
      "Codec.Encryption.OpenPGP.S2K",
      "Codec.Encryption.OpenPGP.SecretKey",
      "Codec.Encryption.OpenPGP.Serialize",
      "Codec.Encryption.OpenPGP.Signatures",
      "Data.Conduit.OpenPGP.Compression",
      "Data.Conduit.OpenPGP.Decrypt",
      "Data.Conduit.OpenPGP.Filter",
      "Data.Conduit.OpenPGP.Keyring",
      "Data.Conduit.OpenPGP.Keyring.Instances",
      "Data.Conduit.OpenPGP.Verify"
    ],
    "name": "hOpenPGP",
    "version": "2.5.5"
  },
  {
    "dependencies": {
      "base": [
        "System.Environment",
        "System.IO"
      ],
      "basic-prelude": [
        "BasicPrelude"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "postgresql-schema": [],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple"
      ],
      "shelly": [
        "Shelly"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ]
    },
    "imports": [
      "BasicPrelude",
      "Database.PostgreSQL.Schema",
      "Database.PostgreSQL.Simple",
      "Data.Text",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Options.Applicative",
      "Paths",
      "Shelly",
      "System.Environment",
      "System.IO"
    ],
    "modules": [
      "Database.PostgreSQL.Schema"
    ],
    "name": "postgresql-schema",
    "version": "0.1.10"
  },
  {
    "dependencies": {
      "base": [
        "Data.Int",
        "Data.Monoid",
        "Data.Word",
        "GHC.Base",
        "GHC.Num"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "old-locale": [],
      "text": [],
      "time": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Blaze.Text",
      "Blaze.Text.Double",
      "Blaze.Text.Double.Native",
      "Blaze.Text.Int",
      "Data.ByteString.Char8",
      "Data.Double.Conversion.ByteString",
      "Data.Int",
      "Data.Monoid",
      "Data.Vector",
      "Data.Word",
      "GHC.Base",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Simple.Internals",
      "GHC.Num",
      "GHC.Types",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2"
    ],
    "modules": [
      "Blaze.Text",
      "Blaze.Text.Double",
      "Blaze.Text.Int"
    ],
    "name": "blaze-textual",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudHSM",
      "Test.AWS.CloudHSM",
      "Test.AWS.CloudHSM.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudHSM",
      "Network.AWS.CloudHSM.AddTagsToResource",
      "Network.AWS.CloudHSM.CreateHAPG",
      "Network.AWS.CloudHSM.CreateHSM",
      "Network.AWS.CloudHSM.CreateLunaClient",
      "Network.AWS.CloudHSM.DeleteHAPG",
      "Network.AWS.CloudHSM.DeleteHSM",
      "Network.AWS.CloudHSM.DeleteLunaClient",
      "Network.AWS.CloudHSM.DescribeHAPG",
      "Network.AWS.CloudHSM.DescribeHSM",
      "Network.AWS.CloudHSM.DescribeLunaClient",
      "Network.AWS.CloudHSM.GetConfig",
      "Network.AWS.CloudHSM.ListAvailableZones",
      "Network.AWS.CloudHSM.ListHAPGs",
      "Network.AWS.CloudHSM.ListHSMs",
      "Network.AWS.CloudHSM.ListLunaClients",
      "Network.AWS.CloudHSM.ListTagsForResource",
      "Network.AWS.CloudHSM.ModifyHAPG",
      "Network.AWS.CloudHSM.ModifyHSM",
      "Network.AWS.CloudHSM.ModifyLunaClient",
      "Network.AWS.CloudHSM.RemoveTagsFromResource",
      "Network.AWS.CloudHSM.Types",
      "Network.AWS.CloudHSM.Waiters"
    ],
    "name": "amazonka-cloudhsm",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "constraints": [],
      "monad-control": [],
      "transformers": [],
      "transformers-base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Control.Monad.Trans.Unlift"
    ],
    "name": "monad-unlift",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [],
      "lucid": [
        "Lucid.Base"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": []
    },
    "imports": [
      "Data.Text",
      "Lucid.Base",
      "Lucid.Svg.Attributes"
    ],
    "modules": [
      "Lucid.Svg",
      "Lucid.Svg.Path",
      "Lucid.Svg.Elements",
      "Lucid.Svg.Attributes"
    ],
    "name": "lucid-svg",
    "version": "0.7.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "System.IO.Unsafe"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Ppr",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Exception",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.Syntax",
      "System.IO.Unsafe",
      "Text.PrettyPrint.HughesPJ"
    ],
    "modules": [
      "Debug.Trace.LocationTH"
    ],
    "name": "loch-th",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Traversable",
        "Data.Typeable"
      ],
      "lens": [
        "Control.Lens"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Data.Foldable",
      "Data.Traversable",
      "Data.Typeable"
    ],
    "modules": [
      "Data.BoundingBox"
    ],
    "name": "boundingboxes",
    "version": "0.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.Typeable",
        "Prelude"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Enclosed",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Trans.Control",
      "Data.IORef",
      "Data.Typeable",
      "Prelude",
      "Test.Hspec",
      "Test.QuickCheck.Arbitrary"
    ],
    "modules": [
      "Control.Exception.Enclosed"
    ],
    "name": "enclosed-exceptions",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Word",
        "GHC.Base"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Char8",
      "Data.Word",
      "Data.Word8",
      "GHC.Base",
      "Test.Hspec",
      "Test.Hspec.QuickCheck"
    ],
    "modules": [
      "Data.Char8",
      "Data.Word8"
    ],
    "name": "word8",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.IORef"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Data.IORef"
    ],
    "modules": [
      "Control.Monad.Tools",
      "Control.Applicative.Tools",
      "Data.List.Tools",
      "Data.Function.Tools",
      "Data.Bool.Tools",
      "Data.IORef.Tools",
      "Data.Tuple.Tools"
    ],
    "name": "yjtools",
    "version": "0.9.18"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.PubSub",
      "Network.Google.PubSub.Types",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.Acknowledge",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.Create",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.Delete",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.Get",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.GetIAMPolicy",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.List",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.ModifyAckDeadline",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.ModifyPushConfig",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.Pull",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.SetIAMPolicy",
      "Network.Google.Resource.PubSub.Projects.Subscriptions.TestIAMPermissions",
      "Network.Google.Resource.PubSub.Projects.Topics.Create",
      "Network.Google.Resource.PubSub.Projects.Topics.Delete",
      "Network.Google.Resource.PubSub.Projects.Topics.Get",
      "Network.Google.Resource.PubSub.Projects.Topics.GetIAMPolicy",
      "Network.Google.Resource.PubSub.Projects.Topics.List",
      "Network.Google.Resource.PubSub.Projects.Topics.Publish",
      "Network.Google.Resource.PubSub.Projects.Topics.SetIAMPolicy",
      "Network.Google.Resource.PubSub.Projects.Topics.Subscriptions.List",
      "Network.Google.Resource.PubSub.Projects.Topics.TestIAMPermissions"
    ],
    "name": "gogol-pubsub",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base-prelude": [
        "BasePrelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Unsafe"
      ],
      "success": [
        "Success.Pure"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "BasePrelude",
      "BinaryParser.Prelude",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Strict",
      "Data.ByteString",
      "Data.ByteString.Unsafe",
      "Data.Text",
      "Success.Pure"
    ],
    "modules": [
      "BinaryParser"
    ],
    "name": "binary-parser",
    "version": "0.5.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "focus": [
        "Focus"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "list-t": [
        "ListT"
      ],
      "primitive": [
        "Data.Primitive.Array"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "APITests.MapTests.Update",
      "BasePrelude",
      "Control.Concurrent.Async",
      "Control.Monad.Free",
      "Control.Monad.Free.TH",
      "Control.Monad.Trans.Class",
      "Criterion.Main",
      "Data.Char",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashTable.IO",
      "Data.Map",
      "Data.Primitive.Array",
      "Data.Set",
      "Data.Text",
      "Focus",
      "ListT",
      "MTLPrelude",
      "STMContainers.HAMT",
      "STMContainers.HAMT.Level",
      "STMContainers.HAMT.Nodes",
      "STMContainers.Map",
      "STMContainers.Prelude",
      "STMContainers.Set",
      "STMContainers.SizedArray",
      "STMContainers.WordArray",
      "STMContainers.WordArray.Indices",
      "System.Random.MWC.Monad",
      "Test.Framework",
      "WordArrayTests.Update"
    ],
    "modules": [
      "STMContainers.Bimap",
      "STMContainers.Multimap",
      "STMContainers.Map",
      "STMContainers.Set"
    ],
    "name": "stm-containers",
    "version": "0.2.15"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.IO",
        "Prelude",
        "System.Environment"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Conc",
      "GHC.Exts",
      "GHC.IO",
      "Prelude",
      "System.Environment",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Control.Concurrent.Async"
    ],
    "name": "async",
    "version": "2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.Zip",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.TypeLits",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "syb": [
        "Data.Generics"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "th-expand-syns": [
        "Language.Haskell.TH.ExpandSyns"
      ],
      "th-lift": [
        "Language.Haskell.TH.Lift"
      ],
      "th-orphans": [
        "Language.Haskell.TH.Instances"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Control.Monad.Zip",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Generics",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Set",
      "Data.Traversable",
      "Dec",
      "DsDec",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.TypeLits",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Desugar",
      "Language.Haskell.TH.Desugar.Core",
      "Language.Haskell.TH.Desugar.Expand",
      "Language.Haskell.TH.Desugar.Match",
      "Language.Haskell.TH.Desugar.Reify",
      "Language.Haskell.TH.Desugar.Sweeten",
      "Language.Haskell.TH.Desugar.Util",
      "Language.Haskell.TH.ExpandSyns",
      "Language.Haskell.TH.Instances",
      "Language.Haskell.TH.Lift",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Splices",
      "Test.Hspec",
      "Test.HUnit"
    ],
    "modules": [
      "Language.Haskell.TH.Desugar",
      "Language.Haskell.TH.Desugar.Sweeten",
      "Language.Haskell.TH.Desugar.Lift",
      "Language.Haskell.TH.Desugar.Expand"
    ],
    "name": "th-desugar",
    "version": "1.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Complex",
        "Data.Data",
        "Data.Foldable",
        "Data.Int",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.ForeignPtr",
        "GHC.Ptr",
        "GHC.TypeLits",
        "Prelude"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive",
        "Data.Primitive.Array",
        "Data.Primitive.ByteArray"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Data.Complex",
      "Data.Data",
      "Data.Foldable",
      "Data.Int",
      "Data.Monoid",
      "Data.Primitive",
      "Data.Primitive.Array",
      "Data.Primitive.ByteArray",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector.Fixed",
      "Data.Vector.Fixed.Cont",
      "Data.Vector.Fixed.Internal",
      "Data.Vector.Fixed.Mutable",
      "Data.Vector.Fixed.Primitive",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.ForeignPtr",
      "GHC.Ptr",
      "GHC.TypeLits",
      "Prelude",
      "System.FilePath.Find",
      "Test.DocTest"
    ],
    "modules": [
      "Data.Vector.Fixed.Cont",
      "Data.Vector.Fixed",
      "Data.Vector.Fixed.Generic",
      "Data.Vector.Fixed.Monomorphic",
      "Data.Vector.Fixed.Mutable",
      "Data.Vector.Fixed.Boxed",
      "Data.Vector.Fixed.Primitive",
      "Data.Vector.Fixed.Unboxed",
      "Data.Vector.Fixed.Storable"
    ],
    "name": "fixed-vector",
    "version": "0.8.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Traversable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Foldable",
      "Data.Monoid",
      "Data.Traversable"
    ],
    "modules": [
      "Data.Tuple.Homogenous"
    ],
    "name": "tuples-homogenous-h98",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Dynamic",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "System.IO",
        "System.IO.Unsafe",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Monad.STM"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "transformers": [],
      "transient": [
        "Transient.Backtrack",
        "Transient.Base",
        "Transient.EVars",
        "Transient.Indeterminism",
        "Transient.Internals",
        "Transient.Logged"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.State",
      "Control.Monad.STM",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Dynamic",
      "Data.Foldable",
      "Data.Hashable",
      "Data.IORef",
      "Data.IP",
      "Data.JSString",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.TCache",
      "Data.TCache.Defs",
      "Data.Text",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "GHCJS.Foreign.Callback",
      "GHCJS.Marshal",
      "GHCJS.Prim",
      "Network",
      "Network.BSD",
      "Network.HTTP",
      "Network.Info",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.ByteString.Lazy",
      "Network.WebSockets",
      "Network.WebSockets.Connection",
      "Network.WebSockets.Stream",
      "System.Directory",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "System.Random",
      "Transient.Backtrack",
      "Transient.Base",
      "Transient.EVars",
      "Transient.Indeterminism",
      "Transient.Internals",
      "Transient.Logged",
      "Transient.Move",
      "Transient.Move.Services",
      "Transient.Move.Utils",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Transient.Move",
      "Transient.MapReduce",
      "Transient.Move.Utils"
    ],
    "name": "transient-universe",
    "version": "0.3.5"
  },
  {
    "dependencies": {
      "base": [],
      "time": [
        "Data.Time",
        "Data.Time.Clock.TAI"
      ]
    },
    "imports": [
      "Data.Time",
      "Data.Time.Clock.AnnouncedLeapSeconds",
      "Data.Time.Clock.TAI",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Time.Clock.AnnouncedLeapSeconds"
    ],
    "name": "leapseconds-announced",
    "version": "2017"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Int",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString.Lazy",
      "Data.Int",
      "Data.Maybe",
      "Data.Monoid",
      "Prelude",
      "System.Socket",
      "System.Socket.Family.Inet",
      "System.Socket.Family.Inet6",
      "System.Socket.Protocol.TCP",
      "System.Socket.Protocol.UDP",
      "System.Socket.Type.Datagram",
      "System.Socket.Type.Stream",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "System.Socket",
      "System.Socket.Family.Inet",
      "System.Socket.Family.Inet6",
      "System.Socket.Type.Raw",
      "System.Socket.Type.Datagram",
      "System.Socket.Type.Stream",
      "System.Socket.Type.SequentialPacket",
      "System.Socket.Protocol.UDP",
      "System.Socket.Protocol.TCP",
      "System.Socket.Unsafe"
    ],
    "name": "socket",
    "version": "0.6.1.0"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.HTTP.Base"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.List",
        "Data.Maybe"
      ],
      "biocore": [
        "Bio.Core.Sequence"
      ],
      "biofasta": [
        "Bio.Sequence.Fasta"
      ],
      "blastxml": [
        "Bio.BlastXML"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "hxt": [
        "Text.XML.HXT.Core"
      ],
      "mtl": [],
      "network": [
        "Network"
      ],
      "transformers": []
    },
    "imports": [
      "Bio.BlastXML",
      "Bio.Core.Sequence",
      "Bio.Sequence.Fasta",
      "Control.Concurrent",
      "Control.Monad",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.List",
      "Data.Maybe",
      "Network",
      "Network.HTTP.Base",
      "Network.HTTP.Conduit",
      "Text.XML.HXT.Core"
    ],
    "modules": [
      "Bio.BlastHTTP"
    ],
    "name": "BlastHTTP",
    "version": "1.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "containers": [
        "Data.Map.Strict"
      ],
      "fgl": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Map.Strict",
      "Data.Text"
    ],
    "modules": [
      "Drifter"
    ],
    "name": "drifter",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Int",
        "Data.List",
        "Data.Proxy",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "crypto-api": [
        "Crypto.Random"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Class",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Cont",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer.Class",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Crypto.Random",
      "Data.Bits",
      "Data.ByteString",
      "Data.Int",
      "Data.List",
      "Data.Proxy",
      "Data.Tagged",
      "Data.Word"
    ],
    "modules": [
      "Control.Monad.CryptoRandom"
    ],
    "name": "monadcryptorandom",
    "version": "0.7.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.Concurrent",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "network": [
        "Network.Socket"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.Concurrent",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Network.Socket",
      "OpenSSL",
      "OpenSSL.ASN1",
      "OpenSSL.BIO",
      "OpenSSL.BN",
      "OpenSSL.Cipher",
      "OpenSSL.DH.Internal",
      "OpenSSL.DSA",
      "OpenSSL.ERR",
      "OpenSSL.EVP.Base64",
      "OpenSSL.EVP.Cipher",
      "OpenSSL.EVP.Digest",
      "OpenSSL.EVP.Internal",
      "OpenSSL.EVP.Open",
      "OpenSSL.EVP.PKey",
      "OpenSSL.EVP.Seal",
      "OpenSSL.EVP.Verify",
      "OpenSSL.Objects",
      "OpenSSL.PEM",
      "OpenSSL.PKCS7",
      "OpenSSL.RSA",
      "OpenSSL.Session",
      "OpenSSL.SSL",
      "OpenSSL.Stack",
      "OpenSSL.Utils",
      "OpenSSL.X509",
      "OpenSSL.X509.Name",
      "OpenSSL.X509.Revocation",
      "OpenSSL.X509.Store",
      "System.IO",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Printf"
    ],
    "modules": [
      "OpenSSL",
      "OpenSSL.BN",
      "OpenSSL.EVP.Base64",
      "OpenSSL.EVP.Cipher",
      "OpenSSL.EVP.Digest",
      "OpenSSL.EVP.Internal",
      "OpenSSL.EVP.Open",
      "OpenSSL.EVP.PKey",
      "OpenSSL.EVP.Seal",
      "OpenSSL.EVP.Sign",
      "OpenSSL.EVP.Verify",
      "OpenSSL.Cipher",
      "OpenSSL.PEM",
      "OpenSSL.PKCS7",
      "OpenSSL.Random",
      "OpenSSL.DSA",
      "OpenSSL.RSA",
      "OpenSSL.X509",
      "OpenSSL.X509.Revocation",
      "OpenSSL.X509.Request",
      "OpenSSL.X509.Store",
      "OpenSSL.Session",
      "OpenSSL.DH"
    ],
    "name": "HsOpenSSL",
    "version": "0.11.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Coerce",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Data.Proxy",
        "GHC.Exts",
        "GHC.Generics",
        "Prelude"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Class"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-lift": [
        "Control.Monad.Trans.Lift.CallCC",
        "Control.Monad.Trans.Lift.Catch",
        "Control.Monad.Trans.Lift.Listen",
        "Control.Monad.Trans.Lift.Local",
        "Control.Monad.Trans.Lift.Pass",
        "Control.Monad.Trans.Lift.StT"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Ether.Abbr",
      "Control.Ether.Implicit.Abbr",
      "Control.Ether.TH",
      "Control.Ether.Util",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Ether",
      "Control.Monad.Ether.Except",
      "Control.Monad.Ether.Except.Class",
      "Control.Monad.Ether.Implicit",
      "Control.Monad.Ether.Implicit.Except",
      "Control.Monad.Ether.Implicit.Reader",
      "Control.Monad.Ether.Implicit.State",
      "Control.Monad.Ether.Implicit.State.Lazy",
      "Control.Monad.Ether.Implicit.Writer",
      "Control.Monad.Ether.Reader",
      "Control.Monad.Ether.Reader.Class",
      "Control.Monad.Ether.State",
      "Control.Monad.Ether.State.Class",
      "Control.Monad.Ether.State.Lazy",
      "Control.Monad.Ether.State.Strict",
      "Control.Monad.Ether.Writer",
      "Control.Monad.Ether.Writer.Class",
      "Control.Monad.Except",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Morph",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Ether.Dispatch",
      "Control.Monad.Trans.Ether.Except",
      "Control.Monad.Trans.Ether.Reader",
      "Control.Monad.Trans.Ether.State.Lazy",
      "Control.Monad.Trans.Ether.State.Strict",
      "Control.Monad.Trans.Ether.Tagged",
      "Control.Monad.Trans.Ether.Writer",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Lift.CallCC",
      "Control.Monad.Trans.Lift.Catch",
      "Control.Monad.Trans.Lift.Listen",
      "Control.Monad.Trans.Lift.Local",
      "Control.Monad.Trans.Lift.Pass",
      "Control.Monad.Trans.Lift.StT",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Class",
      "Data.Coerce",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Data.Proxy",
      "GHC.Exts",
      "GHC.Generics",
      "Language.Haskell.TH",
      "Prelude",
      "Regression.T1",
      "Regression.T10",
      "Regression.T2",
      "Regression.T3",
      "Regression.T4",
      "Regression.T5",
      "Regression.T6",
      "Regression.T7",
      "Regression.T8",
      "Regression.T9",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Control.Ether.Abbr",
      "Control.Ether.Implicit.Abbr",
      "Control.Ether.TH",
      "Control.Monad.Trans.Ether.Reader",
      "Control.Monad.Trans.Ether.Writer",
      "Control.Monad.Trans.Ether.State",
      "Control.Monad.Trans.Ether.State.Lazy",
      "Control.Monad.Trans.Ether.State.Strict",
      "Control.Monad.Trans.Ether.Except",
      "Control.Monad.Trans.Ether.Dispatch",
      "Control.Monad.Trans.Ether.Tagged",
      "Control.Monad.Ether",
      "Control.Monad.Ether.Reader",
      "Control.Monad.Ether.Reader.Class",
      "Control.Monad.Ether.Writer",
      "Control.Monad.Ether.Writer.Class",
      "Control.Monad.Ether.State",
      "Control.Monad.Ether.State.Class",
      "Control.Monad.Ether.State.Lazy",
      "Control.Monad.Ether.State.Strict",
      "Control.Monad.Ether.Except",
      "Control.Monad.Ether.Except.Class",
      "Control.Monad.Ether.Implicit",
      "Control.Monad.Ether.Implicit.Reader",
      "Control.Monad.Ether.Implicit.Writer",
      "Control.Monad.Ether.Implicit.State",
      "Control.Monad.Ether.Implicit.State.Lazy",
      "Control.Monad.Ether.Implicit.State.Strict",
      "Control.Monad.Ether.Implicit.Except"
    ],
    "name": "ether",
    "version": "0.4.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Either",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Prelude",
        "System.Environment",
        "System.IO"
      ],
      "parallel": [
        "Control.Parallel"
      ],
      "transformers": [
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Parallel",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Parallel",
      "Data.Either",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Prelude",
      "System.Environment",
      "System.IO"
    ],
    "modules": [
      "Control.Monad.Parallel"
    ],
    "name": "monad-parallel",
    "version": "0.7.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Tuple",
        "System.IO"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "fasta": [
        "Data.Fasta.Text",
        "Data.Fasta.Text.Types"
      ],
      "modify-fasta": [],
      "mtl": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "pipes-text": [
        "Pipes.Text"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA"
      ],
      "regex-tdfa-text": [
        "Text.Regex.TDFA.Text"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "text-show": [
        "TextShow"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Data.Char",
      "Data.Either",
      "Data.Fasta.Text",
      "Data.Fasta.Text.Types",
      "Data.Foldable",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Tuple",
      "Diversity",
      "FilterCloneList",
      "FilterCloneMap",
      "FilterFastaList",
      "Options.Applicative",
      "Pipes",
      "Pipes.Prelude",
      "Pipes.Text",
      "Pipes.Text.IO",
      "Print",
      "System.IO",
      "Text.Regex.TDFA",
      "Text.Regex.TDFA.Text",
      "TextShow",
      "TransformCloneList",
      "TransformFastaList",
      "Types",
      "Utility"
    ],
    "modules": [
      "Diversity",
      "FilterCloneList",
      "FilterCloneMap",
      "FilterFastaList",
      "Print",
      "TransformCloneList",
      "TransformFastaList",
      "Types",
      "Utility"
    ],
    "name": "modify-fasta",
    "version": "0.8.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Monoid",
        "GHC.Exts"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "haskell-src-meta": [
        "Language.Haskell.Meta.Parse"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "GHC.Exts",
      "Language.Haskell.Meta.Parse",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Test.HUnit",
      "Text.InterpolatedString.Perl6"
    ],
    "modules": [
      "Text.InterpolatedString.Perl6"
    ],
    "name": "interpolatedstring-perl6",
    "version": "1.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "binary": [],
      "bitcoin-api": [
        "Network.Bitcoin.Api.Blockchain",
        "Network.Bitcoin.Api.Mining",
        "Network.Bitcoin.Api.Transaction",
        "Network.Bitcoin.Api.Types",
        "Network.Bitcoin.Api.Wallet"
      ],
      "bitcoin-block": [
        "Data.Bitcoin.Block"
      ],
      "bitcoin-tx": [
        "Data.Bitcoin.Transaction"
      ],
      "bytestring": [],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "lens": [],
      "stm": [],
      "stm-chans": [],
      "stm-conduit": [],
      "text": [
        "Data.Text"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Bitcoin.Api.Transaction",
      "Data.Bitcoin.Block",
      "Data.Bitcoin.Transaction",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Text",
      "Network.Bitcoin.Api.Blockchain",
      "Network.Bitcoin.Api.Mining",
      "Network.Bitcoin.Api.Transaction",
      "Network.Bitcoin.Api.Types",
      "Network.Bitcoin.Api.Wallet",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Control.Bitcoin.Api.Transaction"
    ],
    "name": "bitcoin-api-extra",
    "version": "0.9.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Either"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64",
        "Data.ByteString.Base64.Lazy"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "mtl": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Base64.Lazy",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Either",
      "Data.PEM",
      "Data.PEM.Parser",
      "Data.PEM.Types",
      "Data.PEM.Writer",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.PEM"
    ],
    "name": "pem",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable",
        "Data.Int",
        "Data.Ratio",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Types"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.Error"
      ],
      "old-locale": [],
      "old-time": [
        "System.Time"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar.OrdinalDate",
        "Data.Time.Clock.POSIX"
      ]
    },
    "imports": [
      "Control.Monad.Error",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.Convertible",
      "Data.Convertible.Base",
      "Data.Convertible.Instances",
      "Data.Convertible.Instances.C",
      "Data.Convertible.Instances.Map",
      "Data.Convertible.Instances.Num",
      "Data.Convertible.Instances.Text",
      "Data.Convertible.Instances.Time",
      "Data.Convertible.Utils",
      "Data.Foldable",
      "Data.Int",
      "Data.Map",
      "Data.Ratio",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Calendar.OrdinalDate",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.Types",
      "System.Time",
      "Test.HUnit",
      "Test.HUnit.Tools",
      "TestInfrastructure",
      "TestMap",
      "TestNum",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Tools",
      "TestTime"
    ],
    "modules": [
      "Data.Convertible",
      "Data.Convertible.Base",
      "Data.Convertible.Utils",
      "Data.Convertible.Instances",
      "Data.Convertible.Instances.C",
      "Data.Convertible.Instances.Map",
      "Data.Convertible.Instances.Num",
      "Data.Convertible.Instances.Text",
      "Data.Convertible.Instances.Time"
    ],
    "name": "convertible",
    "version": "1.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Prelude"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map"
      ]
    },
    "imports": [
      "Compiler.Hoopl",
      "Compiler.Hoopl.Block",
      "Compiler.Hoopl.Checkpoint",
      "Compiler.Hoopl.Collections",
      "Compiler.Hoopl.Combinators",
      "Compiler.Hoopl.Dataflow",
      "Compiler.Hoopl.Debug",
      "Compiler.Hoopl.Fuel",
      "Compiler.Hoopl.Graph",
      "Compiler.Hoopl.Label",
      "Compiler.Hoopl.MkGraph",
      "Compiler.Hoopl.Pointed",
      "Compiler.Hoopl.Show",
      "Compiler.Hoopl.Unique",
      "Compiler.Hoopl.XUtil",
      "Control.Applicative",
      "Control.Monad",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Prelude",
      "System.FilePath",
      "Test",
      "Test.Framework",
      "Test.Framework.Providers.HUnit"
    ],
    "modules": [
      "Compiler.Hoopl",
      "Compiler.Hoopl.Internals",
      "Compiler.Hoopl.Wrappers",
      "Compiler.Hoopl.Passes.Dominator",
      "Compiler.Hoopl.Passes.DList"
    ],
    "name": "hoopl",
    "version": "3.10.2.1"
  },
  {
    "dependencies": {
      "adjunctions": [],
      "base": [
        "Data.List.NonEmpty",
        "Data.Traversable"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "distributive": [],
      "dual-tree": [
        "Data.Tree.DUAL"
      ],
      "lens": [],
      "linear": [],
      "monoid-extras": [],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "semigroups": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Reader",
      "Data.HashMap.Strict",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Set",
      "Data.Traversable",
      "Data.Tree.DUAL"
    ],
    "modules": [
      "Diagrams.Core",
      "Diagrams.Core.Compile",
      "Diagrams.Core.Envelope",
      "Diagrams.Core.HasOrigin",
      "Diagrams.Core.Juxtapose",
      "Diagrams.Core.Names",
      "Diagrams.Core.Points",
      "Diagrams.Core.Query",
      "Diagrams.Core.Style",
      "Diagrams.Core.Measure",
      "Diagrams.Core.Trace",
      "Diagrams.Core.Transform",
      "Diagrams.Core.Types",
      "Diagrams.Core.V"
    ],
    "name": "diagrams-core",
    "version": "1.3.0.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Complex",
        "Data.Functor.Compose",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "fixed-vector": [
        "Data.Vector.Fixed",
        "Data.Vector.Fixed.Boxed",
        "Data.Vector.Fixed.Cont",
        "Data.Vector.Fixed.Primitive",
        "Data.Vector.Fixed.Storable",
        "Data.Vector.Fixed.Unboxed"
      ],
      "ghc-prim": [],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive.Array"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Data.Complex",
      "Data.Functor.Compose",
      "Data.List",
      "Data.Monoid",
      "Data.Primitive.Array",
      "Data.Typeable",
      "Data.Vector.Fixed",
      "Data.Vector.Fixed.Boxed",
      "Data.Vector.Fixed.Cont",
      "Data.Vector.Fixed.Primitive",
      "Data.Vector.Fixed.Storable",
      "Data.Vector.Fixed.Unboxed",
      "Data.Vector.HFixed",
      "Data.Vector.HFixed.Class",
      "Data.Vector.HFixed.Cont",
      "Data.Vector.HFixed.HVec",
      "Data.Vector.HFixed.TypeFuns",
      "GHC.Generics",
      "GHC.Prim",
      "Prelude",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Vector.HFixed",
      "Data.Vector.HFixed.Class",
      "Data.Vector.HFixed.Cont",
      "Data.Vector.HFixed.HVec",
      "Data.Vector.HFixed.Functor.HVecF",
      "Data.Vector.HFixed.TypeFuns"
    ],
    "name": "fixed-vector-hetero",
    "version": "0.3.1.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.IArray"
      ],
      "base": [
        "Data.Maybe"
      ],
      "regex-base": [
        "Text.Regex.Base",
        "Text.Regex.Base.Impl"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA.Common",
        "Text.Regex.TDFA.NewDFA.Engine",
        "Text.Regex.TDFA.NewDFA.Tester",
        "Text.Regex.TDFA.NewDFA.Uncons",
        "Text.Regex.TDFA.ReadRegex",
        "Text.Regex.TDFA.String",
        "Text.Regex.TDFA.TDFA"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.Array",
      "Data.Array.IArray",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Lazy",
      "Text.Regex.Base",
      "Text.Regex.Base.Impl",
      "Text.Regex.TDFA.Common",
      "Text.Regex.TDFA.NewDFA.Engine",
      "Text.Regex.TDFA.NewDFA.Tester",
      "Text.Regex.TDFA.NewDFA.Uncons",
      "Text.Regex.TDFA.ReadRegex",
      "Text.Regex.TDFA.String",
      "Text.Regex.TDFA.TDFA"
    ],
    "modules": [
      "Text.Regex.TDFA.Text",
      "Text.Regex.TDFA.Text.Lazy"
    ],
    "name": "regex-tdfa-text",
    "version": "1.0.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Unique"
      ],
      "hsp": [
        "HSP",
        "HSP.HTML4",
        "HSP.Monad",
        "HSP.XML",
        "HSP.XMLGenerator"
      ],
      "jmacro": [
        "Language.Javascript.JMacro"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "wl-pprint-text": [
        "Text.PrettyPrint.Leijen.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Cont",
      "Control.Monad.Error",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Unique",
      "Happstack.Server",
      "Happstack.Server.HSP.HTML",
      "Happstack.Server.JMacro",
      "HSP",
      "HSP.HTML4",
      "HSP.Identity",
      "HSP.Monad",
      "HSP.ServerPartT",
      "HSP.XML",
      "HSP.XMLGenerator",
      "HSX.JMacro",
      "HSX.JMacroT",
      "Language.Javascript.JMacro",
      "Text.PrettyPrint.Leijen.Text"
    ],
    "modules": [
      "HSP.JMacro",
      "HSP.JMacroT"
    ],
    "name": "hsx-jmacro",
    "version": "7.3.8"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Monad",
      "Data.Generics",
      "Data.Maybe"
    ],
    "modules": [
      "Data.Generics.Zipper"
    ],
    "name": "syz",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Fail",
      "Data.Coerce",
      "Data.Complex",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Tuple",
      "Lens.Micro",
      "Lens.Micro.Internal",
      "Lens.Micro.Type",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Lens.Micro",
      "Lens.Micro.Extras",
      "Lens.Micro.Internal",
      "Lens.Micro.Type"
    ],
    "name": "microlens",
    "version": "0.4.7.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Semigroup"
      ],
      "dlist": [
        "Data.DList"
      ],
      "semigroups": []
    },
    "imports": [
      "Data.DList",
      "Data.Semigroup"
    ],
    "modules": [
      "Data.DList.Instances"
    ],
    "name": "dlist-instances",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C.Types",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "stringsearch": []
    },
    "imports": [
      "Codec.Binary.Base16",
      "Codec.Binary.Base16Bench",
      "Codec.Binary.Base16Test",
      "Codec.Binary.Base32",
      "Codec.Binary.Base32Bench",
      "Codec.Binary.Base32Hex",
      "Codec.Binary.Base32HexBench",
      "Codec.Binary.Base32HexTest",
      "Codec.Binary.Base32Test",
      "Codec.Binary.Base64",
      "Codec.Binary.Base64Bench",
      "Codec.Binary.Base64Test",
      "Codec.Binary.Base64Url",
      "Codec.Binary.Base64UrlBench",
      "Codec.Binary.Base64UrlTest",
      "Codec.Binary.Base85",
      "Codec.Binary.Base85Bench",
      "Codec.Binary.Base85Test",
      "Codec.Binary.QuotedPrintable",
      "Codec.Binary.QuotedPrintableBench",
      "Codec.Binary.QuotedPrintableTest",
      "Codec.Binary.Uu",
      "Codec.Binary.UuBench",
      "Codec.Binary.UuTest",
      "Codec.Binary.Xx",
      "Codec.Binary.XxBench",
      "Codec.Binary.XxTest",
      "Codec.Binary.Yenc",
      "Codec.Binary.YencBench",
      "Codec.Binary.YencTest",
      "Codec.TestUtils",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.Conduit",
      "Data.Conduit.Codec.Util",
      "Data.List",
      "Data.Maybe",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C.Types",
      "System.IO",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.TH"
    ],
    "modules": [
      "Codec.Binary.Base16",
      "Codec.Binary.Base32",
      "Codec.Binary.Base32Hex",
      "Codec.Binary.Base64",
      "Codec.Binary.Base64Url",
      "Codec.Binary.Base85",
      "Codec.Binary.QuotedPrintable",
      "Codec.Binary.Uu",
      "Codec.Binary.Xx",
      "Codec.Binary.Yenc"
    ],
    "name": "sandi",
    "version": "0.4.0"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "bytestring": [],
      "http-conduit": [],
      "text": [
        "Data.Text"
      ],
      "time": []
    },
    "imports": [
      "Control.Concurrent.Async",
      "Data.Text"
    ],
    "modules": [
      "Network.Etcd"
    ],
    "name": "etcd",
    "version": "1.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Word",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.List",
      "Data.Word",
      "System.Environment",
      "Text.Bytedump"
    ],
    "modules": [
      "Text.Bytedump"
    ],
    "name": "bytedump",
    "version": "1.0"
  },
  {
    "dependencies": {
      "JuicyPixels": [],
      "base": [],
      "base64-bytestring": [
        "Data.ByteString.Base64.Lazy"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "colour": [],
      "containers": [],
      "diagrams-core": [],
      "diagrams-lib": [],
      "directory": [],
      "filepath": [],
      "hashable": [],
      "lens": [],
      "monoid-extras": [],
      "mtl": [],
      "old-time": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [],
      "semigroups": [],
      "split": [],
      "svg-builder": [],
      "text": [
        "Data.Text"
      ],
      "time": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Base64.Lazy",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Text",
      "Graphics.Rendering.SVG",
      "Options.Applicative"
    ],
    "modules": [
      "Diagrams.Backend.SVG",
      "Diagrams.Backend.SVG.CmdLine"
    ],
    "name": "diagrams-svg",
    "version": "1.4.0.3"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudWatch",
      "Test.AWS.CloudWatch",
      "Test.AWS.CloudWatch.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudWatch",
      "Network.AWS.CloudWatch.DeleteAlarms",
      "Network.AWS.CloudWatch.DescribeAlarmHistory",
      "Network.AWS.CloudWatch.DescribeAlarms",
      "Network.AWS.CloudWatch.DescribeAlarmsForMetric",
      "Network.AWS.CloudWatch.DisableAlarmActions",
      "Network.AWS.CloudWatch.EnableAlarmActions",
      "Network.AWS.CloudWatch.GetMetricStatistics",
      "Network.AWS.CloudWatch.ListMetrics",
      "Network.AWS.CloudWatch.PutMetricAlarm",
      "Network.AWS.CloudWatch.PutMetricData",
      "Network.AWS.CloudWatch.SetAlarmState",
      "Network.AWS.CloudWatch.Types",
      "Network.AWS.CloudWatch.Waiters"
    ],
    "name": "amazonka-cloudwatch",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Either",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.IO"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html.Renderer.String"
      ],
      "blaze-markup": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "hspec-core": [
        "Test.Hspec.Core.Spec"
      ],
      "html-conduit": [
        "Text.HTML.DOM"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Status"
      ],
      "monad-control": [],
      "network": [
        "Network.Socket.Internal"
      ],
      "persistent": [],
      "pretty-show": [
        "Text.Show.Pretty"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": [
        "Network.Wai.Test"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Cursor"
      ],
      "xml-types": [],
      "yesod-core": [
        "Yesod.Core"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Applicative",
      "Control.Exception.Lifted",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Either",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time.Clock",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Status",
      "Network.Socket.Internal",
      "Network.Wai",
      "Network.Wai.Test",
      "Prelude",
      "System.IO",
      "Test.Hspec",
      "Test.Hspec.Core.Spec",
      "Test.HUnit",
      "Text.Blaze.Html",
      "Text.Blaze.Html.Renderer.String",
      "Text.HTML.DOM",
      "Text.Show.Pretty",
      "Text.XML",
      "Text.XML.Cursor",
      "Web.Cookie",
      "Yesod.Core",
      "Yesod.Form",
      "Yesod.Test",
      "Yesod.Test.CssQuery",
      "Yesod.Test.TransversingCSS"
    ],
    "modules": [
      "Yesod.Test",
      "Yesod.Test.CssQuery",
      "Yesod.Test.TransversingCSS"
    ],
    "name": "yesod-test",
    "version": "1.5.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Int",
        "Data.Maybe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get"
      ],
      "containers": [
        "Data.Map"
      ],
      "messagepack": [
        "Data.MessagePack"
      ],
      "network-simple": [
        "Network.Simple.TCP"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Int",
      "Data.Map",
      "Data.Maybe",
      "Data.MessagePack",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Network.Simple.TCP"
    ],
    "modules": [
      "Network.MessagePack"
    ],
    "name": "messagepack-rpc",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "System.Environment"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "System.Environment",
      "System.FilePath.Posix",
      "System.FilePath.Windows",
      "TestGen",
      "Test.QuickCheck",
      "TestUtil"
    ],
    "modules": [
      "System.FilePath",
      "System.FilePath.Posix",
      "System.FilePath.Windows"
    ],
    "name": "filepath",
    "version": "1.4.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.HashMap.Strict",
      "Data.Proxy",
      "Network.AWS.SQS",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.SQS",
      "Test.AWS.SQS.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.SQS",
      "Network.AWS.SQS.AddPermission",
      "Network.AWS.SQS.ChangeMessageVisibility",
      "Network.AWS.SQS.ChangeMessageVisibilityBatch",
      "Network.AWS.SQS.CreateQueue",
      "Network.AWS.SQS.DeleteMessage",
      "Network.AWS.SQS.DeleteMessageBatch",
      "Network.AWS.SQS.DeleteQueue",
      "Network.AWS.SQS.GetQueueAttributes",
      "Network.AWS.SQS.GetQueueURL",
      "Network.AWS.SQS.ListDeadLetterSourceQueues",
      "Network.AWS.SQS.ListQueues",
      "Network.AWS.SQS.PurgeQueue",
      "Network.AWS.SQS.ReceiveMessage",
      "Network.AWS.SQS.RemovePermission",
      "Network.AWS.SQS.SendMessage",
      "Network.AWS.SQS.SendMessageBatch",
      "Network.AWS.SQS.SetQueueAttributes",
      "Network.AWS.SQS.Types",
      "Network.AWS.SQS.Waiters"
    ],
    "name": "amazonka-sqs",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "Diff": [
        "Data.Algorithm.Diff"
      ],
      "base": [
        "Data.Monoid"
      ]
    },
    "imports": [
      "Data.Algorithm.Diff",
      "Data.Algorithm.Diff3",
      "Data.Monoid",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Algorithm.Diff3"
    ],
    "name": "diff3",
    "version": "0.2.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ]
    },
    "imports": [
      "Data.List"
    ],
    "modules": [
      "Data.List.Ordered"
    ],
    "name": "data-ordlist",
    "version": "0.4.7.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Int",
        "Data.Maybe",
        "Data.Word",
        "Debug.Trace",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Codec.BMP.Base",
      "Codec.BMP.BitmapInfo",
      "Codec.BMP.BitmapInfoV3",
      "Codec.BMP.BitmapInfoV4",
      "Codec.BMP.BitmapInfoV5",
      "Codec.BMP.CIEXYZ",
      "Codec.BMP.Compression",
      "Codec.BMP.Error",
      "Codec.BMP.FileHeader",
      "Codec.BMP.Pack",
      "Codec.BMP.Unpack",
      "Control.Applicative",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Int",
      "Data.Maybe",
      "Data.Word",
      "Debug.Trace",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Codec.BMP"
    ],
    "name": "bmp",
    "version": "1.2.6.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes"
      ],
      "blaze-markup": [],
      "reform": [
        "Text.Reform",
        "Text.Reform.Backend",
        "Text.Reform.Core",
        "Text.Reform.Generalized",
        "Text.Reform.Result"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Reform",
      "Text.Reform.Backend",
      "Text.Reform.Blaze.Common",
      "Text.Reform.Core",
      "Text.Reform.Generalized",
      "Text.Reform.Result"
    ],
    "modules": [
      "Text.Reform.Blaze.Common",
      "Text.Reform.Blaze.String",
      "Text.Reform.Blaze.Text"
    ],
    "name": "reform-blaze",
    "version": "0.2.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.Maybe",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.Environment",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Foreign",
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Function",
      "Data.Int",
      "Data.IORef",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Foreign",
      "Data.Text.ICU",
      "Data.Text.ICU.Break",
      "Data.Text.ICU.Break.Pure",
      "Data.Text.ICU.Break.Types",
      "Data.Text.ICU.Char",
      "Data.Text.ICU.Collate",
      "Data.Text.ICU.Collate.Internal",
      "Data.Text.ICU.Collate.Pure",
      "Data.Text.ICU.Convert.Internal",
      "Data.Text.ICU.Error.Internal",
      "Data.Text.ICU.Internal",
      "Data.Text.ICU.Iterator",
      "Data.Text.ICU.Normalize",
      "Data.Text.ICU.Regex",
      "Data.Text.ICU.Regex.Internal",
      "Data.Text.ICU.Regex.Pure",
      "Data.Text.ICU.Text",
      "Data.Text.IO",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "Properties",
      "QuickCheckUtils",
      "System.Environment",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Text.ICU",
      "Data.Text.ICU.Break",
      "Data.Text.ICU.Char",
      "Data.Text.ICU.Collate",
      "Data.Text.ICU.Convert",
      "Data.Text.ICU.Error",
      "Data.Text.ICU.Normalize",
      "Data.Text.ICU.Regex",
      "Data.Text.ICU.Types"
    ],
    "name": "text-icu",
    "version": "0.7.0.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "aeson-pretty": [],
      "base": [],
      "base-compat": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "conduit-combinators": [],
      "conduit-extra": [],
      "directory": [],
      "errors": [],
      "filepath": [],
      "flock": [],
      "lifted-base": [],
      "monad-control": [],
      "process": [],
      "transformers": []
    },
    "imports": [
      "Data.ByteString.Lazy",
      "GitsonBench"
    ],
    "modules": [
      "Gitson",
      "Gitson.Util"
    ],
    "name": "gitson",
    "version": "0.5.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.SiteVerification.WebResource.Delete",
      "Network.Google.Resource.SiteVerification.WebResource.Get",
      "Network.Google.Resource.SiteVerification.WebResource.GetToken",
      "Network.Google.Resource.SiteVerification.WebResource.Insert",
      "Network.Google.Resource.SiteVerification.WebResource.List",
      "Network.Google.Resource.SiteVerification.WebResource.Patch",
      "Network.Google.Resource.SiteVerification.WebResource.Update",
      "Network.Google.SiteVerification",
      "Network.Google.SiteVerification.Types"
    ],
    "name": "gogol-siteverification",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.ST.Strict",
        "Data.Word",
        "Prelude"
      ],
      "repa": [
        "Data.Array.Repa",
        "Data.Array.Repa.Eval",
        "Data.Array.Repa.Repr.Unboxed",
        "Data.Array.Repa.Shape",
        "Data.Array.Repa.Unsafe"
      ],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.ST.Strict",
      "Data.Array.Repa",
      "Data.Array.Repa.Algorithms.Complex",
      "Data.Array.Repa.Algorithms.DFT.Roots",
      "Data.Array.Repa.Eval",
      "Data.Array.Repa.Repr.Unboxed",
      "Data.Array.Repa.Shape",
      "Data.Array.Repa.Unsafe",
      "Data.Vector.Generic",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Data.Word",
      "Prelude"
    ],
    "modules": [
      "Data.Array.Repa.Algorithms.DFT.Center",
      "Data.Array.Repa.Algorithms.DFT.Roots",
      "Data.Array.Repa.Algorithms.ColorRamp",
      "Data.Array.Repa.Algorithms.Complex",
      "Data.Array.Repa.Algorithms.Convolve",
      "Data.Array.Repa.Algorithms.DFT",
      "Data.Array.Repa.Algorithms.FFT",
      "Data.Array.Repa.Algorithms.Matrix",
      "Data.Array.Repa.Algorithms.Pixel",
      "Data.Array.Repa.Algorithms.Randomish"
    ],
    "name": "repa-algorithms",
    "version": "3.4.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Extension",
        "Language.Haskell.Exts.Parser",
        "Language.Haskell.Exts.Syntax"
      ],
      "language-haskell-extract": [
        "Language.Haskell.Extract"
      ],
      "regex-posix": [
        "Text.Regex.Posix"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "test-framework": [
        "Test.Framework"
      ]
    },
    "imports": [
      "Data.Maybe",
      "Language.Haskell.Extract",
      "Language.Haskell.Exts.Extension",
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.TH",
      "Test.Framework",
      "Text.Regex.Posix"
    ],
    "modules": [
      "Test.Framework.TH"
    ],
    "name": "test-framework-th",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "System.IO",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Builder.ASCII"
      ],
      "containers": [
        "Data.Set"
      ],
      "errors": [
        "Control.Error"
      ],
      "io-streams": [
        "System.IO.Streams",
        "System.IO.Streams.Attoparsec"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ],
      "zlib-bindings": [
        "Codec.Zlib"
      ]
    },
    "imports": [
      "Codec.Zlib",
      "Control.Applicative",
      "Control.Error",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Builder.ASCII",
      "Data.Char",
      "Data.Function",
      "Data.Functor",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Set",
      "Data.String",
      "Data.Typeable",
      "Data.Word",
      "Pdf.Toolbox.Core.Error",
      "Pdf.Toolbox.Core.IO",
      "Pdf.Toolbox.Core.IO.RIS",
      "Pdf.Toolbox.Core.Object.Builder",
      "Pdf.Toolbox.Core.Object.Types",
      "Pdf.Toolbox.Core.Object.Util",
      "Pdf.Toolbox.Core.Parsers.Object",
      "Pdf.Toolbox.Core.Parsers.Util",
      "Pdf.Toolbox.Core.Parsers.XRef",
      "Pdf.Toolbox.Core.Stream",
      "Pdf.Toolbox.Core.Stream.Filter.FlateDecode",
      "Pdf.Toolbox.Core.Stream.Filter.Type",
      "Pdf.Toolbox.Core.Util",
      "Pdf.Toolbox.Core.Writer",
      "Pdf.Toolbox.Core.XRef",
      "System.IO",
      "System.IO.Streams",
      "System.IO.Streams.Attoparsec",
      "Text.Printf"
    ],
    "modules": [
      "Pdf.Toolbox.Core",
      "Pdf.Toolbox.Core.IO",
      "Pdf.Toolbox.Core.IO.RIS",
      "Pdf.Toolbox.Core.Object.Types",
      "Pdf.Toolbox.Core.Object.Builder",
      "Pdf.Toolbox.Core.Object.Util",
      "Pdf.Toolbox.Core.Error",
      "Pdf.Toolbox.Core.Parsers.Object",
      "Pdf.Toolbox.Core.Parsers.XRef",
      "Pdf.Toolbox.Core.Parsers.Util",
      "Pdf.Toolbox.Core.Stream.Filter.Type",
      "Pdf.Toolbox.Core.Stream.Filter.FlateDecode",
      "Pdf.Toolbox.Core.Stream",
      "Pdf.Toolbox.Core.XRef",
      "Pdf.Toolbox.Core.Util",
      "Pdf.Toolbox.Core.Writer"
    ],
    "name": "pdf-toolbox-core",
    "version": "0.0.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Foreign",
        "Foreign.C",
        "Foreign.Concurrent",
        "Foreign.ForeignPtr.Unsafe",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Foreign"
      ],
      "utf8-string": [
        "Codec.Binary.UTF8.String"
      ]
    },
    "imports": [
      "Codec.Binary.UTF8.String",
      "Control.Applicative",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.Char",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Foreign",
      "Foreign",
      "Foreign.C",
      "Foreign.Concurrent",
      "Foreign.ForeignPtr.Unsafe",
      "List",
      "System.Glib.FFI",
      "System.Glib.GDateTime",
      "System.Glib.GError",
      "System.Glib.GList",
      "System.Glib.GObject",
      "System.Glib.GParameter",
      "System.Glib.GType",
      "System.Glib.GValueTypes",
      "System.Glib.UTFString",
      "System.Glib.Utils",
      "System.IO.Unsafe",
      "Test.QuickCheck"
    ],
    "modules": [
      "System.Glib",
      "System.Glib.GError",
      "System.Glib.Properties",
      "System.Glib.Attributes",
      "System.Glib.Signals",
      "System.Glib.MainLoop",
      "System.Glib.GDateTime",
      "System.Glib.GObject",
      "System.Glib.Utils",
      "System.Glib.StoreValue",
      "System.Glib.FFI",
      "System.Glib.Flags",
      "System.Glib.UTFString",
      "System.Glib.Types",
      "System.Glib.GList",
      "System.Glib.GString",
      "System.Glib.GType",
      "System.Glib.GTypeConstants",
      "System.Glib.GValue",
      "System.Glib.GValueTypes",
      "System.Glib.GParameter"
    ],
    "name": "glib",
    "version": "0.13.4.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.List"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.List",
      "Language.Haskell.Lexer.Layout",
      "Language.Haskell.Lexer.Lex",
      "Language.Haskell.Lexer.Position",
      "Language.Haskell.Lexer.Tokens",
      "Language.Haskell.Lexer.Utils"
    ],
    "modules": [
      "Language.Haskell.Lexer"
    ],
    "name": "haskell-lexer",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.List",
        "Data.Typeable",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.List",
      "Data.Typeable",
      "System.Environment",
      "System.Exit",
      "System.IO"
    ],
    "modules": [
      "Data.Sums"
    ],
    "name": "anonymous-sums",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Complex",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Generics",
        "Prelude",
        "Text.Read",
        "Text.Show"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytes": [
        "Data.Bytes.Serial"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "distributive": [
        "Data.Distributive"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hashable-extras": [
        "Data.Hashable.Extras"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "semigroupoids": [
        "Data.Functor.Bind",
        "Data.Functor.Extend",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable"
      ],
      "semigroups": [],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Comonad",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Binary",
      "Data.Bytes.Serial",
      "Data.Complex",
      "Data.Data",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Functor",
      "Data.Functor.Bind",
      "Data.Functor.Extend",
      "Data.Hashable",
      "Data.Hashable.Extras",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.SafeCopy",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Traversable",
      "Data.Serialize",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Generics.Deriving",
      "GHC.Generics",
      "Numeric.Log",
      "Prelude",
      "Text.Read",
      "Text.Show"
    ],
    "modules": [
      "Numeric.Log",
      "Numeric.Log.Signed"
    ],
    "name": "log-domain",
    "version": "0.10.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Prelude"
      ]
    },
    "imports": [
      "Data.List",
      "Prelude",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.PSQueue"
    ],
    "name": "PSQueue",
    "version": "1.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.DoubleClickSearch",
      "Network.Google.DoubleClickSearch.Types",
      "Network.Google.Resource.DoubleClickSearch.Conversion.Get",
      "Network.Google.Resource.DoubleClickSearch.Conversion.Insert",
      "Network.Google.Resource.DoubleClickSearch.Conversion.Patch",
      "Network.Google.Resource.DoubleClickSearch.Conversion.Update",
      "Network.Google.Resource.DoubleClickSearch.Conversion.UpdateAvailability",
      "Network.Google.Resource.DoubleClickSearch.Reports.Generate",
      "Network.Google.Resource.DoubleClickSearch.Reports.Get",
      "Network.Google.Resource.DoubleClickSearch.Reports.GetFile",
      "Network.Google.Resource.DoubleClickSearch.Reports.Request",
      "Network.Google.Resource.DoubleClickSearch.SavedColumns.List"
    ],
    "name": "gogol-doubleclick-search",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Monad"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Monad"
    ],
    "modules": [
      "Control.Concurrent.PostMessAge"
    ],
    "name": "post-mess-age",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Gen",
        "Test.QuickCheck.Random"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.List",
        "Data.Typeable",
        "Foreign.Marshal.Alloc",
        "Foreign.Storable",
        "Prelude"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "random": [],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.List",
      "Data.Typeable",
      "Foreign.Marshal.Alloc",
      "Foreign.Storable",
      "Prelude",
      "Test.FuzzCheck",
      "Test.Hspec",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Random"
    ],
    "modules": [
      "Test.FuzzCheck"
    ],
    "name": "fuzzcheck",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Complex",
        "Data.Either",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.STRef",
        "Data.Word",
        "Foreign.Ptr",
        "GHC.Exts",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "binary": [
        "Data.Binary.Builder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Set"
      ],
      "errors": [
        "Control.Error.Util"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Class"
      ],
      "random": [
        "System.Random"
      ],
      "vector": [
        "Data.Vector.Unboxed"
      ],
      "zlib": [
        "Codec.Compression.Zlib"
      ]
    },
    "imports": [
      "Codec.Compression.Zlib",
      "Control.Applicative",
      "Control.Error.Util",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Class",
      "Data.Binary.Builder",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.Char",
      "Data.Complex",
      "Data.Either",
      "Data.Int",
      "Data.IntMap",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.STRef",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Foreign.Ptr",
      "GHC.Exts",
      "GlaExts",
      "Graphics.PDF",
      "Graphics.PDF.Action",
      "Graphics.PDF.Annotation",
      "Graphics.PDF.Colors",
      "Graphics.PDF.Coordinates",
      "Graphics.PDF.Data.PDFTree",
      "Graphics.PDF.Data.Trie",
      "Graphics.PDF.Document",
      "Graphics.PDF.Draw",
      "Graphics.PDF.Hyphenate",
      "Graphics.PDF.Hyphenate.English",
      "Graphics.PDF.Hyphenate.LowLevel",
      "Graphics.PDF.Image",
      "Graphics.PDF.LowLevel.Kern",
      "Graphics.PDF.LowLevel.Serializer",
      "Graphics.PDF.LowLevel.Types",
      "Graphics.PDF.Navigation",
      "Graphics.PDF.Pages",
      "Graphics.PDF.Pattern",
      "Graphics.PDF.Resources",
      "Graphics.PDF.Shading",
      "Graphics.PDF.Shapes",
      "Graphics.PDF.Text",
      "Graphics.PDF.Typesetting",
      "Graphics.PDF.Typesetting.Box",
      "Graphics.PDF.Typesetting.Breaking",
      "Graphics.PDF.Typesetting.Horizontal",
      "Graphics.PDF.Typesetting.Layout",
      "Graphics.PDF.Typesetting.StandardStyle",
      "Graphics.PDF.Typesetting.Vertical",
      "Penrose",
      "Prelude",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "Test.Framework",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Char",
      "Text.ParserCombinators.Parsec.Prim",
      "Text.Printf",
      "Word"
    ],
    "modules": [
      "Graphics.PDF",
      "Graphics.PDF.Colors",
      "Graphics.PDF.Coordinates",
      "Graphics.PDF.Document",
      "Graphics.PDF.Shapes",
      "Graphics.PDF.Text",
      "Graphics.PDF.Navigation",
      "Graphics.PDF.Image",
      "Graphics.PDF.Action",
      "Graphics.PDF.Annotation",
      "Graphics.PDF.Pattern",
      "Graphics.PDF.Shading",
      "Graphics.PDF.Typesetting",
      "Graphics.PDF.Hyphenate",
      "Graphics.PDF.Documentation"
    ],
    "name": "HPDF",
    "version": "1.4.10"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compiler",
        "Distribution.InstalledPackageInfo",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Text",
        "Distribution.Version"
      ],
      "Glob": [],
      "aeson": [],
      "base": [
        "Data.Version"
      ],
      "base-compat": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map.Lazy"
      ],
      "deepseq": [],
      "directory": [],
      "filepath": [
        "System.FilePath.Posix"
      ],
      "hpack-convert": [],
      "pretty": [],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "vector": [
        "Data.Vector"
      ],
      "yaml": [
        "Data.Yaml.Pretty"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.HashMap.Lazy",
      "Data.Map.Lazy",
      "Data.Text",
      "Data.Vector",
      "Data.Version",
      "Data.Yaml.Pretty",
      "Distribution.Compiler",
      "Distribution.InstalledPackageInfo",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Text",
      "Distribution.Version",
      "Hpack",
      "Hpack.Config",
      "System.FilePath.Posix",
      "System.IO.Temp"
    ],
    "modules": [
      "Hpack",
      "Hpack.Convert",
      "Hpack.Config",
      "Hpack.Run",
      "Hpack.Yaml"
    ],
    "name": "hpack-convert",
    "version": "0.14.6"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Classroom",
      "Network.Google.Classroom.Types",
      "Network.Google.Resource.Classroom.Courses.Aliases.Create",
      "Network.Google.Resource.Classroom.Courses.Aliases.Delete",
      "Network.Google.Resource.Classroom.Courses.Aliases.List",
      "Network.Google.Resource.Classroom.Courses.CourseWork.Create",
      "Network.Google.Resource.Classroom.Courses.CourseWork.Get",
      "Network.Google.Resource.Classroom.Courses.CourseWork.List",
      "Network.Google.Resource.Classroom.Courses.CourseWork.StudentSubmissions.Get",
      "Network.Google.Resource.Classroom.Courses.CourseWork.StudentSubmissions.List",
      "Network.Google.Resource.Classroom.Courses.CourseWork.StudentSubmissions.ModifyAttachments",
      "Network.Google.Resource.Classroom.Courses.CourseWork.StudentSubmissions.Patch",
      "Network.Google.Resource.Classroom.Courses.CourseWork.StudentSubmissions.Reclaim",
      "Network.Google.Resource.Classroom.Courses.CourseWork.StudentSubmissions.Return",
      "Network.Google.Resource.Classroom.Courses.CourseWork.StudentSubmissions.TurnIn",
      "Network.Google.Resource.Classroom.Courses.Create",
      "Network.Google.Resource.Classroom.Courses.Delete",
      "Network.Google.Resource.Classroom.Courses.Get",
      "Network.Google.Resource.Classroom.Courses.List",
      "Network.Google.Resource.Classroom.Courses.Patch",
      "Network.Google.Resource.Classroom.Courses.Students.Create",
      "Network.Google.Resource.Classroom.Courses.Students.Delete",
      "Network.Google.Resource.Classroom.Courses.Students.Get",
      "Network.Google.Resource.Classroom.Courses.Students.List",
      "Network.Google.Resource.Classroom.Courses.Teachers.Create",
      "Network.Google.Resource.Classroom.Courses.Teachers.Delete",
      "Network.Google.Resource.Classroom.Courses.Teachers.Get",
      "Network.Google.Resource.Classroom.Courses.Teachers.List",
      "Network.Google.Resource.Classroom.Courses.Update",
      "Network.Google.Resource.Classroom.Invitations.Accept",
      "Network.Google.Resource.Classroom.Invitations.Create",
      "Network.Google.Resource.Classroom.Invitations.Delete",
      "Network.Google.Resource.Classroom.Invitations.Get",
      "Network.Google.Resource.Classroom.Invitations.List",
      "Network.Google.Resource.Classroom.UserProFiles.Get"
    ],
    "name": "gogol-classroom",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Prelude"
      ],
      "exceptions": [],
      "monad-control": [],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "mtl": [],
      "resourcet": [],
      "text": [],
      "transformers": [],
      "transformers-base": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Logger",
      "Control.Monad.Logger.Prefix",
      "Criterion.Main",
      "Prelude"
    ],
    "modules": [
      "Control.Monad.Logger.Prefix"
    ],
    "name": "monad-logger-prefix",
    "version": "0.1.6"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.GamesConfiguration",
      "Network.Google.GamesConfiguration.Types",
      "Network.Google.Resource.GamesConfiguration.AchievementConfigurations.Delete",
      "Network.Google.Resource.GamesConfiguration.AchievementConfigurations.Get",
      "Network.Google.Resource.GamesConfiguration.AchievementConfigurations.Insert",
      "Network.Google.Resource.GamesConfiguration.AchievementConfigurations.List",
      "Network.Google.Resource.GamesConfiguration.AchievementConfigurations.Patch",
      "Network.Google.Resource.GamesConfiguration.AchievementConfigurations.Update",
      "Network.Google.Resource.GamesConfiguration.ImageConfigurations.Upload",
      "Network.Google.Resource.GamesConfiguration.LeaderboardConfigurations.Delete",
      "Network.Google.Resource.GamesConfiguration.LeaderboardConfigurations.Get",
      "Network.Google.Resource.GamesConfiguration.LeaderboardConfigurations.Insert",
      "Network.Google.Resource.GamesConfiguration.LeaderboardConfigurations.List",
      "Network.Google.Resource.GamesConfiguration.LeaderboardConfigurations.Patch",
      "Network.Google.Resource.GamesConfiguration.LeaderboardConfigurations.Update"
    ],
    "name": "gogol-games-configuration",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.Lazy",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Fixed",
        "Data.Int",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Version",
        "Numeric.Natural",
        "Prelude",
        "Text.ParserCombinators.ReadP",
        "Unsafe.Coerce"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "bytestring": [],
      "containers": [],
      "exceptions": [],
      "hashable": [],
      "nats": [],
      "scientific": [
        "Data.Scientific"
      ],
      "semigroups": [],
      "tagged": [
        "Data.Tagged"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.LocalTime"
      ],
      "time-locale-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Aeson.Compat",
      "Data.Aeson.Compat.Time",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.Lazy",
      "Data.Attoparsec.Text",
      "Data.Bits",
      "Data.Char",
      "Data.Fixed",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Orphans",
      "Data.Proxy",
      "Data.Scientific",
      "Data.Tagged",
      "Data.Text",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.LocalTime",
      "Data.Vector",
      "Data.Version",
      "Numeric.Natural",
      "Orphans",
      "Prelude",
      "Prelude.Compat",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Aeson.Compat"
    ],
    "name": "aeson-compat",
    "version": "0.3.6"
  },
  {
    "dependencies": {
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Data.Bounded.Deriving",
      "Data.Bounded.Deriving.Internal",
      "Data.Char",
      "Data.Deriving",
      "Data.Deriving.Internal",
      "Data.Enum.Deriving",
      "Data.Enum.Deriving.Internal",
      "Data.Eq.Deriving",
      "Data.Eq.Deriving.Internal",
      "Data.Foldable",
      "Data.Foldable.Deriving",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Deriving",
      "Data.Functor.Deriving.Internal",
      "Data.Functor.Identity",
      "Data.Ix.Deriving",
      "Data.Ix.Deriving.Internal",
      "Data.Map",
      "Data.Monoid",
      "Data.Ord.Deriving",
      "Data.Ord.Deriving.Internal",
      "Data.Orphans",
      "Data.Set",
      "Data.Traversable.Deriving",
      "GHC.Arr",
      "GHC.Exts",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Prelude.Compat",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Text.Read",
      "Text.Read.Deriving",
      "Text.Read.Deriving.Internal",
      "Text.Show.Deriving",
      "Text.Show.Deriving.Internal",
      "Types.EqOrd",
      "Types.ReadShow"
    ],
    "modules": [
      "Data.Deriving",
      "Data.Bounded.Deriving",
      "Data.Enum.Deriving",
      "Data.Eq.Deriving",
      "Data.Foldable.Deriving",
      "Data.Functor.Deriving",
      "Data.Ix.Deriving",
      "Data.Ord.Deriving",
      "Data.Traversable.Deriving",
      "Text.Read.Deriving",
      "Text.Show.Deriving"
    ],
    "name": "deriving-compat",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.FusionTables",
      "Network.Google.FusionTables.Types",
      "Network.Google.Resource.FusionTables.Column.Delete",
      "Network.Google.Resource.FusionTables.Column.Get",
      "Network.Google.Resource.FusionTables.Column.Insert",
      "Network.Google.Resource.FusionTables.Column.List",
      "Network.Google.Resource.FusionTables.Column.Patch",
      "Network.Google.Resource.FusionTables.Column.Update",
      "Network.Google.Resource.FusionTables.Query.SQL",
      "Network.Google.Resource.FusionTables.Query.SQLGet",
      "Network.Google.Resource.FusionTables.Style.Delete",
      "Network.Google.Resource.FusionTables.Style.Get",
      "Network.Google.Resource.FusionTables.Style.Insert",
      "Network.Google.Resource.FusionTables.Style.List",
      "Network.Google.Resource.FusionTables.Style.Patch",
      "Network.Google.Resource.FusionTables.Style.Update",
      "Network.Google.Resource.FusionTables.Table.Copy",
      "Network.Google.Resource.FusionTables.Table.Delete",
      "Network.Google.Resource.FusionTables.Table.Get",
      "Network.Google.Resource.FusionTables.Table.ImportRows",
      "Network.Google.Resource.FusionTables.Table.ImportTable",
      "Network.Google.Resource.FusionTables.Table.Insert",
      "Network.Google.Resource.FusionTables.Table.List",
      "Network.Google.Resource.FusionTables.Table.Patch",
      "Network.Google.Resource.FusionTables.Table.ReplaceRows",
      "Network.Google.Resource.FusionTables.Table.Update",
      "Network.Google.Resource.FusionTables.Task.Delete",
      "Network.Google.Resource.FusionTables.Task.Get",
      "Network.Google.Resource.FusionTables.Task.List",
      "Network.Google.Resource.FusionTables.Template.Delete",
      "Network.Google.Resource.FusionTables.Template.Get",
      "Network.Google.Resource.FusionTables.Template.Insert",
      "Network.Google.Resource.FusionTables.Template.List",
      "Network.Google.Resource.FusionTables.Template.Patch",
      "Network.Google.Resource.FusionTables.Template.Update"
    ],
    "name": "gogol-fusiontables",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.OpsWorks",
      "Test.AWS.Fixture",
      "Test.AWS.OpsWorks",
      "Test.AWS.OpsWorks.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.OpsWorks",
      "Network.AWS.OpsWorks.AssignInstance",
      "Network.AWS.OpsWorks.AssignVolume",
      "Network.AWS.OpsWorks.AssociateElasticIP",
      "Network.AWS.OpsWorks.AttachElasticLoadBalancer",
      "Network.AWS.OpsWorks.CloneStack",
      "Network.AWS.OpsWorks.CreateApp",
      "Network.AWS.OpsWorks.CreateDeployment",
      "Network.AWS.OpsWorks.CreateInstance",
      "Network.AWS.OpsWorks.CreateLayer",
      "Network.AWS.OpsWorks.CreateStack",
      "Network.AWS.OpsWorks.CreateUserProfile",
      "Network.AWS.OpsWorks.DeleteApp",
      "Network.AWS.OpsWorks.DeleteInstance",
      "Network.AWS.OpsWorks.DeleteLayer",
      "Network.AWS.OpsWorks.DeleteStack",
      "Network.AWS.OpsWorks.DeleteUserProfile",
      "Network.AWS.OpsWorks.DeregisterEcsCluster",
      "Network.AWS.OpsWorks.DeregisterElasticIP",
      "Network.AWS.OpsWorks.DeregisterInstance",
      "Network.AWS.OpsWorks.DeregisterRDSDBInstance",
      "Network.AWS.OpsWorks.DeregisterVolume",
      "Network.AWS.OpsWorks.DescribeAgentVersions",
      "Network.AWS.OpsWorks.DescribeApps",
      "Network.AWS.OpsWorks.DescribeCommands",
      "Network.AWS.OpsWorks.DescribeDeployments",
      "Network.AWS.OpsWorks.DescribeEcsClusters",
      "Network.AWS.OpsWorks.DescribeElasticIPs",
      "Network.AWS.OpsWorks.DescribeElasticLoadBalancers",
      "Network.AWS.OpsWorks.DescribeInstances",
      "Network.AWS.OpsWorks.DescribeLayers",
      "Network.AWS.OpsWorks.DescribeLoadBasedAutoScaling",
      "Network.AWS.OpsWorks.DescribeMyUserProfile",
      "Network.AWS.OpsWorks.DescribePermissions",
      "Network.AWS.OpsWorks.DescribeRAIdArrays",
      "Network.AWS.OpsWorks.DescribeRDSDBInstances",
      "Network.AWS.OpsWorks.DescribeServiceErrors",
      "Network.AWS.OpsWorks.DescribeStackProvisioningParameters",
      "Network.AWS.OpsWorks.DescribeStackSummary",
      "Network.AWS.OpsWorks.DescribeStacks",
      "Network.AWS.OpsWorks.DescribeTimeBasedAutoScaling",
      "Network.AWS.OpsWorks.DescribeUserProfiles",
      "Network.AWS.OpsWorks.DescribeVolumes",
      "Network.AWS.OpsWorks.DetachElasticLoadBalancer",
      "Network.AWS.OpsWorks.DisassociateElasticIP",
      "Network.AWS.OpsWorks.GetHostnameSuggestion",
      "Network.AWS.OpsWorks.GrantAccess",
      "Network.AWS.OpsWorks.RebootInstance",
      "Network.AWS.OpsWorks.RegisterEcsCluster",
      "Network.AWS.OpsWorks.RegisterElasticIP",
      "Network.AWS.OpsWorks.RegisterInstance",
      "Network.AWS.OpsWorks.RegisterRDSDBInstance",
      "Network.AWS.OpsWorks.RegisterVolume",
      "Network.AWS.OpsWorks.SetLoadBasedAutoScaling",
      "Network.AWS.OpsWorks.SetPermission",
      "Network.AWS.OpsWorks.SetTimeBasedAutoScaling",
      "Network.AWS.OpsWorks.StartInstance",
      "Network.AWS.OpsWorks.StartStack",
      "Network.AWS.OpsWorks.StopInstance",
      "Network.AWS.OpsWorks.StopStack",
      "Network.AWS.OpsWorks.Types",
      "Network.AWS.OpsWorks.UnassignInstance",
      "Network.AWS.OpsWorks.UnassignVolume",
      "Network.AWS.OpsWorks.UpdateApp",
      "Network.AWS.OpsWorks.UpdateElasticIP",
      "Network.AWS.OpsWorks.UpdateInstance",
      "Network.AWS.OpsWorks.UpdateLayer",
      "Network.AWS.OpsWorks.UpdateMyUserProfile",
      "Network.AWS.OpsWorks.UpdateRDSDBInstance",
      "Network.AWS.OpsWorks.UpdateStack",
      "Network.AWS.OpsWorks.UpdateUserProfile",
      "Network.AWS.OpsWorks.UpdateVolume",
      "Network.AWS.OpsWorks.Waiters"
    ],
    "name": "amazonka-opsworks",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Either"
      ],
      "bytestring": [],
      "feed": [],
      "tagsoup": [],
      "xml": []
    },
    "imports": [
      "Data.Either",
      "Network.Download",
      "Test.Hspec"
    ],
    "modules": [
      "Network.Download"
    ],
    "name": "download",
    "version": "0.3.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Typeable",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.StablePtr"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Typeable",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.StablePtr"
    ],
    "modules": [
      "Foreign.Store"
    ],
    "name": "foreign-store",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.Traversable",
        "Data.Typeable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.IORef",
      "Data.Traversable",
      "Data.Typeable",
      "System.FileLock.Internal.Flock",
      "System.FileLock.Internal.LockFileEx"
    ],
    "modules": [
      "System.FileLock"
    ],
    "name": "filelock",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "appar": [
        "Text.Appar.String"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Enum",
        "GHC.Generics",
        "Numeric",
        "Prelude"
      ],
      "byteorder": [
        "System.ByteOrder"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "network": [
        "Network.Socket"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.IntMap",
      "Data.IP",
      "Data.IP.Addr",
      "Data.IP.Mask",
      "Data.IP.Op",
      "Data.IP.Range",
      "Data.IP.RouteTable.Internal",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "GHC.Enum",
      "GHC.Generics",
      "Network.Socket",
      "Numeric",
      "Prelude",
      "RouteTableSpec",
      "Safe",
      "System.ByteOrder",
      "Test.DocTest",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Text.Appar.String"
    ],
    "modules": [
      "Data.IP",
      "Data.IP.Internal",
      "Data.IP.RouteTable"
    ],
    "name": "iproute",
    "version": "1.7.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Word",
        "Foreign.ForeignPtr",
        "System.IO.Unsafe"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Digest.Adler32",
      "Data.Digest.CRC32",
      "Data.Word",
      "Foreign.ForeignPtr",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.Digest.CRC32",
      "Data.Digest.Adler32"
    ],
    "name": "digest",
    "version": "0.0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Ord"
      ]
    },
    "imports": [
      "Canvas",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Monad",
      "Control.Monad.Trans",
      "Criterion.Main",
      "Data.List",
      "Data.Maybe",
      "Data.Ord",
      "Diagrams.Backend.SVG.CmdLine",
      "Diagrams.Core.Envelope",
      "Diagrams.Prelude",
      "GHCJS.DOM",
      "GHCJS.DOM.Document",
      "GHCJS.DOM.Element",
      "GHCJS.DOM.Event",
      "GHCJS.DOM.EventM",
      "GHCJS.DOM.HTMLCanvasElement",
      "GHCJS.DOM.HTMLInputElement",
      "GHCJS.Foreign",
      "GHCJS.Marshal",
      "GHCJS.Types",
      "Haste",
      "Haste.DOM",
      "Haste.Prim",
      "JavaScript.Canvas",
      "Language.Fay.FFI",
      "Language.Fay.Prelude",
      "Optimisation.CirclePacking"
    ],
    "modules": [
      "Optimisation.CirclePacking"
    ],
    "name": "circle-packing",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Text",
        "Distribution.Verbosity",
        "Distribution.Version"
      ],
      "base": [
        "Data.List"
      ],
      "directory": [
        "System.Directory"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Data.List",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.PackageDescription.TH",
      "Distribution.Text",
      "Distribution.Verbosity",
      "Distribution.Version",
      "Language.Haskell.TH",
      "System.Directory"
    ],
    "modules": [
      "Distribution.PackageDescription.TH"
    ],
    "name": "cabal-file-th",
    "version": "0.2.3"
  },
  {
    "dependencies": {
      "MonadRandom": [
        "Control.Monad.Random"
      ],
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe"
      ],
      "containers": [
        "Data.Map"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "random": [],
      "random-shuffle": [
        "System.Random.Shuffle"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ],
      "tree-fun": [
        "Math.TreeFun.Tree",
        "Math.TreeFun.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad.Random",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans.Maybe",
      "Data.Foldable",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Tree",
      "Math.RandomTree.Label",
      "Math.RandomTree.Types",
      "Math.TreeFun.Tree",
      "Math.TreeFun.Types",
      "System.Random.Shuffle"
    ],
    "modules": [
      "Math.RandomTree.Algorithms",
      "Math.RandomTree.Types",
      "Math.RandomTree.Label"
    ],
    "name": "random-tree",
    "version": "0.6.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Tuple"
      ],
      "base64-bytestring": [],
      "binary-search": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "conduit": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "errors": [],
      "extra": [],
      "filepath": [],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [],
      "mtl-compat": [],
      "network-uri": [],
      "old-locale": [],
      "safe": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.Int",
        "Data.Text.Read"
      ],
      "time": [],
      "transformers": [],
      "vector": [
        "Data.Vector"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Cursor"
      ],
      "zip-archive": [
        "Codec.Archive.Zip"
      ],
      "zlib": []
    },
    "imports": [
      "Codec.Archive.Zip",
      "Codec.Xlsx.Lens",
      "Codec.Xlsx.Parser",
      "Codec.Xlsx.Parser.Internal",
      "Codec.Xlsx.Types",
      "Codec.Xlsx.Types.Common",
      "Codec.Xlsx.Types.Internal.CommentTable",
      "Codec.Xlsx.Types.StyleSheet",
      "Codec.Xlsx.Writer",
      "Codec.Xlsx.Writer.Internal",
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Data.ByteString.Lazy",
      "Data.Default",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Text.Read",
      "Data.Tuple",
      "Data.Vector",
      "Text.XML",
      "Text.XML.Cursor"
    ],
    "modules": [
      "Codec.Xlsx",
      "Codec.Xlsx.Types",
      "Codec.Xlsx.Types.Comment",
      "Codec.Xlsx.Types.Common",
      "Codec.Xlsx.Types.ConditionalFormatting",
      "Codec.Xlsx.Types.Drawing",
      "Codec.Xlsx.Types.Internal",
      "Codec.Xlsx.Types.Internal.CfPair",
      "Codec.Xlsx.Types.Internal.CommentTable",
      "Codec.Xlsx.Types.Internal.ContentTypes",
      "Codec.Xlsx.Types.Internal.CustomProperties",
      "Codec.Xlsx.Types.Internal.Relationships",
      "Codec.Xlsx.Types.Internal.SharedStringTable",
      "Codec.Xlsx.Types.RichText",
      "Codec.Xlsx.Types.SheetViews",
      "Codec.Xlsx.Types.PageSetup",
      "Codec.Xlsx.Types.StyleSheet",
      "Codec.Xlsx.Types.Variant",
      "Codec.Xlsx.Lens",
      "Codec.Xlsx.Parser",
      "Codec.Xlsx.Parser.Internal",
      "Codec.Xlsx.Formatted",
      "Codec.Xlsx.Writer",
      "Codec.Xlsx.Writer.Internal"
    ],
    "name": "xlsx",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Monoid",
      "Text.XHtml.BlockTable",
      "Text.XHtml.Debug",
      "Text.XHtml.Extras",
      "Text.XHtml.Frameset.Attributes",
      "Text.XHtml.Frameset.Elements",
      "Text.XHtml.Internals",
      "Text.XHtml.Strict.Attributes",
      "Text.XHtml.Strict.Elements",
      "Text.XHtml.Table",
      "Text.XHtml.Transitional",
      "Text.XHtml.Transitional.Attributes",
      "Text.XHtml.Transitional.Elements"
    ],
    "modules": [
      "Text.XHtml",
      "Text.XHtml.Frameset",
      "Text.XHtml.Strict",
      "Text.XHtml.Transitional",
      "Text.XHtml.Debug",
      "Text.XHtml.Table"
    ],
    "name": "xhtml",
    "version": "3000.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Foreign.C.Error",
        "GHC.IO.Device",
        "GHC.IO.Exception",
        "System.Environment",
        "System.IO",
        "System.Posix.Internals"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "system-filepath": [
        "Filesystem.Path",
        "Filesystem.Path.CurrentOS",
        "Filesystem.Path.Rules"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "time": []
    },
    "imports": [
      "Control.Exception",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.IO",
      "Filesystem.Path",
      "Filesystem.Path.CurrentOS",
      "Filesystem.Path.Rules",
      "Foreign.C.Error",
      "GHC.IOBase",
      "GHC.IO.Device",
      "GHC.IO.Exception",
      "System.Directory",
      "System.Environment",
      "System.IO",
      "System.Posix",
      "System.Posix.Error",
      "System.Posix.Files.ByteString",
      "System.Posix.Internals",
      "System.Posix.IO",
      "System.Win32"
    ],
    "modules": [
      "Filesystem"
    ],
    "name": "system-fileio",
    "version": "0.3.16.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Coerce",
        "Data.Data",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Typeable",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Generics",
        "Prelude",
        "System.Exit"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "exact-pi": [
        "Data.ExactPi"
      ],
      "numtype-dk": [
        "Numeric.NumType.DK.Integers"
      ],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Criterion.Main",
      "Data.Coerce",
      "Data.Data",
      "Data.ExactPi",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Typeable",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed.Base",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Generics",
      "Numeric.NumType.DK.Integers",
      "Numeric.Units.Dimensional",
      "Numeric.Units.Dimensional.Coercion",
      "Numeric.Units.Dimensional.Dimensions",
      "Numeric.Units.Dimensional.Dimensions.TermLevel",
      "Numeric.Units.Dimensional.Dimensions.TypeLevel",
      "Numeric.Units.Dimensional.Internal",
      "Numeric.Units.Dimensional.NonSI",
      "Numeric.Units.Dimensional.Prelude",
      "Numeric.Units.Dimensional.Quantities",
      "Numeric.Units.Dimensional.QuantitiesTest",
      "Numeric.Units.Dimensional.SIUnits",
      "Numeric.Units.Dimensional.Test",
      "Numeric.Units.Dimensional.UnitNames",
      "Numeric.Units.Dimensional.UnitNames.InterchangeNames",
      "Numeric.Units.Dimensional.UnitNames.Internal",
      "Numeric.Units.Dimensional.Variants",
      "Prelude",
      "System.Exit",
      "Test.HUnit"
    ],
    "modules": [
      "Numeric.Units.Dimensional",
      "Numeric.Units.Dimensional.Coercion",
      "Numeric.Units.Dimensional.Prelude",
      "Numeric.Units.Dimensional.Quantities",
      "Numeric.Units.Dimensional.SIUnits",
      "Numeric.Units.Dimensional.NonSI",
      "Numeric.Units.Dimensional.Dimensions",
      "Numeric.Units.Dimensional.Dimensions.TermLevel",
      "Numeric.Units.Dimensional.Dimensions.TypeLevel",
      "Numeric.Units.Dimensional.Dynamic",
      "Numeric.Units.Dimensional.Functor",
      "Numeric.Units.Dimensional.UnitNames",
      "Numeric.Units.Dimensional.UnitNames.InterchangeNames",
      "Numeric.Units.Dimensional.Variants"
    ],
    "name": "dimensional",
    "version": "1.0.1.3"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.HTTP.Base"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Version",
        "GHC.Generics",
        "Prelude",
        "Text.ParserCombinators.ReadP",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "data-default": [
        "Data.Default"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "http-client": [],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Strict"
      ],
      "network-uri": [
        "Network.URI"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource",
        "Data.Acquire"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Except"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Resource",
      "Data.Acquire",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Database.Neo4j",
      "Database.Neo4j.Batch",
      "Database.Neo4j.Batch.Label",
      "Database.Neo4j.Batch.Node",
      "Database.Neo4j.Batch.Property",
      "Database.Neo4j.Batch.Relationship",
      "Database.Neo4j.Batch.Types",
      "Database.Neo4j.Cypher",
      "Database.Neo4j.Graph",
      "Database.Neo4j.Http",
      "Database.Neo4j.Index",
      "Database.Neo4j.Label",
      "Database.Neo4j.Node",
      "Database.Neo4j.Property",
      "Database.Neo4j.Relationship",
      "Database.Neo4j.Transactional.Cypher",
      "Database.Neo4j.Traversal",
      "Database.Neo4j.Types",
      "Database.Neo4j.Version",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Default",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Scientific",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Typeable",
      "Data.Vector",
      "Data.Version",
      "GHC.Generics",
      "Network.HTTP.Base",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.URI",
      "Prelude",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.TH",
      "Test.HUnit.Base",
      "Text.ParserCombinators.ReadP",
      "Text.Read"
    ],
    "modules": [
      "Database.Neo4j",
      "Database.Neo4j.Graph",
      "Database.Neo4j.Batch",
      "Database.Neo4j.Cypher",
      "Database.Neo4j.Transactional.Cypher",
      "Database.Neo4j.Types",
      "Database.Neo4j.Traversal"
    ],
    "name": "haskell-neo4j-client",
    "version": "0.3.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Word"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Default.Class",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Word",
      "System.Locale",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Web.Cookie"
    ],
    "modules": [
      "Web.Cookie"
    ],
    "name": "cookie",
    "version": "0.4.2.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.IArray",
        "Data.Array.MArray",
        "Data.Array.ST",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Coerce",
        "Data.Foldable",
        "Data.Functor.Classes",
        "Data.Functor.Compose",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Word",
        "GHC.Base",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.Int",
        "GHC.Word",
        "Numeric.Natural",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.IntSet",
        "Data.Set"
      ],
      "ghc-prim": [],
      "integer-gmp": [
        "GHC.Integer",
        "GHC.Integer.GMP.Internals",
        "GHC.Integer.Logarithms"
      ],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.State.Strict",
      "Criterion.Main",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Array.MArray",
      "Data.Array.ST",
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.Coerce",
      "Data.Foldable",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Int",
      "Data.IntSet",
      "Data.List",
      "Data.Maybe",
      "Data.Semigroup",
      "Data.Set",
      "Data.Traversable",
      "Data.Word",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.Int",
      "GHC.Integer",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Logarithms",
      "GHC.Word",
      "Math.NumberTheory.ArithmeticFunctions",
      "Math.NumberTheory.ArithmeticFunctionsBench",
      "Math.NumberTheory.ArithmeticFunctions.Class",
      "Math.NumberTheory.ArithmeticFunctions.Standard",
      "Math.NumberTheory.ArithmeticFunctionsTests",
      "Math.NumberTheory.GaussianIntegers",
      "Math.NumberTheory.GaussianIntegersTests",
      "Math.NumberTheory.GCD",
      "Math.NumberTheory.GCD.LowLevel",
      "Math.NumberTheory.GCD.LowLevelTests",
      "Math.NumberTheory.GCDTests",
      "Math.NumberTheory.Logarithms",
      "Math.NumberTheory.LogarithmsTests",
      "Math.NumberTheory.Lucas",
      "Math.NumberTheory.LucasTests",
      "Math.NumberTheory.Moduli",
      "Math.NumberTheory.ModuliTests",
      "Math.NumberTheory.MoebiusInversion",
      "Math.NumberTheory.MoebiusInversion.Int",
      "Math.NumberTheory.MoebiusInversion.IntTests",
      "Math.NumberTheory.MoebiusInversionTests",
      "Math.NumberTheory.Powers",
      "Math.NumberTheory.PowersBench",
      "Math.NumberTheory.Powers.Cubes",
      "Math.NumberTheory.Powers.CubesTests",
      "Math.NumberTheory.Powers.Fourth",
      "Math.NumberTheory.Powers.FourthTests",
      "Math.NumberTheory.Powers.General",
      "Math.NumberTheory.Powers.GeneralTests",
      "Math.NumberTheory.Powers.Integer",
      "Math.NumberTheory.Powers.IntegerTests",
      "Math.NumberTheory.Powers.Squares",
      "Math.NumberTheory.Powers.Squares.Internal",
      "Math.NumberTheory.Powers.SquaresTests",
      "Math.NumberTheory.Primes",
      "Math.NumberTheory.Primes.Counting",
      "Math.NumberTheory.Primes.Counting.Approximate",
      "Math.NumberTheory.Primes.Counting.Impl",
      "Math.NumberTheory.Primes.CountingTests",
      "Math.NumberTheory.Primes.Factorisation",
      "Math.NumberTheory.Primes.Factorisation.Montgomery",
      "Math.NumberTheory.Primes.Factorisation.TrialDivision",
      "Math.NumberTheory.Primes.Factorisation.Utils",
      "Math.NumberTheory.Primes.Heap",
      "Math.NumberTheory.Primes.HeapTests",
      "Math.NumberTheory.Primes.Sieve",
      "Math.NumberTheory.Primes.Sieve.Eratosthenes",
      "Math.NumberTheory.Primes.Sieve.Indexing",
      "Math.NumberTheory.Primes.Sieve.Misc",
      "Math.NumberTheory.Primes.SieveTests",
      "Math.NumberTheory.Primes.Testing",
      "Math.NumberTheory.Primes.Testing.Certificates.Internal",
      "Math.NumberTheory.Primes.Testing.Certified",
      "Math.NumberTheory.Primes.Testing.Probabilistic",
      "Math.NumberTheory.PrimesTests",
      "Math.NumberTheory.TestUtils",
      "Math.NumberTheory.TestUtils.Compose",
      "Math.NumberTheory.TestUtils.Wrappers",
      "Math.NumberTheory.UniqueFactorisation",
      "Math.NumberTheory.UniqueFactorisationTests",
      "Math.NumberTheory.Unsafe",
      "Math.NumberTheory.Utils",
      "Numeric.Natural",
      "Prelude",
      "System.Random",
      "Test.SmallCheck.Series",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.SmallCheck",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Math.NumberTheory.ArithmeticFunctions",
      "Math.NumberTheory.ArithmeticFunctions.Class",
      "Math.NumberTheory.ArithmeticFunctions.Standard",
      "Math.NumberTheory.Logarithms",
      "Math.NumberTheory.Moduli",
      "Math.NumberTheory.MoebiusInversion",
      "Math.NumberTheory.MoebiusInversion.Int",
      "Math.NumberTheory.Lucas",
      "Math.NumberTheory.GaussianIntegers",
      "Math.NumberTheory.GCD",
      "Math.NumberTheory.GCD.LowLevel",
      "Math.NumberTheory.Powers",
      "Math.NumberTheory.Powers.Squares",
      "Math.NumberTheory.Powers.Squares.Internal",
      "Math.NumberTheory.Powers.Cubes",
      "Math.NumberTheory.Powers.Fourth",
      "Math.NumberTheory.Powers.General",
      "Math.NumberTheory.Powers.Integer",
      "Math.NumberTheory.Primes",
      "Math.NumberTheory.Primes.Sieve",
      "Math.NumberTheory.Primes.Factorisation",
      "Math.NumberTheory.Primes.Factorisation.Certified",
      "Math.NumberTheory.Primes.Counting",
      "Math.NumberTheory.Primes.Testing",
      "Math.NumberTheory.Primes.Testing.Certificates",
      "Math.NumberTheory.Primes.Heap",
      "Math.NumberTheory.UniqueFactorisation"
    ],
    "name": "arithmoi",
    "version": "0.4.3.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Debug.Trace",
        "GHC.Conc",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.Reader",
      "Data.Array",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Either",
      "Data.Function",
      "Data.IntMap",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Word",
      "Debug.Trace",
      "GHC.Conc",
      "GHC.RTS.EventParserUtils",
      "GHC.RTS.Events",
      "GHC.RTS.Events.Analysis",
      "GHC.RTS.Events.Analysis.Capability",
      "GHC.RTS.Events.Analysis.SparkThread",
      "GHC.RTS.Events.Analysis.Thread",
      "GHC.RTS.Events.Merge",
      "GHC.RTS.EventTypes",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Text.Printf"
    ],
    "modules": [
      "GHC.RTS.Events",
      "GHC.RTS.Events.Merge",
      "GHC.RTS.Events.Analysis",
      "GHC.RTS.Events.Analysis.Capability",
      "GHC.RTS.Events.Analysis.SparkThread",
      "GHC.RTS.Events.Analysis.Thread"
    ],
    "name": "ghc-events",
    "version": "0.4.4.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Version",
        "Debug.Trace",
        "GHC.Base",
        "GHC.Generics",
        "GHC.Real",
        "GHC.Show",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "clash-prelude": [
        "CLaSH.Annotations.TopEntity"
      ],
      "concurrent-supply": [
        "Control.Concurrent.Supply"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntMap.Lazy",
        "Data.IntMap.Strict",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "errors": [],
      "fgl": [],
      "filepath": [
        "System.FilePath"
      ],
      "ghc": [],
      "hashable": [
        "Data.Hashable"
      ],
      "integer-gmp": [
        "GHC.Integer.Logarithms"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.Fold",
        "Data.Set.Lens"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Strict"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "process": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except"
      ],
      "unbound-generics": [
        "Unbound.Generics.LocallyNameless",
        "Unbound.Generics.LocallyNameless.Alpha",
        "Unbound.Generics.LocallyNameless.Bind",
        "Unbound.Generics.LocallyNameless.Embed",
        "Unbound.Generics.LocallyNameless.Name",
        "Unbound.Generics.LocallyNameless.Rebind",
        "Unbound.Generics.LocallyNameless.Rec",
        "Unbound.Generics.LocallyNameless.Subst",
        "Unbound.Generics.LocallyNameless.Unsafe"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "uu-parsinglib": [
        "Text.ParserCombinators.UU.Core"
      ],
      "wl-pprint-text": [
        "Text.PrettyPrint.Leijen.Text.Monadic"
      ]
    },
    "imports": [
      "CLaSH.Annotations.TopEntity",
      "CLaSH.Core.DataCon",
      "CLaSH.Core.FreeVars",
      "CLaSH.Core.Literal",
      "CLaSH.Core.Pretty",
      "CLaSH.Core.Term",
      "CLaSH.Core.TyCon",
      "CLaSH.Core.Type",
      "CLaSH.Core.TysPrim",
      "CLaSH.Core.Util",
      "CLaSH.Core.Var",
      "CLaSH.Netlist",
      "CLaSH.Netlist.BlackBox",
      "CLaSH.Netlist.BlackBox.Types",
      "CLaSH.Netlist.Types",
      "CLaSH.Normalize.Transformations",
      "CLaSH.Normalize.Types",
      "CLaSH.Normalize.Util",
      "CLaSH.Primitives.Types",
      "CLaSH.Rewrite.Combinators",
      "CLaSH.Rewrite.Types",
      "CLaSH.Rewrite.Util",
      "CLaSH.Util",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.Supply",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Lens",
      "Control.Lens.Fold",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Strict",
      "Data.Aeson",
      "Data.Attoparsec.Lazy",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Graph",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IntMap.Lazy",
      "Data.IntMap.Strict",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Set.Lens",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time.Clock",
      "Data.Typeable",
      "Data.Version",
      "Debug.Trace",
      "GHC.Base",
      "GHC.Generics",
      "GHC.Integer.Logarithms",
      "GHC.Real",
      "GHC.Show",
      "Language.Haskell.TH",
      "Paths",
      "SrcLoc",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "Text.ParserCombinators.UU.Core",
      "Text.PrettyPrint",
      "Text.PrettyPrint.Leijen.Text.Monadic",
      "Unbound.Generics.LocallyNameless",
      "Unbound.Generics.LocallyNameless.Alpha",
      "Unbound.Generics.LocallyNameless.Bind",
      "Unbound.Generics.LocallyNameless.Embed",
      "Unbound.Generics.LocallyNameless.Extra",
      "Unbound.Generics.LocallyNameless.Name",
      "Unbound.Generics.LocallyNameless.Rebind",
      "Unbound.Generics.LocallyNameless.Rec",
      "Unbound.Generics.LocallyNameless.Subst",
      "Unbound.Generics.LocallyNameless.Unsafe"
    ],
    "modules": [
      "CLaSH.Backend",
      "CLaSH.Core.DataCon",
      "CLaSH.Core.FreeVars",
      "CLaSH.Core.Literal",
      "CLaSH.Core.Pretty",
      "CLaSH.Core.Subst",
      "CLaSH.Core.Term",
      "CLaSH.Core.TyCon",
      "CLaSH.Core.Type",
      "CLaSH.Core.TysPrim",
      "CLaSH.Core.Util",
      "CLaSH.Core.Var",
      "CLaSH.Driver",
      "CLaSH.Driver.TestbenchGen",
      "CLaSH.Driver.TopWrapper",
      "CLaSH.Driver.Types",
      "CLaSH.Netlist",
      "CLaSH.Netlist.BlackBox",
      "CLaSH.Netlist.BlackBox.Parser",
      "CLaSH.Netlist.BlackBox.Types",
      "CLaSH.Netlist.BlackBox.Util",
      "CLaSH.Netlist.Id",
      "CLaSH.Netlist.Types",
      "CLaSH.Netlist.Util",
      "CLaSH.Normalize",
      "CLaSH.Normalize.DEC",
      "CLaSH.Normalize.PrimitiveReductions",
      "CLaSH.Normalize.Strategy",
      "CLaSH.Normalize.Transformations",
      "CLaSH.Normalize.Types",
      "CLaSH.Normalize.Util",
      "CLaSH.Primitives.Types",
      "CLaSH.Primitives.Util",
      "CLaSH.Rewrite.Combinators",
      "CLaSH.Rewrite.Types",
      "CLaSH.Rewrite.Util",
      "CLaSH.Util"
    ],
    "name": "clash-lib",
    "version": "0.6.21"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Data.Either"
      ],
      "extra": [
        "Data.List.Extra"
      ],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Attoparsec.Text",
      "Data.Either",
      "Data.List.Extra",
      "Data.Text",
      "System.Random.MWC"
    ],
    "modules": [
      "Text.Spintax"
    ],
    "name": "Spintax",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Foldable",
        "Data.Int",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base"
      ],
      "bytes": [
        "Data.Bytes.Get",
        "Data.Bytes.Put"
      ],
      "mtl": [
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Trans"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Data.Bits",
      "Data.Bits.Coding",
      "Data.Bits.Extras",
      "Data.Bytes.Get",
      "Data.Bytes.Put",
      "Data.Foldable",
      "Data.Int",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base"
    ],
    "modules": [
      "Data.Bits.Coding",
      "Data.Bits.Coded",
      "Data.Bits.Extras"
    ],
    "name": "bits",
    "version": "0.5"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "GHC.Exts",
        "Numeric",
        "System.Environment",
        "System.IO",
        "System.IO.Error"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "old-time": [
        "System.Time"
      ],
      "unix": [
        "System.Posix.User"
      ]
    },
    "imports": [
      "AbstractSyntax",
      "Color",
      "CommandLine",
      "Control.Applicative",
      "Control.Monad",
      "Data.Array",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Defaults",
      "Ebnf2psParser",
      "EbnfLayout",
      "EbnfOutput",
      "Fig31Output",
      "Fonts",
      "GHC.Exts",
      "GrammarTransform",
      "GrammarUnfold",
      "Info",
      "IOSupplement",
      "Lexer",
      "Numeric",
      "ParseAux",
      "Parsers",
      "PathExpansion",
      "PsOutput",
      "StringMatch",
      "System.Directory",
      "System.Environment",
      "System.IO",
      "System.IO.Error",
      "System.Posix.User",
      "System.Time",
      "Version"
    ],
    "modules": [],
    "name": "Ebnf2ps",
    "version": "1.0.15"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "old-time": [
        "System.Time"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.State",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "System.Time",
      "Test.DocTest",
      "Test.Hspec",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Rfc2234",
      "Text.ParserCombinators.Parsec.Rfc2821",
      "Text.ParserCombinators.Parsec.Rfc2822"
    ],
    "modules": [
      "Text.ParserCombinators.Parsec.Rfc2234",
      "Text.ParserCombinators.Parsec.Rfc2821",
      "Text.ParserCombinators.Parsec.Rfc2822"
    ],
    "name": "hsemail",
    "version": "1.7.7"
  },
  {
    "dependencies": {
      "base": [
        "Data.Either",
        "Data.List",
        "Data.Monoid",
        "Data.Semigroup"
      ],
      "megaparsec": [
        "Text.Megaparsec",
        "Text.Megaparsec.Text"
      ],
      "semigroups": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Either",
      "Data.List",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Text",
      "Data.Versions",
      "Lens.Micro",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Text.Megaparsec",
      "Text.Megaparsec.Text"
    ],
    "modules": [
      "Data.Versions"
    ],
    "name": "versions",
    "version": "3.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "containers": [],
      "mwc-probability": [
        "System.Random.MWC.Probability"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Trans.State.Strict",
      "System.Random.MWC.Probability"
    ],
    "modules": [
      "Data.Sampling.Types"
    ],
    "name": "mcmc-types",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.List",
        "Data.Word"
      ],
      "biocore": [
        "Bio.Core.Sequence",
        "Bio.Core.Strand"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ]
    },
    "imports": [
      "Bio.Core.Sequence",
      "Bio.Core.Strand",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List",
      "Data.Word"
    ],
    "modules": [
      "Bio.Alignment.AlignData"
    ],
    "name": "bioalign",
    "version": "0.0.5"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.Sheets.Spreadsheets.BatchUpdate",
      "Network.Google.Resource.Sheets.Spreadsheets.Create",
      "Network.Google.Resource.Sheets.Spreadsheets.Get",
      "Network.Google.Resource.Sheets.Spreadsheets.Sheets.CopyTo",
      "Network.Google.Resource.Sheets.Spreadsheets.Values.BatchGet",
      "Network.Google.Resource.Sheets.Spreadsheets.Values.BatchUpdate",
      "Network.Google.Resource.Sheets.Spreadsheets.Values.Get",
      "Network.Google.Resource.Sheets.Spreadsheets.Values.Update",
      "Network.Google.Sheets",
      "Network.Google.Sheets.Types"
    ],
    "name": "gogol-sheets",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.Instances",
        "Control.Monad.IO.Class",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Prelude"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Instances",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Control.Monad.Writer.Lazy",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Prelude"
    ],
    "modules": [
      "Control.Monad.Cont",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error",
      "Control.Monad.Error.Class",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.List",
      "Control.Monad.RWS",
      "Control.Monad.RWS.Class",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Class",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict"
    ],
    "name": "mtl",
    "version": "2.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Foldable",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Unique",
        "Data.Word",
        "Foreign.C.Error",
        "GHC.IO.Exception",
        "GHC.Stack",
        "Prelude",
        "System.IO.Unsafe",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-accessor": [
        "Data.Accessor",
        "Data.Accessor.Container"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "network-transport": [
        "Network.Transport",
        "Network.Transport.Internal"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.State",
      "Data.Accessor",
      "Data.Accessor.Container",
      "Data.Accessor.Monad.Trans.State",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.Concurrent.Queue.MichaelScott",
      "Data.Foldable",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.String",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Unique",
      "Data.Word",
      "Foreign.C.Error",
      "GHC.IO.Exception",
      "GHC.Stack",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Transport",
      "Network.Transport.Internal",
      "Network.Transport.TCP",
      "Network.Transport.TCP.Internal",
      "Network.Transport.TCP.Mock.Socket",
      "Network.Transport.TCP.Mock.Socket.ByteString",
      "Network.Transport.Tests",
      "Network.Transport.Tests.Auxiliary",
      "Network.Transport.Tests.Traced",
      "Prelude",
      "System.IO.Unsafe",
      "System.Timeout",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Network.Transport.TCP",
      "Network.Transport.TCP.Internal"
    ],
    "name": "network-transport-tcp",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "aeson": [],
      "base": [],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Aeson.Pointer",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Vector",
      "Example"
    ],
    "modules": [
      "Data.Aeson.Pointer"
    ],
    "name": "hjsonpointer",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Logging",
      "Network.Google.Logging.Types",
      "Network.Google.Resource.Logging.Entries.List",
      "Network.Google.Resource.Logging.Entries.Write",
      "Network.Google.Resource.Logging.MonitoredResourceDescriptors.List",
      "Network.Google.Resource.Logging.Projects.Logs.Delete",
      "Network.Google.Resource.Logging.Projects.Metrics.Create",
      "Network.Google.Resource.Logging.Projects.Metrics.Delete",
      "Network.Google.Resource.Logging.Projects.Metrics.Get",
      "Network.Google.Resource.Logging.Projects.Metrics.List",
      "Network.Google.Resource.Logging.Projects.Metrics.Update",
      "Network.Google.Resource.Logging.Projects.Sinks.Create",
      "Network.Google.Resource.Logging.Projects.Sinks.Delete",
      "Network.Google.Resource.Logging.Projects.Sinks.Get",
      "Network.Google.Resource.Logging.Projects.Sinks.List",
      "Network.Google.Resource.Logging.Projects.Sinks.Update"
    ],
    "name": "gogol-logging",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "annotated-wl-pprint": [
        "Text.PrettyPrint.Annotated.Leijen"
      ],
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "array": [
        "Data.Array"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "Foreign.C",
        "Foreign.C.String",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.Printf"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "binary": [
        "Data.Binary"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.String",
        "Text.Blaze.Html.Renderer.Utf8"
      ],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal",
        "Text.Blaze.Renderer.String"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cheapskate": [
        "Cheapskate",
        "Cheapskate.Html",
        "Cheapskate.Types"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix",
        "System.FilePath.Windows"
      ],
      "fingertree": [
        "Data.PriorityQueue.FingerTree"
      ],
      "fsnotify": [
        "System.FSNotify",
        "System.FSNotify.Devel"
      ],
      "haskeline": [
        "System.Console.Haskeline",
        "System.Console.Haskeline.History",
        "System.Console.Haskeline.MonadException"
      ],
      "idris": [],
      "ieee754": [
        "Numeric.IEEE"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans"
      ],
      "network": [
        "Network",
        "Network.BSD",
        "Network.Socket"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Arrows",
        "Options.Applicative.Types"
      ],
      "parsers": [
        "Text.Parser.Char",
        "Text.Parser.Combinators",
        "Text.Parser.Expression",
        "Text.Parser.LookAhead",
        "Text.Parser.Token",
        "Text.Parser.Token.Highlight"
      ],
      "pretty": [],
      "regex-tdfa": [
        "Text.Regex.TDFA"
      ],
      "safe": [
        "Safe"
      ],
      "split": [
        "Data.List.Split"
      ],
      "terminal-size": [
        "System.Console.Terminal.Size"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Strict"
      ],
      "transformers-compat": [],
      "trifecta": [
        "Text.Trifecta",
        "Text.Trifecta.Delta",
        "Text.Trifecta.Result"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ],
      "vector": [
        "Data.Vector.Unboxed"
      ],
      "vector-binary-instances": [
        "Data.Vector.Binary"
      ],
      "zip-archive": [
        "Codec.Archive.Zip"
      ]
    },
    "imports": [
      "Cheapskate",
      "Cheapskate.Html",
      "Cheapskate.Types",
      "Codec.Archive.Zip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Strict",
      "Data.Aeson",
      "Data.Array",
      "Data.Binary",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Lazy",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Generics.Uniplate.Data",
      "Data.HashSet",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.PriorityQueue.FingerTree",
      "Data.Proxy",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector.Binary",
      "Data.Vector.Unboxed",
      "Data.Version",
      "Data.Word",
      "Debug.Trace",
      "Foreign.C",
      "Foreign.C.String",
      "Foreign.LibFFI",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Generics",
      "Idris.AbsSyntax",
      "Idris.AbsSyntaxTree",
      "Idris.Apropos",
      "Idris.ASTUtils",
      "Idris.CaseSplit",
      "Idris.Chaser",
      "Idris.CmdOptions",
      "Idris.Colours",
      "Idris.Completion",
      "Idris.Core.Binary",
      "Idris.Core.CaseTree",
      "Idris.Core.Constraints",
      "Idris.Core.DeepSeq",
      "Idris.Core.Elaborate",
      "Idris.Core.Evaluate",
      "Idris.Core.Execute",
      "Idris.Core.ProofState",
      "Idris.Core.ProofTerm",
      "Idris.Core.TT",
      "Idris.Core.Typecheck",
      "Idris.Core.Unify",
      "Idris.Core.WHNF",
      "Idris.Coverage",
      "Idris.DataOpts",
      "Idris.DeepSeq",
      "Idris.Delaborate",
      "Idris.Directives",
      "Idris.Docs",
      "Idris.Docstrings",
      "Idris.DSL",
      "Idris.Elab.AsPat",
      "Idris.Elab.Clause",
      "Idris.Elab.Data",
      "Idris.ElabDecls",
      "Idris.Elab.Implementation",
      "Idris.Elab.Interface",
      "Idris.Elab.Provider",
      "Idris.Elab.Quasiquote",
      "Idris.Elab.Record",
      "Idris.Elab.Rewrite",
      "Idris.Elab.RunElab",
      "Idris.Elab.Term",
      "Idris.Elab.Transform",
      "Idris.Elab.Type",
      "Idris.Elab.Utils",
      "Idris.Elab.Value",
      "Idris.Erasure",
      "Idris.Error",
      "Idris.ErrReverse",
      "Idris.Help",
      "Idris.IBC",
      "Idris.IdeMode",
      "Idris.IdrisDoc",
      "Idris.Imports",
      "Idris.Info",
      "Idris.Info.Show",
      "Idris.Inliner",
      "Idris.Interactive",
      "Idris.Main",
      "Idris.ModeCommon",
      "Idris.Output",
      "Idris.Package",
      "Idris.Package.Common",
      "Idris.Package.Parser",
      "Idris.Parser",
      "Idris.Parser.Data",
      "Idris.Parser.Expr",
      "Idris.Parser.Helpers",
      "Idris.Parser.Ops",
      "Idris.PartialEval",
      "Idris.Primitives",
      "Idris.ProofSearch",
      "Idris.Prover",
      "Idris.Providers",
      "Idris.Reflection",
      "Idris.REPL",
      "Idris.REPL.Browse",
      "Idris.REPL.Commands",
      "Idris.REPL.Parser",
      "Idris.Transforms",
      "Idris.TypeSearch",
      "Idris.Unlit",
      "Idris.WhoCalls",
      "IRTS.Bytecode",
      "IRTS.CodegenC",
      "IRTS.CodegenCommon",
      "IRTS.CodegenJavaScript",
      "IRTS.Compiler",
      "IRTS.Defunctionalise",
      "IRTS.DumpBC",
      "IRTS.Exports",
      "IRTS.Inliner",
      "IRTS.JavaScript.AST",
      "IRTS.Lang",
      "IRTS.LangOpts",
      "IRTS.Portable",
      "IRTS.Simplified",
      "IRTS.System",
      "Network",
      "Network.BSD",
      "Network.Socket",
      "Numeric",
      "Numeric.IEEE",
      "Options.Applicative",
      "Options.Applicative.Arrows",
      "Options.Applicative.Types",
      "Paths",
      "Prelude",
      "Safe",
      "System.Console.ANSI",
      "System.Console.Haskeline",
      "System.Console.Haskeline.History",
      "System.Console.Haskeline.MonadException",
      "System.Console.Terminal.Size",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.FilePath.Windows",
      "System.FSNotify",
      "System.FSNotify.Devel",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix.DynamicLinker",
      "System.Process",
      "System.Win32.DLL",
      "System.Win32.Types",
      "Target",
      "TestData",
      "Test.Tasty",
      "Test.Tasty.Golden",
      "Test.Tasty.Ingredients.Rerun",
      "Test.Tasty.Options",
      "Test.Tasty.Runners",
      "Text.Blaze",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.String",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.String",
      "Text.Parser.Char",
      "Text.Parser.Combinators",
      "Text.ParserCombinators.ReadP",
      "Text.Parser.Expression",
      "Text.Parser.LookAhead",
      "Text.Parser.Token",
      "Text.Parser.Token.Highlight",
      "Text.PrettyPrint.Annotated.Leijen",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.Printf",
      "Text.Regex.TDFA",
      "Text.Trifecta",
      "Text.Trifecta.Delta",
      "Text.Trifecta.Result",
      "Tools",
      "Util.DynamicLinker",
      "Util.Net",
      "Util.Pretty",
      "Util.ScreenSize",
      "Util.System",
      "Version"
    ],
    "modules": [
      "Idris.Core.Binary",
      "Idris.Core.CaseTree",
      "Idris.Core.Constraints",
      "Idris.Core.DeepSeq",
      "Idris.Core.Elaborate",
      "Idris.Core.Evaluate",
      "Idris.Core.Execute",
      "Idris.Core.ProofState",
      "Idris.Core.ProofTerm",
      "Idris.Core.TT",
      "Idris.Core.Typecheck",
      "Idris.Core.Unify",
      "Idris.Core.WHNF",
      "Idris.Elab.Utils",
      "Idris.Elab.Type",
      "Idris.Elab.AsPat",
      "Idris.Elab.Clause",
      "Idris.Elab.Data",
      "Idris.Elab.Record",
      "Idris.Elab.Interface",
      "Idris.Elab.Implementation",
      "Idris.Elab.Provider",
      "Idris.Elab.RunElab",
      "Idris.Elab.Transform",
      "Idris.Elab.Value",
      "Idris.Elab.Term",
      "Idris.Elab.Quasiquote",
      "Idris.Elab.Rewrite",
      "Idris.REPL.Browse",
      "Idris.AbsSyntax",
      "Idris.AbsSyntaxTree",
      "Idris.Apropos",
      "Idris.ASTUtils",
      "Idris.CaseSplit",
      "Idris.Chaser",
      "Idris.Colours",
      "Idris.Completion",
      "Idris.Coverage",
      "Idris.DSL",
      "Idris.DataOpts",
      "Idris.DeepSeq",
      "Idris.Delaborate",
      "Idris.Directives",
      "Idris.Docs",
      "Idris.Docstrings",
      "Idris.ElabDecls",
      "Idris.Erasure",
      "Idris.Error",
      "Idris.ErrReverse",
      "Idris.Help",
      "Idris.IBC",
      "Idris.IdeMode",
      "Idris.IdrisDoc",
      "Idris.Imports",
      "Idris.Info",
      "Idris.Info.Show",
      "Idris.Inliner",
      "Idris.Interactive",
      "Idris.Output",
      "Idris.Main",
      "Idris.ModeCommon",
      "Idris.Parser",
      "Idris.Parser.Helpers",
      "Idris.Parser.Ops",
      "Idris.Parser.Expr",
      "Idris.Parser.Data",
      "Idris.PartialEval",
      "Idris.Primitives",
      "Idris.ProofSearch",
      "Idris.Prover",
      "Idris.Providers",
      "Idris.Reflection",
      "Idris.REPL",
      "Idris.REPL.Parser",
      "Idris.REPL.Commands",
      "Idris.Transforms",
      "Idris.TypeSearch",
      "Idris.Unlit",
      "Idris.WhoCalls",
      "Idris.CmdOptions",
      "IRTS.BCImp",
      "IRTS.Bytecode",
      "IRTS.CodegenC",
      "IRTS.CodegenCommon",
      "IRTS.CodegenJavaScript",
      "IRTS.Exports",
      "IRTS.JavaScript.AST",
      "IRTS.Compiler",
      "IRTS.Defunctionalise",
      "IRTS.DumpBC",
      "IRTS.Inliner",
      "IRTS.Lang",
      "IRTS.LangOpts",
      "IRTS.Portable",
      "IRTS.Simplified",
      "IRTS.System",
      "Idris.Package",
      "Idris.Package.Common",
      "Util.DynamicLinker",
      "Util.ScreenSize",
      "Util.System"
    ],
    "name": "idris",
    "version": "0.12.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Arrow",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Version",
        "GHC.IO.Exception",
        "System.Exit",
        "System.IO",
        "System.IO.Error"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "extra": [
        "Control.Monad.Extra",
        "System.Directory.Extra",
        "System.Process.Extra"
      ],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "monad-parallel": [
        "Control.Monad.Parallel"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader"
      ],
      "omnifmt": [],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Types"
      ],
      "pipes": [
        "Pipes.Prelude"
      ],
      "pipes-concurrency": [],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "time": [],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "yaml": [
        "Data.Yaml",
        "Data.Yaml.Include"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad.Catch",
      "Control.Monad.Except",
      "Control.Monad.Extra",
      "Control.Monad.Logger",
      "Control.Monad.Parallel",
      "Control.Monad.Reader",
      "Data.Aeson.Types",
      "Data.Char",
      "Data.HashMap.Lazy",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Version",
      "Data.Yaml",
      "Data.Yaml.Include",
      "GHC.IO.Exception",
      "Omnifmt.Config",
      "Omnifmt.Directory",
      "Omnifmt.Exit",
      "Omnifmt.Options",
      "Omnifmt.Pipes",
      "Omnifmt.Process",
      "Omnifmt.Version",
      "Options.Applicative",
      "Options.Applicative.Types",
      "Paths",
      "Pipes.Prelude",
      "System.Directory.Extra",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.Log.FastLogger",
      "System.Process.Extra"
    ],
    "modules": [
      "Omnifmt.Directory",
      "Omnifmt.Config",
      "Omnifmt.Exit",
      "Omnifmt.Pipes",
      "Omnifmt.Process"
    ],
    "name": "omnifmt",
    "version": "0.2.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Prelude"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8",
        "Blaze.ByteString.Builder.Html.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "hashable": [],
      "mmorph": [],
      "mtl": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Blaze.ByteString.Builder.Html.Utf8",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Example1",
      "Lucid",
      "Lucid.Base",
      "Lucid.Bootstrap",
      "Lucid.Html5",
      "Prelude",
      "Test.Hspec",
      "Test.HUnit"
    ],
    "modules": [
      "Lucid",
      "Lucid.Base",
      "Lucid.Html5",
      "Lucid.Bootstrap"
    ],
    "name": "lucid",
    "version": "2.9.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Concurrent",
        "Control.Exception",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-accessor": [
        "Data.Accessor",
        "Data.Accessor.Container"
      ],
      "network-transport": [
        "Network.Transport",
        "Network.Transport.Internal"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Data.Accessor",
      "Data.Accessor.Container",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Foldable",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Typeable",
      "Network.Transport",
      "Network.Transport.InMemory",
      "Network.Transport.Internal",
      "Network.Transport.Tests",
      "Network.Transport.Tests.Auxiliary",
      "Network.Transport.Tests.Multicast",
      "Prelude"
    ],
    "modules": [
      "Network.Transport.InMemory"
    ],
    "name": "network-transport-inmemory",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "base": [],
      "bifunctors": [],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "mtl": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Control.Monad.Catch",
      "Data.Text",
      "Data.Text.IO"
    ],
    "modules": [
      "System.Nagios.Plugin"
    ],
    "name": "nagios-check",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "log-domain": [
        "Numeric.Log"
      ],
      "math-functions": [
        "Numeric.SpecFunctions",
        "Numeric.SpecFunctions.Extra"
      ],
      "monad-loops": [
        "Control.Monad.Loops"
      ],
      "random-shuffle": [
        "System.Random.Shuffle"
      ],
      "random-source": [
        "Data.Random.Internal.Source",
        "Data.Random.Internal.Words",
        "Data.Random.Source",
        "Data.Random.Source.IO",
        "Data.Random.Source.PureMT",
        "Data.Random.Source.Std",
        "Data.Random.Source.StdGen"
      ],
      "rvar": [
        "Data.RVar"
      ],
      "syb": [
        "Data.Generics"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Mutable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.Loops",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.Trans.Class",
      "Data.Bits",
      "Data.Complex",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Generics",
      "Data.Int",
      "Data.List",
      "Data.Number.Erf",
      "Data.Random",
      "Data.Random.Distribution",
      "Data.Random.Distribution.Beta",
      "Data.Random.Distribution.Binomial",
      "Data.Random.Distribution.ChiSquare",
      "Data.Random.Distribution.Gamma",
      "Data.Random.Distribution.Normal",
      "Data.Random.Distribution.Uniform",
      "Data.Random.Distribution.Ziggurat",
      "Data.Random.Internal.Find",
      "Data.Random.Internal.Fixed",
      "Data.Random.Internal.Source",
      "Data.Random.Internal.TH",
      "Data.Random.Internal.Words",
      "Data.Random.Lift",
      "Data.Random.List",
      "Data.Random.RVar",
      "Data.Random.Sample",
      "Data.Random.Source",
      "Data.Random.Source.IO",
      "Data.Random.Source.MWC",
      "Data.Random.Source.PureMT",
      "Data.Random.Source.Std",
      "Data.Random.Source.StdGen",
      "Data.Ratio",
      "Data.RVar",
      "Data.STRef",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Mutable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Language.Haskell.TH",
      "Numeric.Log",
      "Numeric.SpecFunctions",
      "Numeric.SpecFunctions.Extra",
      "System.Random.Shuffle",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Random",
      "Data.Random.Distribution",
      "Data.Random.Distribution.Bernoulli",
      "Data.Random.Distribution.Beta",
      "Data.Random.Distribution.Binomial",
      "Data.Random.Distribution.Categorical",
      "Data.Random.Distribution.ChiSquare",
      "Data.Random.Distribution.Dirichlet",
      "Data.Random.Distribution.Exponential",
      "Data.Random.Distribution.StretchedExponential",
      "Data.Random.Distribution.Gamma",
      "Data.Random.Distribution.Multinomial",
      "Data.Random.Distribution.Normal",
      "Data.Random.Distribution.Pareto",
      "Data.Random.Distribution.Poisson",
      "Data.Random.Distribution.Rayleigh",
      "Data.Random.Distribution.Simplex",
      "Data.Random.Distribution.T",
      "Data.Random.Distribution.Triangular",
      "Data.Random.Distribution.Uniform",
      "Data.Random.Distribution.Weibull",
      "Data.Random.Distribution.Ziggurat",
      "Data.Random.Internal.Find",
      "Data.Random.Internal.Fixed",
      "Data.Random.Internal.TH",
      "Data.Random.Lift",
      "Data.Random.List",
      "Data.Random.RVar",
      "Data.Random.Sample",
      "Data.Random.Vector"
    ],
    "name": "random-fu",
    "version": "0.2.7.0"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.IO.Exception",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "Text.Read"
      ],
      "clock": [
        "System.Clock"
      ],
      "directory": [
        "System.Directory"
      ],
      "foldl": [
        "Control.Foldl",
        "Control.Foldl.Text"
      ],
      "hostname": [
        "Network.HostName"
      ],
      "managed": [
        "Control.Monad.Managed"
      ],
      "optional-args": [
        "Data.Optional"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Types"
      ],
      "process": [
        "System.Process"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TQueue"
      ],
      "system-fileio": [
        "Filesystem"
      ],
      "system-filepath": [
        "Filesystem.Path.CurrentOS"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TQueue",
      "Control.Exception",
      "Control.Foldl",
      "Control.Foldl.Text",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Managed",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Criterion.Main",
      "Data.Bits",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.Optional",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Time",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Filesystem",
      "Filesystem.Path.CurrentOS",
      "GHC.IO.Exception",
      "Network.HostName",
      "Numeric",
      "Options.Applicative",
      "Options.Applicative.Types",
      "Prelude",
      "System.Clock",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.Posix",
      "System.Process",
      "System.Win32",
      "Test.DocTest",
      "Text.Read",
      "Turtle",
      "Turtle.Format",
      "Turtle.Options",
      "Turtle.Pattern",
      "Turtle.Prelude",
      "Turtle.Shell"
    ],
    "modules": [
      "Turtle",
      "Turtle.Format",
      "Turtle.Pattern",
      "Turtle.Shell",
      "Turtle.Options",
      "Turtle.Prelude",
      "Turtle.Tutorial"
    ],
    "name": "turtle",
    "version": "1.2.8"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.IO",
        "Data.Array.MArray",
        "Data.Array.ST",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Monad.ST"
      ]
    },
    "imports": [
      "Control.Monad.ST",
      "Data.Array.IO",
      "Data.Array.MArray",
      "Data.Array.ST",
      "Data.Array.Unboxed",
      "Data.Function.ArrayMemoize"
    ],
    "modules": [
      "Data.Function.ArrayMemoize"
    ],
    "name": "array-memoize",
    "version": "0.6.0"
  },
  {
    "dependencies": {
      "base": [],
      "mtl": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Text.Parser.Indentation.Implementation"
    ],
    "name": "indentation-core",
    "version": "0.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Monad",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "GHC.Generics",
        "GHC.TypeLits"
      ],
      "unfoldable-restricted": [
        "Data.Unfoldable.Restricted"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Data",
      "Data.List",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Unfoldable.Restricted",
      "GHC.Generics",
      "GHC.TypeLits",
      "Test.QuickCheck"
    ],
    "modules": [
      "Test.QuickCheck.Combinators"
    ],
    "name": "quickcheck-combinators",
    "version": "0.0.1"
  },
  {
    "dependencies": {
      "ascii-progress": [],
      "async": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "concurrent-output": [],
      "errors": [],
      "iproute": [],
      "irc-client": [
        "Network.IRC.Client"
      ],
      "irc-dcc": [],
      "monad-control": [],
      "network": [],
      "optparse-applicative": [],
      "path": [],
      "random": [],
      "safe-exceptions": [],
      "signal": [],
      "stm": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "transformers-base": [],
      "unix-compat": [
        "System.PosixCompat.Files"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.CaseInsensitive",
      "Data.Text",
      "DCC",
      "Network.IRC.Client",
      "System.PosixCompat.Files",
      "ZNC"
    ],
    "modules": [],
    "name": "xdcc",
    "version": "1.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Traversable"
      ],
      "mcmc-types": [
        "Data.Sampling.Types"
      ],
      "mwc-probability": [
        "System.Random.MWC.Probability"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State.Strict",
      "Data.Sampling.Types",
      "Data.Sequence",
      "Data.Traversable",
      "Numeric.MCMC.Metropolis",
      "Pipes",
      "Pipes.Prelude",
      "System.Random.MWC.Probability"
    ],
    "modules": [
      "Numeric.MCMC.Metropolis"
    ],
    "name": "mighty-metropolis",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.IArray"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Char",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Prelude",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "dlist": [
        "Data.DList"
      ],
      "names-th": [
        "Language.Haskell.TH.Lib.Extra",
        "Language.Haskell.TH.Name.CamelCase"
      ],
      "persistable-record": [
        "Database.Record",
        "Database.Record.Instances",
        "Database.Record.KeyConstraint",
        "Database.Record.Persistable",
        "Database.Record.TH",
        "Database.Record.ToSql"
      ],
      "sql-words": [
        "Language.SQL.Keyword"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ],
      "th-reify-compat": [
        "Language.Haskell.TH.Compat.Reify"
      ],
      "time": [
        "Data.Time"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.Array",
      "Data.Array.IArray",
      "Database.Record",
      "Database.Record.Instances",
      "Database.Record.KeyConstraint",
      "Database.Record.Persistable",
      "Database.Record.TH",
      "Database.Record.ToSql",
      "Database.Relational.Query",
      "Database.Relational.Query.Arrow",
      "Database.Relational.Query.Component",
      "Database.Relational.Query.Constraint",
      "Database.Relational.Query.Context",
      "Database.Relational.Query.Derives",
      "Database.Relational.Query.Effect",
      "Database.Relational.Query.Internal.Product",
      "Database.Relational.Query.Internal.SQL",
      "Database.Relational.Query.Internal.Sub",
      "Database.Relational.Query.Monad.Aggregate",
      "Database.Relational.Query.Monad.Assign",
      "Database.Relational.Query.Monad.BaseType",
      "Database.Relational.Query.Monad.Class",
      "Database.Relational.Query.Monad.Register",
      "Database.Relational.Query.Monad.Restrict",
      "Database.Relational.Query.Monad.Simple",
      "Database.Relational.Query.Monad.Trans.Aggregating",
      "Database.Relational.Query.Monad.Trans.Assigning",
      "Database.Relational.Query.Monad.Trans.Config",
      "Database.Relational.Query.Monad.Trans.Join",
      "Database.Relational.Query.Monad.Trans.JoinState",
      "Database.Relational.Query.Monad.Trans.Ordering",
      "Database.Relational.Query.Monad.Trans.Qualify",
      "Database.Relational.Query.Monad.Trans.Restricting",
      "Database.Relational.Query.Monad.Type",
      "Database.Relational.Query.Monad.Unique",
      "Database.Relational.Query.Pi",
      "Database.Relational.Query.Pi.Unsafe",
      "Database.Relational.Query.Projectable",
      "Database.Relational.Query.ProjectableExtended",
      "Database.Relational.Query.Projection",
      "Database.Relational.Query.Pure",
      "Database.Relational.Query.Relation",
      "Database.Relational.Query.Scalar",
      "Database.Relational.Query.SQL",
      "Database.Relational.Query.Sub",
      "Database.Relational.Query.Table",
      "Database.Relational.Query.TH",
      "Database.Relational.Query.Type",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.DList",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.Time.Locale.Compat",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Compat.Reify",
      "Language.Haskell.TH.Lib.Extra",
      "Language.Haskell.TH.Name.CamelCase",
      "Language.SQL.Keyword",
      "Lex",
      "Model",
      "Prelude",
      "Test.QuickCheck.Simple",
      "Text.Printf"
    ],
    "modules": [
      "Database.Relational.Query.Arrow",
      "Database.Relational.Query",
      "Database.Relational.Query.Table",
      "Database.Relational.Query.SQL",
      "Database.Relational.Query.Pure",
      "Database.Relational.Query.Pi",
      "Database.Relational.Query.Pi.Unsafe",
      "Database.Relational.Query.Constraint",
      "Database.Relational.Query.Context",
      "Database.Relational.Query.Projectable",
      "Database.Relational.Query.ProjectableExtended",
      "Database.Relational.Query.Component",
      "Database.Relational.Query.Sub",
      "Database.Relational.Query.Projection",
      "Database.Relational.Query.Monad.BaseType",
      "Database.Relational.Query.Monad.Class",
      "Database.Relational.Query.Monad.Trans.Ordering",
      "Database.Relational.Query.Monad.Trans.Aggregating",
      "Database.Relational.Query.Monad.Trans.Restricting",
      "Database.Relational.Query.Monad.Trans.Join",
      "Database.Relational.Query.Monad.Trans.Config",
      "Database.Relational.Query.Monad.Trans.Assigning",
      "Database.Relational.Query.Monad.Type",
      "Database.Relational.Query.Monad.Simple",
      "Database.Relational.Query.Monad.Aggregate",
      "Database.Relational.Query.Monad.Unique",
      "Database.Relational.Query.Monad.Restrict",
      "Database.Relational.Query.Monad.Assign",
      "Database.Relational.Query.Monad.Register",
      "Database.Relational.Query.Relation",
      "Database.Relational.Query.Effect",
      "Database.Relational.Query.Scalar",
      "Database.Relational.Query.Type",
      "Database.Relational.Query.Derives",
      "Database.Relational.Query.TH"
    ],
    "name": "relational-query",
    "version": "0.8.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.STRef"
      ],
      "containers": [
        "Data.IntMap.Strict",
        "Data.IntSet"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State.Strict"
      ],
      "safe": [],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.ST",
      "Control.Monad.State.Strict",
      "Data.Core.Graph",
      "Data.Core.Graph.NodeManager",
      "Data.Core.Graph.Persistence",
      "Data.Core.Graph.PureCore",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IntMap.Strict",
      "Data.IntSet",
      "Data.List",
      "Data.Maybe",
      "Data.STRef",
      "Data.Vector.Unboxed",
      "Test.Arbitrary",
      "Test.Framework",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Core.Graph",
      "Data.Core.Graph.NodeManager",
      "Data.Core.Graph.Persistence"
    ],
    "name": "graph-core",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Ratio",
        "System.Environment",
        "System.Exit",
        "Text.Printf"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Expr",
        "Text.ParserCombinators.Parsec.Language",
        "Text.ParserCombinators.Parsec.Token"
      ],
      "random-fu": [
        "Data.Random",
        "Data.Random.Distribution.Uniform"
      ],
      "transformers": [
        "Control.Monad.Trans.Error"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.Error",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Random",
      "Data.Random.Dice",
      "Data.Random.Distribution.Uniform",
      "Data.Ratio",
      "System.Environment",
      "System.Exit",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Expr",
      "Text.ParserCombinators.Parsec.Language",
      "Text.ParserCombinators.Parsec.Token",
      "Text.Printf"
    ],
    "modules": [
      "Data.Random.Dice"
    ],
    "name": "dice",
    "version": "0.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudTrail",
      "Test.AWS.CloudTrail",
      "Test.AWS.CloudTrail.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudTrail",
      "Network.AWS.CloudTrail.AddTags",
      "Network.AWS.CloudTrail.CreateTrail",
      "Network.AWS.CloudTrail.DeleteTrail",
      "Network.AWS.CloudTrail.DescribeTrails",
      "Network.AWS.CloudTrail.GetTrailStatus",
      "Network.AWS.CloudTrail.ListPublicKeys",
      "Network.AWS.CloudTrail.ListTags",
      "Network.AWS.CloudTrail.LookupEvents",
      "Network.AWS.CloudTrail.RemoveTags",
      "Network.AWS.CloudTrail.StartLogging",
      "Network.AWS.CloudTrail.StopLogging",
      "Network.AWS.CloudTrail.Types",
      "Network.AWS.CloudTrail.UpdateTrail",
      "Network.AWS.CloudTrail.Waiters"
    ],
    "name": "amazonka-cloudtrail",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.IArray"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.ByteString.Lazy",
        "Data.Attoparsec.Lazy",
        "Data.Attoparsec.Zepto"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Int",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Word",
        "GHC.Float",
        "GHC.Generics",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Short",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Criterion.Main",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Lazy",
      "Data.Attoparsec.Zepto",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Short",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Csv",
      "Data.Csv.Conversion",
      "Data.Csv.Conversion.Internal",
      "Data.Csv.Encoding",
      "Data.Csv.Incremental",
      "Data.Csv.Parser",
      "Data.Csv.Streaming",
      "Data.Csv.Types",
      "Data.Csv.Util",
      "Data.Foldable",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IntMap",
      "Data.Map",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "Data.Word",
      "GHC.Float",
      "GHC.Generics",
      "Prelude",
      "System.Exit",
      "System.IO",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.CSV.Lazy.ByteString"
    ],
    "modules": [
      "Data.Csv",
      "Data.Csv.Builder",
      "Data.Csv.Incremental",
      "Data.Csv.Parser",
      "Data.Csv.Streaming"
    ],
    "name": "cassava",
    "version": "0.4.5.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Redshift",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.Redshift",
      "Test.AWS.Redshift.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Redshift",
      "Network.AWS.Redshift.AuthorizeClusterSecurityGroupIngress",
      "Network.AWS.Redshift.AuthorizeSnapshotAccess",
      "Network.AWS.Redshift.CopyClusterSnapshot",
      "Network.AWS.Redshift.CreateCluster",
      "Network.AWS.Redshift.CreateClusterParameterGroup",
      "Network.AWS.Redshift.CreateClusterSecurityGroup",
      "Network.AWS.Redshift.CreateClusterSnapshot",
      "Network.AWS.Redshift.CreateClusterSubnetGroup",
      "Network.AWS.Redshift.CreateEventSubscription",
      "Network.AWS.Redshift.CreateHSMClientCertificate",
      "Network.AWS.Redshift.CreateHSMConfiguration",
      "Network.AWS.Redshift.CreateSnapshotCopyGrant",
      "Network.AWS.Redshift.CreateTags",
      "Network.AWS.Redshift.DeleteCluster",
      "Network.AWS.Redshift.DeleteClusterParameterGroup",
      "Network.AWS.Redshift.DeleteClusterSecurityGroup",
      "Network.AWS.Redshift.DeleteClusterSnapshot",
      "Network.AWS.Redshift.DeleteClusterSubnetGroup",
      "Network.AWS.Redshift.DeleteEventSubscription",
      "Network.AWS.Redshift.DeleteHSMClientCertificate",
      "Network.AWS.Redshift.DeleteHSMConfiguration",
      "Network.AWS.Redshift.DeleteSnapshotCopyGrant",
      "Network.AWS.Redshift.DeleteTags",
      "Network.AWS.Redshift.DescribeClusterParameterGroups",
      "Network.AWS.Redshift.DescribeClusterParameters",
      "Network.AWS.Redshift.DescribeClusterSecurityGroups",
      "Network.AWS.Redshift.DescribeClusterSnapshots",
      "Network.AWS.Redshift.DescribeClusterSubnetGroups",
      "Network.AWS.Redshift.DescribeClusterVersions",
      "Network.AWS.Redshift.DescribeClusters",
      "Network.AWS.Redshift.DescribeDefaultClusterParameters",
      "Network.AWS.Redshift.DescribeEventCategories",
      "Network.AWS.Redshift.DescribeEventSubscriptions",
      "Network.AWS.Redshift.DescribeEvents",
      "Network.AWS.Redshift.DescribeHSMClientCertificates",
      "Network.AWS.Redshift.DescribeHSMConfigurations",
      "Network.AWS.Redshift.DescribeLoggingStatus",
      "Network.AWS.Redshift.DescribeOrderableClusterOptions",
      "Network.AWS.Redshift.DescribeReservedNodeOfferings",
      "Network.AWS.Redshift.DescribeReservedNodes",
      "Network.AWS.Redshift.DescribeResize",
      "Network.AWS.Redshift.DescribeSnapshotCopyGrants",
      "Network.AWS.Redshift.DescribeTableRestoreStatus",
      "Network.AWS.Redshift.DescribeTags",
      "Network.AWS.Redshift.DisableLogging",
      "Network.AWS.Redshift.DisableSnapshotCopy",
      "Network.AWS.Redshift.EnableLogging",
      "Network.AWS.Redshift.EnableSnapshotCopy",
      "Network.AWS.Redshift.ModifyCluster",
      "Network.AWS.Redshift.ModifyClusterIAMRoles",
      "Network.AWS.Redshift.ModifyClusterParameterGroup",
      "Network.AWS.Redshift.ModifyClusterSubnetGroup",
      "Network.AWS.Redshift.ModifyEventSubscription",
      "Network.AWS.Redshift.ModifySnapshotCopyRetentionPeriod",
      "Network.AWS.Redshift.PurchaseReservedNodeOffering",
      "Network.AWS.Redshift.RebootCluster",
      "Network.AWS.Redshift.ResetClusterParameterGroup",
      "Network.AWS.Redshift.RestoreFromClusterSnapshot",
      "Network.AWS.Redshift.RestoreTableFromClusterSnapshot",
      "Network.AWS.Redshift.RevokeClusterSecurityGroupIngress",
      "Network.AWS.Redshift.RevokeSnapshotAccess",
      "Network.AWS.Redshift.RotateEncryptionKey",
      "Network.AWS.Redshift.Types",
      "Network.AWS.Redshift.Waiters"
    ],
    "name": "amazonka-redshift",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "GHC.Exts",
        "Prelude",
        "System.Environment",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntSet"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "monoid-subclasses": [
        "Data.Monoid.Cancellative",
        "Data.Monoid.Factorial",
        "Data.Monoid.Instances.ByteString.UTF8",
        "Data.Monoid.Instances.Positioned",
        "Data.Monoid.Instances.Stateful",
        "Data.Monoid.Null",
        "Data.Monoid.Textual"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "AttoAeson",
      "Common",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Criterion.Main",
      "Criterion.Types",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Char8",
      "Data.Attoparsec.Lazy",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Text.Lazy",
      "Data.Attoparsec.Zepto",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.Functor",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.IntSet",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Monoid.Cancellative",
      "Data.Monoid.Factorial",
      "Data.Monoid.Instances.ByteString.Char8",
      "Data.Monoid.Instances.ByteString.UTF8",
      "Data.Monoid.Instances.Positioned",
      "Data.Monoid.Instances.Stateful",
      "Data.Monoid.Null",
      "Data.Monoid.Textual",
      "Data.Picoparsec",
      "Data.Picoparsec.Combinator",
      "Data.Picoparsec.Internal",
      "Data.Picoparsec.Internal.Types",
      "Data.Picoparsec.Monoid.Internal",
      "Data.Picoparsec.Number",
      "Data.Picoparsec.State",
      "Data.Picoparsec.Zepto",
      "Data.Scientific",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Word",
      "GHC.Exts",
      "HeadersByteString",
      "HeadersByteString.Atto",
      "HeadersText",
      "Links",
      "Network.HTTP.Types.Version",
      "Network.Wai.Handler.Warp.ReadInt",
      "Network.Wai.Handler.Warp.RequestHeader",
      "Numbers",
      "PicoAeson",
      "Prelude",
      "QC.Combinator",
      "QC.Common",
      "QC.Monoid",
      "QC.Rechunked",
      "QC.Simple",
      "RFC2616",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "Test.QuickCheck",
      "Test.QuickCheck.Modifiers",
      "Test.QuickCheck.Unicode",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Text.Parsec",
      "Text.Parsec.ByteString",
      "Text.Parsec.ByteString.Lazy",
      "Text.Parsec.Char",
      "Text.Parsec.Combinator",
      "Text.Parsec.Prim",
      "Text.Parsec.Text",
      "Text.Parsec.Text.Lazy",
      "Warp"
    ],
    "modules": [
      "Data.Picoparsec",
      "Data.Picoparsec.Combinator",
      "Data.Picoparsec.Number",
      "Data.Picoparsec.State",
      "Data.Picoparsec.Types",
      "Data.Picoparsec.Zepto"
    ],
    "name": "picoparsec",
    "version": "0.1.2.3"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Concurrent",
        "Data.IORef",
        "Prelude"
      ],
      "containers": [],
      "random": [],
      "time": []
    },
    "imports": [
      "Control.Concurrent",
      "Data.CAS",
      "Data.Concurrent.Deque.Class",
      "Data.Concurrent.Deque.Reference",
      "Data.IORef",
      "Data.Sequence",
      "Prelude"
    ],
    "modules": [
      "Data.Concurrent.Deque.Class",
      "Data.Concurrent.Deque.Reference",
      "Data.Concurrent.Deque.Reference.DequeInstance",
      "Data.Concurrent.Deque.Debugger"
    ],
    "name": "abstract-deque",
    "version": "0.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Typeable"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [],
      "data-default": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types.Header"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "parsec": [],
      "resourcet": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Reader",
      "Control.Monad.Trans.Control",
      "Data.Aeson",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Typeable",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types.Header",
      "Web.ATND",
      "Web.ATND.Util"
    ],
    "modules": [
      "Web.ATND",
      "Web.ATND.Event",
      "Web.ATND.Util"
    ],
    "name": "atndapi",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid",
        "Data.String",
        "Prelude",
        "System.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Monoid",
      "Data.String",
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Text.PrettyPrint.Annotated.Leijen"
    ],
    "name": "annotated-wl-pprint",
    "version": "0.7.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bool",
        "Data.Eq",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Tuple",
        "Data.Typeable",
        "Prelude",
        "System.IO",
        "Text.Show"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.IO.Region",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Bool",
      "Data.Eq",
      "Data.Function",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Tuple",
      "Data.Typeable",
      "Prelude",
      "System.IO",
      "Test.Hspec",
      "Text.Show"
    ],
    "modules": [
      "Control.IO.Region"
    ],
    "name": "io-region",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Foldable",
      "Data.Monoid",
      "Data.String",
      "Data.Traversable"
    ],
    "modules": [
      "Data.Optional"
    ],
    "name": "optional-args",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Complex"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "storable-complex": [],
      "vector": [
        "Data.Vector.Storable.Mutable"
      ]
    },
    "imports": [
      "Control.Monad.Primitive",
      "Data.Complex",
      "Data.Vector.Storable.Mutable",
      "Numeric.FFT.Vector.Base",
      "Numeric.FFT.Vector.Unnormalized"
    ],
    "modules": [
      "Numeric.FFT.Vector.Unnormalized",
      "Numeric.FFT.Vector.Invertible",
      "Numeric.FFT.Vector.Unitary",
      "Numeric.FFT.Vector.Plan"
    ],
    "name": "vector-fftw",
    "version": "0.1.3.7"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Version"
      ],
      "base": [
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Version",
        "System.Environment",
        "Text.ParserCombinators.ReadP"
      ],
      "blaze-html": [
        "Text.Blaze.Html"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cmdargs": [
        "System.Console.CmdArgs"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "shakespeare": [
        "Text.Hamlet"
      ],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Entry"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "wai": [
        "Network.Wai"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "yaml": [
        "Data.Yaml"
      ],
      "yesod-core": [
        "Yesod.Core"
      ],
      "yesod-form": [
        "Yesod.Form"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Codec.Compression.GZip",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.HashMap.Strict",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Vector",
      "Data.Version",
      "Data.Yaml",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Version",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "System.Console.CmdArgs",
      "System.Directory",
      "System.Environment",
      "Text.Blaze.Html",
      "Text.Hamlet",
      "Text.ParserCombinators.ReadP",
      "Yesod.Core",
      "Yesod.Form"
    ],
    "modules": [],
    "name": "yackage",
    "version": "0.8.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [],
      "hspec": [
        "Test.Hspec"
      ],
      "hspec-core": [
        "Test.Hspec.Core.Spec"
      ],
      "random": [],
      "tagged": [],
      "tasty": [
        "Test.Tasty",
        "Test.Tasty.Options",
        "Test.Tasty.Providers",
        "Test.Tasty.Runners"
      ],
      "tasty-quickcheck": [
        "Test.Tasty.QuickCheck"
      ],
      "tasty-smallcheck": [
        "Test.Tasty.SmallCheck"
      ]
    },
    "imports": [
      "Test.Hspec",
      "Test.Hspec.Core.Spec",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.Runners",
      "Test.Tasty.SmallCheck"
    ],
    "modules": [
      "Test.Tasty.Hspec"
    ],
    "name": "tasty-hspec",
    "version": "1.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Ratio",
        "GHC.Exts",
        "GHC.TypeLits",
        "Prelude"
      ],
      "numtype-dk": [
        "Numeric.NumType.DK.Integers"
      ]
    },
    "imports": [
      "Data.ExactPi",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Ratio",
      "GHC.Exts",
      "GHC.TypeLits",
      "Numeric.NumType.DK.Integers",
      "Prelude"
    ],
    "modules": [
      "Data.ExactPi",
      "Data.ExactPi.TypeLevel"
    ],
    "name": "exact-pi",
    "version": "0.4.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Control.Monad.Zip",
        "Data.Bifunctor",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude",
        "System.IO",
        "Text.Printf",
        "Text.Read"
      ],
      "bifunctors": [],
      "comonad": [
        "Control.Comonad",
        "Control.Comonad.Env.Class",
        "Control.Comonad.Hoist.Class",
        "Control.Comonad.Store.Class",
        "Control.Comonad.Traced.Class",
        "Control.Comonad.Trans.Class",
        "Control.Comonad.Trans.Env",
        "Control.Comonad.Trans.Identity",
        "Control.Comonad.Trans.Store",
        "Control.Comonad.Trans.Traced"
      ],
      "containers": [],
      "distributive": [
        "Data.Distributive"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader.Class",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Class"
      ],
      "prelude-extras": [
        "Prelude.Extras"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "semigroupoids": [
        "Data.Functor.Alt",
        "Data.Functor.Apply",
        "Data.Functor.Bind",
        "Data.Functor.Extend",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable"
      ],
      "semigroups": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Free",
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Comonad.Cofree.Class",
      "Control.Comonad.Env.Class",
      "Control.Comonad.Hoist.Class",
      "Control.Comonad.Store.Class",
      "Control.Comonad.Traced.Class",
      "Control.Comonad.Trans.Class",
      "Control.Comonad.Trans.Env",
      "Control.Comonad.Trans.Identity",
      "Control.Comonad.Trans.Store",
      "Control.Comonad.Trans.Traced",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Free",
      "Control.Monad.Free.Class",
      "Control.Monad.Free.TH",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Free",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Control.Monad.Zip",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bitraversable",
      "Data.Char",
      "Data.Data",
      "Data.Distributive",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Alt",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Extend",
      "Data.Functor.Identity",
      "Data.List.NonEmpty",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Semigroup",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Traversable",
      "Data.Traversable",
      "Data.Tree",
      "Data.Typeable",
      "Language.Haskell.TH",
      "Prelude",
      "Prelude.Extras",
      "System.IO",
      "Text.Printf",
      "Text.Read"
    ],
    "modules": [
      "Control.Applicative.Free",
      "Control.Applicative.Free.Final",
      "Control.Applicative.Trans.Free",
      "Control.Alternative.Free",
      "Control.Alternative.Free.Final",
      "Control.Comonad.Cofree",
      "Control.Comonad.Cofree.Class",
      "Control.Comonad.Trans.Cofree",
      "Control.Comonad.Trans.Coiter",
      "Control.Monad.Free",
      "Control.Monad.Free.Church",
      "Control.Monad.Free.Class",
      "Control.Monad.Free.TH",
      "Control.Monad.Trans.Free",
      "Control.Monad.Trans.Free.Church",
      "Control.Monad.Trans.Iter"
    ],
    "name": "free",
    "version": "4.12.4"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": []
    },
    "imports": [
      "Data.Aeson.Casing.Test"
    ],
    "modules": [
      "Data.Aeson.Casing.Internal",
      "Data.Aeson.Casing"
    ],
    "name": "aeson-casing",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Data.Proxy",
        "GHC.Exts"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [],
      "filepath": [],
      "primitive": [],
      "syb": [
        "Data.Generics"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "th-orphans": [
        "Language.Haskell.TH.Instances"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Data",
      "Data.Generics",
      "Data.Map",
      "Data.Proxy",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Vector.Storable",
      "GHC.Exts",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Instances",
      "Language.Haskell.TH.Syntax",
      "Test.Hspec",
      "TH.Derive",
      "TH.Derive.Internal",
      "TH.DeriveSpec.TH",
      "TH.Derive.Storable",
      "TH.Utilities"
    ],
    "modules": [
      "TH.Derive",
      "TH.Derive.Storable",
      "TH.ReifySimple",
      "TH.RelativePaths",
      "TH.Utilities"
    ],
    "name": "th-utilities",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "GHC.Exts",
        "Prelude"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hvect": [
        "Data.HVect"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.RWS.Strict"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad.Identity",
      "Control.Monad.RWS.Strict",
      "Criterion.Main",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HVect",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.PolyMap",
      "Data.String",
      "Data.Text",
      "Data.Typeable",
      "GHC.Exts",
      "Prelude",
      "System.Random",
      "Test.Hspec",
      "Web.PathPieces",
      "Web.Routing.Combinators",
      "Web.Routing.Router",
      "Web.Routing.SafeRouting"
    ],
    "modules": [
      "Data.PolyMap",
      "Web.Routing.Router",
      "Web.Routing.SafeRouting",
      "Web.Routing.Combinators"
    ],
    "name": "reroute",
    "version": "0.4.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.Functor.Identity",
        "System.Exit"
      ],
      "parsec": [
        "Text.Parsec.Language",
        "Text.Parsec.Token",
        "Text.ParserCombinators.Parsec"
      ],
      "process": [
        "System.Process"
      ],
      "transformers": []
    },
    "imports": [
      "Bio.RNAalifoldData",
      "Bio.RNAalifoldParser",
      "Bio.RNAcodeData",
      "Bio.RNAcodeParser",
      "Bio.RNAcofoldData",
      "Bio.RNAcofoldParser",
      "Bio.RNAdistanceData",
      "Bio.RNAdistanceParser",
      "Bio.RNAfoldData",
      "Bio.RNAfoldParser",
      "Bio.RNAplexData",
      "Bio.RNAplexParser",
      "Bio.RNAupData",
      "Bio.RNAupParser",
      "Bio.RNAzData",
      "Bio.RNAzParser",
      "Bio.ViennaRNAParserLibrary",
      "Control.Applicative",
      "Control.Exception.Base",
      "Control.Monad",
      "Data.Functor.Identity",
      "System.Exit",
      "System.Process",
      "Text.Parsec.Language",
      "Text.Parsec.Token",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "Bio.ViennaRNAParser",
      "Bio.ViennaRNAParserLibrary",
      "Bio.RNAcodeData",
      "Bio.RNAcodeParser",
      "Bio.RNAcofoldData",
      "Bio.RNAcofoldParser",
      "Bio.RNAfoldData",
      "Bio.RNAfoldParser",
      "Bio.RNAplexData",
      "Bio.RNAplexParser",
      "Bio.RNAzData",
      "Bio.RNAzParser",
      "Bio.RNAalifoldData",
      "Bio.RNAalifoldParser",
      "Bio.RNAdistanceData",
      "Bio.RNAdistanceParser",
      "Bio.RNAupData",
      "Bio.RNAupParser"
    ],
    "name": "ViennaRNAParser",
    "version": "1.2.9"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-html": [
        "Text.Blaze.Html.Renderer.Text"
      ],
      "cmark": [
        "CMark"
      ],
      "highlighting-kate": [
        "Text.Highlighting.Kate",
        "Text.Highlighting.Kate.Styles"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "CMark",
      "Data.Text",
      "Data.Text.Lazy",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Highlighting.Kate",
      "Text.Highlighting.Kate.Styles"
    ],
    "modules": [
      "CMark.Highlight"
    ],
    "name": "cmark-highlight",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.TaskQueue.TaskQueues.Get",
      "Network.Google.Resource.TaskQueue.Tasks.Delete",
      "Network.Google.Resource.TaskQueue.Tasks.Get",
      "Network.Google.Resource.TaskQueue.Tasks.Insert",
      "Network.Google.Resource.TaskQueue.Tasks.Lease",
      "Network.Google.Resource.TaskQueue.Tasks.List",
      "Network.Google.Resource.TaskQueue.Tasks.Patch",
      "Network.Google.Resource.TaskQueue.Tasks.Update",
      "Network.Google.TaskQueue",
      "Network.Google.TaskQueue.Types"
    ],
    "name": "gogol-taskqueue",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Kinesis",
      "Test.AWS.Fixture",
      "Test.AWS.Kinesis",
      "Test.AWS.Kinesis.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Kinesis",
      "Network.AWS.Kinesis.AddTagsToStream",
      "Network.AWS.Kinesis.CreateStream",
      "Network.AWS.Kinesis.DecreaseStreamRetentionPeriod",
      "Network.AWS.Kinesis.DeleteStream",
      "Network.AWS.Kinesis.DescribeStream",
      "Network.AWS.Kinesis.DisableEnhancedMonitoring",
      "Network.AWS.Kinesis.EnableEnhancedMonitoring",
      "Network.AWS.Kinesis.GetRecords",
      "Network.AWS.Kinesis.GetShardIterator",
      "Network.AWS.Kinesis.IncreaseStreamRetentionPeriod",
      "Network.AWS.Kinesis.ListStreams",
      "Network.AWS.Kinesis.ListTagsForStream",
      "Network.AWS.Kinesis.MergeShards",
      "Network.AWS.Kinesis.PutRecord",
      "Network.AWS.Kinesis.PutRecords",
      "Network.AWS.Kinesis.RemoveTagsFromStream",
      "Network.AWS.Kinesis.SplitShard",
      "Network.AWS.Kinesis.Types",
      "Network.AWS.Kinesis.Waiters"
    ],
    "name": "amazonka-kinesis",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "dlist": [],
      "mtl": [],
      "parsers": [],
      "safe": [],
      "safe-exceptions": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      "Data.Conduit",
      "Data.Conduit.List",
      "Language.Haskell.HLint"
    ],
    "modules": [
      "Data.Conduit.Parser"
    ],
    "name": "conduit-parse",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Bits",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ],
      "securemem": [
        "Data.SecureMem"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Crypto.Cipher.Types.AEAD",
      "Crypto.Cipher.Types.Base",
      "Crypto.Cipher.Types.Block",
      "Crypto.Cipher.Types.BlockIO",
      "Crypto.Cipher.Types.GF",
      "Crypto.Cipher.Types.Stream",
      "Crypto.Cipher.Types.Utils",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.SecureMem",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable"
    ],
    "modules": [
      "Crypto.Cipher.Types",
      "Crypto.Cipher.Types.Unsafe"
    ],
    "name": "crypto-cipher-types",
    "version": "0.0.9"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe",
        "System.Exit"
      ],
      "process": [
        "System.Process"
      ]
    },
    "imports": [
      "Data.Maybe",
      "Nix.Paths",
      "System.Exit",
      "System.Process"
    ],
    "modules": [
      "Nix.Paths",
      "Nix.FindFile"
    ],
    "name": "nix-paths",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Bindings.Libsass",
      "Bindings.Libsass.Types",
      "Bindings.Libsass.Wrappers",
      "Bindings.Libsass.Context",
      "Bindings.Libsass.Functions",
      "Bindings.Libsass.Values"
    ],
    "name": "hlibsass",
    "version": "0.1.5.0"
  },
  {
    "dependencies": {
      "base": [],
      "free-vl": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Control.Monad.Free.VanLaarhoven",
      "Control.Monad.Free.VanLaarhovenE"
    ],
    "name": "free-vl",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Prelude"
      ]
    },
    "imports": [
      "Prelude",
      "Test.DocTest"
    ],
    "modules": [
      "Flow"
    ],
    "name": "flow",
    "version": "1.0.7"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "containers": [
        "Data.Map"
      ],
      "hoauth2": [],
      "http-conduit": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "wai": [],
      "warp": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.HTTP.Types"
    ],
    "modules": [
      "Network.OAuth.OAuth2.HttpClient",
      "Network.OAuth.OAuth2.Internal",
      "Network.OAuth.OAuth2"
    ],
    "name": "hoauth2",
    "version": "0.5.4.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Monoid",
        "Prelude"
      ],
      "bytestring": [],
      "happstack-server": [
        "Happstack.Server",
        "Happstack.Server.SimpleHTTP"
      ],
      "harp": [],
      "hsp": [
        "HSP",
        "HSP.HTML4",
        "HSP.Monad",
        "HSP.XML",
        "HSP.XMLGenerator"
      ],
      "hsx2hs": [
        "Language.Haskell.HSX.QQ"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "syb": [
        "Data.Generics"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "utf8-string": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans",
      "Data.Generics",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Happstack.Server",
      "Happstack.Server.SimpleHTTP",
      "HSP",
      "HSP.HTML4",
      "HSP.Monad",
      "HSP.XML",
      "HSP.XMLGenerator",
      "Language.Haskell.HSX.QQ",
      "Prelude"
    ],
    "modules": [
      "Happstack.Server.HSP.HTML",
      "Happstack.Server.XMLGenT",
      "HSP.ServerPartT",
      "HSP.Google.Analytics"
    ],
    "name": "happstack-hsp",
    "version": "7.3.7.1"
  },
  {
    "dependencies": {
      "Cabal": [],
      "HUnit": [],
      "QuickCheck": [],
      "aeson": [
        "Data.Aeson.Encode"
      ],
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Numeric",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath.Posix"
      ],
      "hastache": [
        "Text.Hastache",
        "Text.Hastache.Context"
      ],
      "holy-project": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "lens": [
        "Control.Lens.Operators"
      ],
      "lens-aeson": [
        "Data.Aeson.Lens"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "smallcheck": [
        "Test.SmallCheck.Series"
      ],
      "split": [
        "Data.List.Split"
      ],
      "syb": [],
      "tasty": [
        "Test.Tasty"
      ],
      "tasty-hunit": [
        "Test.Tasty.HUnit"
      ],
      "tasty-quickcheck": [],
      "tasty-smallcheck": [
        "Test.Tasty.SmallCheck"
      ],
      "text": [
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock"
      ],
      "unix": [
        "System.Posix.Files"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Lens.Operators",
      "Control.Monad",
      "Data.Aeson.Encode",
      "Data.Aeson.Lens",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "HolyProject",
      "HolyProject.GitConfig",
      "HolyProject.GithubAPI",
      "HolyProject.GithubAPI.Test",
      "HolyProject.MontyPython",
      "HolyProject.StringUtils",
      "HolyProject.StringUtils.Test",
      "Network.HTTP.Conduit",
      "Numeric",
      "Paths",
      "System.Console.ANSI",
      "System.Directory",
      "System.FilePath.Posix",
      "System.IO",
      "System.Posix.Files",
      "System.Process",
      "System.Random",
      "Test.SmallCheck.Series",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.SmallCheck",
      "Text.Hastache",
      "Text.Hastache.Context"
    ],
    "modules": [
      "HolyProject",
      "HolyProject.StringUtils",
      "HolyProject.GithubAPI"
    ],
    "name": "holy-project",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Data.Monoid",
        "GHC.Base",
        "Prelude"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Monoid",
      "GHC.Base",
      "Prelude"
    ],
    "modules": [
      "Control.Monad.Primitive.Class",
      "Data.PrimRef"
    ],
    "name": "monad-primitive",
    "version": "0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ],
      "crypto-api": [
        "Crypto.Classes"
      ],
      "cryptonite": [],
      "memory": [
        "Data.ByteArray"
      ],
      "tagged": [
        "Data.Tagged"
      ]
    },
    "imports": [
      "Control.Monad",
      "Crypto.Classes",
      "Data.ByteArray",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.Tagged"
    ],
    "modules": [
      "Crypto.Hash.CryptoAPI"
    ],
    "name": "cryptohash-cryptoapi",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Test.HUnit",
      "Test.HUnit.Approx"
    ],
    "modules": [
      "Test.HUnit.Approx"
    ],
    "name": "HUnit-approx",
    "version": "1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Ord",
        "Data.Word",
        "Foreign.Storable",
        "Prelude",
        "System.Console.GetOpt",
        "System.CPUTime",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "mtl": [
        "Control.Monad.Error"
      ],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Mutable",
        "Data.Vector.Primitive.Mutable",
        "Data.Vector.Unboxed.Mutable"
      ],
      "vector-algorithms": []
    },
    "imports": [
      "Blocks",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Data.Bits",
      "Data.ByteString",
      "Data.Char",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Ord",
      "Data.Vector",
      "Data.Vector.Algorithms.AmericanFlag",
      "Data.Vector.Algorithms.Common",
      "Data.Vector.Algorithms.Heap",
      "Data.Vector.Algorithms.Insertion",
      "Data.Vector.Algorithms.Intro",
      "Data.Vector.Algorithms.Merge",
      "Data.Vector.Algorithms.Optimal",
      "Data.Vector.Algorithms.Radix",
      "Data.Vector.Algorithms.Search",
      "Data.Vector.Algorithms.Tim",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Mutable",
      "Data.Vector.Primitive.Mutable",
      "Data.Vector.Unboxed.Mutable",
      "Data.Word",
      "Foreign.Storable",
      "Optimal",
      "Prelude",
      "Properties",
      "System.Console.GetOpt",
      "System.CPUTime",
      "System.Environment",
      "System.Random.MWC",
      "Test.QuickCheck",
      "Util"
    ],
    "modules": [
      "Data.Vector.Algorithms.Optimal",
      "Data.Vector.Algorithms.Insertion",
      "Data.Vector.Algorithms.Intro",
      "Data.Vector.Algorithms.Merge",
      "Data.Vector.Algorithms.Radix",
      "Data.Vector.Algorithms.Search",
      "Data.Vector.Algorithms.Heap",
      "Data.Vector.Algorithms.AmericanFlag",
      "Data.Vector.Algorithms.Tim"
    ],
    "name": "vector-algorithms",
    "version": "0.7.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable"
      ],
      "haskell-src-meta": [
        "Language.Haskell.Meta"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Prim",
        "Text.Parsec.String"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.State",
      "Data.Char",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.String.Here.Internal",
      "Data.String.Here.Interpolated",
      "Data.String.Here.Uninterpolated",
      "Data.Typeable",
      "Language.Haskell.Meta",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Text.Parsec",
      "Text.Parsec.Prim",
      "Text.Parsec.String"
    ],
    "modules": [
      "Data.String.Here",
      "Data.String.Here.Interpolated",
      "Data.String.Here.Uninterpolated"
    ],
    "name": "here",
    "version": "1.2.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary.Get"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cryptonite": [
        "Crypto.Hash",
        "Crypto.Random.Entropy"
      ],
      "memory": [
        "Data.ByteArray"
      ],
      "network-info": [
        "Network.Info"
      ],
      "random": [
        "System.Random"
      ],
      "text": [],
      "time": [
        "Data.Time"
      ],
      "uuid-types": [
        "Data.UUID.Types",
        "Data.UUID.Types.Internal",
        "Data.UUID.Types.Internal.Builder"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Criterion.Main",
      "Crypto.Hash",
      "Crypto.Random.Entropy",
      "Data.Binary.Get",
      "Data.Bits",
      "Data.ByteArray",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Time",
      "Data.UUID",
      "Data.UUID.Named",
      "Data.UUID.Types",
      "Data.UUID.Types.Internal",
      "Data.UUID.Types.Internal.Builder",
      "Data.UUID.V1",
      "Data.UUID.V3",
      "Data.UUID.V4",
      "Data.UUID.V5",
      "Data.Word",
      "Data.Word.Util",
      "Network.Info",
      "Prelude",
      "System.IO.Unsafe",
      "System.Random",
      "System.Random.Mersenne.Pure64",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.UUID",
      "Data.UUID.Util",
      "Data.UUID.V1",
      "Data.UUID.V3",
      "Data.UUID.V4",
      "Data.UUID.V5"
    ],
    "name": "uuid",
    "version": "1.3.12"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode"
      ],
      "base": [
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Version",
        "Prelude"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "scientific": [
        "Data.Scientific",
        "Data.Text.Lazy.Builder.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Encode.Pretty",
      "Data.Attoparsec.Lazy",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Scientific",
      "Data.Text.Lazy.Encoding",
      "Data.Vector",
      "Data.Version",
      "Paths",
      "Prelude",
      "Prelude.Compat",
      "System.Console.CmdArgs"
    ],
    "modules": [
      "Data.Aeson.Encode.Pretty"
    ],
    "name": "aeson-pretty",
    "version": "0.8.2"
  },
  {
    "dependencies": {
      "base": [],
      "mtl": [],
      "old-locale": [],
      "process-extras": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "time-locale-compat": []
    },
    "imports": [
      "Data.Text"
    ],
    "modules": [
      "Text.PDF.Info"
    ],
    "name": "pdfinfo",
    "version": "1.5.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Foreign",
        "Foreign.C.String",
        "Foreign.C.Types",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "data-default": [
        "Data.Default"
      ],
      "entropy": [
        "System.Entropy"
      ],
      "memory": [
        "Data.ByteArray"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.ByteArray",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.Default",
      "Foreign",
      "Foreign.C.String",
      "Foreign.C.Types",
      "System.Entropy",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Crypto.BCrypt"
    ],
    "name": "bcrypt",
    "version": "0.0.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Instances",
        "Data.Bifunctor",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Functor.Sum",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "bifunctors": [
        "Data.Biapplicative",
        "Data.Bifunctor.Biff",
        "Data.Bifunctor.Clown",
        "Data.Bifunctor.Flip",
        "Data.Bifunctor.Join",
        "Data.Bifunctor.Joker",
        "Data.Bifunctor.Product",
        "Data.Bifunctor.Tannen",
        "Data.Bifunctor.Wrapped"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Applicative.Lift",
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict",
        "Data.Functor.Constant",
        "Data.Functor.Reverse"
      ],
      "transformers-compat": [
        "Control.Monad.Trans.Instances"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Applicative.Lift",
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Comonad.Trans.Env",
      "Control.Comonad.Trans.Store",
      "Control.Comonad.Trans.Traced",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Instances",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Instances",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Biapplicative",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bifunctor.Biff",
      "Data.Bifunctor.Clown",
      "Data.Bifunctor.Flip",
      "Data.Bifunctor.Join",
      "Data.Bifunctor.Joker",
      "Data.Bifunctor.Product",
      "Data.Bifunctor.Tannen",
      "Data.Bifunctor.Wrapped",
      "Data.Bitraversable",
      "Data.Foldable",
      "Data.Functor.Alt",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Bind.Class",
      "Data.Functor.Compose",
      "Data.Functor.Constant",
      "Data.Functor.Contravariant",
      "Data.Functor.Extend",
      "Data.Functor.Identity",
      "Data.Functor.Plus",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Functor.Sum",
      "Data.Groupoid",
      "Data.IntMap",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Orphans",
      "Data.Semigroup",
      "Data.Semigroup.Bifoldable",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Foldable.Class",
      "Data.Semigroupoid",
      "Data.Semigroupoid.Dual",
      "Data.Semigroup.Traversable.Class",
      "Data.Sequence",
      "Data.Tagged",
      "Data.Traversable",
      "Data.Traversable.Instances",
      "Data.Tree",
      "Data.Typeable",
      "Prelude"
    ],
    "modules": [
      "Data.Bifunctor.Apply",
      "Data.Functor.Alt",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Bind.Class",
      "Data.Functor.Bind.Trans",
      "Data.Functor.Extend",
      "Data.Functor.Plus",
      "Data.Groupoid",
      "Data.Isomorphism",
      "Data.Semigroup.Bifoldable",
      "Data.Semigroup.Bitraversable",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Foldable.Class",
      "Data.Semigroup.Traversable",
      "Data.Semigroup.Traversable.Class",
      "Data.Semigroupoid",
      "Data.Semigroupoid.Dual",
      "Data.Semigroupoid.Ob",
      "Data.Semigroupoid.Static",
      "Data.Traversable.Instances"
    ],
    "name": "semigroupoids",
    "version": "5.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.FreebaseSearch",
      "Network.Google.FreebaseSearch.Types",
      "Network.Google.Method.Freebase.Reconcile",
      "Network.Google.Method.Freebase.Search"
    ],
    "name": "gogol-freebasesearch",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Ord",
        "System.Environment"
      ],
      "monads-tf": []
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.Ord",
      "LambdaToSki",
      "Parse",
      "SkiToLambda",
      "SkiToZot",
      "System.Environment",
      "Zot",
      "ZotToSki"
    ],
    "modules": [],
    "name": "zot",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "Diff": [
        "Data.Algorithm.Diff",
        "Data.Algorithm.DiffOutput"
      ],
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Arbitrary",
        "Test.QuickCheck.Property"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Numeric",
        "Prelude",
        "System.Exit"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Expr",
        "Text.Parsec.Pos",
        "Text.Parsec.Token",
        "Text.ParserCombinators.Parsec.Pos"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "testing-feat": [
        "Test.Feat",
        "Test.Feat.Class",
        "Test.Feat.Enumerate",
        "Test.Feat.Modifiers"
      ],
      "uniplate": [
        "Data.Generics.Str",
        "Data.Generics.Uniplate.Data",
        "Data.Generics.Uniplate.Operations"
      ],
      "wl-pprint": [
        "Text.PrettyPrint.Leijen"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Algorithm.Diff",
      "Data.Algorithm.DiffOutput",
      "Data.Char",
      "Data.Data",
      "Data.Default.Class",
      "Data.Foldable",
      "Data.Generics.Str",
      "Data.Generics.Uniplate.Data",
      "Data.Generics.Uniplate.Operations",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.String",
      "Data.Traversable",
      "Data.Typeable",
      "Language.ECMAScript3.Lexer",
      "Language.ECMAScript3.Parser",
      "Language.ECMAScript3.Parser.State",
      "Language.ECMAScript3.Parser.Type",
      "Language.ECMAScript3.PrettyPrint",
      "Language.ECMAScript3.SourceDiff",
      "Language.ECMAScript3.Syntax",
      "Language.ECMAScript3.Syntax.Annotations",
      "Language.ECMAScript3.Syntax.Arbitrary",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Numeric",
      "Prelude",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "Test.Arbitrary",
      "Test.Diff",
      "Test.Feat",
      "Test.Feat.Class",
      "Test.Feat.Enumerate",
      "Test.Feat.Modifiers",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.Pretty",
      "Test.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Property",
      "Test.Unit",
      "Text.Parsec",
      "Text.Parsec.Expr",
      "Text.Parsec.Pos",
      "Text.Parsec.Token",
      "Text.ParserCombinators.Parsec.Pos",
      "Text.PrettyPrint.Leijen"
    ],
    "modules": [
      "Language.ECMAScript3",
      "Language.ECMAScript3.Lexer",
      "Language.ECMAScript3.Parser",
      "Language.ECMAScript3.PrettyPrint",
      "Language.ECMAScript3.Syntax",
      "Language.ECMAScript3.Syntax.Annotations",
      "Language.ECMAScript3.Syntax.Arbitrary",
      "Language.ECMAScript3.Syntax.CodeGen",
      "Language.ECMAScript3.Syntax.QuasiQuote",
      "Language.ECMAScript3.Analysis.Environment",
      "Language.ECMAScript3.Analysis.LabelSets",
      "Language.ECMAScript3.SourceDiff"
    ],
    "name": "language-ecmascript",
    "version": "0.17.1.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.IArray",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fail",
        "Data.Char",
        "Data.Foldable",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Word",
        "Foreign",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Generics",
        "GHC.Word",
        "Numeric.Natural",
        "System.Exit",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Builder.Extras",
        "Data.ByteString.Short",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Fail",
      "Data.Array.IArray",
      "Data.Array.Unboxed",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Builder.Extras",
      "Data.ByteString.Short",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Foldable",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Sequence",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.IEEE754",
      "Data.Serialize.Put",
      "Data.Set",
      "Data.Tree",
      "Data.Word",
      "Foreign",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GetTests",
      "GHC.Base",
      "GHC.Generics",
      "GHC.Word",
      "Numeric.Natural",
      "RoundTrip",
      "System.Exit",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.Framework.Runners.Console",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Serialize",
      "Data.Serialize.Put",
      "Data.Serialize.Get",
      "Data.Serialize.IEEE754"
    ],
    "name": "cereal",
    "version": "0.5.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Bits",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Types",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "time": [],
      "unix": [
        "System.Posix",
        "System.Posix.ByteString.FilePath",
        "System.Posix.IO",
        "System.Posix.IO.ByteString"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.Word",
      "Data.Word.Endian",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Console.ANSI",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Linux.Btrfs",
      "System.Linux.FileExtents",
      "System.Posix",
      "System.Posix.ByteString.FilePath",
      "System.Posix.IO",
      "System.Posix.IO.ByteString",
      "System.Posix.Types",
      "Text.Printf"
    ],
    "modules": [
      "System.Linux.Btrfs",
      "System.Linux.Btrfs.ByteString",
      "System.Linux.Btrfs.UUID",
      "System.Linux.Btrfs.Time"
    ],
    "name": "btrfs",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Typeable",
        "Data.Word",
        "System.Environment",
        "System.Exit"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "timezone-series": [
        "Data.Time.LocalTime.TimeZone.Series"
      ]
    },
    "imports": [
      "Control.Exception.Extensible",
      "Control.Monad",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Time.LocalTime.TimeZone.Olson",
      "Data.Time.LocalTime.TimeZone.Olson.Parse",
      "Data.Time.LocalTime.TimeZone.Olson.Render",
      "Data.Time.LocalTime.TimeZone.Olson.Types",
      "Data.Time.LocalTime.TimeZone.Series",
      "Data.Typeable",
      "Data.Word",
      "System.Environment",
      "System.Exit",
      "System.Locale"
    ],
    "modules": [
      "Data.Time.LocalTime.TimeZone.Olson",
      "Data.Time.LocalTime.TimeZone.Olson.Parse",
      "Data.Time.LocalTime.TimeZone.Olson.Render",
      "Data.Time.LocalTime.TimeZone.Olson.Types"
    ],
    "name": "timezone-olson",
    "version": "0.1.7"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Data.Foldable",
        "Data.List.NonEmpty",
        "Data.Traversable"
      ],
      "mtl": [],
      "mtl-compat": [],
      "old-locale": [],
      "semigroups": [],
      "text": [
        "Data.Text"
      ],
      "time": []
    },
    "imports": [
      "Data.Attoparsec.Text",
      "Data.Foldable",
      "Data.List.NonEmpty",
      "Data.Text",
      "Data.Traversable",
      "System.Test.Cron",
      "System.Test.Cron.Parser",
      "System.Test.Cron.Schedule"
    ],
    "modules": [
      "System.Cron",
      "System.Cron.Internal.Check",
      "System.Cron.Parser",
      "System.Cron.Schedule",
      "System.Cron.Types"
    ],
    "name": "cron",
    "version": "0.4.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Semigroup",
        "Prelude"
      ],
      "containers": [
        "Data.IntMap.Strict",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [],
      "hashable": [],
      "semigroups": []
    },
    "imports": [
      "Control.Applicative",
      "Data.Foldable",
      "Data.Int",
      "Data.IntMap.Strict",
      "Data.List",
      "Data.Map.Strict",
      "Data.Monoid",
      "Data.RangeSet.Internal",
      "Data.RangeSet.IntMap",
      "Data.RangeSet.List",
      "Data.RangeSet.Map",
      "Data.Semigroup",
      "Data.Set",
      "IntMap",
      "List",
      "Map",
      "Prelude",
      "SetAction",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.RangeSet.Internal",
      "Data.RangeSet.IntMap",
      "Data.RangeSet.List",
      "Data.RangeSet.Map"
    ],
    "name": "range-set-list",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "classy-prelude": [
        "ClassyPrelude"
      ],
      "conduit": [],
      "conduit-combinators": [
        "Conduit"
      ],
      "monad-control": [],
      "resourcet": [],
      "transformers": [],
      "void": []
    },
    "imports": [
      "ClassyPrelude",
      "Conduit"
    ],
    "modules": [
      "ClassyPrelude.Conduit"
    ],
    "name": "classy-prelude-conduit",
    "version": "1.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "containers": [
        "Data.IntMap"
      ],
      "hashable": [],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "network": [],
      "stm": [],
      "token-bucket": [],
      "transformers": [],
      "wai": []
    },
    "imports": [
      "Data.IntMap",
      "Network.HTTP.Types.Status"
    ],
    "modules": [
      "Network.Wai.Middleware.Throttle"
    ],
    "name": "wai-middleware-throttle",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Text.Printf"
      ],
      "blaze-builder": [],
      "byteorder": [
        "System.ByteOrder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "case-insensitive": [],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "network": [
        "Network.Socket"
      ],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Word",
      "Network.HTTP.Types",
      "Network.Socket",
      "Network.Wai",
      "Network.Wai.Logger.Apache",
      "Network.Wai.Logger.IP",
      "System.ByteOrder",
      "System.Log.FastLogger",
      "Test.DocTest",
      "Text.Printf"
    ],
    "modules": [
      "Network.Wai.Logger"
    ],
    "name": "wai-logger",
    "version": "2.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.List",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "stm": [
        "Control.Monad.STM"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad.Catch",
      "Control.Monad.Catch.Pure",
      "Control.Monad.Catch.Tests",
      "Control.Monad.Error",
      "Control.Monad.List",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.STM",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Data.Traversable",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "Control.Monad.Catch",
      "Control.Monad.Catch.Pure"
    ],
    "name": "exceptions",
    "version": "0.8.3"
  },
  {
    "dependencies": {
      "base": [],
      "primitive": [],
      "vector": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Sound.VAD.WebRTC"
    ],
    "name": "webrtc-vad",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec",
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.Char8"
      ],
      "base": [
        "Control.Arrow",
        "Data.List",
        "Prelude",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Arrow",
      "Criterion.Main",
      "Data.Attoparsec",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.List",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.Parser.Rfc2045",
      "Network.Parser.Rfc2234",
      "Network.Parser.Rfc2616",
      "Network.Parser.Rfc2822",
      "Network.Parser.Rfc3986",
      "Network.Parser.RfcCommon",
      "Network.Types",
      "Prelude",
      "System.Environment",
      "Test.HUnit",
      "Test.Parser.Parser",
      "Test.Parser.Rfc2045",
      "Test.Parser.Rfc2616",
      "Test.Parser.Rfc2822",
      "Test.Parser.Rfc3986"
    ],
    "modules": [
      "Network.Types",
      "Network.Http",
      "Network.Parser.RfcCommon",
      "Network.Parser.Rfc2234",
      "Network.Parser.Rfc2822",
      "Network.Parser.Rfc2045",
      "Network.Parser.Rfc2046",
      "Network.Parser.Rfc3986",
      "Network.Parser.Rfc2616",
      "Network.Parser.Mime"
    ],
    "name": "hweblib",
    "version": "0.6.3"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.String.Builder"
    ],
    "name": "stringbuilder",
    "version": "0.5.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "GHC.Generics",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "ghc-prim": [],
      "syb": [
        "Data.Generics"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.DeepSeq.Generics",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Generics",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Sequence",
      "Data.String",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "GHC.Generics",
      "Paths",
      "System.Environment",
      "Text.Pandoc.Builder",
      "Text.Pandoc.Definition",
      "Text.Pandoc.Generic",
      "Text.Pandoc.Walk"
    ],
    "modules": [
      "Text.Pandoc.Definition",
      "Text.Pandoc.Generic",
      "Text.Pandoc.Walk",
      "Text.Pandoc.Builder",
      "Text.Pandoc.JSON"
    ],
    "name": "pandoc-types",
    "version": "1.16.1.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "iproute": [
        "Data.IP"
      ],
      "lifted-base": [
        "Data.IORef.Lifted"
      ],
      "network": [
        "Network.Socket"
      ],
      "old-locale": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "streaming-commons": [
        "Data.Streaming.Blaze",
        "Data.Streaming.Zlib"
      ],
      "stringsearch": [
        "Data.ByteString.Search"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State"
      ],
      "unix-compat": [
        "System.PosixCompat"
      ],
      "vault": [
        "Data.Vault.Lazy"
      ],
      "void": [],
      "wai": [
        "Network.Wai",
        "Network.Wai.Internal"
      ],
      "wai-logger": [
        "Network.Wai.Logger"
      ],
      "word8": [
        "Data.Word8"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.State",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Search",
      "Data.ByteString.Unsafe",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Default.Class",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.IORef",
      "Data.IORef.Lifted",
      "Data.IP",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Streaming.Blaze",
      "Data.Streaming.Zlib",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Typeable",
      "Data.Vault.Lazy",
      "Data.Word",
      "Data.Word8",
      "Foreign.C",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Network.HTTP.Types",
      "Network.Socket",
      "Network.Wai",
      "Network.Wai.EventSource.EventStream",
      "Network.Wai.Handler.CGI",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Header",
      "Network.Wai.Internal",
      "Network.Wai.Logger",
      "Network.Wai.Middleware.AcceptOverride",
      "Network.Wai.Middleware.AddHeaders",
      "Network.Wai.Middleware.Approot",
      "Network.Wai.Middleware.Autohead",
      "Network.Wai.Middleware.ForceSSL",
      "Network.Wai.Middleware.Gzip",
      "Network.Wai.Middleware.Jsonp",
      "Network.Wai.Middleware.MethodOverride",
      "Network.Wai.Middleware.MethodOverridePost",
      "Network.Wai.Middleware.RequestLogger",
      "Network.Wai.Middleware.RequestLogger.Internal",
      "Network.Wai.Middleware.Routed",
      "Network.Wai.Middleware.StreamFile",
      "Network.Wai.Middleware.StripHeaders",
      "Network.Wai.Middleware.Vhost",
      "Network.Wai.Parse",
      "Network.Wai.Request",
      "Network.Wai.Test",
      "Network.Wai.UrlMap",
      "Prelude",
      "System.Console.ANSI",
      "System.Directory",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "System.Log.FastLogger",
      "System.PosixCompat",
      "System.Posix.Env.ByteString",
      "Test.Hspec",
      "Test.HUnit",
      "Text.Printf",
      "Web.Cookie"
    ],
    "modules": [
      "Network.Wai.Handler.CGI",
      "Network.Wai.Handler.SCGI",
      "Network.Wai.Header",
      "Network.Wai.Middleware.AcceptOverride",
      "Network.Wai.Middleware.AddHeaders",
      "Network.Wai.Middleware.Approot",
      "Network.Wai.Middleware.Autohead",
      "Network.Wai.Middleware.CleanPath",
      "Network.Wai.Middleware.Local",
      "Network.Wai.Middleware.RequestLogger",
      "Network.Wai.Middleware.RequestLogger.JSON",
      "Network.Wai.Middleware.Gzip",
      "Network.Wai.Middleware.Jsonp",
      "Network.Wai.Middleware.MethodOverride",
      "Network.Wai.Middleware.MethodOverridePost",
      "Network.Wai.Middleware.Rewrite",
      "Network.Wai.Middleware.StripHeaders",
      "Network.Wai.Middleware.Vhost",
      "Network.Wai.Middleware.HttpAuth",
      "Network.Wai.Middleware.StreamFile",
      "Network.Wai.Middleware.ForceDomain",
      "Network.Wai.Middleware.ForceSSL",
      "Network.Wai.Middleware.Routed",
      "Network.Wai.Parse",
      "Network.Wai.Request",
      "Network.Wai.UrlMap",
      "Network.Wai.Test",
      "Network.Wai.EventSource",
      "Network.Wai.EventSource.EventStream"
    ],
    "name": "wai-extra",
    "version": "3.0.18"
  },
  {
    "dependencies": {
      "base": [],
      "configurator": [
        "Data.Configurator"
      ],
      "connection": [
        "Network.Connection"
      ],
      "data-default": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "soap": [
        "Network.SOAP.Transport",
        "Network.SOAP.Transport.HTTP"
      ],
      "text": [],
      "tls": [
        "Network.TLS"
      ],
      "x509": [
        "Data.X509"
      ],
      "x509-store": [
        "Data.X509.CertificateStore"
      ],
      "x509-validation": [
        "Data.X509.Validation"
      ]
    },
    "imports": [
      "Data.Configurator",
      "Data.X509",
      "Data.X509.CertificateStore",
      "Data.X509.Validation",
      "Network.Connection",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.SOAP.Transport",
      "Network.SOAP.Transport.HTTP",
      "Network.TLS"
    ],
    "modules": [
      "Network.SOAP.Transport.HTTP.TLS"
    ],
    "name": "soap-tls",
    "version": "0.1.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "containers": [
        "Data.IntSet"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.IntSet",
      "Data.List",
      "Data.Vector"
    ],
    "modules": [
      "Data.Algorithm.MaximalCliques"
    ],
    "name": "maximal-cliques",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.Chan",
        "Control.Exception",
        "Control.Monad",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "containers": [],
      "directory": [
        "System.Directory"
      ],
      "unix": []
    },
    "imports": [
      "Control.Concurrent.Chan",
      "Control.Exception",
      "Control.Monad",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.INotify",
      "System.IO",
      "Utils"
    ],
    "modules": [
      "System.INotify"
    ],
    "name": "hinotify",
    "version": "0.3.8.1"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck.Arbitrary",
        "Test.QuickCheck.Gen",
        "Test.QuickCheck.Property"
      ],
      "base": [
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.List",
        "Data.Word",
        "Debug.Trace",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal.Alloc",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.Int",
        "GHC.IO",
        "GHC.ST",
        "GHC.Word",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Unsafe"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.Array.Repa",
      "Data.Array.Repa.Arbitrary",
      "Data.Array.Repa.Base",
      "Data.Array.Repa.Eval",
      "Data.Array.Repa.Eval.Chunked",
      "Data.Array.Repa.Eval.Cursored",
      "Data.Array.Repa.Eval.Elt",
      "Data.Array.Repa.Eval.Gang",
      "Data.Array.Repa.Eval.Interleaved",
      "Data.Array.Repa.Eval.Load",
      "Data.Array.Repa.Eval.Reduction",
      "Data.Array.Repa.Eval.Selection",
      "Data.Array.Repa.Eval.Target",
      "Data.Array.Repa.Index",
      "Data.Array.Repa.Operators.IndexSpace",
      "Data.Array.Repa.Operators.Interleave",
      "Data.Array.Repa.Operators.Mapping",
      "Data.Array.Repa.Operators.Reduction",
      "Data.Array.Repa.Operators.Selection",
      "Data.Array.Repa.Operators.Traversal",
      "Data.Array.Repa.Repr.ByteString",
      "Data.Array.Repa.Repr.Cursored",
      "Data.Array.Repa.Repr.Delayed",
      "Data.Array.Repa.Repr.ForeignPtr",
      "Data.Array.Repa.Repr.HintInterleave",
      "Data.Array.Repa.Repr.HintSmall",
      "Data.Array.Repa.Repr.Partitioned",
      "Data.Array.Repa.Repr.Unboxed",
      "Data.Array.Repa.Repr.Undefined",
      "Data.Array.Repa.Repr.Vector",
      "Data.Array.Repa.Shape",
      "Data.Array.Repa.Slice",
      "Data.Array.Repa.Specialised.Dim2",
      "Data.Array.Repa.Stencil.Base",
      "Data.Array.Repa.Stencil.Partition",
      "Data.Array.Repa.Stencil.Template",
      "Data.ByteString",
      "Data.ByteString.Unsafe",
      "Data.IORef",
      "Data.List",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Data.Word",
      "Debug.Trace",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Alloc",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Conc",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.Int",
      "GHC.IO",
      "GHC.Prim",
      "GHC.ST",
      "GHC.Types",
      "GHC.Word",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Prelude",
      "System.IO",
      "System.IO.Unsafe",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "Data.Array.Repa.Eval.Gang",
      "Data.Array.Repa.Operators.IndexSpace",
      "Data.Array.Repa.Operators.Interleave",
      "Data.Array.Repa.Operators.Mapping",
      "Data.Array.Repa.Operators.Reduction",
      "Data.Array.Repa.Operators.Selection",
      "Data.Array.Repa.Operators.Traversal",
      "Data.Array.Repa.Repr.ByteString",
      "Data.Array.Repa.Repr.Cursored",
      "Data.Array.Repa.Repr.Delayed",
      "Data.Array.Repa.Repr.ForeignPtr",
      "Data.Array.Repa.Repr.HintSmall",
      "Data.Array.Repa.Repr.HintInterleave",
      "Data.Array.Repa.Repr.Partitioned",
      "Data.Array.Repa.Repr.Unboxed",
      "Data.Array.Repa.Repr.Undefined",
      "Data.Array.Repa.Repr.Vector",
      "Data.Array.Repa.Specialised.Dim2",
      "Data.Array.Repa.Stencil.Dim2",
      "Data.Array.Repa.Arbitrary",
      "Data.Array.Repa.Eval",
      "Data.Array.Repa.Index",
      "Data.Array.Repa.Shape",
      "Data.Array.Repa.Slice",
      "Data.Array.Repa.Stencil",
      "Data.Array.Repa.Unsafe",
      "Data.Array.Repa"
    ],
    "name": "repa",
    "version": "3.4.1.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Parser",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.Lazy"
      ],
      "base": [
        "Control.Applicative"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Aeson",
      "Data.Aeson.Parser",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.Lazy",
      "Data.ByteString.Lazy",
      "Data.Scientific",
      "Data.Text"
    ],
    "modules": [
      "Data.Aeson.Utils"
    ],
    "name": "aeson-utils",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntSet",
        "Data.Map"
      ],
      "data-default": [
        "Data.Default"
      ],
      "lens": [
        "Control.Lens"
      ],
      "text": [
        "Data.Text"
      ],
      "xlsx": [
        "Codec.Xlsx",
        "Codec.Xlsx.Formatted"
      ]
    },
    "imports": [
      "Codec.Xlsx",
      "Codec.Xlsx.Formatted",
      "Codec.Xlsx.Util.Tabular.Imports",
      "Codec.Xlsx.Util.Tabular.Types",
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Default",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Text"
    ],
    "modules": [
      "Codec.Xlsx.Util.Tabular",
      "Codec.Xlsx.Util.Tabular.Types",
      "Codec.Xlsx.Util.Tabular.Imports",
      "Codec.Xlsx.Util.Tabular.Json"
    ],
    "name": "xlsx-tabular",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "System.Environment",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "time": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Progress",
      "Network.HTTP",
      "Network.HTTP.Base",
      "Network.HTTP.Headers",
      "Network.Stream",
      "Network.URI",
      "System.Environment",
      "System.IO",
      "System.ProgressBar",
      "System.ProgressBar.ByteString"
    ],
    "modules": [
      "Data.ByteString.Lazy.Progress"
    ],
    "name": "bytestring-progress",
    "version": "1.0.7"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.DirectoryService",
      "Test.AWS.DirectoryService",
      "Test.AWS.DirectoryService.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.DirectoryService",
      "Network.AWS.DirectoryService.ConnectDirectory",
      "Network.AWS.DirectoryService.CreateAlias",
      "Network.AWS.DirectoryService.CreateComputer",
      "Network.AWS.DirectoryService.CreateConditionalForwarder",
      "Network.AWS.DirectoryService.CreateDirectory",
      "Network.AWS.DirectoryService.CreateMicrosoftAD",
      "Network.AWS.DirectoryService.CreateSnapshot",
      "Network.AWS.DirectoryService.CreateTrust",
      "Network.AWS.DirectoryService.DeleteConditionalForwarder",
      "Network.AWS.DirectoryService.DeleteDirectory",
      "Network.AWS.DirectoryService.DeleteSnapshot",
      "Network.AWS.DirectoryService.DeleteTrust",
      "Network.AWS.DirectoryService.DeregisterEventTopic",
      "Network.AWS.DirectoryService.DescribeConditionalForwarders",
      "Network.AWS.DirectoryService.DescribeDirectories",
      "Network.AWS.DirectoryService.DescribeEventTopics",
      "Network.AWS.DirectoryService.DescribeSnapshots",
      "Network.AWS.DirectoryService.DescribeTrusts",
      "Network.AWS.DirectoryService.DisableRadius",
      "Network.AWS.DirectoryService.DisableSSO",
      "Network.AWS.DirectoryService.EnableRadius",
      "Network.AWS.DirectoryService.EnableSSO",
      "Network.AWS.DirectoryService.GetDirectoryLimits",
      "Network.AWS.DirectoryService.GetSnapshotLimits",
      "Network.AWS.DirectoryService.RegisterEventTopic",
      "Network.AWS.DirectoryService.RestoreFromSnapshot",
      "Network.AWS.DirectoryService.Types",
      "Network.AWS.DirectoryService.UpdateConditionalForwarder",
      "Network.AWS.DirectoryService.UpdateRadius",
      "Network.AWS.DirectoryService.VerifyTrust",
      "Network.AWS.DirectoryService.Waiters"
    ],
    "name": "amazonka-ds",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "bytestring": [
        "Data.ByteString"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts",
        "Language.Haskell.Exts.Build",
        "Language.Haskell.Exts.SrcLoc",
        "Language.Haskell.Exts.Syntax"
      ],
      "haskell-src-meta": [],
      "mtl": [],
      "template-haskell": [],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.OldException",
      "Data.ByteString",
      "Data.ByteString.UTF8",
      "Data.List",
      "Debug.Trace",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Build",
      "Language.Haskell.Exts.SrcLoc",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.HSX.Transform",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.UTF8"
    ],
    "modules": [
      "Language.Haskell.HSX.Transform",
      "Language.Haskell.HSX.QQ"
    ],
    "name": "hsx2hs",
    "version": "0.13.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Functor",
        "Data.List",
        "Data.Maybe"
      ],
      "containers": [
        "Data.Set"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.Functor",
      "Data.List",
      "Data.Maybe",
      "Data.Set",
      "Language.Haskell.TH",
      "Test.QuickCheck.All",
      "Test.QuickCheck.Property",
      "TupleTH"
    ],
    "modules": [
      "TupleTH"
    ],
    "name": "tuple-th",
    "version": "0.2.5"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.FirebaseRules",
      "Network.Google.FirebaseRules.Types",
      "Network.Google.Resource.FirebaseRules.Projects.Releases.Create",
      "Network.Google.Resource.FirebaseRules.Projects.Releases.Delete",
      "Network.Google.Resource.FirebaseRules.Projects.Releases.Get",
      "Network.Google.Resource.FirebaseRules.Projects.Releases.List",
      "Network.Google.Resource.FirebaseRules.Projects.Releases.Update",
      "Network.Google.Resource.FirebaseRules.Projects.Rulesets.Create",
      "Network.Google.Resource.FirebaseRules.Projects.Rulesets.Delete",
      "Network.Google.Resource.FirebaseRules.Projects.Rulesets.Get",
      "Network.Google.Resource.FirebaseRules.Projects.Rulesets.List",
      "Network.Google.Resource.FirebaseRules.Projects.Test"
    ],
    "name": "gogol-firebase-rules",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Word",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe"
      ]
    },
    "imports": [
      "Data.Word",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO.Unsafe"
    ],
    "modules": [
      "System.ByteOrder"
    ],
    "name": "byteorder",
    "version": "1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.Chan",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "System.Timeout"
      ],
      "smallcheck": [
        "Test.SmallCheck",
        "Test.SmallCheck.Drivers"
      ],
      "test-framework": [
        "Test.Framework.Providers.API"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.Chan",
      "Control.Monad.IO.Class",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "System.Timeout",
      "Test.Framework.Providers.API",
      "Test.SmallCheck",
      "Test.SmallCheck.Drivers"
    ],
    "modules": [
      "Test.Framework.Providers.SmallCheck"
    ],
    "name": "test-framework-smallcheck",
    "version": "0.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Int",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "foldl": [
        "Control.Foldl"
      ],
      "lens": [
        "Control.Lens"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.ByteString",
        "Text.Parsec.ByteString.Lazy",
        "Text.Parsec.Text",
        "Text.Parsec.Text.Lazy"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "pipes-attoparsec": [
        "Pipes.Attoparsec"
      ],
      "pipes-bytestring": [
        "Pipes.ByteString"
      ],
      "pipes-group": [
        "Pipes.Group"
      ],
      "pipes-text": [
        "Pipes.Text"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Foldl",
      "Control.Lens",
      "Control.Monad",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Either",
      "Data.Fasta.ByteString.Lazy.Parse",
      "Data.Fasta.ByteString.Lazy.Translation",
      "Data.Fasta.ByteString.Lazy.Types",
      "Data.Fasta.ByteString.Lazy.Utility",
      "Data.Fasta.ByteString.Parse",
      "Data.Fasta.ByteString.Translation",
      "Data.Fasta.ByteString.Types",
      "Data.Fasta.ByteString.Utility",
      "Data.Fasta.String.Parse",
      "Data.Fasta.String.Translation",
      "Data.Fasta.String.Types",
      "Data.Fasta.String.Utility",
      "Data.Fasta.Text.Lazy.Parse",
      "Data.Fasta.Text.Lazy.Translation",
      "Data.Fasta.Text.Lazy.Types",
      "Data.Fasta.Text.Lazy.Utility",
      "Data.Fasta.Text.Parse",
      "Data.Fasta.Text.Translation",
      "Data.Fasta.Text.Types",
      "Data.Fasta.Text.Utility",
      "Data.Fasta.Utility",
      "Data.Int",
      "Data.List.Split",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Text",
      "Data.Text.Lazy",
      "Pipes",
      "Pipes.Attoparsec",
      "Pipes.ByteString",
      "Pipes.Group",
      "Pipes.Prelude",
      "Pipes.Text",
      "System.IO",
      "Text.Parsec",
      "Text.Parsec.ByteString",
      "Text.Parsec.ByteString.Lazy",
      "Text.Parsec.Text",
      "Text.Parsec.Text.Lazy"
    ],
    "modules": [
      "Data.Fasta.Category",
      "Data.Fasta.Utility",
      "Data.Fasta.String",
      "Data.Fasta.String.Types",
      "Data.Fasta.String.Parse",
      "Data.Fasta.String.Translation",
      "Data.Fasta.String.Utility",
      "Data.Fasta.Text",
      "Data.Fasta.Text.Types",
      "Data.Fasta.Text.Parse",
      "Data.Fasta.Text.Translation",
      "Data.Fasta.Text.Utility",
      "Data.Fasta.Text.Lazy",
      "Data.Fasta.Text.Lazy.Types",
      "Data.Fasta.Text.Lazy.Parse",
      "Data.Fasta.Text.Lazy.Translation",
      "Data.Fasta.Text.Lazy.Utility",
      "Data.Fasta.ByteString",
      "Data.Fasta.ByteString.Types",
      "Data.Fasta.ByteString.Parse",
      "Data.Fasta.ByteString.Translation",
      "Data.Fasta.ByteString.Utility",
      "Data.Fasta.ByteString.Lazy",
      "Data.Fasta.ByteString.Lazy.Types",
      "Data.Fasta.ByteString.Lazy.Parse",
      "Data.Fasta.ByteString.Lazy.Translation",
      "Data.Fasta.ByteString.Lazy.Utility"
    ],
    "name": "fasta",
    "version": "0.10.4.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.Ix",
        "Data.Maybe",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.Trans"
      ],
      "text": [],
      "utf8-string": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Data.Array.Base",
      "Data.ByteString",
      "Data.IORef",
      "Data.Ix",
      "Data.Maybe",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Graphics.Rendering.Cairo",
      "Graphics.Rendering.Cairo.Internal",
      "Graphics.Rendering.Cairo.Internal.Drawing.Cairo",
      "Graphics.Rendering.Cairo.Internal.Drawing.Paths",
      "Graphics.Rendering.Cairo.Internal.Drawing.Patterns",
      "Graphics.Rendering.Cairo.Internal.Drawing.Text",
      "Graphics.Rendering.Cairo.Internal.Drawing.Transformations",
      "Graphics.Rendering.Cairo.Internal.Fonts.FontOptions",
      "Graphics.Rendering.Cairo.Internal.Region",
      "Graphics.Rendering.Cairo.Internal.Surfaces.Image",
      "Graphics.Rendering.Cairo.Internal.Surfaces.PDF",
      "Graphics.Rendering.Cairo.Internal.Surfaces.PNG",
      "Graphics.Rendering.Cairo.Internal.Surfaces.PS",
      "Graphics.Rendering.Cairo.Internal.Surfaces.Surface",
      "Graphics.Rendering.Cairo.Internal.Surfaces.SVG",
      "Graphics.Rendering.Cairo.Internal.Utilities",
      "Graphics.Rendering.Cairo.Matrix",
      "Graphics.Rendering.Cairo.Types",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.Gdk.EventM",
      "System.Time"
    ],
    "modules": [
      "Graphics.Rendering.Cairo",
      "Graphics.Rendering.Cairo.Matrix",
      "Graphics.Rendering.Cairo.Types",
      "Graphics.Rendering.Cairo.Internal"
    ],
    "name": "cairo",
    "version": "0.13.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Category",
        "Data.Char"
      ],
      "mtl": [
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Category",
      "Control.Monad.State",
      "Data.Char"
    ],
    "modules": [
      "Control.PatternArrows"
    ],
    "name": "pattern-arrows",
    "version": "0.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.People",
      "Network.Google.People.Types",
      "Network.Google.Resource.People.People.Connections.List",
      "Network.Google.Resource.People.People.Get",
      "Network.Google.Resource.People.People.GetBatchGet"
    ],
    "name": "gogol-people",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [],
      "blaze-html": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "http-types": [],
      "markdown": [],
      "shakespeare": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "wai": [],
      "wai-app-static": []
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.Text",
      "Data.Text.Lazy"
    ],
    "modules": [],
    "name": "servius",
    "version": "1.2.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ],
      "lens": [
        "Control.Lens"
      ],
      "text": [
        "Data.Text"
      ],
      "xml-conduit": [
        "Text.XML"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Data.CaseInsensitive",
      "Data.Map",
      "Data.Text",
      "Text.XML"
    ],
    "modules": [
      "Text.XML.Lens"
    ],
    "name": "xml-lens",
    "version": "0.1.6.3"
  },
  {
    "dependencies": {
      "HsOpenSSL": [
        "OpenSSL",
        "OpenSSL.EVP.Cipher",
        "OpenSSL.EVP.Internal",
        "OpenSSL.Random"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Debug.Trace",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.Timeout"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "cryptohash": [
        "Crypto.Hash.MD5"
      ],
      "hslogger": [
        "System.Log.Formatter",
        "System.Log.Handler",
        "System.Log.Handler.Simple",
        "System.Log.Logger"
      ],
      "iproute": [
        "Data.IP"
      ],
      "lens": [
        "Control.Lens",
        "Data.Text.Lens",
        "Data.Text.Strict.Lens"
      ],
      "lens-aeson": [
        "Data.Aeson.Lens"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Writer"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString",
        "Network.Socket.Internal"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "random": [
        "System.Random"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "strict": [
        "Data.Strict"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.Writer",
      "Crypto.Hash.MD5",
      "Data.Aeson",
      "Data.Aeson.Lens",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.Text",
      "Data.Binary",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.IP",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Strict",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lens",
      "Data.Text.Strict.Lens",
      "Data.Time.Clock",
      "Data.Word",
      "Debug.Trace",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "GHC.Generics",
      "Network.MoeSocks.App",
      "Network.MoeSocks.Bootstrap",
      "Network.MoeSocks.BuilderAndParser",
      "Network.MoeSocks.Common",
      "Network.MoeSocks.Default",
      "Network.MoeSocks.Encrypt",
      "Network.MoeSocks.Handler",
      "Network.MoeSocks.Helper",
      "Network.MoeSocks.Internal.Socket",
      "Network.MoeSocks.Options",
      "Network.MoeSocks.Runtime",
      "Network.MoeSocks.TCP",
      "Network.MoeSocks.Type",
      "Network.MoeSocks.Type.Bootstrap.Config",
      "Network.MoeSocks.Type.Bootstrap.Option",
      "Network.MoeSocks.Type.Common",
      "Network.MoeSocks.Type.Runtime",
      "Network.MoeSocks.UDP",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.Internal",
      "Numeric",
      "OpenSSL",
      "OpenSSL.EVP.Cipher",
      "OpenSSL.EVP.Internal",
      "OpenSSL.Random",
      "Options.Applicative",
      "Prelude",
      "System.Exit",
      "System.IO",
      "System.Log.Formatter",
      "System.Log.Handler",
      "System.Log.Handler.Simple",
      "System.Log.Logger",
      "System.Random",
      "System.Timeout"
    ],
    "modules": [],
    "name": "moesocks",
    "version": "1.0.0.41"
  },
  {
    "dependencies": {
      "Cabal": [],
      "async": [],
      "base": [],
      "containers": [
        "Data.Set"
      ],
      "package-description-remote": []
    },
    "imports": [
      "Data.Set"
    ],
    "modules": [
      "Development.ExtractDependencies"
    ],
    "name": "extract-dependencies",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.List",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cereal": [
        "Data.Serialize.Get"
      ],
      "mtl": [
        "Control.Monad.Cont"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error"
      ],
      "unix": [
        "System.Posix.IO"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Cont",
      "Data.Bits",
      "Data.ByteString",
      "Data.Int",
      "Data.List",
      "Data.Serialize.Get",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Word",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO",
      "System.OSX.FSEvents",
      "System.Posix.IO",
      "System.Posix.Types"
    ],
    "modules": [
      "System.OSX.FSEvents"
    ],
    "name": "hfsevents",
    "version": "0.1.6"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.Monoid",
        "Data.Ratio",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign.Ptr",
        "GHC.Base",
        "GHC.Num",
        "Prelude",
        "System.Environment",
        "System.IO",
        "Text.Printf"
      ],
      "double-conversion": [
        "Data.Double.Conversion.Text"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "old-locale": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.LocalTime"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Criterion.Main",
      "Data.Bits",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Double.Conversion.Text",
      "Data.Int",
      "Data.Monoid",
      "Data.Ratio",
      "Data.String",
      "Data.Text",
      "Data.Text.Buildable",
      "Data.Text.Format",
      "Data.Text.Format.Functions",
      "Data.Text.Format.Int",
      "Data.Text.Format.Params",
      "Data.Text.Format.Types",
      "Data.Text.Format.Types.Internal",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.LocalTime",
      "Data.Typeable",
      "Data.Word",
      "Foreign.Ptr",
      "GHC.Base",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Internals",
      "GHC.Num",
      "GHC.Types",
      "Prelude",
      "System.Environment",
      "System.IO",
      "Text.Printf"
    ],
    "modules": [
      "Data.Text.Format",
      "Data.Text.Buildable",
      "Data.Text.Format.Params",
      "Data.Text.Format.Types"
    ],
    "name": "text-format",
    "version": "0.3.1.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.EFS",
      "Test.AWS.EFS",
      "Test.AWS.EFS.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.EFS",
      "Network.AWS.EFS.CreateFileSystem",
      "Network.AWS.EFS.CreateMountTarget",
      "Network.AWS.EFS.CreateTags",
      "Network.AWS.EFS.DeleteFileSystem",
      "Network.AWS.EFS.DeleteMountTarget",
      "Network.AWS.EFS.DeleteTags",
      "Network.AWS.EFS.DescribeFileSystems",
      "Network.AWS.EFS.DescribeMountTargetSecurityGroups",
      "Network.AWS.EFS.DescribeMountTargets",
      "Network.AWS.EFS.DescribeTags",
      "Network.AWS.EFS.ModifyMountTargetSecurityGroups",
      "Network.AWS.EFS.Types",
      "Network.AWS.EFS.Waiters"
    ],
    "name": "amazonka-efs",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-glib": [],
      "gi-gobject": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-pango",
    "version": "1.0.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "array": [
        "Data.Array"
      ],
      "async": [],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Version",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.IO"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "conduit": [
        "Data.Conduit.List"
      ],
      "conduit-extra": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-conduit": [
        "Network.HTTP.Client.Conduit",
        "Network.HTTP.Conduit"
      ],
      "http-reverse-proxy": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "keter": [],
      "lifted-base": [],
      "mtl": [],
      "network": [
        "Network"
      ],
      "process": [],
      "random": [
        "System.Random"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA",
        "Text.Regex.TDFA.String"
      ],
      "stm": [],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Check",
        "Codec.Archive.Tar.Entry"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Read"
      ],
      "time": [],
      "tls": [
        "Network.TLS"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "unix": [],
      "unix-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-app-static": [],
      "wai-extra": [
        "Network.Wai.Middleware.AcceptOverride",
        "Network.Wai.Middleware.AddHeaders",
        "Network.Wai.Middleware.Autohead",
        "Network.Wai.Middleware.HttpAuth",
        "Network.Wai.Middleware.Jsonp",
        "Network.Wai.Middleware.Local",
        "Network.Wai.Middleware.MethodOverride",
        "Network.Wai.Middleware.MethodOverridePost"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "warp-tls": [
        "Network.Wai.Handler.WarpTLS"
      ],
      "yaml": [
        "Data.Yaml"
      ],
      "zlib": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Check",
      "Codec.Archive.Tar.Entry",
      "Codec.Archive.TempTarball",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Array",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit.List",
      "Data.Conduit.LogFile",
      "Data.Default",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Read",
      "Data.Vector",
      "Data.Version",
      "Data.Yaml",
      "Filesystem.Path",
      "GHC.Generics",
      "Keter.App",
      "Keter.AppManager",
      "Keter.HostManager",
      "Keter.LabelMap",
      "Keter.Main",
      "Keter.Plugin.Postgres",
      "Keter.PortPool",
      "Keter.Proxy",
      "Keter.Types.Common",
      "Keter.Types.V04",
      "Keter.Types.V10",
      "Language.Haskell.TH.Syntax",
      "Network",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Conduit",
      "Network.HTTP.Conduit",
      "Network.HTTP.ReverseProxy.Rewrite",
      "Network.HTTP.Types",
      "Network.TLS",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.WarpTLS",
      "Network.Wai.Middleware.AcceptOverride",
      "Network.Wai.Middleware.AddHeaders",
      "Network.Wai.Middleware.Autohead",
      "Network.Wai.Middleware.HttpAuth",
      "Network.Wai.Middleware.Jsonp",
      "Network.Wai.Middleware.Local",
      "Network.Wai.Middleware.MethodOverride",
      "Network.Wai.Middleware.MethodOverridePost",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.FSNotify",
      "System.IO",
      "System.Random",
      "Text.Regex.TDFA",
      "Text.Regex.TDFA.String"
    ],
    "modules": [
      "Keter.Plugin.Postgres",
      "Keter.Types",
      "Keter.Types.V04",
      "Keter.Types.V10",
      "Keter.Types.Common",
      "Keter.Types.Middleware",
      "Keter.App",
      "Keter.AppManager",
      "Keter.LabelMap",
      "Keter.Main",
      "Keter.PortPool",
      "Keter.Proxy",
      "Keter.HostManager",
      "Network.HTTP.ReverseProxy.Rewrite",
      "Data.Yaml.FilePath",
      "Codec.Archive.TempTarball",
      "Data.Conduit.LogFile",
      "Data.Conduit.Process.Unix"
    ],
    "name": "keter",
    "version": "1.4.3.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Prelude"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "bytestring-trie": [
        "Data.Trie"
      ],
      "case-insensitive": [],
      "containers": [
        "Data.Map.Strict"
      ],
      "cryptohash": [
        "Crypto.Hash.MD5"
      ],
      "directory": [
        "System.Directory"
      ],
      "either": [],
      "filepath": [],
      "http-date": [
        "Network.HTTP.Date"
      ],
      "http-media": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [],
      "microlens": [],
      "mime-types": [
        "Network.Mime"
      ],
      "mmorph": [],
      "monad-control": [],
      "mtl": [
        "Control.Monad.State.Class"
      ],
      "network": [],
      "old-locale": [],
      "random": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "transformers": [],
      "transformers-base": [],
      "unix": [
        "System.Posix.Files"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": []
    },
    "imports": [
      "Airship",
      "Airship.Types",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Monad.State.Class",
      "Crypto.Hash.MD5",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.Map.Strict",
      "Data.Text",
      "Data.Trie",
      "Network.HTTP.Date",
      "Network.HTTP.Types",
      "Network.Mime",
      "Network.Wai",
      "Prelude",
      "System.Directory",
      "System.Posix.Files",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Airship",
      "Airship.Config",
      "Airship.Headers",
      "Airship.Helpers",
      "Airship.Types",
      "Airship.Resource",
      "Airship.Resource.Static",
      "Airship.Route"
    ],
    "name": "airship",
    "version": "0.6.0"
  },
  {
    "dependencies": {
      "aeson": [],
      "async": [],
      "attoparsec": [],
      "base": [],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "directory": [],
      "filepath": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lens": [],
      "lifted-base": [],
      "monad-control": [],
      "monad-logger": [],
      "network-uri": [],
      "purescript-bridge": [],
      "servant": [],
      "servant-foreign": [],
      "servant-server": [],
      "servant-subscriber": [],
      "stm": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "time": [],
      "transformers": [],
      "wai": [
        "Network.Wai",
        "Network.Wai.Internal"
      ],
      "wai-websockets": [],
      "warp": [],
      "websockets": [
        "Network.WebSockets"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Internal",
      "Network.WebSockets",
      "Servant.Subscriber.Client",
      "Servant.Subscriber.Request",
      "Servant.Subscriber.Response"
    ],
    "modules": [
      "Servant.Subscriber",
      "Servant.Subscriber.Backend",
      "Servant.Subscriber.Backend.Wai",
      "Servant.Subscriber.Client",
      "Servant.Subscriber.Request",
      "Servant.Subscriber.Response",
      "Servant.Subscriber.Subscribable",
      "Servant.Subscriber.Types"
    ],
    "name": "servant-subscriber",
    "version": "0.5.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Int",
        "Data.STRef",
        "Prelude"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Loop",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Writer",
      "Data.Array.ST",
      "Data.Int",
      "Data.STRef",
      "Prelude"
    ],
    "modules": [
      "Control.Monad.Trans.Loop"
    ],
    "name": "control-monad-loop",
    "version": "0.1"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "GHC.Generics",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "bytestring-trie": [
        "Data.Trie"
      ],
      "composition": [],
      "composition-extra": [
        "Data.Function.Syntax"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "keys": [
        "Data.Key"
      ],
      "quickcheck-instances": [
        "Test.QuickCheck.Instances"
      ],
      "rose-trees": [
        "Data.Tree.Knuth.Forest"
      ],
      "semigroups": [],
      "sets": [],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ]
    },
    "imports": [
      "Build",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.State",
      "Criterion.Main",
      "Data.ByteString",
      "Data.Data",
      "Data.Foldable",
      "Data.Function.Syntax",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.Key",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Tree",
      "Data.Tree.Knuth.Forest",
      "Data.Trie",
      "Data.Trie.Class",
      "Data.Trie.HashMap",
      "Data.Trie.Knuth",
      "Data.Trie.List",
      "Data.Trie.Map",
      "Data.TrieSpec",
      "GHC.Generics",
      "Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Trie.Class",
      "Data.Trie.HashMap",
      "Data.Trie.Knuth",
      "Data.Trie.List",
      "Data.Trie.Map",
      "Data.Trie.Pseudo"
    ],
    "name": "tries",
    "version": "0.0.4"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Test.QuickCheck.Arbitrary.ADT"
    ],
    "name": "quickcheck-arbitrary-adt",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Data",
        "Data.Ix",
        "Data.Semigroup",
        "Data.Void",
        "GHC.Generics",
        "Unsafe.Coerce"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "semigroups": []
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.Data",
      "Data.Hashable",
      "Data.Ix",
      "Data.Semigroup",
      "Data.Void",
      "GHC.Generics",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Void.Unsafe"
    ],
    "name": "void",
    "version": "0.7.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Word",
        "GHC.Generics",
        "GHC.TypeLits",
        "Prelude"
      ],
      "base-compat": [
        "Data.List.Compat",
        "Prelude.Compat"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "generics-sop": [
        "Generics.SOP",
        "Generics.SOP.TH"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "http-media": [],
      "insert-ordered-containers": [
        "Data.HashMap.Strict.InsOrd"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.TH",
        "Data.Data.Lens"
      ],
      "mtl": [
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "network": [],
      "scientific": [
        "Data.Scientific"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "uuid-types": [
        "Data.UUID.Types"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Lens.TH",
      "Control.Monad",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.Aeson",
      "Data.Aeson.QQ",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.Data.Lens",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashMap.Strict.InsOrd",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List.Compat",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Scientific",
      "Data.Set",
      "Data.Swagger",
      "Data.Swagger.Declare",
      "Data.Swagger.Internal",
      "Data.Swagger.Internal.AesonUtils",
      "Data.Swagger.Internal.ParamSchema",
      "Data.Swagger.Internal.Schema",
      "Data.Swagger.Internal.Schema.Validation",
      "Data.Swagger.Internal.Utils",
      "Data.Swagger.Lens",
      "Data.Swagger.Operation",
      "Data.Swagger.ParamSchema",
      "Data.Swagger.Schema",
      "Data.Swagger.SchemaOptions",
      "Data.Swagger.Schema.Validation",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.UUID.Types",
      "Data.Vector",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Generics.SOP",
      "Generics.SOP.TH",
      "GHC.Generics",
      "GHC.TypeLits",
      "Language.Haskell.TH",
      "Prelude",
      "Prelude.Compat",
      "SpecCommon",
      "System.FilePath.Glob",
      "Test.DocTest",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Swagger",
      "Data.Swagger.Declare",
      "Data.Swagger.Lens",
      "Data.Swagger.Operation",
      "Data.Swagger.ParamSchema",
      "Data.Swagger.Schema",
      "Data.Swagger.Schema.Validation",
      "Data.Swagger.SchemaOptions",
      "Data.Swagger.Internal",
      "Data.Swagger.Internal.Schema",
      "Data.Swagger.Internal.Schema.Validation",
      "Data.Swagger.Internal.ParamSchema",
      "Data.Swagger.Internal.Utils",
      "Data.Swagger.Internal.AesonUtils"
    ],
    "name": "swagger2",
    "version": "2.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Storable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ],
      "vector": [
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Vector.Storable",
      "Data.Vector.Storable.ByteString",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Storable",
      "System.ByteOrder",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Vector.Storable.ByteString"
    ],
    "name": "spool",
    "version": "0.1"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Monadic"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Parser",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Char",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64",
        "Data.ByteString.Base64.URL",
        "Data.ByteString.Base64.URL.Lazy"
      ],
      "bifunctors": [],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cryptonite": [
        "Crypto.Cipher.AES",
        "Crypto.Cipher.Types",
        "Crypto.Data.Padding",
        "Crypto.Error",
        "Crypto.Hash",
        "Crypto.MAC.HMAC",
        "Crypto.Number.Basic",
        "Crypto.PubKey.ECC.ECDSA",
        "Crypto.PubKey.ECC.Generate",
        "Crypto.PubKey.ECC.Types",
        "Crypto.PubKey.MaskGenFunction",
        "Crypto.PubKey.RSA",
        "Crypto.PubKey.RSA.OAEP",
        "Crypto.PubKey.RSA.PKCS15",
        "Crypto.PubKey.RSA.PSS",
        "Crypto.Random"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "lens": [
        "Control.Lens"
      ],
      "memory": [
        "Data.ByteArray",
        "Data.Memory.Endian",
        "Data.Memory.PtrMethods"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "network-uri": [
        "Network.URI"
      ],
      "quickcheck-instances": [
        "Test.QuickCheck.Instances"
      ],
      "safe": [
        "Safe"
      ],
      "semigroups": [],
      "template-haskell": [
        "Language.Haskell.TH.Lib",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "x509": [
        "Data.X509"
      ]
    },
    "imports": [
      "AESKW",
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.State",
      "Crypto.Cipher.AES",
      "Crypto.Cipher.Types",
      "Crypto.Data.Padding",
      "Crypto.Error",
      "Crypto.Hash",
      "Crypto.JOSE",
      "Crypto.JOSE.AESKW",
      "Crypto.JOSE.Compact",
      "Crypto.JOSE.Error",
      "Crypto.JOSE.JWA.JWE",
      "Crypto.JOSE.JWA.JWE.Alg",
      "Crypto.JOSE.JWA.JWK",
      "Crypto.JOSE.JWA.JWS",
      "Crypto.JOSE.JWK",
      "Crypto.JOSE.JWS",
      "Crypto.JOSE.JWS.Internal",
      "Crypto.JOSE.TH",
      "Crypto.JOSE.Types",
      "Crypto.JOSE.Types.Armour",
      "Crypto.JOSE.Types.Internal",
      "Crypto.JOSE.Types.Orphans",
      "Crypto.JWT",
      "Crypto.MAC.HMAC",
      "Crypto.Number.Basic",
      "Crypto.PubKey.ECC.ECDSA",
      "Crypto.PubKey.ECC.Generate",
      "Crypto.PubKey.ECC.Types",
      "Crypto.PubKey.MaskGenFunction",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.OAEP",
      "Crypto.PubKey.RSA.PKCS15",
      "Crypto.PubKey.RSA.PSS",
      "Crypto.Random",
      "Data.Aeson",
      "Data.Aeson.Parser",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Bifunctor",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteArray",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Base64.URL.Lazy",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Default.Class",
      "Data.HashMap.Strict",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Memory.Endian",
      "Data.Memory.PtrMethods",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Vector",
      "Data.Word",
      "Data.X509",
      "Foreign.Ptr",
      "Foreign.Storable",
      "JWK",
      "JWS",
      "JWT",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Syntax",
      "Network.URI",
      "Prelude",
      "Properties",
      "Safe",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.QuickCheck.Monadic",
      "Test.Tasty",
      "Test.Tasty.Hspec",
      "Test.Tasty.QuickCheck",
      "Types"
    ],
    "modules": [
      "Crypto.JOSE",
      "Crypto.JOSE.Compact",
      "Crypto.JOSE.Error",
      "Crypto.JOSE.JWE",
      "Crypto.JOSE.JWK",
      "Crypto.JOSE.JWS",
      "Crypto.JOSE.Legacy",
      "Crypto.JOSE.Types",
      "Crypto.JWT"
    ],
    "name": "jose",
    "version": "0.4.0.3"
  },
  {
    "dependencies": {
      "AC-Vector": [
        "Data.Vector.Class",
        "Data.Vector.V3"
      ],
      "QuickCheck": [
        "Test.QuickCheck.Arbitrary"
      ],
      "base": [
        "Control.Arrow",
        "Data.Bits",
        "Data.Foldable",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Traversable",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.Bits",
      "Data.Foldable",
      "Data.Functor",
      "Data.List",
      "Data.Maybe",
      "Data.Octree",
      "Data.Octree.Internal",
      "Data.Traversable",
      "Data.Vector.Class",
      "Data.Vector.V3",
      "Prelude",
      "Test.QuickCheck.All",
      "Test.QuickCheck.Arbitrary"
    ],
    "modules": [
      "Data.Octree"
    ],
    "name": "Octree",
    "version": "0.5.4.3"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.AutoScaling",
      "Test.AWS.AutoScaling",
      "Test.AWS.AutoScaling.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.AutoScaling",
      "Network.AWS.AutoScaling.AttachInstances",
      "Network.AWS.AutoScaling.AttachLoadBalancers",
      "Network.AWS.AutoScaling.CompleteLifecycleAction",
      "Network.AWS.AutoScaling.CreateAutoScalingGroup",
      "Network.AWS.AutoScaling.CreateLaunchConfiguration",
      "Network.AWS.AutoScaling.CreateOrUpdateTags",
      "Network.AWS.AutoScaling.DeleteAutoScalingGroup",
      "Network.AWS.AutoScaling.DeleteLaunchConfiguration",
      "Network.AWS.AutoScaling.DeleteLifecycleHook",
      "Network.AWS.AutoScaling.DeleteNotificationConfiguration",
      "Network.AWS.AutoScaling.DeletePolicy",
      "Network.AWS.AutoScaling.DeleteScheduledAction",
      "Network.AWS.AutoScaling.DeleteTags",
      "Network.AWS.AutoScaling.DescribeAccountLimits",
      "Network.AWS.AutoScaling.DescribeAdjustmentTypes",
      "Network.AWS.AutoScaling.DescribeAutoScalingGroups",
      "Network.AWS.AutoScaling.DescribeAutoScalingInstances",
      "Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes",
      "Network.AWS.AutoScaling.DescribeLaunchConfigurations",
      "Network.AWS.AutoScaling.DescribeLifecycleHookTypes",
      "Network.AWS.AutoScaling.DescribeLifecycleHooks",
      "Network.AWS.AutoScaling.DescribeLoadBalancers",
      "Network.AWS.AutoScaling.DescribeMetricCollectionTypes",
      "Network.AWS.AutoScaling.DescribeNotificationConfigurations",
      "Network.AWS.AutoScaling.DescribePolicies",
      "Network.AWS.AutoScaling.DescribeScalingActivities",
      "Network.AWS.AutoScaling.DescribeScalingProcessTypes",
      "Network.AWS.AutoScaling.DescribeScheduledActions",
      "Network.AWS.AutoScaling.DescribeTags",
      "Network.AWS.AutoScaling.DescribeTerminationPolicyTypes",
      "Network.AWS.AutoScaling.DetachInstances",
      "Network.AWS.AutoScaling.DetachLoadBalancers",
      "Network.AWS.AutoScaling.DisableMetricsCollection",
      "Network.AWS.AutoScaling.EnableMetricsCollection",
      "Network.AWS.AutoScaling.EnterStandby",
      "Network.AWS.AutoScaling.ExecutePolicy",
      "Network.AWS.AutoScaling.ExitStandby",
      "Network.AWS.AutoScaling.PutLifecycleHook",
      "Network.AWS.AutoScaling.PutNotificationConfiguration",
      "Network.AWS.AutoScaling.PutScalingPolicy",
      "Network.AWS.AutoScaling.PutScheduledUpdateGroupAction",
      "Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat",
      "Network.AWS.AutoScaling.ResumeProcesses",
      "Network.AWS.AutoScaling.SetDesiredCapacity",
      "Network.AWS.AutoScaling.SetInstanceHealth",
      "Network.AWS.AutoScaling.SetInstanceProtection",
      "Network.AWS.AutoScaling.SuspendProcesses",
      "Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup",
      "Network.AWS.AutoScaling.Types",
      "Network.AWS.AutoScaling.UpdateAutoScalingGroup",
      "Network.AWS.AutoScaling.Waiters"
    ],
    "name": "amazonka-autoscaling",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.HTTP.Base"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.List",
        "Data.Maybe"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "transformers": [],
      "vector": [
        "Data.Vector"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Stream.Parse"
      ],
      "xml-types": [
        "Data.XML.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Data.Aeson",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Read",
      "Data.Time.Calendar",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Data.Vector",
      "Data.XML.Types",
      "Network.HTTP.Base",
      "Network.HTTP.Conduit",
      "Network.Protocol.MusicBrainz.Types",
      "Text.XML",
      "Text.XML.Stream.Parse"
    ],
    "modules": [
      "Network.Protocol.MusicBrainz.Types",
      "Network.Protocol.MusicBrainz.Utils",
      "Network.Protocol.MusicBrainz.JSON.WebService",
      "Network.Protocol.MusicBrainz.XML2.WebService"
    ],
    "name": "MusicBrainz",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "ad": [
        "Numeric.AD.Mode.Tower"
      ],
      "base": [
        "Control.Monad"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "containers": [
        "Data.IntMap.Strict"
      ],
      "free": [],
      "mwc-random": [
        "System.Random.MWC",
        "System.Random.MWC.Distributions"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Primitive",
      "Data.Hople",
      "Data.IntMap.Strict",
      "Numeric.AD.Mode.Tower",
      "Numeric.Uncertain",
      "Numeric.Uncertain.Correlated",
      "Prelude.Compat",
      "System.Random.MWC",
      "System.Random.MWC.Distributions"
    ],
    "modules": [
      "Numeric.Uncertain",
      "Numeric.Uncertain.Correlated",
      "Numeric.Uncertain.Correlated.Interactive",
      "Numeric.Uncertain.MonteCarlo"
    ],
    "name": "uncertain",
    "version": "0.3.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Data.Fixed",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.Void"
      ],
      "binary": [
        "Data.Binary"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "hashable": [],
      "scientific": [
        "Data.Scientific"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "text": [
        "Data.Text"
      ],
      "text-binary": [],
      "time": [
        "Data.Time",
        "Data.Time.Clock.TAI"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "vector": [],
      "vector-binary-instances": []
    },
    "imports": [
      "Data.Aeson",
      "Data.Binary",
      "Data.Binary.Orphans",
      "Data.CaseInsensitive",
      "Data.Fixed",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.List.NonEmpty",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Scientific",
      "Data.Semigroup",
      "Data.Tagged",
      "Data.Text",
      "Data.Time",
      "Data.Time.Clock.TAI",
      "Data.Void",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Binary.Orphans"
    ],
    "name": "binary-orphans",
    "version": "0.1.5.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Proxy",
        "Data.Typeable",
        "Data.Type.Bool",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.TypeLits",
        "Unsafe.Coerce"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Data.Typeable",
      "Data.Type.Bool",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.TypeLits",
      "TypeFun.Data.Eq",
      "TypeFun.Data.List",
      "TypeFun.Data.Maybe",
      "TypeFun.Data.Peano",
      "Unsafe.Coerce"
    ],
    "modules": [
      "TypeFun.Constraint",
      "TypeFun.Data.Eq",
      "TypeFun.Data.List",
      "TypeFun.Data.Maybe",
      "TypeFun.Data.Peano"
    ],
    "name": "type-fun",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Prelude"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Exception.Extensible",
      "Control.Exception.Peel",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.IO.Peel",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Peel",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Data.IORef",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Typeable",
      "Prelude",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Control.Monad.Trans.Peel",
      "Control.Monad.IO.Peel",
      "Control.Exception.Peel"
    ],
    "name": "monad-peel",
    "version": "0.2.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "System.IO"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "crypto-numbers": [
        "Crypto.Number.Basic",
        "Crypto.Number.F2m",
        "Crypto.Number.Generate",
        "Crypto.Number.ModArithmetic",
        "Crypto.Number.Prime",
        "Crypto.Number.Serialize"
      ],
      "crypto-pubkey-types": [
        "Crypto.Types.PubKey.DH",
        "Crypto.Types.PubKey.DSA",
        "Crypto.Types.PubKey.ECC",
        "Crypto.Types.PubKey.ECDSA",
        "Crypto.Types.PubKey.RSA"
      ],
      "crypto-random": [
        "Crypto.Random",
        "Crypto.Random.API"
      ],
      "cryptohash": [
        "Crypto.Hash",
        "Crypto.Hash.SHA1"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Criterion.Main",
      "Crypto.Hash",
      "Crypto.Hash.SHA1",
      "Crypto.Number.Basic",
      "Crypto.Number.F2m",
      "Crypto.Number.Generate",
      "Crypto.Number.ModArithmetic",
      "Crypto.Number.Prime",
      "Crypto.Number.Serialize",
      "Crypto.PubKey.DH",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.ECC.ECDSA",
      "Crypto.PubKey.ECC.Generate",
      "Crypto.PubKey.ECC.Prim",
      "Crypto.PubKey.HashDescr",
      "Crypto.PubKey.Internal",
      "Crypto.PubKey.MaskGenFunction",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.OAEP",
      "Crypto.PubKey.RSA.PKCS15",
      "Crypto.PubKey.RSA.Prim",
      "Crypto.PubKey.RSA.PSS",
      "Crypto.PubKey.RSA.Types",
      "Crypto.Random",
      "Crypto.Random.API",
      "Crypto.Types.PubKey.DH",
      "Crypto.Types.PubKey.DSA",
      "Crypto.Types.PubKey.ECC",
      "Crypto.Types.PubKey.ECDSA",
      "Crypto.Types.PubKey.RSA",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Word",
      "EccArithmetic",
      "KAT",
      "KAT.DSA",
      "KAT.ECC",
      "KAT.ECDSA",
      "KAT.OAEP",
      "KAT.PSS",
      "PregenKeys",
      "RNG",
      "System.IO",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.KAT",
      "Test.Tasty.KAT.FileLoader",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.PKCS15",
      "Crypto.PubKey.RSA.OAEP",
      "Crypto.PubKey.RSA.PSS",
      "Crypto.PubKey.RSA.Prim",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.DH",
      "Crypto.PubKey.HashDescr",
      "Crypto.PubKey.MaskGenFunction",
      "Crypto.PubKey.ECC.Generate",
      "Crypto.PubKey.ECC.Prim",
      "Crypto.PubKey.ECC.DH",
      "Crypto.PubKey.ECC.ECDSA"
    ],
    "name": "crypto-pubkey",
    "version": "0.2.8"
  },
  {
    "dependencies": {
      "base": [],
      "mwc-random": [
        "System.Random.MWC",
        "System.Random.MWC.Distributions"
      ],
      "pipes": [
        "Pipes.Prelude"
      ],
      "vector": [
        "Data.Vector.Generic"
      ]
    },
    "imports": [
      "Data.Vector.Generic",
      "Pipes.Prelude",
      "System.Random.MWC",
      "System.Random.MWC.Distributions"
    ],
    "modules": [
      "Pipes.Random"
    ],
    "name": "pipes-random",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Debug.Trace",
        "Text.ParserCombinators.ReadP"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.State"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.State",
      "Data.Char",
      "Data.Graph",
      "Data.IntMap",
      "Data.List",
      "Debug.Trace",
      "Djinn.HTypes",
      "Djinn.LJTFormula",
      "Text.ParserCombinators.ReadP",
      "Text.PrettyPrint.HughesPJ"
    ],
    "modules": [
      "Djinn.HCheck",
      "Djinn.HTypes",
      "Djinn.LJT",
      "Djinn.LJTFormula"
    ],
    "name": "djinn-lib",
    "version": "0.0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Either",
        "Data.List",
        "Data.Maybe"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader.Class",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.Operational",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Data.Either",
      "Data.List",
      "Data.Maybe",
      "ListT",
      "System.Random"
    ],
    "modules": [
      "Control.Monad.Operational"
    ],
    "name": "operational",
    "version": "0.2.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Int",
        "Data.Monoid",
        "Data.Word",
        "GHC.Generics",
        "System.Timeout"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Ppr",
        "Language.Haskell.TH.PprLib",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "th-lift": [
        "Language.Haskell.TH.Lift"
      ],
      "th-lift-instances": [
        "Instances.TH.Lift"
      ],
      "th-reify-many": [
        "Language.Haskell.TH.ReifyMany"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.Data",
      "Data.Int",
      "Data.Monoid",
      "Data.Word",
      "Generics.Deriving.TH",
      "GHC.Generics",
      "Instances.TH.Lift",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Instances",
      "Language.Haskell.TH.Lift",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.PprLib",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.ReifyMany",
      "Language.Haskell.TH.Syntax",
      "Language.Haskell.TH.Syntax.Internals",
      "System.Timeout",
      "Test.Hspec"
    ],
    "modules": [
      "Language.Haskell.TH.Instances"
    ],
    "name": "th-orphans",
    "version": "0.13.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Category",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Prelude"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Category",
      "Control.Monad",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Data.Lens.Light.Core",
      "Data.Lens.Light.State",
      "Data.Lens.Light.Template",
      "Data.List",
      "Data.Maybe",
      "Language.Haskell.TH.Syntax",
      "Prelude"
    ],
    "modules": [
      "Data.Lens.Light"
    ],
    "name": "data-lens-light",
    "version": "0.1.2.2"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.IoTDataPlane",
      "Test.AWS.Fixture",
      "Test.AWS.IoTDataPlane",
      "Test.AWS.IoTDataPlane.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.IoTDataPlane",
      "Network.AWS.IoTDataPlane.DeleteThingShadow",
      "Network.AWS.IoTDataPlane.GetThingShadow",
      "Network.AWS.IoTDataPlane.Publish",
      "Network.AWS.IoTDataPlane.Types",
      "Network.AWS.IoTDataPlane.UpdateThingShadow",
      "Network.AWS.IoTDataPlane.Waiters"
    ],
    "name": "amazonka-iot-dataplane",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Complex",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Exts",
        "GHC.ForeignPtr",
        "GHC.Ptr",
        "GHC.Word",
        "Prelude",
        "System.Environment",
        "Text.Read",
        "Text.Show.Functions"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive.Addr",
        "Data.Primitive.Types"
      ]
    },
    "imports": [
      "Algo.AwShCC",
      "Algo.HybCC",
      "Algo.Leaffix",
      "Algo.ListRank",
      "Algo.Quickhull",
      "Algo.Rootfix",
      "Algo.Spectral",
      "Algo.Tridiag",
      "Boilerplater",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Control.Monad.Trans.Writer",
      "Criterion.Main",
      "Data.Array.ST",
      "Data.Bits",
      "Data.Char",
      "Data.Complex",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.Primitive.Addr",
      "Data.Primitive.Types",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Fusion.Bundle",
      "Data.Vector.Fusion.Bundle.Monadic",
      "Data.Vector.Fusion.Bundle.Size",
      "Data.Vector.Fusion.Stream.Monadic",
      "Data.Vector.Fusion.Util",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Base",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Generic.Mutable.Base",
      "Data.Vector.Generic.New",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Internal",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Base",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Exts",
      "GHC.ForeignPtr",
      "GHC.Prim",
      "GHC.Ptr",
      "GHC.Types",
      "GHC.Word",
      "Language.Haskell.TH",
      "Prelude",
      "System.Environment",
      "System.Random",
      "System.Random.MWC",
      "TestData.Graph",
      "TestData.ParenTree",
      "TestData.Random",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Tests.Bundle",
      "Tests.Move",
      "Tests.Vector",
      "Text.PrettyPrint",
      "Text.Read",
      "Text.Show.Functions",
      "Utilities"
    ],
    "modules": [
      "Data.Vector.Internal.Check",
      "Data.Vector.Fusion.Util",
      "Data.Vector.Fusion.Stream.Monadic",
      "Data.Vector.Fusion.Bundle.Size",
      "Data.Vector.Fusion.Bundle.Monadic",
      "Data.Vector.Fusion.Bundle",
      "Data.Vector.Generic.Mutable.Base",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Generic.Base",
      "Data.Vector.Generic.New",
      "Data.Vector.Generic",
      "Data.Vector.Primitive.Mutable",
      "Data.Vector.Primitive",
      "Data.Vector.Storable.Internal",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed.Base",
      "Data.Vector.Unboxed.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Mutable",
      "Data.Vector"
    ],
    "name": "vector",
    "version": "0.11.0.0"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Text"
      ],
      "base": [
        "Data.Maybe",
        "Data.Version"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "tar": [
        "Codec.Archive.Tar"
      ],
      "utf8-string": [
        "Data.String.UTF8"
      ]
    },
    "imports": [
      "Codec.Archive.Tar",
      "Data.ByteString.Lazy.Char8",
      "Data.Map",
      "Data.Maybe",
      "Data.String.UTF8",
      "Data.Version",
      "Distribution.Hackage.DB.Parsed",
      "Distribution.Hackage.DB.Path",
      "Distribution.Hackage.DB.Unparsed",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Text",
      "System.Directory",
      "System.FilePath"
    ],
    "modules": [
      "Distribution.Hackage.DB.Unparsed",
      "Distribution.Hackage.DB.Parsed",
      "Distribution.Hackage.DB.Path",
      "Distribution.Hackage.DB"
    ],
    "name": "hackage-db",
    "version": "1.22"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Dynamic",
        "Data.Either",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Unique",
        "Data.Version",
        "Data.Word",
        "Foreign",
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.IO.Exception",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "extra": [
        "Control.Concurrent.Extra",
        "Control.Exception.Extra",
        "Control.Monad.Extra",
        "Data.Either.Extra",
        "Data.IORef.Extra",
        "Data.List.Extra",
        "Data.Tuple.Extra",
        "Data.Version.Extra",
        "Numeric.Extra",
        "System.Directory.Extra",
        "System.Environment.Extra",
        "System.Info.Extra",
        "System.IO.Extra",
        "System.Time.Extra"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "js-flot": [
        "Language.Javascript.Flot"
      ],
      "js-jquery": [
        "Language.Javascript.JQuery"
      ],
      "primitive": [],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Extra",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Extra",
      "Control.Monad",
      "Control.Monad.Extra",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Data",
      "Data.Dynamic",
      "Data.Either",
      "Data.Either.Extra",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IORef",
      "Data.IORef.Extra",
      "Data.List",
      "Data.List.Extra",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Time",
      "Data.Tuple.Extra",
      "Data.Typeable",
      "Data.Unique",
      "Data.Version",
      "Data.Version.Extra",
      "Data.Word",
      "Development.Make.All",
      "Development.Make.Env",
      "Development.Make.Parse",
      "Development.Make.Rules",
      "Development.Make.Type",
      "Development.Ninja.All",
      "Development.Ninja.Env",
      "Development.Ninja.Lexer",
      "Development.Ninja.Parse",
      "Development.Ninja.Type",
      "Development.Shake",
      "Development.Shake.Args",
      "Development.Shake.ByteString",
      "Development.Shake.Classes",
      "Development.Shake.CmdOption",
      "Development.Shake.Command",
      "Development.Shake.Config",
      "Development.Shake.Core",
      "Development.Shake.Database",
      "Development.Shake.Demo",
      "Development.Shake.Derived",
      "Development.Shake.Errors",
      "Development.Shake.FileInfo",
      "Development.Shake.FilePath",
      "Development.Shake.FilePattern",
      "Development.Shake.Forward",
      "Development.Shake.Monad",
      "Development.Shake.Pool",
      "Development.Shake.Profile",
      "Development.Shake.Progress",
      "Development.Shake.Resource",
      "Development.Shake.Rule",
      "Development.Shake.Rules.Directory",
      "Development.Shake.Rules.File",
      "Development.Shake.Rules.Files",
      "Development.Shake.Rules.Oracle",
      "Development.Shake.Rules.OrderOnly",
      "Development.Shake.Rules.Rerun",
      "Development.Shake.Shake",
      "Development.Shake.Special",
      "Development.Shake.Storage",
      "Development.Shake.Types",
      "Development.Shake.Util",
      "Development.Shake.Value",
      "Foreign",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "Foreign.Storable",
      "General.Bilist",
      "General.Binary",
      "General.Cleanup",
      "General.Concurrent",
      "General.Extra",
      "General.FileLock",
      "General.Intern",
      "General.Process",
      "General.String",
      "General.Template",
      "General.Timing",
      "GHC.Conc",
      "GHC.Exts",
      "GHC.IO.Exception",
      "Language.Javascript.Flot",
      "Language.Javascript.JQuery",
      "Numeric",
      "Numeric.Extra",
      "Paths",
      "Prelude",
      "Run",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Directory.Extra",
      "System.Environment",
      "System.Environment.Extra",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.Info",
      "System.Info.Extra",
      "System.IO",
      "System.IO.Error",
      "System.IO.Extra",
      "System.IO.Unsafe",
      "System.Posix.Files.ByteString",
      "System.Posix.IO",
      "System.Process",
      "System.Random",
      "System.Time",
      "System.Time.Extra",
      "Test.Assume",
      "Test.Basic",
      "Test.Benchmark",
      "Test.C",
      "Test.Cache",
      "Test.Command",
      "Test.Config",
      "Test.Digest",
      "Test.Directory",
      "Test.Docs",
      "Test.Errors",
      "Test.FileLock",
      "Test.FilePath",
      "Test.FilePattern",
      "Test.Files",
      "Test.Forward",
      "Test.Journal",
      "Test.Lint",
      "Test.Live",
      "Test.Makefile",
      "Test.Manual",
      "Test.Match",
      "Test.Monad",
      "Test.Ninja",
      "Test.Oracle",
      "Test.OrderOnly",
      "Test.Parallel",
      "Test.Pool",
      "Test.Progress",
      "Test.QuickCheck",
      "Test.Random",
      "Test.Resources",
      "Test.Self",
      "Test.Tar",
      "Test.Tup",
      "Test.Type",
      "Test.Unicode",
      "Test.Util",
      "Test.Verbosity",
      "Test.Version"
    ],
    "modules": [
      "Development.Shake",
      "Development.Shake.Classes",
      "Development.Shake.Command",
      "Development.Shake.Config",
      "Development.Shake.FilePath",
      "Development.Shake.Forward",
      "Development.Shake.Rule",
      "Development.Shake.Util"
    ],
    "name": "shake",
    "version": "0.15.10"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Data.IORef"
      ]
    },
    "imports": [
      "Control.AutoUpdate.Util",
      "Control.Concurrent",
      "Control.Exception",
      "Data.IORef"
    ],
    "modules": [
      "Control.AutoUpdate",
      "Control.Debounce",
      "Control.Reaper"
    ],
    "name": "auto-update",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Data.List",
        "Data.Maybe",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "directory": [],
      "filepath": [],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Annotated"
      ],
      "mtl": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "strict": [
        "System.IO.Strict"
      ],
      "stylish-haskell": [],
      "syb": [
        "Data.Generics"
      ],
      "yaml": []
    },
    "imports": [
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.Generics",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Language.Haskell.Exts.Annotated",
      "Language.Haskell.Stylish.Block",
      "Language.Haskell.Stylish.Editor",
      "Language.Haskell.Stylish.Parse.Tests",
      "Language.Haskell.Stylish.Step",
      "Language.Haskell.Stylish.Step.Imports",
      "Language.Haskell.Stylish.Step.Imports.Tests",
      "Language.Haskell.Stylish.Step.LanguagePragmas",
      "Language.Haskell.Stylish.Step.LanguagePragmas.Tests",
      "Language.Haskell.Stylish.Step.SimpleAlign",
      "Language.Haskell.Stylish.Step.SimpleAlign.Tests",
      "Language.Haskell.Stylish.Step.Tabs",
      "Language.Haskell.Stylish.Step.Tabs.Tests",
      "Language.Haskell.Stylish.Step.TrailingWhitespace",
      "Language.Haskell.Stylish.Step.TrailingWhitespace.Tests",
      "Language.Haskell.Stylish.Step.UnicodeSyntax",
      "Language.Haskell.Stylish.Step.UnicodeSyntax.Tests",
      "Language.Haskell.Stylish.Tests.Util",
      "Language.Haskell.Stylish.Util",
      "Options.Applicative",
      "Paths",
      "System.IO",
      "System.IO.Strict",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Language.Haskell.Stylish"
    ],
    "name": "stylish-haskell",
    "version": "0.6.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Functor.Identity",
        "Data.Maybe",
        "GHC.Base",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.State.Strict"
      ],
      "ref-fd": [
        "Control.Monad.Ref"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Ref",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.ST.Persistent.Internal",
      "Data.Functor.Identity",
      "Data.IntMap",
      "Data.Maybe",
      "GHC.Base",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Monad.ST.Persistent",
      "Data.STRef.Persistent"
    ],
    "name": "persistent-refs",
    "version": "0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "mtl": [],
      "parallel": [
        "Control.Parallel.Strategies"
      ],
      "pipes": [
        "Pipes"
      ],
      "streaming-commons": [
        "Data.Streaming.Zlib",
        "Data.Streaming.Zlib.Lowlevel"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Parallel.Strategies",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Streaming.Zlib",
      "Data.Streaming.Zlib.Lowlevel",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Pipes",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Pipes.Bgzf"
    ],
    "name": "pipes-bgzf",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.IArray",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Char",
        "Data.Coerce",
        "Data.Complex",
        "Data.Data",
        "Data.Dynamic",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Int",
        "Data.Ix",
        "Data.Kind",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Version",
        "Data.Void",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Safe",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.ForeignPtr",
        "GHC.Generics",
        "GHC.IO",
        "GHC.IO.Exception",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Unsafe.Coerce"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "comonad": [
        "Control.Comonad",
        "Control.Comonad.Store.Class",
        "Control.Comonad.Trans.Traced"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "contravariant": [
        "Data.Functor.Contravariant",
        "Data.Functor.Contravariant.Compose"
      ],
      "distributive": [
        "Data.Distributive"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "free": [
        "Control.Comonad.Cofree",
        "Control.Comonad.Trans.Cofree",
        "Control.Monad.Free",
        "Control.Monad.Free.Church",
        "Control.Monad.Trans.Free"
      ],
      "ghc-prim": [
        "GHC.Magic"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "kan-extensions": [
        "Data.Functor.Day.Curried",
        "Data.Functor.Yoneda"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Class",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "parallel": [
        "Control.Parallel.Strategies",
        "Control.Seq"
      ],
      "profunctors": [
        "Data.Profunctor",
        "Data.Profunctor.Closed",
        "Data.Profunctor.Rep",
        "Data.Profunctor.Sieve",
        "Data.Profunctor.Unsafe"
      ],
      "reflection": [
        "Data.Reflection"
      ],
      "semigroupoids": [
        "Data.Functor.Apply",
        "Data.Functor.Bind",
        "Data.Functor.Extend",
        "Data.Functor.Plus",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable",
        "Data.Traversable.Instances"
      ],
      "semigroups": [],
      "tagged": [
        "Data.Tagged"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict",
        "Data.Functor.Reverse"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Fusion.Bundle",
        "Data.Vector.Generic",
        "Data.Vector.Generic.New",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Comonad.Cofree",
      "Control.Comonad.Store.Class",
      "Control.Comonad.Trans.Cofree",
      "Control.Comonad.Trans.Traced",
      "Control.Exception",
      "Control.Exception.Lens",
      "Control.Lens",
      "Control.Lens.At",
      "Control.Lens.Cons",
      "Control.Lens.Each",
      "Control.Lens.Empty",
      "Control.Lens.Equality",
      "Control.Lens.Fold",
      "Control.Lens.Getter",
      "Control.Lens.Indexed",
      "Control.Lens.Internal",
      "Control.Lens.Internal.Bazaar",
      "Control.Lens.Internal.ByteString",
      "Control.Lens.Internal.Coerce",
      "Control.Lens.Internal.Context",
      "Control.Lens.Internal.Exception",
      "Control.Lens.Internal.FieldTH",
      "Control.Lens.Internal.Fold",
      "Control.Lens.Internal.Getter",
      "Control.Lens.Internal.Indexed",
      "Control.Lens.Internal.Instances",
      "Control.Lens.Internal.Iso",
      "Control.Lens.Internal.Level",
      "Control.Lens.Internal.List",
      "Control.Lens.Internal.Magma",
      "Control.Lens.Internal.Prism",
      "Control.Lens.Internal.PrismTH",
      "Control.Lens.Internal.Review",
      "Control.Lens.Internal.Setter",
      "Control.Lens.Internal.TH",
      "Control.Lens.Internal.Zoom",
      "Control.Lens.Iso",
      "Control.Lens.Lens",
      "Control.Lens.Level",
      "Control.Lens.Plated",
      "Control.Lens.Prism",
      "Control.Lens.Properties",
      "Control.Lens.Reified",
      "Control.Lens.Review",
      "Control.Lens.Setter",
      "Control.Lens.TH",
      "Control.Lens.Traversal",
      "Control.Lens.Tuple",
      "Control.Lens.Type",
      "Control.Lens.Wrapped",
      "Control.Lens.Zoom",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Free",
      "Control.Monad.Free.Church",
      "Control.Monad.IO.Class",
      "Control.MonadPlus.Free",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Free",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Class",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Control.Parallel.Strategies",
      "Control.Seq",
      "Criterion.Main",
      "Criterion.Types",
      "Data.Aeson",
      "Data.Array",
      "Data.Array.IArray",
      "Data.Array.Unboxed",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bitraversable",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Lens",
      "Data.ByteString.Lens",
      "Data.ByteString.Strict.Lens",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Coerce",
      "Data.Complex",
      "Data.Data",
      "Data.Data.Lens",
      "Data.Default",
      "Data.Distributive",
      "Data.Dynamic",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Compose",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Compose",
      "Data.Functor.Day.Curried",
      "Data.Functor.Extend",
      "Data.Functor.Identity",
      "Data.Functor.Plus",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Functor.Yoneda",
      "Data.Generics.Uniplate.DataOnly",
      "Data.Generics.Uniplate.Direct",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Ix",
      "Data.Kind",
      "Data.List",
      "Data.List.Lens",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Profunctor",
      "Data.Profunctor.Closed",
      "Data.Profunctor.Rep",
      "Data.Profunctor.Sieve",
      "Data.Profunctor.Unsafe",
      "Data.Proxy",
      "Data.Reflection",
      "Data.Semigroup",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Traversable",
      "Data.Sequence",
      "Data.Set",
      "Data.Set.Lens",
      "Data.Tagged",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.Lens",
      "Data.Text.Lens",
      "Data.Text.Strict.Lens",
      "Data.Traversable",
      "Data.Traversable.Instances",
      "Data.Tree",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Fusion.Bundle",
      "Data.Vector.Fusion.Stream",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Lens",
      "Data.Vector.Generic.New",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Safe",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Generics.Deriving.Lens",
      "GHC.Base",
      "GHC.Conc",
      "GHC.Event",
      "GHC.Exts",
      "GHC.ForeignPtr",
      "GHC.Generics",
      "GHC.IO",
      "GHC.IO.Exception",
      "GHC.Magic",
      "Graphics.Gloss",
      "Graphics.Gloss.Interface.Pure.Game",
      "Language.Haskell.HLint",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lens",
      "Language.Haskell.TH.Syntax",
      "Numeric",
      "Numeric.Lens",
      "Paths",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.Framework.TH",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Function",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Exception.Lens",
      "Control.Lens",
      "Control.Lens.At",
      "Control.Lens.Combinators",
      "Control.Lens.Cons",
      "Control.Lens.Each",
      "Control.Lens.Empty",
      "Control.Lens.Equality",
      "Control.Lens.Extras",
      "Control.Lens.Fold",
      "Control.Lens.Getter",
      "Control.Lens.Indexed",
      "Control.Lens.Internal",
      "Control.Lens.Internal.Bazaar",
      "Control.Lens.Internal.ByteString",
      "Control.Lens.Internal.Coerce",
      "Control.Lens.Internal.Context",
      "Control.Lens.Internal.Deque",
      "Control.Lens.Internal.Exception",
      "Control.Lens.Internal.FieldTH",
      "Control.Lens.Internal.PrismTH",
      "Control.Lens.Internal.Fold",
      "Control.Lens.Internal.Getter",
      "Control.Lens.Internal.Indexed",
      "Control.Lens.Internal.Instances",
      "Control.Lens.Internal.Iso",
      "Control.Lens.Internal.Level",
      "Control.Lens.Internal.List",
      "Control.Lens.Internal.Magma",
      "Control.Lens.Internal.Prism",
      "Control.Lens.Internal.Review",
      "Control.Lens.Internal.Setter",
      "Control.Lens.Internal.TH",
      "Control.Lens.Internal.Zoom",
      "Control.Lens.Iso",
      "Control.Lens.Lens",
      "Control.Lens.Level",
      "Control.Lens.Operators",
      "Control.Lens.Plated",
      "Control.Lens.Prism",
      "Control.Lens.Reified",
      "Control.Lens.Review",
      "Control.Lens.Setter",
      "Control.Lens.TH",
      "Control.Lens.Traversal",
      "Control.Lens.Tuple",
      "Control.Lens.Type",
      "Control.Lens.Wrapped",
      "Control.Lens.Zoom",
      "Control.Monad.Error.Lens",
      "Control.Parallel.Strategies.Lens",
      "Control.Seq.Lens",
      "Data.Array.Lens",
      "Data.Bits.Lens",
      "Data.ByteString.Lens",
      "Data.ByteString.Strict.Lens",
      "Data.ByteString.Lazy.Lens",
      "Data.Complex.Lens",
      "Data.Data.Lens",
      "Data.Dynamic.Lens",
      "Data.HashSet.Lens",
      "Data.IntSet.Lens",
      "Data.List.Lens",
      "Data.Map.Lens",
      "Data.Sequence.Lens",
      "Data.Set.Lens",
      "Data.Text.Lens",
      "Data.Text.Strict.Lens",
      "Data.Text.Lazy.Lens",
      "Data.Tree.Lens",
      "Data.Typeable.Lens",
      "Data.Vector.Lens",
      "Data.Vector.Generic.Lens",
      "Generics.Deriving.Lens",
      "GHC.Generics.Lens",
      "System.Exit.Lens",
      "System.FilePath.Lens",
      "System.IO.Error.Lens",
      "Language.Haskell.TH.Lens",
      "Numeric.Lens"
    ],
    "name": "lens",
    "version": "4.14"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Functor",
        "Data.Traversable",
        "Data.Typeable"
      ],
      "concurrency": [
        "Control.Concurrent.Classy.STM.TMVar",
        "Control.Monad.Conc.Class",
        "Control.Monad.STM.Class"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.Async",
      "Control.Concurrent.Classy.STM.TMVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Conc.Class",
      "Control.Monad.STM.Class",
      "Data.Functor",
      "Data.Traversable",
      "Data.Typeable",
      "Test.DejaFu",
      "Test.HUnit",
      "Test.HUnit.DejaFu"
    ],
    "modules": [
      "Control.Concurrent.Async"
    ],
    "name": "async-dejafu",
    "version": "0.1.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Monoid",
        "Data.Void",
        "System.Exit",
        "System.IO",
        "System.Mem",
        "System.Timeout"
      ],
      "contravariant": [
        "Data.Functor.Contravariant",
        "Data.Functor.Contravariant.Divisible"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Divisible",
      "Data.Monoid",
      "Data.Void",
      "Pipes",
      "Pipes.Concurrent",
      "Pipes.Prelude",
      "System.Exit",
      "System.IO",
      "System.Mem",
      "System.Timeout"
    ],
    "modules": [
      "Pipes.Concurrent",
      "Pipes.Concurrent.Tutorial"
    ],
    "name": "pipes-concurrency",
    "version": "2.0.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ]
    },
    "imports": [
      "Codec.Compression.BZip",
      "Codec.Compression.BZip.Internal",
      "Codec.Compression.BZip.Stream",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Prelude"
    ],
    "modules": [
      "Codec.Compression.BZip",
      "Codec.Compression.BZip.Internal"
    ],
    "name": "bzlib",
    "version": "0.5.0.5"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.YouTubeAnalytics.BatchReportDefinitions.List",
      "Network.Google.Resource.YouTubeAnalytics.BatchReports.List",
      "Network.Google.Resource.YouTubeAnalytics.GroupItems.Delete",
      "Network.Google.Resource.YouTubeAnalytics.GroupItems.Insert",
      "Network.Google.Resource.YouTubeAnalytics.GroupItems.List",
      "Network.Google.Resource.YouTubeAnalytics.Groups.Delete",
      "Network.Google.Resource.YouTubeAnalytics.Groups.Insert",
      "Network.Google.Resource.YouTubeAnalytics.Groups.List",
      "Network.Google.Resource.YouTubeAnalytics.Groups.Update",
      "Network.Google.Resource.YouTubeAnalytics.Reports.Query",
      "Network.Google.YouTubeAnalytics",
      "Network.Google.YouTubeAnalytics.Types"
    ],
    "name": "gogol-youtube-analytics",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Unique",
        "Debug.Trace",
        "GHC.Generics",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.Map.Lazy",
        "Data.Map.Strict"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "elerea": [
        "FRP.Elerea.Simple"
      ],
      "enummapset-th": [
        "Data.EnumMap.Lazy",
        "Data.EnumMap.Strict"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Criterion",
      "Criterion.Main",
      "Data.Either",
      "Data.EnumMap.Lazy",
      "Data.EnumMap.Strict",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Map.Lazy",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Unique",
      "Debug.Trace",
      "FRP.Elerea.Simple",
      "FRP.Elerea.Simple.Compat",
      "FRP.Euphoria.EnumCollection.Lazy",
      "FRP.Euphoria.EnumCollection.Lazy.Bench",
      "FRP.Euphoria.EnumCollection.Lazy.Test",
      "FRP.Euphoria.EnumCollection.Strict",
      "FRP.Euphoria.EnumCollection.Strict.Bench",
      "FRP.Euphoria.Event",
      "FRP.Euphoria.Event.Test",
      "FRP.Euphoria.HashCollection.Lazy",
      "FRP.Euphoria.HashCollection.Lazy.Bench",
      "FRP.Euphoria.HashCollection.Strict",
      "FRP.Euphoria.HashCollection.Strict.Bench",
      "FRP.Euphoria.HashCollection.Strict.Test",
      "FRP.Euphoria.Internal.GenericCollection",
      "FRP.Euphoria.Internal.Maplike",
      "FRP.Euphoria.Signal",
      "FRP.Euphoria.Update",
      "FRP.Euphoria.Update.Test",
      "GHC.Generics",
      "Prelude",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.TH",
      "Test.HUnit",
      "Unsafe.Coerce"
    ],
    "modules": [
      "FRP.Euphoria.Event",
      "FRP.Euphoria.Signal",
      "FRP.Euphoria.Update",
      "FRP.Euphoria.Collection",
      "FRP.Euphoria.EnumCollection.Lazy",
      "FRP.Euphoria.EnumCollection.Strict",
      "FRP.Euphoria.HashCollection.Lazy",
      "FRP.Euphoria.HashCollection.Strict",
      "FRP.Euphoria.Abbrev",
      "FRP.Euphoria.Internal.GenericCollection",
      "FRP.Euphoria.Internal.Maplike"
    ],
    "name": "euphoria",
    "version": "0.8.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.List",
        "GHC.Conc",
        "Numeric",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "containers": [],
      "extensible-exceptions": [],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.ParallelIO.Compat",
      "Control.Concurrent.ParallelIO.Global",
      "Control.Concurrent.ParallelIO.Local",
      "Control.Exception",
      "Control.Monad",
      "Data.IORef",
      "Data.List",
      "Data.Time.Clock",
      "GHC.Conc",
      "Numeric",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Control.Concurrent.ParallelIO",
      "Control.Concurrent.ParallelIO.Global",
      "Control.Concurrent.ParallelIO.Local"
    ],
    "name": "parallel-io",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Fonts",
      "Network.Google.Fonts.Types",
      "Network.Google.Resource.Webfonts.Webfonts.List"
    ],
    "name": "gogol-fonts",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.Expression",
      "Data.Searchable",
      "Data.Countable",
      "Data.Empty"
    ],
    "name": "countable",
    "version": "1.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "GHC.Generics",
        "Prelude"
      ],
      "containers": [
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "quickcheck-instances": [
        "Test.QuickCheck.Instances"
      ],
      "semigroupoids": [
        "Data.Semigroup.Foldable"
      ],
      "semigroups": [],
      "sets": [
        "Data.Set.Class"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ],
      "witherable": [
        "Data.Witherable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.State",
      "Criterion",
      "Data.Build",
      "Data.Data",
      "Data.Foldable",
      "Data.Hashable",
      "Data.HashSet",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Semigroup.Foldable",
      "Data.Set",
      "Data.Set.Class",
      "Data.Tree",
      "Data.Tree.Hash",
      "Data.Tree.Knuth",
      "Data.Tree.Knuth.Forest",
      "Data.Tree.Rose",
      "Data.Tree.RoseSpec",
      "Data.Tree.Set",
      "Data.Witherable",
      "GHC.Generics",
      "Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Tree.Rose",
      "Data.Tree.Knuth",
      "Data.Tree.Knuth.Forest",
      "Data.Tree.Set",
      "Data.Tree.Hash"
    ],
    "name": "rose-trees",
    "version": "0.0.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Prelude"
      ],
      "containers": []
    },
    "imports": [
      "Data.Tree",
      "Prelude"
    ],
    "modules": [
      "Data.Tree.Zipper"
    ],
    "name": "rosezipper",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "digest": [
        "Data.Digest.Adler32"
      ],
      "happstack-server": [
        "Happstack.Server"
      ],
      "jmacro": [
        "Language.Javascript.JMacro"
      ],
      "text": [
        "Data.Text.Lazy.Encoding"
      ],
      "utf8-string": [],
      "wl-pprint-text": [
        "Text.PrettyPrint.Leijen.Text"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Char8",
      "Data.Digest.Adler32",
      "Data.Serialize",
      "Data.Text.Lazy.Encoding",
      "Happstack.Server",
      "Language.Javascript.JMacro",
      "Text.PrettyPrint.Leijen.Text"
    ],
    "modules": [
      "Happstack.Server.JMacro"
    ],
    "name": "happstack-jmacro",
    "version": "7.0.11"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Function",
        "Data.Int",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe",
        "System.Posix.Types"
      ],
      "binary": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "old-time": [
        "System.Time"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.Function",
      "Data.Int",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.UnixTime",
      "Data.UnixTime.Conv",
      "Data.UnixTime.Diff",
      "Data.UnixTime.Sys",
      "Data.UnixTime.Types",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Posix.Types",
      "System.Time",
      "Test.DocTest",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.UnixTime"
    ],
    "name": "unix-time",
    "version": "0.3.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Traversable",
        "Prelude"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Error.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Data.Foldable",
      "Data.Traversable",
      "Prelude",
      "Success.Pure"
    ],
    "modules": [
      "Success.Pure",
      "Success.Impure"
    ],
    "name": "success",
    "version": "0.2.6"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Data",
        "Data.List",
        "Data.Typeable",
        "Data.Version",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "digest": [
        "Data.Digest.CRC32"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [],
      "old-time": [
        "System.Time"
      ],
      "text": [
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time.Clock.POSIX"
      ],
      "zip-archive": [],
      "zlib": [
        "Codec.Compression.Zlib.Raw"
      ]
    },
    "imports": [
      "Codec.Archive.Zip",
      "Codec.Compression.Zlib.Raw",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Data",
      "Data.Digest.CRC32",
      "Data.List",
      "Data.Map",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Version",
      "Paths",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.Posix.Files",
      "System.Process",
      "System.Time",
      "Test.HUnit.Base",
      "Test.HUnit.Text",
      "Text.Printf"
    ],
    "modules": [
      "Codec.Archive.Zip"
    ],
    "name": "zip-archive",
    "version": "0.3.0.5"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.ST",
        "Data.Array.Unsafe"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Complex",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Compose",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Numeric.Natural",
        "Prelude",
        "System.IO.Unsafe",
        "Unsafe.Coerce"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "data-reify": [
        "Data.Reify",
        "Data.Reify.Graph"
      ],
      "erf": [
        "Data.Number.Erf"
      ],
      "free": [
        "Control.Comonad.Cofree"
      ],
      "nats": [],
      "reflection": [
        "Data.Reflection"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Build",
      "Control.Applicative",
      "Control.Comonad",
      "Control.Comonad.Cofree",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.Trans.State",
      "Criterion.Main",
      "Data.Array",
      "Data.Array.ST",
      "Data.Array.Unsafe",
      "Data.Complex",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Compose",
      "Data.Graph",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.Number.Erf",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Reflection",
      "Data.Reify",
      "Data.Reify.Graph",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Numeric.AD",
      "Numeric.AD.Internal.Combinators",
      "Numeric.AD.Internal.Forward",
      "Numeric.AD.Internal.Forward.Double",
      "Numeric.AD.Internal.Identity",
      "Numeric.AD.Internal.Kahn",
      "Numeric.AD.Internal.On",
      "Numeric.AD.Internal.Or",
      "Numeric.AD.Internal.Reverse",
      "Numeric.AD.Internal.Sparse",
      "Numeric.AD.Internal.Tower",
      "Numeric.AD.Internal.Type",
      "Numeric.AD.Jacobian",
      "Numeric.AD.Jet",
      "Numeric.AD.Mode",
      "Numeric.AD.Mode.Forward",
      "Numeric.AD.Mode.Forward.Double",
      "Numeric.AD.Mode.Kahn",
      "Numeric.AD.Mode.Reverse",
      "Numeric.AD.Mode.Sparse",
      "Numeric.AD.Mode.Tower",
      "Numeric.AD.Newton",
      "Numeric.AD.Rank1.Forward",
      "Numeric.AD.Rank1.Forward.Double",
      "Numeric.AD.Rank1.Halley",
      "Numeric.AD.Rank1.Kahn",
      "Numeric.AD.Rank1.Newton",
      "Numeric.AD.Rank1.Newton.Double",
      "Numeric.AD.Rank1.Sparse",
      "Numeric.AD.Rank1.Tower",
      "Numeric.Natural",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO.Unsafe",
      "Test.DocTest",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Numeric.AD",
      "Numeric.AD.Halley",
      "Numeric.AD.Internal.Dense",
      "Numeric.AD.Internal.Forward",
      "Numeric.AD.Internal.Forward.Double",
      "Numeric.AD.Internal.Identity",
      "Numeric.AD.Internal.Kahn",
      "Numeric.AD.Internal.On",
      "Numeric.AD.Internal.Or",
      "Numeric.AD.Internal.Reverse",
      "Numeric.AD.Internal.Sparse",
      "Numeric.AD.Internal.Tower",
      "Numeric.AD.Internal.Type",
      "Numeric.AD.Jacobian",
      "Numeric.AD.Jet",
      "Numeric.AD.Mode",
      "Numeric.AD.Mode.Forward",
      "Numeric.AD.Mode.Forward.Double",
      "Numeric.AD.Mode.Kahn",
      "Numeric.AD.Mode.Reverse",
      "Numeric.AD.Mode.Sparse",
      "Numeric.AD.Mode.Tower",
      "Numeric.AD.Newton",
      "Numeric.AD.Newton.Double",
      "Numeric.AD.Rank1.Forward",
      "Numeric.AD.Rank1.Forward.Double",
      "Numeric.AD.Rank1.Halley",
      "Numeric.AD.Rank1.Kahn",
      "Numeric.AD.Rank1.Newton",
      "Numeric.AD.Rank1.Newton.Double",
      "Numeric.AD.Rank1.Sparse",
      "Numeric.AD.Rank1.Tower"
    ],
    "name": "ad",
    "version": "4.3.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.Maybe",
        "Data.Traversable",
        "Prelude"
      ],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.State.Strict",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Function",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Template",
      "Data.Traversable",
      "Prelude"
    ],
    "modules": [
      "Data.Text.Template"
    ],
    "name": "template",
    "version": "0.2.0.10"
  },
  {
    "dependencies": {
      "Glob": [
        "System.FilePath.Glob"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "aeson-better-errors": [
        "Data.Aeson.BetterErrors"
      ],
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Version",
        "Numeric",
        "Prelude",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "Text.ParserCombinators.ReadP"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "bower-json": [
        "Web.Bower.PackageMeta"
      ],
      "boxes": [
        "Text.PrettyPrint.Boxes"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "clock": [],
      "containers": [
        "Data.Map",
        "Data.Map.Lazy",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "dlist": [],
      "edit-distance": [],
      "file-embed": [],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "fsnotify": [],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "http-client": [],
      "http-types": [],
      "language-javascript": [
        "Language.JavaScript.Parser",
        "Language.JavaScript.Parser.AST"
      ],
      "lifted-base": [
        "Control.Concurrent.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.State.Lazy",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Class",
        "Control.Monad.Writer.Strict"
      ],
      "network": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "parallel": [
        "Control.Parallel.Strategies"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Error",
        "Text.Parsec.Expr",
        "Text.Parsec.Pos",
        "Text.Parsec.Token"
      ],
      "pattern-arrows": [
        "Control.PatternArrows"
      ],
      "pipes": [
        "Pipes.Prelude"
      ],
      "pipes-http": [],
      "process": [
        "System.Process"
      ],
      "protolude": [],
      "purescript": [],
      "regex-tdfa": [],
      "safe": [
        "Safe"
      ],
      "semigroups": [],
      "sourcemap": [
        "SourceMap",
        "SourceMap.Types"
      ],
      "spdx": [
        "Data.SPDX"
      ],
      "split": [
        "Data.List.Split"
      ],
      "stm": [],
      "syb": [
        "Data.Generics"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": [],
      "unordered-containers": [],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ],
      "vector": [
        "Data.Vector"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-websockets": [
        "Network.Wai.Handler.WebSockets"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "websockets": [
        "Network.WebSockets"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent.Lifted",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.Supply",
      "Control.Monad.Supply.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Class",
      "Control.Monad.Writer.Strict",
      "Control.Parallel.Strategies",
      "Control.PatternArrows",
      "Ctags",
      "Data.Aeson",
      "Data.Aeson.BetterErrors",
      "Data.Aeson.TH",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Generics",
      "Data.Graph",
      "Data.IORef",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.List.Split",
      "Data.Map",
      "Data.Map.Lazy",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.SPDX",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time.Clock",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Vector",
      "Data.Version",
      "Etags",
      "Language.JavaScript.Parser",
      "Language.JavaScript.Parser.AST",
      "Language.PureScript",
      "Language.PureScript.AST",
      "Language.PureScript.AST.Binders",
      "Language.PureScript.AST.Declarations",
      "Language.PureScript.AST.Exported",
      "Language.PureScript.AST.Literals",
      "Language.PureScript.AST.Operators",
      "Language.PureScript.AST.SourcePos",
      "Language.PureScript.AST.Traversals",
      "Language.PureScript.Bundle",
      "Language.PureScript.CodeGen.JS",
      "Language.PureScript.CodeGen.JS.AST",
      "Language.PureScript.CodeGen.JS.Common",
      "Language.PureScript.CodeGen.JS.Optimizer",
      "Language.PureScript.CodeGen.JS.Optimizer.Blocks",
      "Language.PureScript.CodeGen.JS.Optimizer.Common",
      "Language.PureScript.CodeGen.JS.Optimizer.Inliner",
      "Language.PureScript.CodeGen.JS.Optimizer.MagicDo",
      "Language.PureScript.CodeGen.JS.Optimizer.TCO",
      "Language.PureScript.CodeGen.JS.Optimizer.Unused",
      "Language.PureScript.Comments",
      "Language.PureScript.Constants",
      "Language.PureScript.CoreFn",
      "Language.PureScript.CoreFn.Ann",
      "Language.PureScript.CoreFn.Binders",
      "Language.PureScript.CoreFn.Desugar",
      "Language.PureScript.CoreFn.Expr",
      "Language.PureScript.CoreFn.Meta",
      "Language.PureScript.CoreFn.Module",
      "Language.PureScript.CoreFn.Traversals",
      "Language.PureScript.Crash",
      "Language.PureScript.Docs",
      "Language.PureScript.Docs.AsMarkdown",
      "Language.PureScript.Docs.Convert",
      "Language.PureScript.Docs.Convert.ReExports",
      "Language.PureScript.Docs.Convert.Single",
      "Language.PureScript.Docs.ParseAndBookmark",
      "Language.PureScript.Docs.Render",
      "Language.PureScript.Docs.RenderedCode",
      "Language.PureScript.Docs.RenderedCode.Render",
      "Language.PureScript.Docs.RenderedCode.Types",
      "Language.PureScript.Docs.Types",
      "Language.PureScript.Docs.Utils.MonoidExtras",
      "Language.PureScript.Environment",
      "Language.PureScript.Errors",
      "Language.PureScript.Errors.JSON",
      "Language.PureScript.Externs",
      "Language.PureScript.Ide.CaseSplit",
      "Language.PureScript.Ide.Integration",
      "Language.PureScript.Interactive.Completion",
      "Language.PureScript.Interactive.Directive",
      "Language.PureScript.Interactive.Module",
      "Language.PureScript.Interactive.Types",
      "Language.PureScript.Kinds",
      "Language.PureScript.Linter",
      "Language.PureScript.Linter.Exhaustive",
      "Language.PureScript.Linter.Imports",
      "Language.PureScript.Make",
      "Language.PureScript.ModuleDependencies",
      "Language.PureScript.Names",
      "Language.PureScript.Options",
      "Language.PureScript.Parser",
      "Language.PureScript.Parser.Common",
      "Language.PureScript.Parser.Declarations",
      "Language.PureScript.Parser.Kinds",
      "Language.PureScript.Parser.Lexer",
      "Language.PureScript.Parser.State",
      "Language.PureScript.Parser.Types",
      "Language.PureScript.Pretty",
      "Language.PureScript.Pretty.Common",
      "Language.PureScript.Pretty.JS",
      "Language.PureScript.Pretty.Kinds",
      "Language.PureScript.Pretty.Types",
      "Language.PureScript.Pretty.Values",
      "Language.PureScript.Publish",
      "Language.PureScript.Publish.BoxesHelpers",
      "Language.PureScript.Publish.ErrorsWarnings",
      "Language.PureScript.Publish.Utils",
      "Language.PureScript.Renamer",
      "Language.PureScript.Sugar",
      "Language.PureScript.Sugar.BindingGroups",
      "Language.PureScript.Sugar.CaseDeclarations",
      "Language.PureScript.Sugar.DoNotation",
      "Language.PureScript.Sugar.Names",
      "Language.PureScript.Sugar.Names.Common",
      "Language.PureScript.Sugar.Names.Env",
      "Language.PureScript.Sugar.Names.Exports",
      "Language.PureScript.Sugar.Names.Imports",
      "Language.PureScript.Sugar.ObjectWildcards",
      "Language.PureScript.Sugar.Operators",
      "Language.PureScript.Sugar.Operators.Binders",
      "Language.PureScript.Sugar.Operators.Common",
      "Language.PureScript.Sugar.Operators.Expr",
      "Language.PureScript.Sugar.Operators.Types",
      "Language.PureScript.Sugar.TypeClasses",
      "Language.PureScript.Sugar.TypeClasses.Deriving",
      "Language.PureScript.Sugar.TypeDeclarations",
      "Language.PureScript.Traversals",
      "Language.PureScript.TypeChecker",
      "Language.PureScript.TypeChecker.Entailment",
      "Language.PureScript.TypeChecker.Kinds",
      "Language.PureScript.TypeChecker.Monad",
      "Language.PureScript.TypeChecker.Rows",
      "Language.PureScript.TypeChecker.Skolems",
      "Language.PureScript.TypeChecker.Subsumption",
      "Language.PureScript.TypeChecker.Synonyms",
      "Language.PureScript.TypeChecker.Types",
      "Language.PureScript.TypeChecker.Unify",
      "Language.PureScript.TypeClassDictionaries",
      "Language.PureScript.Types",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.WebSockets",
      "Network.WebSockets",
      "Numeric",
      "Options.Applicative",
      "Paths",
      "Pipes.Prelude",
      "Prelude",
      "Prelude.Compat",
      "PscIdeSpec",
      "Safe",
      "SourceMap",
      "SourceMap.Types",
      "System.Console.ANSI",
      "System.Console.Haskeline",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Glob",
      "System.FilePath.Posix",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.IO.Silently",
      "System.IO.UTF8",
      "System.Process",
      "Tags",
      "TestCompiler",
      "TestDocs",
      "Test.Hspec",
      "Test.HUnit",
      "TestPsci",
      "TestPscIde",
      "TestPscPublish",
      "TestUtils",
      "Text.Parsec",
      "Text.Parsec.Error",
      "Text.Parsec.Expr",
      "Text.Parsec.Pos",
      "Text.Parsec.Token",
      "Text.ParserCombinators.ReadP",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.PrettyPrint.Boxes",
      "Web.Bower.PackageMeta"
    ],
    "modules": [
      "Language.PureScript",
      "Language.PureScript.AST",
      "Language.PureScript.AST.Binders",
      "Language.PureScript.AST.Declarations",
      "Language.PureScript.AST.Operators",
      "Language.PureScript.AST.Literals",
      "Language.PureScript.AST.SourcePos",
      "Language.PureScript.AST.Traversals",
      "Language.PureScript.AST.Exported",
      "Language.PureScript.Bundle",
      "Language.PureScript.Crash",
      "Language.PureScript.Externs",
      "Language.PureScript.CodeGen",
      "Language.PureScript.CodeGen.JS",
      "Language.PureScript.CodeGen.JS.AST",
      "Language.PureScript.CodeGen.JS.Common",
      "Language.PureScript.CodeGen.JS.Optimizer",
      "Language.PureScript.CodeGen.JS.Optimizer.Blocks",
      "Language.PureScript.CodeGen.JS.Optimizer.Common",
      "Language.PureScript.CodeGen.JS.Optimizer.Inliner",
      "Language.PureScript.CodeGen.JS.Optimizer.MagicDo",
      "Language.PureScript.CodeGen.JS.Optimizer.TCO",
      "Language.PureScript.CodeGen.JS.Optimizer.Unused",
      "Language.PureScript.Constants",
      "Language.PureScript.CoreFn",
      "Language.PureScript.CoreFn.Ann",
      "Language.PureScript.CoreFn.Binders",
      "Language.PureScript.CoreFn.Desugar",
      "Language.PureScript.CoreFn.Expr",
      "Language.PureScript.CoreFn.Meta",
      "Language.PureScript.CoreFn.Module",
      "Language.PureScript.CoreFn.Traversals",
      "Language.PureScript.Comments",
      "Language.PureScript.Environment",
      "Language.PureScript.Errors",
      "Language.PureScript.Errors.JSON",
      "Language.PureScript.Kinds",
      "Language.PureScript.Linter",
      "Language.PureScript.Linter.Exhaustive",
      "Language.PureScript.Linter.Imports",
      "Language.PureScript.Make",
      "Language.PureScript.ModuleDependencies",
      "Language.PureScript.Names",
      "Language.PureScript.Options",
      "Language.PureScript.Parser",
      "Language.PureScript.Parser.Lexer",
      "Language.PureScript.Parser.Common",
      "Language.PureScript.Parser.Declarations",
      "Language.PureScript.Parser.Kinds",
      "Language.PureScript.Parser.State",
      "Language.PureScript.Parser.Types",
      "Language.PureScript.Pretty",
      "Language.PureScript.Pretty.Common",
      "Language.PureScript.Pretty.JS",
      "Language.PureScript.Pretty.Kinds",
      "Language.PureScript.Pretty.Types",
      "Language.PureScript.Pretty.Values",
      "Language.PureScript.Renamer",
      "Language.PureScript.Sugar",
      "Language.PureScript.Sugar.BindingGroups",
      "Language.PureScript.Sugar.CaseDeclarations",
      "Language.PureScript.Sugar.DoNotation",
      "Language.PureScript.Sugar.Names",
      "Language.PureScript.Sugar.Names.Common",
      "Language.PureScript.Sugar.Names.Env",
      "Language.PureScript.Sugar.Names.Exports",
      "Language.PureScript.Sugar.Names.Imports",
      "Language.PureScript.Sugar.ObjectWildcards",
      "Language.PureScript.Sugar.Operators",
      "Language.PureScript.Sugar.Operators.Common",
      "Language.PureScript.Sugar.Operators.Expr",
      "Language.PureScript.Sugar.Operators.Binders",
      "Language.PureScript.Sugar.Operators.Types",
      "Language.PureScript.Sugar.TypeClasses",
      "Language.PureScript.Sugar.TypeClasses.Deriving",
      "Language.PureScript.Sugar.TypeDeclarations",
      "Language.PureScript.Traversals",
      "Language.PureScript.TypeChecker",
      "Language.PureScript.TypeChecker.Entailment",
      "Language.PureScript.TypeChecker.Kinds",
      "Language.PureScript.TypeChecker.Monad",
      "Language.PureScript.TypeChecker.Rows",
      "Language.PureScript.TypeChecker.Skolems",
      "Language.PureScript.TypeChecker.Subsumption",
      "Language.PureScript.TypeChecker.Synonyms",
      "Language.PureScript.TypeChecker.Types",
      "Language.PureScript.TypeChecker.Unify",
      "Language.PureScript.TypeClassDictionaries",
      "Language.PureScript.Types",
      "Language.PureScript.Docs",
      "Language.PureScript.Docs.Convert",
      "Language.PureScript.Docs.Convert.Single",
      "Language.PureScript.Docs.Convert.ReExports",
      "Language.PureScript.Docs.Render",
      "Language.PureScript.Docs.Types",
      "Language.PureScript.Docs.RenderedCode",
      "Language.PureScript.Docs.RenderedCode.Types",
      "Language.PureScript.Docs.RenderedCode.Render",
      "Language.PureScript.Docs.AsMarkdown",
      "Language.PureScript.Docs.ParseAndBookmark",
      "Language.PureScript.Docs.Utils.MonoidExtras",
      "Language.PureScript.Publish",
      "Language.PureScript.Publish.Utils",
      "Language.PureScript.Publish.ErrorsWarnings",
      "Language.PureScript.Publish.BoxesHelpers",
      "Language.PureScript.Ide",
      "Language.PureScript.Ide.CaseSplit",
      "Language.PureScript.Ide.Command",
      "Language.PureScript.Ide.Completion",
      "Language.PureScript.Ide.Conversions",
      "Language.PureScript.Ide.Externs",
      "Language.PureScript.Ide.Error",
      "Language.PureScript.Ide.Imports",
      "Language.PureScript.Ide.Filter",
      "Language.PureScript.Ide.Matcher",
      "Language.PureScript.Ide.Pursuit",
      "Language.PureScript.Ide.Rebuild",
      "Language.PureScript.Ide.Reexports",
      "Language.PureScript.Ide.SourceFile",
      "Language.PureScript.Ide.State",
      "Language.PureScript.Ide.Types",
      "Language.PureScript.Ide.Util",
      "Language.PureScript.Ide.Watcher",
      "Language.PureScript.Interactive",
      "Language.PureScript.Interactive.Types",
      "Language.PureScript.Interactive.Parser",
      "Language.PureScript.Interactive.Directive",
      "Language.PureScript.Interactive.Completion",
      "Language.PureScript.Interactive.IO",
      "Language.PureScript.Interactive.Message",
      "Language.PureScript.Interactive.Module",
      "Language.PureScript.Interactive.Printer",
      "Control.Monad.Logger",
      "Control.Monad.Supply",
      "Control.Monad.Supply.Class",
      "System.IO.UTF8"
    ],
    "name": "purescript",
    "version": "0.9.3"
  },
  {
    "dependencies": {
      "HDBC": [
        "Database.HDBC"
      ],
      "HDBC-session": [
        "Database.HDBC.Session"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "convertible": [
        "Data.Convertible"
      ],
      "dlist": [
        "Data.DList"
      ],
      "names-th": [
        "Language.Haskell.TH.Lib.Extra",
        "Language.Haskell.TH.Name.CamelCase"
      ],
      "persistable-record": [
        "Database.Record",
        "Database.Record.FromSql",
        "Database.Record.Instances",
        "Database.Record.Persistable",
        "Database.Record.TH",
        "Database.Record.ToSql"
      ],
      "relational-query": [
        "Database.Relational.Query",
        "Database.Relational.Query.SQL",
        "Database.Relational.Query.TH"
      ],
      "relational-schemas": [
        "Database.Relational.Schema.DB2Syscat.Columns",
        "Database.Relational.Schema.IBMDB2",
        "Database.Relational.Schema.MySQLInfo.Columns",
        "Database.Relational.Schema.Oracle",
        "Database.Relational.Schema.OracleDataDictionary.TabColumns",
        "Database.Relational.Schema.PgCatalog.PgAttribute",
        "Database.Relational.Schema.PgCatalog.PgType",
        "Database.Relational.Schema.PostgreSQL",
        "Database.Relational.Schema.SQLite3",
        "Database.Relational.Schema.SQLite3Syscat.IndexInfo",
        "Database.Relational.Schema.SQLite3Syscat.IndexList",
        "Database.Relational.Schema.SQLite3Syscat.TableInfo",
        "Database.Relational.Schema.SQLServer",
        "Database.Relational.Schema.SQLServerSyscat.Columns",
        "Database.Relational.Schema.SQLServerSyscat.Types"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "th-data-compat": [
        "Language.Haskell.TH.Compat.Data"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Maybe",
      "Database.HDBC",
      "Database.HDBC.Record.Delete",
      "Database.HDBC.Record.Insert",
      "Database.HDBC.Record.InsertQuery",
      "Database.HDBC.Record.InternalTH",
      "Database.HDBC.Record.KeyUpdate",
      "Database.HDBC.Record.Persistable",
      "Database.HDBC.Record.Query",
      "Database.HDBC.Record.Statement",
      "Database.HDBC.Record.TH",
      "Database.HDBC.Record.Update",
      "Database.HDBC.Schema.Driver",
      "Database.HDBC.Session",
      "Database.HDBC.SqlValueExtra",
      "Database.Record",
      "Database.Record.FromSql",
      "Database.Record.Instances",
      "Database.Record.Persistable",
      "Database.Record.TH",
      "Database.Record.ToSql",
      "Database.Relational.Query",
      "Database.Relational.Query.SQL",
      "Database.Relational.Query.TH",
      "Database.Relational.Schema.DB2Syscat.Columns",
      "Database.Relational.Schema.IBMDB2",
      "Database.Relational.Schema.MySQLInfo.Columns",
      "Database.Relational.Schema.Oracle",
      "Database.Relational.Schema.OracleDataDictionary.TabColumns",
      "Database.Relational.Schema.PgCatalog.PgAttribute",
      "Database.Relational.Schema.PgCatalog.PgType",
      "Database.Relational.Schema.PostgreSQL",
      "Database.Relational.Schema.SQLite3",
      "Database.Relational.Schema.SQLite3Syscat.IndexInfo",
      "Database.Relational.Schema.SQLite3Syscat.IndexList",
      "Database.Relational.Schema.SQLite3Syscat.TableInfo",
      "Database.Relational.Schema.SQLServer",
      "Database.Relational.Schema.SQLServerSyscat.Columns",
      "Database.Relational.Schema.SQLServerSyscat.Types",
      "Data.Char",
      "Data.Convertible",
      "Data.DList",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Compat.Data",
      "Language.Haskell.TH.Lib.Extra",
      "Language.Haskell.TH.Name.CamelCase",
      "Prelude"
    ],
    "modules": [
      "Database.HDBC.Record.Persistable",
      "Database.HDBC.Record.TH",
      "Database.HDBC.Record.Statement",
      "Database.HDBC.Record.Query",
      "Database.HDBC.Record.Update",
      "Database.HDBC.Record.Insert",
      "Database.HDBC.Record.InsertQuery",
      "Database.HDBC.Record.Delete",
      "Database.HDBC.Record.KeyUpdate",
      "Database.HDBC.Record",
      "Database.HDBC.Query.TH",
      "Database.HDBC.SqlValueExtra",
      "Database.HDBC.Schema.Driver",
      "Database.HDBC.Schema.IBMDB2",
      "Database.HDBC.Schema.PostgreSQL",
      "Database.HDBC.Schema.SQLServer",
      "Database.HDBC.Schema.SQLite3",
      "Database.HDBC.Schema.Oracle",
      "Database.HDBC.Schema.MySQL"
    ],
    "name": "relational-query-HDBC",
    "version": "0.6.0.2"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.HTTP"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Version",
        "GHC.Stats",
        "Numeric",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "cmdargs": [
        "System.Console.CmdArgs",
        "System.Console.CmdArgs.Verbosity"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "direct-sqlite": [
        "Database.SQLite3"
      ],
      "directory": [
        "System.Directory"
      ],
      "disk-free-space": [
        "System.DiskSpace"
      ],
      "extra": [
        "Control.Concurrent.Extra",
        "Control.Exception.Extra",
        "Control.Monad.Extra",
        "Data.Either.Extra",
        "Data.List.Extra",
        "Data.Tuple.Extra",
        "Numeric.Extra",
        "System.Directory.Extra",
        "System.Environment.Extra",
        "System.IO.Extra",
        "System.Time.Extra"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "safe": [
        "Safe"
      ],
      "shake": [
        "Development.Shake.Command",
        "Development.Shake.FilePath"
      ],
      "smtp-mail": [
        "Network.Mail.SMTP"
      ],
      "sqlite-simple": [
        "Database.SQLite.Simple",
        "Database.SQLite.Simple.FromField",
        "Database.SQLite.Simple.ToField"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.Format"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wai": [
        "Network.Wai"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Extra",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Extra",
      "Control.Monad",
      "Control.Monad.Extra",
      "Data.Aeson",
      "Database.SQLite3",
      "Database.SQLite.Simple",
      "Database.SQLite.Simple.FromField",
      "Database.SQLite.Simple.ToField",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Either.Extra",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.List.Extra",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Profunctor.Product.TH",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Tuple.Extra",
      "Data.Typeable",
      "Data.Version",
      "Development.Bake",
      "Development.Bake.Build",
      "Development.Bake.Core.Args",
      "Development.Bake.Core.Client",
      "Development.Bake.Core.GC",
      "Development.Bake.Core.Message",
      "Development.Bake.Core.Run",
      "Development.Bake.Core.Send",
      "Development.Bake.Core.Type",
      "Development.Bake.Email",
      "Development.Bake.Git",
      "Development.Bake.Pretty",
      "Development.Bake.Server.Brain",
      "Development.Bake.Server.Database",
      "Development.Bake.Server.Memory",
      "Development.Bake.Server.Property",
      "Development.Bake.Server.Start",
      "Development.Bake.Server.Stats",
      "Development.Bake.Server.Store",
      "Development.Bake.Server.Web",
      "Development.Bake.StepGit",
      "Development.Bake.Test.Simulate",
      "Development.Shake.Command",
      "Development.Shake.FilePath",
      "Example",
      "General.Database",
      "General.Extra",
      "General.HTML",
      "General.Web",
      "GHC.Stats",
      "Network.HTTP",
      "Network.HTTP.Types.Status",
      "Network.Mail.SMTP",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Numeric",
      "Numeric.Extra",
      "Opaleye",
      "Opaleye.Internal.RunQuery",
      "Paths",
      "Prelude",
      "Safe",
      "System.Console.CmdArgs",
      "System.Console.CmdArgs.Verbosity",
      "System.Directory",
      "System.Directory.Extra",
      "System.DiskSpace",
      "System.Environment.Extra",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Extra",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Process",
      "System.Random",
      "System.Time.Extra"
    ],
    "modules": [
      "Development.Bake"
    ],
    "name": "bake",
    "version": "0.4"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Data.Dynamic",
      "Data.Typeable",
      "Prelude",
      "System.Exit",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Control.Exception.Extensible"
    ],
    "name": "extensible-exceptions",
    "version": "0.1.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "System.IO",
        "Text.Read"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "parsec": [
        "Text.Parsec.Text",
        "Text.ParserCombinators.Parsec"
      ],
      "text": [
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.State",
      "Data.AppSettings",
      "Data.AppSettingsInternal",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Serialization",
      "Data.Text.IO",
      "Data.Typeable",
      "System.Directory",
      "System.IO",
      "Test.Hspec",
      "Test.HUnit",
      "Text.Parsec.Text",
      "Text.ParserCombinators.Parsec",
      "Text.Read"
    ],
    "modules": [
      "Data.AppSettings"
    ],
    "name": "app-settings",
    "version": "0.2.0.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Fixed",
        "Prelude"
      ],
      "lens": [
        "Control.Lens"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.LocalTime"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Data.Fixed",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.LocalTime",
      "Prelude"
    ],
    "modules": [
      "Data.Time.Lens"
    ],
    "name": "lens-datetime",
    "version": "0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Coerce",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Type.Bool",
        "Data.Type.Equality",
        "GHC.Exts",
        "Prelude",
        "Text.Read"
      ],
      "containers": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "lens": [
        "Control.Lens"
      ],
      "linear": [
        "Linear",
        "Linear.Affine"
      ],
      "mtl": [],
      "multimap": [],
      "singletons": [
        "Data.Singletons",
        "Data.Singletons.Prelude",
        "Data.Singletons.TH"
      ],
      "syb": [
        "Data.Generics"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "th-desugar": [
        "Language.Haskell.TH.Desugar",
        "Language.Haskell.TH.Desugar.Expand",
        "Language.Haskell.TH.Desugar.Lift"
      ],
      "units-parser": [
        "Text.Parse.Units"
      ],
      "vector-space": [
        "Data.AffineSpace",
        "Data.Cross",
        "Data.VectorSpace"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Lens",
      "Control.Monad",
      "Data.AffineSpace",
      "Data.Coerce",
      "Data.Constants.Math",
      "Data.Cross",
      "Data.Dimensions.SI",
      "Data.Foldable",
      "Data.Generics",
      "Data.List",
      "Data.Maybe",
      "Data.Metrology",
      "Data.Metrology.Combinators",
      "Data.Metrology.Dimensions",
      "Data.Metrology.Factor",
      "Data.Metrology.Internal",
      "Data.Metrology.LCSU",
      "Data.Metrology.Parser",
      "Data.Metrology.Poly",
      "Data.Metrology.Qu",
      "Data.Metrology.Quantity",
      "Data.Metrology.Set",
      "Data.Metrology.Show",
      "Data.Metrology.SI",
      "Data.Metrology.SI.Mono",
      "Data.Metrology.SI.MonoTypes",
      "Data.Metrology.SI.Poly",
      "Data.Metrology.SI.PolyTypes",
      "Data.Metrology.TH",
      "Data.Metrology.Units",
      "Data.Metrology.Validity",
      "Data.Metrology.Vector",
      "Data.Metrology.Z",
      "Data.Proxy",
      "Data.Singletons",
      "Data.Singletons.Prelude",
      "Data.Singletons.TH",
      "Data.Traversable",
      "Data.Type.Bool",
      "Data.Type.Equality",
      "Data.Units.CGS",
      "Data.Units.SI",
      "Data.Units.SI.Parser",
      "Data.Units.SI.Prefixes",
      "Data.Units.US",
      "Data.Units.US.Avoirdupois",
      "Data.Units.US.Liquid",
      "Data.Units.US.Misc",
      "Data.Units.US.Survey",
      "Data.Units.US.Troy",
      "Data.VectorSpace",
      "GHC.Exts",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Desugar",
      "Language.Haskell.TH.Desugar.Expand",
      "Language.Haskell.TH.Desugar.Lift",
      "Language.Haskell.TH.Quote",
      "Linear",
      "Linear.Affine",
      "Prelude",
      "Test.HUnit.Approx",
      "Tests.Compile.CGS",
      "Tests.Compile.EvalType",
      "Tests.Compile.Lcsu",
      "Tests.Compile.MetrologySynonyms",
      "Tests.Compile.NoVector",
      "Tests.Compile.Physics",
      "Tests.Compile.Quantity",
      "Tests.Compile.Readme",
      "Tests.Compile.Simulator",
      "Tests.Compile.T23",
      "Tests.Compile.TH",
      "Tests.Compile.UnitParser",
      "Tests.Compile.UnitParser.Quoters",
      "Tests.Compile.Units",
      "Tests.Imperial",
      "Tests.LennardJones",
      "Tests.Linearity",
      "Tests.OffSystemAdd",
      "Tests.OffSystemCSU",
      "Tests.Parser",
      "Tests.PhysicalConstants",
      "Tests.Show",
      "Tests.Travel",
      "Tests.Vector",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Text.Parse.Units",
      "Text.Read"
    ],
    "modules": [
      "Data.Metrology",
      "Data.Metrology.Internal",
      "Data.Metrology.Show",
      "Data.Metrology.Unsafe",
      "Data.Metrology.Z",
      "Data.Metrology.Set",
      "Data.Metrology.Vector",
      "Data.Metrology.Linear",
      "Data.Metrology.Parser",
      "Data.Metrology.Poly",
      "Data.Metrology.TH",
      "Data.Metrology.Quantity"
    ],
    "name": "units",
    "version": "2.4"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Debugger",
      "Network.Google.Debugger.Types",
      "Network.Google.Resource.CloudDebugger.Controller.Debuggees.Breakpoints.List",
      "Network.Google.Resource.CloudDebugger.Controller.Debuggees.Breakpoints.Update",
      "Network.Google.Resource.CloudDebugger.Controller.Debuggees.Register",
      "Network.Google.Resource.CloudDebugger.Debugger.Debuggees.Breakpoints.Delete",
      "Network.Google.Resource.CloudDebugger.Debugger.Debuggees.Breakpoints.Get",
      "Network.Google.Resource.CloudDebugger.Debugger.Debuggees.Breakpoints.List",
      "Network.Google.Resource.CloudDebugger.Debugger.Debuggees.Breakpoints.Set",
      "Network.Google.Resource.CloudDebugger.Debugger.Debuggees.List"
    ],
    "name": "gogol-debugger",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Type.Bool",
        "GHC.TypeLits"
      ],
      "singletons": [
        "Data.Singletons"
      ]
    },
    "imports": [
      "Data.Singletons",
      "Data.Type.Bool",
      "GHC.TypeLits"
    ],
    "modules": [
      "Data.Type.List"
    ],
    "name": "type-list",
    "version": "0.5.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.GroupsSettings",
      "Network.Google.GroupsSettings.Types",
      "Network.Google.Resource.GroupsSettings.Groups.Get",
      "Network.Google.Resource.GroupsSettings.Groups.Patch",
      "Network.Google.Resource.GroupsSettings.Groups.Update"
    ],
    "name": "gogol-groups-settings",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Monoid"
      ],
      "containers": [
        "Data.Set"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar.Easter"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.List",
      "Data.Monoid",
      "Data.Set",
      "Data.Time",
      "Data.Time.Calendar.BankHoliday.EnglandAndWales",
      "Data.Time.Calendar.Easter",
      "Spec",
      "Test.Hspec",
      "Test.Hspec.Runner",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Time.Calendar.BankHoliday.EnglandAndWales"
    ],
    "name": "bank-holidays-england",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "base": [
        "System.CPUTime",
        "Text.Printf"
      ]
    },
    "imports": [
      "System.CPUTime",
      "Text.Printf"
    ],
    "modules": [
      "System.TimeIt"
    ],
    "name": "timeit",
    "version": "1.0.0.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.DirectConnect",
      "Test.AWS.DirectConnect",
      "Test.AWS.DirectConnect.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.DirectConnect",
      "Network.AWS.DirectConnect.AllocateConnectionOnInterconnect",
      "Network.AWS.DirectConnect.AllocatePrivateVirtualInterface",
      "Network.AWS.DirectConnect.AllocatePublicVirtualInterface",
      "Network.AWS.DirectConnect.ConfirmConnection",
      "Network.AWS.DirectConnect.ConfirmPrivateVirtualInterface",
      "Network.AWS.DirectConnect.ConfirmPublicVirtualInterface",
      "Network.AWS.DirectConnect.CreateConnection",
      "Network.AWS.DirectConnect.CreateInterconnect",
      "Network.AWS.DirectConnect.CreatePrivateVirtualInterface",
      "Network.AWS.DirectConnect.CreatePublicVirtualInterface",
      "Network.AWS.DirectConnect.DeleteConnection",
      "Network.AWS.DirectConnect.DeleteInterconnect",
      "Network.AWS.DirectConnect.DeleteVirtualInterface",
      "Network.AWS.DirectConnect.DescribeConnections",
      "Network.AWS.DirectConnect.DescribeConnectionsOnInterconnect",
      "Network.AWS.DirectConnect.DescribeInterconnects",
      "Network.AWS.DirectConnect.DescribeLocations",
      "Network.AWS.DirectConnect.DescribeVirtualGateways",
      "Network.AWS.DirectConnect.DescribeVirtualInterfaces",
      "Network.AWS.DirectConnect.Types",
      "Network.AWS.DirectConnect.Waiters"
    ],
    "name": "amazonka-directconnect",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "RefSerialize": [
        "Data.RefSerialize"
      ],
      "TCache": [
        "Data.Persistent.Collection",
        "Data.Persistent.IDynamic",
        "Data.TCache",
        "Data.TCache.Defs"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Debug.Trace",
        "GHC.Base",
        "GHC.Conc",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem.StableName",
        "Unsafe.Coerce"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "old-time": [
        "System.Time"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Trans",
      "Control.Workflow",
      "Control.Workflow.Patterns",
      "Control.Workflow.Stat",
      "Data.Binary",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Persistent.Collection",
      "Data.Persistent.IDynamic",
      "Data.RefSerialize",
      "Data.TCache",
      "Data.TCache.Defs",
      "Data.Typeable",
      "Data.Vector",
      "Debug.Trace",
      "GHC.Base",
      "GHC.Conc",
      "Prelude",
      "System.Directory",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "System.Time",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Workflow",
      "Control.Workflow.Configuration",
      "Control.Workflow.Patterns",
      "Control.Workflow.Stat"
    ],
    "name": "Workflow",
    "version": "0.8.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.ST"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.STRef",
        "Data.Traversable",
        "Prelude",
        "Text.Printf",
        "Text.Show.Functions"
      ],
      "containers": [
        "Data.IntMap"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Array",
      "Data.Array.ST",
      "Data.Clustering.Hierarchical",
      "Data.Clustering.Hierarchical.Internal.DistanceMatrix",
      "Data.Clustering.Hierarchical.Internal.Optimal",
      "Data.Clustering.Hierarchical.Internal.Types",
      "Data.Foldable",
      "Data.Function",
      "Data.IntMap",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.STRef",
      "Data.Traversable",
      "Prelude",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Printf",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.Clustering.Hierarchical",
      "Data.Clustering.Hierarchical.Internal.DistanceMatrix",
      "Data.Clustering.Hierarchical.Internal.Optimal",
      "Data.Clustering.Hierarchical.Internal.Types"
    ],
    "name": "hierarchical-clustering",
    "version": "0.4.6"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "GHC.Conc",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.Posix.Types",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "containers": [],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Monad.Trans.Reader"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Reader",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Restricted",
      "Data.String",
      "Data.Time.Clock",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "GHC.Conc",
      "GHC.Generics",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Posix.Types",
      "System.ZMQ4",
      "System.ZMQ4.Internal",
      "System.ZMQ4.Internal.Base",
      "System.ZMQ4.Internal.Error",
      "System.ZMQ4.Monadic",
      "System.ZMQ4.Test.Properties",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Data.Restricted",
      "System.ZMQ4",
      "System.ZMQ4.Monadic",
      "System.ZMQ4.Internal",
      "System.ZMQ4.Internal.Base",
      "System.ZMQ4.Internal.Error"
    ],
    "name": "zeromq4-haskell",
    "version": "0.6.5"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable"
      ],
      "containers": [
        "Data.Map"
      ],
      "data-default-class": [],
      "lens": [],
      "linear": []
    },
    "imports": [
      "Data.Foldable",
      "Data.Map"
    ],
    "modules": [
      "Physics.ForceLayout"
    ],
    "name": "force-layout",
    "version": "0.4.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Maybe",
        "System.Mem.Weak"
      ],
      "containers": [],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Data.IORef",
      "Data.Maybe",
      "System.Mem.Weak"
    ],
    "modules": [
      "FRP.Elerea",
      "FRP.Elerea.Simple",
      "FRP.Elerea.Simple.Pure",
      "FRP.Elerea.Param"
    ],
    "name": "elerea",
    "version": "2.9.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Tuple"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Tuple"
    ],
    "modules": [
      "Network.IRC.CTCP"
    ],
    "name": "irc-ctcp",
    "version": "0.1.3.0"
  },
  {
    "dependencies": {
      "base": [],
      "directory": [],
      "enclosed-exceptions": [],
      "http-types": [],
      "lifted-base": [],
      "process": [],
      "temporary": [],
      "text": [],
      "wai": [],
      "yesod-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Yesod.GitRepo"
    ],
    "name": "yesod-gitrepo",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "GHC.Generics",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "GHC.Generics",
      "Prelude"
    ],
    "modules": [
      "Data.ISO3166_CountryCodes"
    ],
    "name": "iso3166-country-codes",
    "version": "0.20140203.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Foreign.C.String",
        "Foreign.Marshal.Alloc",
        "System.Environment",
        "System.IO.Unsafe",
        "System.Posix.Internals",
        "Text.Read"
      ],
      "containers": [
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "dlist": [
        "Data.DList"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Bits",
      "Data.Char",
      "Data.DList",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Set",
      "Foreign.C.String",
      "Foreign.Marshal.Alloc",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.FilePath.Glob.Base",
      "System.FilePath.Glob.Directory",
      "System.FilePath.Glob.Match",
      "System.FilePath.Glob.Simplify",
      "System.FilePath.Glob.Utils",
      "System.IO.Unsafe",
      "System.Posix.Internals",
      "System.Win32.File",
      "System.Win32.Types",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit.Base",
      "Test.QuickCheck",
      "Tests.Base",
      "Tests.Compiler",
      "Tests.Instances",
      "Tests.Matcher",
      "Tests.Optimizer",
      "Tests.Regression",
      "Tests.Simplifier",
      "Tests.Utils",
      "Text.Read"
    ],
    "modules": [
      "System.FilePath.Glob",
      "System.FilePath.Glob.Primitive"
    ],
    "name": "Glob",
    "version": "0.7.12"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Monad",
        "Data.List",
        "Data.Ord",
        "GHC.Generics"
      ],
      "linear": [
        "Linear"
      ],
      "text": [
        "Data.Text"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Aeson",
      "Data.List",
      "Data.Ord",
      "Data.Spline.Curve",
      "Data.Spline.Key",
      "Data.Text",
      "Data.Vector",
      "GHC.Generics",
      "Linear"
    ],
    "modules": [
      "Data.Spline",
      "Data.Spline.Curve",
      "Data.Spline.Key"
    ],
    "name": "smoothie",
    "version": "0.4.2.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AdSense",
      "Network.Google.AdSense.Types",
      "Network.Google.Resource.AdSense.Accounts.AdClients.List",
      "Network.Google.Resource.AdSense.Accounts.AdUnits.CustomChannels.List",
      "Network.Google.Resource.AdSense.Accounts.AdUnits.Get",
      "Network.Google.Resource.AdSense.Accounts.AdUnits.GetAdCode",
      "Network.Google.Resource.AdSense.Accounts.AdUnits.List",
      "Network.Google.Resource.AdSense.Accounts.Alerts.Delete",
      "Network.Google.Resource.AdSense.Accounts.Alerts.List",
      "Network.Google.Resource.AdSense.Accounts.CustomChannels.AdUnits.List",
      "Network.Google.Resource.AdSense.Accounts.CustomChannels.Get",
      "Network.Google.Resource.AdSense.Accounts.CustomChannels.List",
      "Network.Google.Resource.AdSense.Accounts.Get",
      "Network.Google.Resource.AdSense.Accounts.List",
      "Network.Google.Resource.AdSense.Accounts.Payments.List",
      "Network.Google.Resource.AdSense.Accounts.Reports.Generate",
      "Network.Google.Resource.AdSense.Accounts.Reports.Saved.Generate",
      "Network.Google.Resource.AdSense.Accounts.Reports.Saved.List",
      "Network.Google.Resource.AdSense.Accounts.Savedadstyles.Get",
      "Network.Google.Resource.AdSense.Accounts.Savedadstyles.List",
      "Network.Google.Resource.AdSense.Accounts.URLChannels.List",
      "Network.Google.Resource.AdSense.AdClients.List",
      "Network.Google.Resource.AdSense.AdUnits.CustomChannels.List",
      "Network.Google.Resource.AdSense.AdUnits.Get",
      "Network.Google.Resource.AdSense.AdUnits.GetAdCode",
      "Network.Google.Resource.AdSense.AdUnits.List",
      "Network.Google.Resource.AdSense.Alerts.Delete",
      "Network.Google.Resource.AdSense.Alerts.List",
      "Network.Google.Resource.AdSense.CustomChannels.AdUnits.List",
      "Network.Google.Resource.AdSense.CustomChannels.Get",
      "Network.Google.Resource.AdSense.CustomChannels.List",
      "Network.Google.Resource.AdSense.Metadata.Dimensions.List",
      "Network.Google.Resource.AdSense.Metadata.Metrics.List",
      "Network.Google.Resource.AdSense.Payments.List",
      "Network.Google.Resource.AdSense.Reports.Generate",
      "Network.Google.Resource.AdSense.Reports.Saved.Generate",
      "Network.Google.Resource.AdSense.Reports.Saved.List",
      "Network.Google.Resource.AdSense.Savedadstyles.Get",
      "Network.Google.Resource.AdSense.Savedadstyles.List",
      "Network.Google.Resource.AdSense.URLChannels.List"
    ],
    "name": "gogol-adsense",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.Spectrum.Paws.GetSpectrum",
      "Network.Google.Resource.Spectrum.Paws.GetSpectrumBatch",
      "Network.Google.Resource.Spectrum.Paws.Init",
      "Network.Google.Resource.Spectrum.Paws.NotifySpectrumUse",
      "Network.Google.Resource.Spectrum.Paws.Register",
      "Network.Google.Resource.Spectrum.Paws.VerifyDevice",
      "Network.Google.Spectrum",
      "Network.Google.Spectrum.Types"
    ],
    "name": "gogol-spectrum",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Int",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except"
      ],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple",
        "Database.PostgreSQL.Simple.SqlQQ",
        "Database.PostgreSQL.Simple.Types"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "users": [
        "Web.Users.Types"
      ],
      "uuid": [
        "Data.UUID"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Database.PostgreSQL.Simple",
      "Database.PostgreSQL.Simple.SqlQQ",
      "Database.PostgreSQL.Simple.Types",
      "Data.ByteString.Char8",
      "Data.Int",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Time.Clock",
      "Data.UUID",
      "Test.Hspec",
      "Web.Users.Postgresql",
      "Web.Users.TestSpec",
      "Web.Users.Types"
    ],
    "modules": [
      "Web.Users.Postgresql"
    ],
    "name": "users-postgresql-simple",
    "version": "0.5.0.2"
  },
  {
    "dependencies": {
      "atomic-primops": [
        "Data.Atomics",
        "Data.Atomics.Counter"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Traversable",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Writer.Strict"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.Trans.Class",
      "Control.Monad.Writer.Strict",
      "Criterion.Main",
      "Data.Atomics",
      "Data.Atomics.Counter",
      "Data.ByteString",
      "Data.ByteString.UTF8",
      "Data.Foldable",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map.Strict",
      "Data.Time.Clock",
      "Data.Traversable",
      "Prometheus",
      "Prometheus.Export.Text",
      "Prometheus.Info",
      "Prometheus.Label",
      "Prometheus.Metric",
      "Prometheus.Metric.Counter",
      "Prometheus.Metric.Gauge",
      "Prometheus.Metric.Summary",
      "Prometheus.Metric.Vector",
      "Prometheus.MonadMonitor",
      "Prometheus.Registry",
      "System.IO.Unsafe",
      "System.Random",
      "Test.DocTest"
    ],
    "modules": [
      "Prometheus"
    ],
    "name": "prometheus-client",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Int",
        "Data.Maybe",
        "Data.Traversable",
        "Data.Word",
        "Prelude"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "connection": [],
      "either": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-async": [
        "Control.Concurrent.Async.Lifted"
      ],
      "lifted-base": [
        "Control.Concurrent.Lifted",
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "network": [
        "Network.Socket"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Read"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async.Lifted",
      "Control.Concurrent.Lifted",
      "Control.Concurrent.STM",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.Int",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Read",
      "Data.Traversable",
      "Data.Word",
      "Network.Consul",
      "Network.Consul.Internal",
      "Network.Consul.Types",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Network.Socket",
      "Prelude",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Network.Consul",
      "Network.Consul.Internal",
      "Network.Consul.Types"
    ],
    "name": "consul-haskell",
    "version": "0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.List",
        "Data.Traversable",
        "Prelude"
      ],
      "binary": [
        "Data.Binary"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Binary",
      "Data.Foldable",
      "Data.List",
      "Data.List.PointedList",
      "Data.Traversable",
      "Prelude"
    ],
    "modules": [
      "Data.List.PointedList",
      "Data.List.PointedList.Circular"
    ],
    "name": "pointedlist",
    "version": "0.6.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Text"
      ],
      "Decimal": [
        "Data.Decimal"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "hledger-lib": [
        "Hledger.Data",
        "Hledger.Query",
        "Hledger.Read"
      ],
      "mtl": [
        "Control.Monad.RWS"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Calendar.OrdinalDate"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.RWS",
      "Data.Decimal",
      "Data.List",
      "Data.Maybe",
      "Data.Ord",
      "Data.Time.Calendar",
      "Data.Time.Calendar.OrdinalDate",
      "Distribution.Text",
      "Hledger.Data",
      "Hledger.Interest",
      "Hledger.Interest.DayCountConvention",
      "Hledger.Interest.Rate",
      "Hledger.Query",
      "Hledger.Read",
      "Paths",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.IO"
    ],
    "modules": [],
    "name": "hledger-interest",
    "version": "1.4.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "th-extras": [
        "Language.Haskell.TH.Extras"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Class",
      "Control.Applicative",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.Char",
      "Data.Foldable",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Extras",
      "Language.Haskell.TH.FlexibleDefaults",
      "Language.Haskell.TH.FlexibleDefaults.DSL",
      "Language.Haskell.TH.FlexibleDefaults.Solve",
      "Prelude"
    ],
    "modules": [
      "Language.Haskell.TH.FlexibleDefaults"
    ],
    "name": "flexible-defaults",
    "version": "0.0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Category",
      "Control.Monad",
      "Prelude"
    ],
    "modules": [
      "Control.Arrow.SP"
    ],
    "name": "streamproc",
    "version": "1.6.2"
  },
  {
    "dependencies": {
      "JuicyPixels": [],
      "array": [
        "Data.Array.MArray"
      ],
      "base": [
        "Data.Foldable"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "cairo": [
        "Graphics.Rendering.Cairo",
        "Graphics.Rendering.Cairo.Matrix"
      ],
      "colour": [],
      "containers": [],
      "data-default-class": [],
      "diagrams-core": [],
      "diagrams-lib": [
        "Diagrams.BoundingBox"
      ],
      "filepath": [],
      "hashable": [],
      "lens": [],
      "mtl": [],
      "optparse-applicative": [],
      "pango": [
        "Graphics.Rendering.Pango"
      ],
      "split": [],
      "statestack": [
        "Control.Monad.StateStack"
      ],
      "transformers": [],
      "vector": []
    },
    "imports": [
      "Control.Monad.StateStack",
      "Data.Array.MArray",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Diagrams.BoundingBox",
      "Graphics.Rendering.Cairo",
      "Graphics.Rendering.Cairo.Matrix",
      "Graphics.Rendering.Pango"
    ],
    "modules": [
      "Diagrams.Backend.Cairo",
      "Diagrams.Backend.Cairo.CmdLine",
      "Diagrams.Backend.Cairo.Internal",
      "Diagrams.Backend.Cairo.List",
      "Diagrams.Backend.Cairo.Ptr",
      "Diagrams.Backend.Cairo.Text"
    ],
    "name": "diagrams-cairo",
    "version": "1.3.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "clock": [
        "System.Clock"
      ],
      "old-locale": [],
      "scientific": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ],
      "text-format": [
        "Data.Text.Buildable",
        "Data.Text.Format"
      ],
      "time": []
    },
    "imports": [
      "Data.Text",
      "Data.Text.Buildable",
      "Data.Text.Format",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Formatting",
      "Formatting.Formatters",
      "Formatting.Internal",
      "System.Clock"
    ],
    "modules": [
      "Formatting",
      "Formatting.Formatters",
      "Formatting.ShortFormatters",
      "Formatting.Examples",
      "Formatting.Time",
      "Formatting.Clock",
      "Formatting.Internal"
    ],
    "name": "formatting",
    "version": "6.2.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AppsLicensing",
      "Network.Google.AppsLicensing.Types",
      "Network.Google.Resource.Licensing.LicenseAssignments.Delete",
      "Network.Google.Resource.Licensing.LicenseAssignments.Get",
      "Network.Google.Resource.Licensing.LicenseAssignments.Insert",
      "Network.Google.Resource.Licensing.LicenseAssignments.ListForProduct",
      "Network.Google.Resource.Licensing.LicenseAssignments.ListForProductAndSKU",
      "Network.Google.Resource.Licensing.LicenseAssignments.Patch",
      "Network.Google.Resource.Licensing.LicenseAssignments.Update"
    ],
    "name": "gogol-apps-licensing",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Foreign.Concurrent",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "conduit": [],
      "conduit-combinators": [],
      "containers": [
        "Data.Map"
      ],
      "directory": [],
      "exceptions": [],
      "fast-logger": [],
      "filepath": [],
      "gitlib": [
        "Git"
      ],
      "hlibgit2": [
        "Bindings.Libgit2"
      ],
      "lifted-async": [],
      "lifted-base": [],
      "mmorph": [],
      "monad-control": [],
      "monad-loops": [],
      "mtl": [],
      "resourcet": [],
      "stm": [],
      "stm-conduit": [],
      "tagged": [],
      "template-haskell": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "text-icu": [
        "Data.Text.ICU.Convert"
      ],
      "time": [],
      "transformers": [],
      "transformers-base": []
    },
    "imports": [
      "Bindings.Libgit2",
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.ICU.Convert",
      "Foreign.Concurrent",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Git",
      "Git.Libgit2",
      "Git.Libgit2.Backend",
      "Git.Libgit2.Types",
      "Git.Smoke",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Git.Libgit2",
      "Git.Libgit2.Backend",
      "Git.Libgit2.Internal",
      "Git.Libgit2.Trace",
      "Git.Libgit2.Types"
    ],
    "name": "gitlib-libgit2",
    "version": "3.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.Functor.Identity",
        "Data.Maybe",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Text"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "tagstream-conduit": [
        "Text.HTML.TagStream",
        "Text.HTML.TagStream.Text"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "transformers": [],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Stream.Parse"
      ],
      "xml-types": [
        "Data.XML.Types"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Functor.Identity",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.XML.Types",
      "Prelude",
      "Test.Hspec",
      "Test.HUnit",
      "Text.HTML.DOM",
      "Text.HTML.TagStream",
      "Text.HTML.TagStream.Text",
      "Text.XML",
      "Text.XML.Stream.Parse"
    ],
    "modules": [
      "Text.HTML.DOM"
    ],
    "name": "html-conduit",
    "version": "1.2.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Function",
        "Data.List",
        "Data.Ord"
      ]
    },
    "imports": [
      "Data.Function",
      "Data.List",
      "Data.Ord"
    ],
    "modules": [
      "Data.KMeans"
    ],
    "name": "kmeans",
    "version": "0.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Maybe",
        "Data.Ratio",
        "Numeric",
        "Prelude"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Maybe",
      "Data.Number.BigFloat",
      "Data.Number.Fixed",
      "Data.Number.FixedFunctions",
      "Data.Ratio",
      "Numeric",
      "Prelude",
      "Test.Data.Number.BigFloat",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2"
    ],
    "modules": [
      "Data.Number.Symbolic",
      "Data.Number.Dif",
      "Data.Number.CReal",
      "Data.Number.Fixed",
      "Data.Number.Interval",
      "Data.Number.BigFloat",
      "Data.Number.Natural",
      "Data.Number.Vectorspace",
      "Data.Number.FixedFunctions"
    ],
    "name": "numbers",
    "version": "3000.2.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Data.Char",
        "Data.Functor",
        "Data.Ix",
        "Data.Monoid",
        "System.Environment",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec"
      ],
      "base-compat": [],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "colour": [
        "Data.Colour",
        "Data.Colour.Names",
        "Data.Colour.RGBSpace.HSL"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default-class": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "kansas-comet": [
        "Web.Scotty.Comet"
      ],
      "mime-types": [],
      "scotty": [
        "Web.Scotty"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "text-show": [
        "TextShow.TH"
      ],
      "transformers": [],
      "vector": [
        "Data.Vector.Unboxed"
      ],
      "wai": [],
      "wai-extra": [],
      "warp": []
    },
    "imports": [
      "Arc",
      "Bezier",
      "Bounce",
      "Circle",
      "Clipping",
      "Color",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Custom",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.Char",
      "Data.Colour",
      "Data.Colour.Names",
      "Data.Colour.RGBSpace.HSL",
      "Data.Functor",
      "Data.Ix",
      "Data.Map",
      "Data.Monoid",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Vector.Unboxed",
      "Development.Shake",
      "Draw",
      "Favicon",
      "Font",
      "Get",
      "Global",
      "Graphics.Blank",
      "Graphics.Blank.Canvas",
      "Graphics.Blank.Generated",
      "Graphics.Blank.JavaScript",
      "Graphics.Blank.Style",
      "Graphics.Blank.Types.CSS",
      "Graphics.Blank.Types.Cursor",
      "Graphics.Blank.Types.Font",
      "Grayscale",
      "Image",
      "Is",
      "Key",
      "Line",
      "Linear",
      "Load",
      "Miter",
      "Network.HTTP.Types",
      "Path",
      "Pattern",
      "Quadratic",
      "Radial",
      "Rectangle",
      "Red",
      "Rotate",
      "Rotating",
      "Rounded",
      "Scale",
      "Semicircle",
      "Shadow",
      "Square",
      "System.Environment",
      "System.IO.Unsafe",
      "Text",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "TextShow.TH",
      "Tic",
      "Translate",
      "Web.Scotty",
      "Web.Scotty.Comet",
      "Wiki"
    ],
    "modules": [
      "Graphics.Blank",
      "Graphics.Blank.Cursor",
      "Graphics.Blank.Font",
      "Graphics.Blank.GHCi",
      "Graphics.Blank.Style"
    ],
    "name": "blank-canvas",
    "version": "0.6"
  },
  {
    "dependencies": {
      "base": [],
      "either": [],
      "gitrev": [],
      "optparse-applicative": [],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "transformers": []
    },
    "imports": [
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Options.Applicative.Simple"
    ],
    "name": "optparse-simple",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Fixed"
      ],
      "hashable": [
        "Data.Hashable"
      ]
    },
    "imports": [
      "Data.Fixed",
      "Data.Hashable",
      "Data.Time",
      "System.Locale"
    ],
    "modules": [
      "Data.Hashable.Time"
    ],
    "name": "hashable-time",
    "version": "0.2"
  },
  {
    "dependencies": {
      "aeson": [],
      "attoparsec": [],
      "base": [
        "Control.Category",
        "System.Timeout"
      ],
      "base-compat": [],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "filepath": [],
      "http-api-data": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "mtl": [],
      "network": [],
      "network-uri": [],
      "safe": [],
      "servant": [],
      "servant-server": [],
      "split": [],
      "string-conversions": [],
      "system-filepath": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "transformers-compat": [],
      "wai": [],
      "wai-app-static": [],
      "warp": [],
      "word8": []
    },
    "imports": [
      "Control.Category",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Map",
      "Data.Text",
      "Network.HTTP.Types",
      "System.Timeout",
      "Test.Hspec.Wai"
    ],
    "modules": [
      "Servant",
      "Servant.Server",
      "Servant.Server.Experimental.Auth",
      "Servant.Server.Internal",
      "Servant.Server.Internal.BasicAuth",
      "Servant.Server.Internal.Context",
      "Servant.Server.Internal.Router",
      "Servant.Server.Internal.RoutingApplication",
      "Servant.Server.Internal.ServantErr",
      "Servant.Utils.StaticFiles"
    ],
    "name": "servant-server",
    "version": "0.8.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.Fail"
      ],
      "bytestring": [
        "Data.ByteString.Internal"
      ],
      "fail": [],
      "ghc-prim": [],
      "primitive": [],
      "text": [
        "Data.Text"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.Fail",
      "Data.ByteString.Internal",
      "Data.Text"
    ],
    "modules": [
      "Data.Store.Core"
    ],
    "name": "store-core",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "containers": []
    },
    "imports": [
      "Code.Build",
      "Data.List"
    ],
    "modules": [
      "Code.Build",
      "Code.Build.Haskell",
      "Code.Build.JavaScript",
      "Code.Build.PHP",
      "Code.Build.Ruby"
    ],
    "name": "code-builder",
    "version": "0.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Proxy",
        "GHC.TypeLits",
        "Prelude"
      ]
    },
    "imports": [
      "Data.Proxy",
      "GHC.TypeLits",
      "Numeric.NumType.DK.Integers",
      "Numeric.NumType.DK.Naturals",
      "Prelude",
      "Test.HUnit"
    ],
    "modules": [
      "Numeric.NumType.DK.Integers"
    ],
    "name": "numtype-dk",
    "version": "0.5.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Proxy",
        "GHC.Exts",
        "System.Exit"
      ],
      "freer": []
    },
    "imports": [
      "Common",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.Free",
      "Control.Monad.Freer",
      "Control.Monad.Freer.Coroutine",
      "Control.Monad.Freer.Exception",
      "Control.Monad.Freer.Fresh",
      "Control.Monad.Freer.Internal",
      "Control.Monad.Freer.Reader",
      "Control.Monad.Freer.State",
      "Control.Monad.Freer.StateRW",
      "Control.Monad.Freer.Trace",
      "Control.Monad.Freer.Writer",
      "Control.Monad.State",
      "Criterion",
      "Criterion.Main",
      "Data.FTCQueue",
      "Data.List",
      "Data.Open.Union",
      "Data.Proxy",
      "GHC.Exts",
      "System.Exit",
      "Teletype",
      "Tests.Common",
      "Tests.Coroutine",
      "Tests.Exception",
      "Tests.Fresh",
      "Tests.NonDetEff",
      "Tests.Reader",
      "Tests.State",
      "Tests.StateRW",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Control.Monad.Freer",
      "Control.Monad.Freer.Coroutine",
      "Control.Monad.Freer.Cut",
      "Control.Monad.Freer.Exception",
      "Control.Monad.Freer.Fresh",
      "Control.Monad.Freer.Internal",
      "Control.Monad.Freer.Reader",
      "Control.Monad.Freer.State",
      "Control.Monad.Freer.StateRW",
      "Control.Monad.Freer.Trace",
      "Control.Monad.Freer.Writer",
      "Data.FTCQueue",
      "Data.Open.Union"
    ],
    "name": "freer",
    "version": "0.2.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.Zip",
        "Data.Bifunctor",
        "Data.Coerce",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Void",
        "GHC.Exts",
        "GHC.Generics",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.Zip",
      "Data.Bifunctor",
      "Data.Binary.Builder",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Short",
      "Data.Coerce",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Set",
      "Data.Tagged",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Traversable",
      "Data.Void",
      "GHC.Exts",
      "GHC.Generics",
      "Prelude"
    ],
    "modules": [],
    "name": "semigroups",
    "version": "0.18.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Char",
        "Data.Functor",
        "Data.List",
        "System.Environment"
      ],
      "base-compat": [],
      "deepseq": [],
      "directory": [
        "System.Directory"
      ],
      "doctest": [],
      "filepath": [
        "System.FilePath"
      ],
      "ghc": [],
      "ghc-paths": [],
      "process": [],
      "syb": [],
      "transformers": []
    },
    "imports": [
      "Control.Exception",
      "Data.Char",
      "Data.Functor",
      "Data.List",
      "Interpreter",
      "Sandbox",
      "SrcLoc",
      "System.Directory",
      "System.Environment",
      "System.FilePath"
    ],
    "modules": [
      "Test.DocTest"
    ],
    "name": "doctest",
    "version": "0.11.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Char",
        "Data.Word"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "crypto-cipher-types": [
        "Crypto.Cipher.Types"
      ],
      "securemem": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Crypto.Cipher.Benchmarks",
      "Crypto.Cipher.Blowfish",
      "Crypto.Cipher.Blowfish.Primitive",
      "Crypto.Cipher.Tests",
      "Crypto.Cipher.Types",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Vector",
      "Data.Word",
      "Test.Framework"
    ],
    "modules": [
      "Crypto.Cipher.Blowfish"
    ],
    "name": "cipher-blowfish",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Monad"
      ],
      "containers": [
        "Data.Map"
      ],
      "happstack-server": [
        "Happstack.Server"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "rest-core": [
        "Rest.Api",
        "Rest.Driver.Perform",
        "Rest.Driver.Types",
        "Rest.Run"
      ],
      "rest-gen": [
        "Rest.Gen.Base",
        "Rest.Gen.Docs"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Control.Monad.Trans",
      "Data.ByteString.UTF8",
      "Data.Map",
      "Happstack.Server",
      "Rest.Api",
      "Rest.Driver.Perform",
      "Rest.Driver.Types",
      "Rest.Gen.Base",
      "Rest.Gen.Docs",
      "Rest.Run"
    ],
    "modules": [
      "Rest.Driver.Happstack",
      "Rest.Driver.Happstack.Docs"
    ],
    "name": "rest-happstack",
    "version": "0.3.1.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Lambda",
      "Test.AWS.Fixture",
      "Test.AWS.Lambda",
      "Test.AWS.Lambda.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Lambda",
      "Network.AWS.Lambda.AddPermission",
      "Network.AWS.Lambda.CreateAlias",
      "Network.AWS.Lambda.CreateEventSourceMapping",
      "Network.AWS.Lambda.CreateFunction",
      "Network.AWS.Lambda.DeleteAlias",
      "Network.AWS.Lambda.DeleteEventSourceMapping",
      "Network.AWS.Lambda.DeleteFunction",
      "Network.AWS.Lambda.GetAlias",
      "Network.AWS.Lambda.GetEventSourceMapping",
      "Network.AWS.Lambda.GetFunction",
      "Network.AWS.Lambda.GetFunctionConfiguration",
      "Network.AWS.Lambda.GetPolicy",
      "Network.AWS.Lambda.Invoke",
      "Network.AWS.Lambda.ListAliases",
      "Network.AWS.Lambda.ListEventSourceMappings",
      "Network.AWS.Lambda.ListFunctions",
      "Network.AWS.Lambda.ListVersionsByFunction",
      "Network.AWS.Lambda.PublishVersion",
      "Network.AWS.Lambda.RemovePermission",
      "Network.AWS.Lambda.Types",
      "Network.AWS.Lambda.UpdateAlias",
      "Network.AWS.Lambda.UpdateEventSourceMapping",
      "Network.AWS.Lambda.UpdateFunctionCode",
      "Network.AWS.Lambda.UpdateFunctionConfiguration",
      "Network.AWS.Lambda.Waiters"
    ],
    "name": "amazonka-lambda",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Either",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "directory": [],
      "filepath": [],
      "mtl": [],
      "pem": [
        "Data.PEM"
      ],
      "process": [
        "System.Process"
      ],
      "x509": [
        "Data.X509"
      ],
      "x509-store": [
        "Data.X509.CertificateStore"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.ASN1.Error",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Either",
      "Data.Maybe",
      "Data.Monoid",
      "Data.PEM",
      "Data.Word",
      "Data.X509",
      "Data.X509.CertificateStore",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Environment",
      "System.Process",
      "System.Win32.Types",
      "System.X509.MacOS",
      "System.X509.Unix",
      "System.X509.Win32"
    ],
    "modules": [
      "System.X509",
      "System.X509.Unix",
      "System.X509.MacOS"
    ],
    "name": "x509-system",
    "version": "1.6.4"
  },
  {
    "dependencies": {
      "Earley": [
        "Text.Earley"
      ],
      "ListLike": [
        "Data.ListLike"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Bifunctor",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Semigroup",
        "GHC.Generics",
        "System.Environment"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "lens": [
        "Control.Lens"
      ],
      "non-empty-sequence": [
        "Data.Sequence.NonEmpty"
      ],
      "pretty-show": [
        "Text.Show.Pretty"
      ],
      "semigroups": [],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.Trans.State",
      "Data.Bifunctor",
      "Data.Data",
      "Data.Foldable",
      "Data.List",
      "Data.ListLike",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Sequence.NonEmpty",
      "Data.Set",
      "GHC.Generics",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Pinchot",
      "Pinchot.Earley",
      "Pinchot.Examples.AllRulesRecord",
      "Pinchot.Examples.Earley",
      "Pinchot.Examples.Newman",
      "Pinchot.Examples.Postal",
      "Pinchot.Examples.RulesToOptics",
      "Pinchot.Examples.SyntaxTrees",
      "Pinchot.Examples.Terminalize",
      "Pinchot.Intervals",
      "Pinchot.Locator",
      "Pinchot.Pretty",
      "Pinchot.RecursiveDo",
      "Pinchot.Rules",
      "Pinchot.SyntaxTree",
      "Pinchot.SyntaxTree.Instancer",
      "Pinchot.SyntaxTree.Optics",
      "Pinchot.SyntaxTree.Wrappers",
      "Pinchot.Terminalize",
      "Pinchot.Types",
      "System.Environment",
      "Text.Earley",
      "Text.Show.Pretty"
    ],
    "modules": [
      "Pinchot",
      "Pinchot.Earley",
      "Pinchot.Examples",
      "Pinchot.Examples.AllRulesRecord",
      "Pinchot.Examples.Earley",
      "Pinchot.Examples.Newman",
      "Pinchot.Examples.Postal",
      "Pinchot.Examples.RulesToOptics",
      "Pinchot.Examples.SyntaxTrees",
      "Pinchot.Examples.Terminalize",
      "Pinchot.Intervals",
      "Pinchot.Locator",
      "Pinchot.Pretty",
      "Pinchot.RecursiveDo",
      "Pinchot.Rules",
      "Pinchot.SyntaxTree",
      "Pinchot.SyntaxTree.Instancer",
      "Pinchot.SyntaxTree.Optics",
      "Pinchot.SyntaxTree.Wrappers",
      "Pinchot.Terminalize",
      "Pinchot.Types"
    ],
    "name": "pinchot",
    "version": "0.22.0.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.Text",
      "ForecastIO.V2.Types"
    ],
    "modules": [
      "ForecastIO.V2.Types",
      "ForecastIO.V2.URI"
    ],
    "name": "forecast-io",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Prelude",
        "System.CPUTime",
        "System.IO",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "mtl": [],
      "time": [
        "Data.Time.Clock"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.List",
      "Data.Time.Clock",
      "Math.Statistics",
      "Prelude",
      "System.CPUTime",
      "System.IO",
      "Test.BenchPress",
      "Text.Printf"
    ],
    "modules": [
      "Test.BenchPress"
    ],
    "name": "benchpress",
    "version": "0.2.2.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Monoid"
      ],
      "mtl": [
        "Control.Monad.RWS.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Class"
      ],
      "transformers": [],
      "writer-cps-transformers": [
        "Control.Monad.Trans.RWS.CPS",
        "Control.Monad.Trans.Writer.CPS"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.RWS.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.RWS.CPS",
      "Control.Monad.Trans.Writer.CPS",
      "Control.Monad.Writer.Class",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Monad.RWS.CPS",
      "Control.Monad.Writer.CPS"
    ],
    "name": "writer-cps-mtl",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.Exts",
        "Prelude",
        "System.Exit"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "pointed": [
        "Data.Pointed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Criterion.Main",
      "Criterion.Types",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.GroupedList",
      "Data.List",
      "Data.Map.Strict",
      "Data.Monoid",
      "Data.Pointed",
      "Data.Sequence",
      "Data.Traversable",
      "GHC.Exts",
      "Prelude",
      "System.Exit",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.GroupedList"
    ],
    "name": "grouped-list",
    "version": "0.2.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Instances",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.Concurrent",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Char",
        "GHC.Exts",
        "GHC.ForeignPtr",
        "GHC.IO",
        "GHC.IO.Buffer",
        "GHC.IO.BufferedIO",
        "GHC.IO.Handle.Internals",
        "GHC.IO.Handle.Types",
        "GHC.Ptr",
        "GHC.ST",
        "GHC.Word",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.Printf",
        "Text.Show.Functions"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [
        "GHC.CString"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Instances",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Builder.Internal",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Prim.Binary",
      "Data.ByteString.Builder.Prim.Internal",
      "Data.ByteString.Builder.Prim.Internal.Base16",
      "Data.ByteString.Builder.Prim.Internal.Floating",
      "Data.ByteString.Builder.Prim.Internal.UncheckedShifts",
      "Data.ByteString.Builder.Prim.Tests",
      "Data.ByteString.Builder.Tests",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Short",
      "Data.ByteString.Short.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.DList",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.String",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.Concurrent",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Char",
      "GHC.CString",
      "GHC.Exts",
      "GHC.ForeignPtr",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Internals",
      "GHC.IO",
      "GHC.IOBase",
      "GHC.IO.Buffer",
      "GHC.IO.BufferedIO",
      "GHC.IO.Handle.Internals",
      "GHC.IO.Handle.Types",
      "GHC.Prim",
      "GHC.Ptr",
      "GHC.ST",
      "GHC.Word",
      "Prelude",
      "QuickCheckUtils",
      "Rules",
      "System.Directory",
      "System.Environment",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Random",
      "TestFramework",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Test",
      "Text.Printf",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Short",
      "Data.ByteString.Short.Internal",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Internal",
      "Data.ByteString.Builder.Prim.Internal",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Builder.Extras",
      "Data.ByteString.Lazy.Builder.ASCII"
    ],
    "name": "bytestring",
    "version": "0.10.8.1"
  },
  {
    "dependencies": {
      "acid-state": [
        "Data.Acid",
        "Data.Acid.Advanced",
        "Data.Acid.Local",
        "Data.Acid.Remote"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "aeson-qq": [
        "Data.Aeson.QQ"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "System.Console.GetOpt",
        "System.Exit",
        "System.IO.Error"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "happstack-authenticate": [
        "Happstack.Authenticate.Core",
        "Happstack.Authenticate.OpenId.Route",
        "Happstack.Authenticate.Password.Core",
        "Happstack.Authenticate.Password.Route",
        "Happstack.Authenticate.Route"
      ],
      "happstack-hsp": [
        "Happstack.Server.HSP.HTML",
        "Happstack.Server.XMLGenT",
        "HSP.Google.Analytics"
      ],
      "happstack-jmacro": [
        "Happstack.Server.JMacro"
      ],
      "happstack-server": [
        "Happstack.Server",
        "Happstack.Server.FileServe.BuildingBlocks",
        "Happstack.Server.Internal.Monads"
      ],
      "happstack-server-tls": [
        "Happstack.Server.SimpleHTTPS"
      ],
      "hsp": [
        "HSP",
        "HSP.XML",
        "HSP.XMLGenerator"
      ],
      "hsx-jmacro": [
        "HSP.JMacro"
      ],
      "hsx2hs": [
        "Language.Haskell.HSX.QQ"
      ],
      "ixset": [
        "Data.IxSet",
        "Data.IxSet.Ix"
      ],
      "jmacro": [
        "Language.Javascript.JMacro"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "old-locale": [],
      "process": [],
      "random": [],
      "reform": [
        "Text.Reform"
      ],
      "reform-happstack": [
        "Text.Reform.Happstack"
      ],
      "reform-hsp": [
        "Text.Reform.HSP.Text"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "userid": [
        "Data.UserId"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ],
      "uuid-orphans": [
        "Data.UUID.Orphans"
      ],
      "uuid-types": [
        "Data.UUID.Types"
      ],
      "vector": [
        "Data.Vector"
      ],
      "web-plugins": [
        "Web.Plugins.Core"
      ],
      "web-routes": [
        "Web.Routes"
      ],
      "web-routes-happstack": [
        "Web.Routes.Happstack"
      ],
      "web-routes-hsp": [
        "Web.Routes.XMLGenT"
      ],
      "web-routes-th": [
        "Web.Routes.TH"
      ],
      "xss-sanitize": []
    },
    "imports": [
      "Clckwrks",
      "Clckwrks.Acid",
      "Clckwrks.Admin.Console",
      "Clckwrks.Admin.EditSettings",
      "Clckwrks.Admin.Route",
      "Clckwrks.Admin.Template",
      "Clckwrks.Admin.URL",
      "Clckwrks.Authenticate.Page.ChangePassword",
      "Clckwrks.Authenticate.Page.Login",
      "Clckwrks.Authenticate.Page.OpenIdRealm",
      "Clckwrks.Authenticate.Page.ResetPassword",
      "Clckwrks.Authenticate.Plugin",
      "Clckwrks.Authenticate.Route",
      "Clckwrks.Authenticate.URL",
      "Clckwrks.BasicTemplate",
      "Clckwrks.JS.ClckwrksApp",
      "Clckwrks.JS.Route",
      "Clckwrks.JS.URL",
      "Clckwrks.Monad",
      "Clckwrks.NavBar.Acid",
      "Clckwrks.NavBar.EditNavBar",
      "Clckwrks.NavBar.Types",
      "Clckwrks.ProfileData.Acid",
      "Clckwrks.ProfileData.API",
      "Clckwrks.ProfileData.EditNewProfileData",
      "Clckwrks.ProfileData.EditProfileData",
      "Clckwrks.ProfileData.EditProfileDataFor",
      "Clckwrks.ProfileData.Route",
      "Clckwrks.ProfileData.Types",
      "Clckwrks.ProfileData.URL",
      "Clckwrks.Route",
      "Clckwrks.Types",
      "Clckwrks.Unauthorized",
      "Clckwrks.URL",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Acid",
      "Data.Acid.Advanced",
      "Data.Acid.Local",
      "Data.Acid.Remote",
      "Data.Aeson",
      "Data.Aeson.QQ",
      "Data.Attoparsec.Text.Lazy",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.UTF8",
      "Data.Data",
      "Data.HashMap.Lazy",
      "Data.IxSet",
      "Data.IxSet.Ix",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.SafeCopy",
      "Data.Sequence",
      "Data.Serialize",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Data.Traversable",
      "Data.Tree",
      "Data.Typeable",
      "Data.UserId",
      "Data.UUID.Orphans",
      "Data.UUID.Types",
      "Data.Vector",
      "GHC.Generics",
      "Happstack.Authenticate.Core",
      "Happstack.Authenticate.OpenId.Route",
      "Happstack.Authenticate.Password.Core",
      "Happstack.Authenticate.Password.Route",
      "Happstack.Authenticate.Route",
      "Happstack.Server",
      "Happstack.Server.FileServe.BuildingBlocks",
      "Happstack.Server.HSP.HTML",
      "Happstack.Server.Internal.Monads",
      "Happstack.Server.JMacro",
      "Happstack.Server.SimpleHTTPS",
      "Happstack.Server.XMLGenT",
      "HSP",
      "HSP.Google.Analytics",
      "HSP.JMacro",
      "HSP.XML",
      "HSP.XMLGenerator",
      "Language.Haskell.HSX.QQ",
      "Language.Javascript.JMacro",
      "Network",
      "Network.URI",
      "Paths",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO.Error",
      "Text.Blaze.Html",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Reform",
      "Text.Reform.Happstack",
      "Text.Reform.HSP.Text",
      "Web.Plugins.Core",
      "Web.Routes",
      "Web.Routes.Happstack",
      "Web.Routes.TH",
      "Web.Routes.XMLGenT"
    ],
    "modules": [
      "Clckwrks",
      "Clckwrks.Acid",
      "Clckwrks.Admin.Template",
      "Clckwrks.Admin.URL",
      "Clckwrks.Admin.Console",
      "Clckwrks.Admin.Route",
      "Clckwrks.Admin.EditSettings",
      "Clckwrks.Authenticate.Page.ChangePassword",
      "Clckwrks.Authenticate.Page.Login",
      "Clckwrks.Authenticate.Page.OpenIdRealm",
      "Clckwrks.Authenticate.Page.ResetPassword",
      "Clckwrks.Authenticate.Plugin",
      "Clckwrks.Authenticate.Route",
      "Clckwrks.Authenticate.URL",
      "Clckwrks.BasicTemplate",
      "Clckwrks.GetOpts",
      "Clckwrks.IOThread",
      "Clckwrks.JS.ClckwrksApp",
      "Clckwrks.JS.Route",
      "Clckwrks.JS.URL",
      "Clckwrks.Monad",
      "Clckwrks.Server",
      "Clckwrks.Markup.HsColour",
      "Clckwrks.Markup.Markdown",
      "Clckwrks.Markup.Pandoc",
      "Clckwrks.NavBar.Acid",
      "Clckwrks.NavBar.API",
      "Clckwrks.NavBar.EditNavBar",
      "Clckwrks.NavBar.Types",
      "Clckwrks.Plugin",
      "Clckwrks.ProfileData.URL",
      "Clckwrks.ProfileData.Route",
      "Clckwrks.ProfileData.Types",
      "Clckwrks.ProfileData.Acid",
      "Clckwrks.ProfileData.API",
      "Clckwrks.ProfileData.EditProfileData",
      "Clckwrks.ProfileData.EditNewProfileData",
      "Clckwrks.ProfileData.EditProfileDataFor",
      "Clckwrks.Route",
      "Clckwrks.Types",
      "Clckwrks.Unauthorized",
      "Clckwrks.URL",
      "Paths_clckwrks"
    ],
    "name": "clckwrks",
    "version": "0.23.19.2"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Monoid",
        "System.IO"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cryptohash": [
        "Crypto.Hash.MD5"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mime-mail": [
        "Network.Mail.Mime"
      ],
      "network": [
        "Network",
        "Network.BSD"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Control.Monad",
      "Crypto.Hash.MD5",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Network",
      "Network.BSD",
      "Network.Mail.Mime",
      "Network.Mail.SMTP.Auth",
      "Network.Mail.SMTP.Types",
      "System.FilePath",
      "System.IO"
    ],
    "modules": [
      "Network.Mail.SMTP",
      "Network.Mail.SMTP.Auth",
      "Network.Mail.SMTP.Types"
    ],
    "name": "smtp-mail",
    "version": "0.1.4.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Functor",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Word",
        "Prelude",
        "Text.Show.Functions"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "primes": [
        "Data.Numbers.Primes"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Functor",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Monoid.Cancellative",
      "Data.Monoid.Factorial",
      "Data.Monoid.Instances.ByteString.UTF8",
      "Data.Monoid.Instances.Concat",
      "Data.Monoid.Instances.Measured",
      "Data.Monoid.Instances.Positioned",
      "Data.Monoid.Instances.Stateful",
      "Data.Monoid.Null",
      "Data.Monoid.Textual",
      "Data.Numbers.Primes",
      "Data.Sequence",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Vector",
      "Data.Word",
      "Prelude",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.Monoid.Cancellative",
      "Data.Monoid.Factorial",
      "Data.Monoid.Null",
      "Data.Monoid.Textual",
      "Data.Monoid.Instances.ByteString.UTF8",
      "Data.Monoid.Instances.Concat",
      "Data.Monoid.Instances.Measured",
      "Data.Monoid.Instances.Positioned",
      "Data.Monoid.Instances.Stateful"
    ],
    "name": "monoid-subclasses",
    "version": "0.4.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Ratio"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ]
    },
    "imports": [
      "Data.Ratio",
      "Text.PrettyPrint.HughesPJ"
    ],
    "modules": [
      "Text.PrettyPrint.HughesPJClass"
    ],
    "name": "pretty-class",
    "version": "1.0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Numeric"
      ],
      "containers": [
        "Data.IntSet"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Indexed",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.IntSet",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Numeric",
      "Text.Reform.Backend",
      "Text.Reform.Core",
      "Text.Reform.Proof",
      "Text.Reform.Result"
    ],
    "modules": [
      "Control.Applicative.Indexed",
      "Text.Reform",
      "Text.Reform.Backend",
      "Text.Reform.Core",
      "Text.Reform.Generalized",
      "Text.Reform.Proof",
      "Text.Reform.Result"
    ],
    "name": "reform",
    "version": "0.2.7.1"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-glib": [],
      "gi-gobject": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-atk",
    "version": "2.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ]
    },
    "imports": [
      "Data.Monoid"
    ],
    "modules": [
      "Data.Group"
    ],
    "name": "groups",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Dataproc",
      "Network.Google.Dataproc.Types",
      "Network.Google.Resource.Dataproc.Projects.Regions.Clusters.Create",
      "Network.Google.Resource.Dataproc.Projects.Regions.Clusters.Delete",
      "Network.Google.Resource.Dataproc.Projects.Regions.Clusters.Diagnose",
      "Network.Google.Resource.Dataproc.Projects.Regions.Clusters.Get",
      "Network.Google.Resource.Dataproc.Projects.Regions.Clusters.List",
      "Network.Google.Resource.Dataproc.Projects.Regions.Clusters.Patch",
      "Network.Google.Resource.Dataproc.Projects.Regions.Jobs.Cancel",
      "Network.Google.Resource.Dataproc.Projects.Regions.Jobs.Delete",
      "Network.Google.Resource.Dataproc.Projects.Regions.Jobs.Get",
      "Network.Google.Resource.Dataproc.Projects.Regions.Jobs.List",
      "Network.Google.Resource.Dataproc.Projects.Regions.Jobs.Submit",
      "Network.Google.Resource.Dataproc.Projects.Regions.Operations.Cancel",
      "Network.Google.Resource.Dataproc.Projects.Regions.Operations.Delete",
      "Network.Google.Resource.Dataproc.Projects.Regions.Operations.Get",
      "Network.Google.Resource.Dataproc.Projects.Regions.Operations.List"
    ],
    "name": "gogol-dataproc",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "optparse-applicative": [
        "Options.Applicative"
      ]
    },
    "imports": [
      "Options.Applicative"
    ],
    "modules": [
      "Options.Applicative.Helper"
    ],
    "name": "optparse-helper",
    "version": "0.2.1.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "directory": [],
      "exceptions": [],
      "http-conduit": [],
      "ini": [
        "Data.Ini"
      ],
      "mmorph": [],
      "monad-control": [],
      "mtl": [
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "resourcet": [],
      "retry": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "transformers": [],
      "transformers-base": [],
      "transformers-compat": []
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.AWS",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Char8",
      "Data.Conduit.Binary",
      "Data.Ini",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.AWS",
      "Network.AWS.EC2.Metadata",
      "Network.AWS.Env",
      "Network.AWS.Presign",
      "Network.AWS.S3",
      "System.IO"
    ],
    "modules": [
      "Control.Monad.Trans.AWS",
      "Network.AWS",
      "Network.AWS.Auth",
      "Network.AWS.Data",
      "Network.AWS.EC2.Metadata",
      "Network.AWS.Env",
      "Network.AWS.Presign"
    ],
    "name": "amazonka",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Bool",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Numeric.Natural",
        "System.IO",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy"
      ],
      "bzlib-conduit": [
        "Data.Conduit.BZlib"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Zlib"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "digest": [
        "Data.Digest.CRC32"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix",
        "System.FilePath.Windows"
      ],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "path": [
        "Path"
      ],
      "path-io": [
        "Path.IO"
      ],
      "plan-b": [
        "System.PlanB"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock"
      ],
      "transformers": []
    },
    "imports": [
      "Codec.Archive.Zip",
      "Codec.Archive.Zip.CP437",
      "Codec.Archive.Zip.Internal",
      "Codec.Archive.Zip.Type",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Resource",
      "Criterion.Main",
      "Data.Bits",
      "Data.Bool",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.BZlib",
      "Data.Conduit.Internal",
      "Data.Conduit.List",
      "Data.Conduit.Zlib",
      "Data.Digest.CRC32",
      "Data.Foldable",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Serialize",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Numeric.Natural",
      "Path",
      "Path.IO",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.FilePath.Windows",
      "System.IO",
      "System.IO.Error",
      "System.PlanB",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Codec.Archive.Zip",
      "Codec.Archive.Zip.CP437",
      "Codec.Archive.Zip.Type"
    ],
    "name": "zip",
    "version": "0.1.3"
  },
  {
    "dependencies": {
      "base": [],
      "fay": [
        "Fay.FFI"
      ]
    },
    "imports": [
      "Data.Data",
      "Data.Defined",
      "Data.Maybe",
      "Data.MutMap.Internal",
      "Data.Nullable",
      "Data.Text",
      "Data.Var",
      "Fay.FFI",
      "FFI",
      "Prelude"
    ],
    "modules": [
      "Control.Exception",
      "Data.Char",
      "Data.Data",
      "Data.Defined",
      "Data.Either",
      "Data.Function",
      "Data.List",
      "Data.LocalStorage",
      "Data.Maybe",
      "Data.MutMap",
      "Data.MutMap.Internal",
      "Data.Mutex",
      "Data.Nullable",
      "Data.Ord",
      "Data.Ratio",
      "Data.Text",
      "Data.Time",
      "Data.Var",
      "Debug.Trace",
      "FFI",
      "Fay.Unsafe",
      "Prelude",
      "Unsafe.Coerce"
    ],
    "name": "fay-base",
    "version": "0.20.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "Numeric",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.Timeout",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cryptonite": [
        "Crypto.PubKey.DH",
        "Crypto.Random"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "network": [
        "Network.BSD",
        "Network.Socket"
      ],
      "pem": [
        "Data.PEM"
      ],
      "time": [],
      "tls": [
        "Network.TLS",
        "Network.TLS.Extra.Cipher"
      ],
      "x509": [
        "Data.X509"
      ],
      "x509-store": [
        "Data.X509.CertificateStore"
      ],
      "x509-system": [
        "System.X509"
      ],
      "x509-validation": [
        "Data.X509.Validation"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Crypto.PubKey.DH",
      "Crypto.Random",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Default.Class",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.PEM",
      "Data.Word",
      "Data.X509",
      "Data.X509.CertificateStore",
      "Data.X509.Validation",
      "HexDump",
      "Network.BSD",
      "Network.Socket",
      "Network.TLS",
      "Network.TLS.Extra.Cipher",
      "Numeric",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.Timeout",
      "System.X509",
      "Text.Printf"
    ],
    "modules": [],
    "name": "tls-debug",
    "version": "0.4.4"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.Text",
        "Data.Attoparsec.Types"
      ],
      "base": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "pipes": [],
      "pipes-parse": [
        "Pipes.Parse"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Trans.State.Strict",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Types",
      "Data.ByteString",
      "Data.Text",
      "Pipes.Parse",
      "Test.Attoparsec",
      "Test.Tasty"
    ],
    "modules": [
      "Pipes.Attoparsec"
    ],
    "name": "pipes-attoparsec",
    "version": "0.5.1.4"
  },
  {
    "dependencies": {
      "base": [
        "GHC.Exts",
        "GHC.Natural",
        "Unsafe.Coerce"
      ],
      "integer-gmp": [
        "GHC.Integer.GMP.Internals"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.Digits",
      "Data.FastDigits",
      "Data.FastDigits.Internal",
      "GHC.Exts",
      "GHC.Integer.GMP.Internals",
      "GHC.Natural",
      "Test.SmallCheck.Series",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.SmallCheck",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.FastDigits",
      "Data.FastDigits.Internal"
    ],
    "name": "fast-digits",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "asn1-encoding": [
        "Data.ASN1.Stream"
      ],
      "asn1-types": [
        "Data.ASN1.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad"
      ],
      "bytestring": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.ASN1.Stream",
      "Data.ASN1.Types"
    ],
    "modules": [
      "Data.ASN1.Parse"
    ],
    "name": "asn1-parse",
    "version": "0.9.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable",
        "Data.List"
      ],
      "directory": [],
      "process": [],
      "tagsoup": [
        "Text.HTML.TagSoup"
      ],
      "text": [
        "Data.Text.Lazy"
      ],
      "xml-to-json-fast": []
    },
    "imports": [
      "Data.Foldable",
      "Data.List",
      "Data.Text.Lazy",
      "Text.HTML.TagSoup"
    ],
    "modules": [
      "Text.XML.JSON.StreamingXmlToJson"
    ],
    "name": "xml-to-json-fast",
    "version": "2.0.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.STS",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.STS",
      "Test.AWS.STS.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.STS",
      "Network.AWS.STS.AssumeRole",
      "Network.AWS.STS.AssumeRoleWithSAML",
      "Network.AWS.STS.AssumeRoleWithWebIdentity",
      "Network.AWS.STS.DecodeAuthorizationMessage",
      "Network.AWS.STS.GetCallerIdentity",
      "Network.AWS.STS.GetFederationToken",
      "Network.AWS.STS.GetSessionToken",
      "Network.AWS.STS.Types",
      "Network.AWS.STS.Waiters"
    ],
    "name": "amazonka-sts",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.IO",
        "Data.Array.ST"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Int",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.StablePtr"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Data.Array.Base",
      "Data.Array.IO",
      "Data.Array.MArray.Extras",
      "Data.Array.ST",
      "Data.Int",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.StablePtr"
    ],
    "modules": [
      "Control.Monad.Array.Class",
      "Data.Array.MArray.Extras"
    ],
    "name": "monadic-arrays",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Word",
        "Foreign.Storable",
        "Prelude"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "phantom-state": [
        "Control.Applicative.PhantomState"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Applicative.PhantomState",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Criterion.Main",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.BinaryList",
      "Data.BinaryList.Internal",
      "Data.Binary.Put",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Word",
      "Foreign.Storable",
      "Prelude"
    ],
    "modules": [
      "Data.BinaryList",
      "Data.BinaryList.Serialize"
    ],
    "name": "binary-list",
    "version": "1.1.1.2"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.IArray"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Bits",
        "Data.Complex",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Foreign",
        "Foreign.C.Types",
        "Foreign.Storable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "hmatrix": [
        "Numeric.LinearAlgebra",
        "Numeric.LinearAlgebra.Data",
        "Numeric.LinearAlgebra.Devel"
      ],
      "hmatrix-gsl": [
        "Numeric.GSL.Fourier"
      ],
      "hmatrix-gsl-stats": [
        "Numeric.GSL.Fitting.Linear",
        "Numeric.GSL.Histogram",
        "Numeric.GSL.Histogram2D"
      ],
      "hstatistics": [
        "Numeric.Statistics.Information"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "storable-complex": [],
      "vector": [
        "Data.Vector.Generic"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Monad",
      "Control.Monad.State",
      "Data.Array.IArray",
      "Data.Binary",
      "Data.Bits",
      "Data.ByteString",
      "Data.Complex",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "Data.Vector.Generic",
      "Data.Word",
      "Foreign",
      "Foreign.C.Types",
      "Foreign.Storable",
      "Numeric.GSL.Fitting.Linear",
      "Numeric.GSL.Fourier",
      "Numeric.GSL.Histogram",
      "Numeric.GSL.Histogram2D",
      "Numeric.LinearAlgebra",
      "Numeric.LinearAlgebra.Data",
      "Numeric.LinearAlgebra.Devel",
      "Numeric.Signal",
      "Numeric.Signal.EEG.BDF",
      "Numeric.Signal.Internal",
      "Numeric.Signal.Multichannel",
      "Numeric.Statistics.Information",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Numeric.Signal",
      "Numeric.Signal.Multichannel",
      "Numeric.Signal.Noise",
      "Numeric.Signal.EEG"
    ],
    "name": "hsignal",
    "version": "0.2.7.4"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Billing",
      "Network.Google.Billing.Types",
      "Network.Google.Resource.CloudBilling.BillingAccounts.Get",
      "Network.Google.Resource.CloudBilling.BillingAccounts.List",
      "Network.Google.Resource.CloudBilling.BillingAccounts.Projects.List",
      "Network.Google.Resource.CloudBilling.Projects.GetBillingInfo",
      "Network.Google.Resource.CloudBilling.Projects.UpdateBillingInfo"
    ],
    "name": "gogol-billing",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Data.IORef",
        "Data.Monoid",
        "Data.STRef"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TVar"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TVar",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.IORef",
      "Data.Monoid",
      "Data.STRef"
    ],
    "modules": [
      "Control.Monad.Ref"
    ],
    "name": "ref-fd",
    "version": "0.4.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "microlens": [
        "Lens.Micro",
        "Lens.Micro.Extras"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Foldable",
      "Data.Functor.Contravariant",
      "Lens.Micro",
      "Lens.Micro.Extras"
    ],
    "modules": [
      "Lens.Micro.Contra"
    ],
    "name": "microlens-contra",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {},
    "imports": [
      ""
    ],
    "modules": [],
    "name": "network-uri-flag",
    "version": "0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "crypto-api": [
        "Crypto.Classes"
      ],
      "fb": [
        "Facebook"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "wai": [
        "Network.Wai"
      ],
      "yesod-core": [
        "Yesod.Core"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Crypto.Classes",
      "Data.Aeson",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Text",
      "Data.Text.Encoding",
      "Facebook",
      "Network.HTTP.Conduit",
      "Network.Wai",
      "Yesod.Core"
    ],
    "modules": [
      "Yesod.Facebook"
    ],
    "name": "yesod-fb",
    "version": "0.3.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "zlib": [
        "Codec.Compression.Zlib.Internal"
      ]
    },
    "imports": [
      "Codec.Compression.Zlib.Internal",
      "Control.Applicative",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Profunctor"
    ],
    "modules": [
      "Codec.Compression.Zlib.Lens"
    ],
    "name": "zlib-lens",
    "version": "0.1.2.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Monoid"
      ],
      "lens": [
        "Control.Lens"
      ],
      "regex-base": [
        "Text.Regex.Base"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Data.Array",
      "Data.List",
      "Data.Monoid",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "System.Directory",
      "System.FilePath",
      "Test.DocTest",
      "Text.Regex.Base",
      "Text.Regex.Lens",
      "Text.Regex.Posix",
      "Text.Regex.Quote"
    ],
    "modules": [
      "Text.Regex.Lens",
      "Text.Regex.Quote"
    ],
    "name": "lens-regex",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "filepath": [],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.PublicSuffix",
      "Data.PublicSuffix.TH",
      "Data.PublicSuffix.Types",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Data.PublicSuffix",
      "Data.PublicSuffix.Rules"
    ],
    "name": "publicsuffix",
    "version": "0.20160716"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8",
        "Blaze.ByteString.Builder.Char.Utf8",
        "Blaze.ByteString.Builder.Internal.Write"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5"
      ],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal",
        "Text.Blaze.Renderer.String"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Lazy",
        "Data.Conduit.Text"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "monad-control": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "xml-types": [
        "Data.XML.Types"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Blaze.ByteString.Builder.Internal.Write",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Resource",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.Internal",
      "Data.Conduit.Lazy",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Data",
      "Data.Either",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Typeable",
      "Data.XML.Types",
      "Prelude",
      "System.IO.Unsafe",
      "Text.Blaze",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.String",
      "Text.XML",
      "Text.XML.Cursor",
      "Text.XML.Cursor.Generic",
      "Text.XML.Stream.Parse",
      "Text.XML.Stream.Render",
      "Text.XML.Unresolved"
    ],
    "modules": [
      "Text.XML.Stream.Parse",
      "Text.XML.Stream.Render",
      "Text.XML.Unresolved",
      "Text.XML.Cursor",
      "Text.XML.Cursor.Generic",
      "Text.XML"
    ],
    "name": "xml-conduit",
    "version": "1.3.5"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Parser"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Lazy",
        "Data.Attoparsec.Lazy",
        "Data.Attoparsec.Number"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Prelude"
      ],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Pretty",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Set"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "jmacro": [
        "Language.Javascript.JMacro"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "scientific": [],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Aeson",
      "Data.Aeson.Parser",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Lazy",
      "Data.Attoparsec.Number",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Foldable",
      "Data.Functor.Contravariant",
      "Data.HashMap.Strict",
      "Data.IntMap",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Vector",
      "Language.Javascript.JMacro",
      "Network.JMacroRPC.Base",
      "Prelude",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Pretty",
      "Text.Blaze.Html.Renderer.Text"
    ],
    "modules": [
      "Network.JMacroRPC.Base",
      "Network.JMacroRPC.Panels"
    ],
    "name": "jmacro-rpc",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "GLUT": [],
      "OpenGL": [
        "Graphics.Rendering.OpenGL",
        "Graphics.Rendering.OpenGL.GL.VertexSpec"
      ],
      "OpenGLRaw": [
        "Graphics.GL"
      ],
      "StateVar": [
        "Data.StateVar"
      ],
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Foreign",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Error",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Map"
      ],
      "random": [
        "System.Random"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString",
      "Data.Char",
      "Data.Foldable",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.StateVar",
      "Data.Word",
      "Foreign",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Error",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Graphics.GL",
      "Graphics.Rendering.OpenGL",
      "Graphics.Rendering.OpenGL.GL.VertexSpec",
      "Graphics.Rendering.OpenGL.Raw",
      "Graphics.UI.GLUT",
      "Graphics.UI.GLUT.Begin",
      "Graphics.UI.GLUT.Callbacks",
      "Graphics.UI.GLUT.Callbacks.Global",
      "Graphics.UI.GLUT.Callbacks.Registration",
      "Graphics.UI.GLUT.Callbacks.Window",
      "Graphics.UI.GLUT.Colormap",
      "Graphics.UI.GLUT.Debugging",
      "Graphics.UI.GLUT.DeviceControl",
      "Graphics.UI.GLUT.Fonts",
      "Graphics.UI.GLUT.GameMode",
      "Graphics.UI.GLUT.Initialization",
      "Graphics.UI.GLUT.Menu",
      "Graphics.UI.GLUT.Objects",
      "Graphics.UI.GLUT.Overlay",
      "Graphics.UI.GLUT.QueryUtils",
      "Graphics.UI.GLUT.Raw",
      "Graphics.UI.GLUT.Raw.Callbacks",
      "Graphics.UI.GLUT.Raw.Fonts",
      "Graphics.UI.GLUT.Raw.Functions",
      "Graphics.UI.GLUT.Raw.Tokens",
      "Graphics.UI.GLUT.State",
      "Graphics.UI.GLUT.Types",
      "Graphics.UI.GLUT.Window",
      "LoadShaders",
      "Prelude",
      "ReadImage",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Random"
    ],
    "modules": [
      "Graphics.UI.GLUT",
      "Graphics.UI.GLUT.Begin",
      "Graphics.UI.GLUT.Callbacks",
      "Graphics.UI.GLUT.Callbacks.Global",
      "Graphics.UI.GLUT.Callbacks.Window",
      "Graphics.UI.GLUT.Colormap",
      "Graphics.UI.GLUT.Debugging",
      "Graphics.UI.GLUT.DeviceControl",
      "Graphics.UI.GLUT.Fonts",
      "Graphics.UI.GLUT.GameMode",
      "Graphics.UI.GLUT.Initialization",
      "Graphics.UI.GLUT.Menu",
      "Graphics.UI.GLUT.Objects",
      "Graphics.UI.GLUT.Overlay",
      "Graphics.UI.GLUT.State",
      "Graphics.UI.GLUT.Window"
    ],
    "name": "GLUT",
    "version": "2.7.0.10"
  },
  {
    "dependencies": {
      "byteorder": [
        "System.ByteOrder"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Int",
      "GHC.Word",
      "System.ByteOrder",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Storable.Endian"
    ],
    "name": "storable-endian",
    "version": "0.2.5"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Prelude"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "cryptohash": [
        "Crypto.Hash"
      ],
      "directory": [],
      "filepath": [],
      "hashable": [],
      "mtl": [],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Pos"
      ],
      "parsers": [
        "Text.Parser.Char",
        "Text.Parser.Combinators",
        "Text.Parser.LookAhead",
        "Text.Parser.Token",
        "Text.Parser.Token.Highlight"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable"
      ]
    },
    "imports": [
      "Crypto.Hash",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Unsafe",
      "Data.HashSet",
      "Data.Map",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Graphics.Rendering.Chart.Backend.Cairo",
      "Graphics.Rendering.Chart.Easy",
      "Language.C.Inline",
      "Language.C.Inline.ContextSpec",
      "Language.C.Inline.Internal",
      "Language.C.Inline.Interruptible",
      "Language.C.Inline.ParseSpec",
      "Language.C.Inline.Unsafe",
      "Language.C.Types",
      "Language.C.Types.Parse",
      "Language.C.Types.ParseSpec",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Test.Hspec",
      "Test.QuickCheck",
      "Text.Parsec",
      "Text.Parsec.Pos",
      "Text.Parser.Char",
      "Text.Parser.Combinators",
      "Text.Parser.LookAhead",
      "Text.Parser.Token",
      "Text.Parser.Token.Highlight",
      "Text.PrettyPrint.ANSI.Leijen"
    ],
    "modules": [
      "Language.C.Inline",
      "Language.C.Inline.Context",
      "Language.C.Inline.HaskellIdentifier",
      "Language.C.Inline.Internal",
      "Language.C.Inline.Unsafe",
      "Language.C.Inline.Interruptible",
      "Language.C.Types",
      "Language.C.Types.Parse"
    ],
    "name": "inline-c",
    "version": "0.5.5.9"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.Maybe",
        "Data.Typeable"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "persistent": [
        "Database.Persist.Class",
        "Database.Persist.Sql",
        "Database.Persist.Types"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Database.Persist.Class",
      "Database.Persist.Sql",
      "Database.Persist.Types",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.Maybe",
      "Data.Text",
      "Data.Typeable",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Web.PathPieces",
      "Web.Slug"
    ],
    "modules": [
      "Web.Slug"
    ],
    "name": "slug",
    "version": "0.1.5"
  },
  {
    "dependencies": {
      "Genbank": [],
      "base": [
        "Control.Monad",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "System.Environment"
      ],
      "biocore": [
        "Bio.Core.Sequence"
      ],
      "biofasta": [
        "Bio.Sequence.Fasta"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "cmdargs": [],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Language",
        "Text.ParserCombinators.Parsec.Token"
      ],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Bio.Core.Sequence",
      "Bio.GenbankData",
      "Bio.GenbankParser",
      "Bio.GenbankTools",
      "Bio.Sequence.Fasta",
      "Control.Monad",
      "Data.ByteString.Lazy.Char8",
      "Data.Int",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "System.Environment",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Language",
      "Text.ParserCombinators.Parsec.Token"
    ],
    "modules": [
      "Bio.GenbankParser",
      "Bio.GenbankData",
      "Bio.GenbankTools"
    ],
    "name": "Genbank",
    "version": "1.0.3"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Data.Time.Format",
      "System.Locale"
    ],
    "modules": [
      "Data.Time.Locale.Compat"
    ],
    "name": "time-locale-compat",
    "version": "0.1.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Monoid",
        "GHC.Base",
        "GHC.Conc",
        "GHC.Conc.Sync",
        "Prelude"
      ],
      "stm": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Exception",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.IORef",
      "Data.Monoid",
      "GHC.Base",
      "GHC.Conc",
      "GHC.Conc.Sync",
      "Prelude",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Control.Monad.Exception"
    ],
    "name": "exception-transformers",
    "version": "0.4.0.4"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Gen",
        "Test.QuickCheck.Random",
        "Test.QuickCheck.State",
        "Test.QuickCheck.Test",
        "Test.QuickCheck.Text"
      ],
      "base": [],
      "chell": [
        "Test.Chell"
      ],
      "random": []
    },
    "imports": [
      "Test.Chell",
      "Test.QuickCheck",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Random",
      "Test.QuickCheck.State",
      "Test.QuickCheck.Test",
      "Test.QuickCheck.Text"
    ],
    "modules": [
      "Test.Chell.QuickCheck"
    ],
    "name": "chell-quickcheck",
    "version": "0.2.5"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "base": [
        "Data.Either"
      ]
    },
    "imports": [
      "Data.Either",
      "Test.HUnit"
    ],
    "modules": [
      "Test.Hspec.Expectations",
      "Test.Hspec.Expectations.Contrib"
    ],
    "name": "hspec-expectations",
    "version": "0.7.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Numeric",
        "System.IO.Unsafe"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "crypto-cipher-types": [
        "Crypto.Cipher.Types"
      ],
      "securemem": [
        "Data.SecureMem"
      ],
      "tagged": [
        "Data.Tagged"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Crypto.Cipher.Tests",
      "Crypto.Cipher.Types",
      "Crypto.Nettle.CCM",
      "Crypto.Nettle.Ciphers",
      "Crypto.Nettle.Ciphers.ForeignImports",
      "Crypto.Nettle.Ciphers.Internal",
      "Crypto.Nettle.Hash",
      "Crypto.Nettle.Hash.ForeignImports",
      "Crypto.Nettle.Hash.Types",
      "Crypto.Nettle.HMAC",
      "Crypto.Nettle.KeyedHash",
      "Crypto.Nettle.UMAC",
      "Data.Array.IArray",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.List",
      "Data.Maybe",
      "Data.SecureMem",
      "Data.Tagged",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "HexUtils",
      "KAT.AES",
      "KAT.Utils",
      "Nettle.Utils",
      "Numeric",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "TestUtils",
      "VectorsHash",
      "VectorsHMAC",
      "VectorsUMAC"
    ],
    "modules": [
      "Crypto.Nettle.ChaChaPoly1305",
      "Crypto.Nettle.Ciphers",
      "Crypto.Nettle.CCM",
      "Crypto.Nettle.Hash",
      "Crypto.Nettle.KeyedHash",
      "Crypto.Nettle.HMAC",
      "Crypto.Nettle.UMAC"
    ],
    "name": "nettle",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "acid-state": [
        "Data.Acid",
        "Data.Acid.Advanced",
        "Data.Acid.Remote"
      ],
      "base": [
        "Control.Applicative",
        "System.Environment"
      ],
      "clckwrks": [
        "Clckwrks",
        "Clckwrks.ProfileData.Acid",
        "Clckwrks.ProfileData.Types"
      ],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "network": [
        "Network"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.String"
      ]
    },
    "imports": [
      "Clckwrks",
      "Clckwrks.ProfileData.Acid",
      "Clckwrks.ProfileData.Types",
      "Control.Applicative",
      "Control.Monad.Reader",
      "Data.Acid",
      "Data.Acid.Advanced",
      "Data.Acid.Remote",
      "Network",
      "System.Console.Haskeline",
      "System.Environment",
      "Text.Parsec",
      "Text.Parsec.String"
    ],
    "modules": [],
    "name": "clckwrks-cli",
    "version": "0.2.16"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ]
    },
    "imports": [
      "Data.Foldable",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Prelude"
    ],
    "modules": [
      "Data.BoolSimplifier"
    ],
    "name": "boolsimplifier",
    "version": "0.1.8"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid",
        "GHC.Base",
        "Numeric",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec",
        "Text.Read"
      ],
      "binary": [
        "Data.Binary"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [],
      "ghc-prim": [],
      "hashable": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.Int",
        "Data.Text.Lazy.Builder.RealFloat"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.Binary",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Scientific",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Map",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Text.Lazy.Builder.RealFloat",
      "Data.Text.Lazy.Builder.Scientific",
      "Data.Vector",
      "Data.Vector.Mutable",
      "GHC.Base",
      "GHC.Integer",
      "GHC.Integer.Compat",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Logarithms",
      "GHC.Integer.Logarithms.Compat",
      "Numeric",
      "Test.QuickCheck",
      "Test.SmallCheck",
      "Test.SmallCheck.Series",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.SmallCheck",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.Read",
      "Utils"
    ],
    "modules": [
      "Data.ByteString.Builder.Scientific",
      "Data.Scientific",
      "Data.Text.Lazy.Builder.Scientific"
    ],
    "name": "scientific",
    "version": "0.3.4.9"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.IORef",
        "Data.Ix",
        "Data.Typeable",
        "GHC.Base",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.Weak",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TArray",
      "Control.Concurrent.STM.TBQueue",
      "Control.Concurrent.STM.TChan",
      "Control.Concurrent.STM.TMVar",
      "Control.Concurrent.STM.TQueue",
      "Control.Concurrent.STM.TVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.STM",
      "Control.Sequential.STM",
      "Data.Array",
      "Data.Array.Base",
      "Data.IORef",
      "Data.Ix",
      "Data.Typeable",
      "GHC.Base",
      "GHC.Conc",
      "GHC.Exts",
      "GHC.Weak",
      "Prelude"
    ],
    "modules": [
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TArray",
      "Control.Concurrent.STM.TVar",
      "Control.Concurrent.STM.TChan",
      "Control.Concurrent.STM.TMVar",
      "Control.Concurrent.STM.TQueue",
      "Control.Concurrent.STM.TBQueue",
      "Control.Concurrent.STM.TSem",
      "Control.Monad.STM"
    ],
    "name": "stm",
    "version": "2.4.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Foreign.ForeignPtr",
        "Foreign.Storable"
      ],
      "containers": [],
      "ghc-prim": [
        "GHC.Types"
      ],
      "mono-traversable": [
        "Data.Sequences"
      ],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive",
        "Data.Primitive.ByteArray",
        "Data.Primitive.Types"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Mutable",
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Primitive",
      "Criterion.Main",
      "Data.Mutable",
      "Data.Mutable.BRef",
      "Data.Mutable.Class",
      "Data.Mutable.Deque",
      "Data.Mutable.DLList",
      "Data.Mutable.PRef",
      "Data.Mutable.SRef",
      "Data.Mutable.URef",
      "Data.Primitive",
      "Data.Primitive.ByteArray",
      "Data.Primitive.Types",
      "Data.Sequence",
      "Data.Sequences",
      "Data.Vector",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Mutable",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Foreign.ForeignPtr",
      "Foreign.Storable",
      "GHC.Types",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Gen"
    ],
    "modules": [
      "Data.Mutable"
    ],
    "name": "mutable-containers",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "SHA": [
        "Data.Digest.Pure.SHA"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.Typeable",
        "System.IO"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "crypto-api": [
        "Crypto.Random"
      ],
      "crypto-pubkey-types": [
        "Crypto.Types.PubKey.RSA"
      ],
      "pureMD5": [
        "Data.Digest.Pure.MD5"
      ]
    },
    "imports": [
      "Codec.Crypto.RSA.Exceptions",
      "Codec.Crypto.RSA.Pure",
      "Control.Exception",
      "Control.Monad",
      "Crypto.Random",
      "Crypto.Random.DRBG",
      "Crypto.Types.PubKey.RSA",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Digest.Pure.MD5",
      "Data.Digest.Pure.SHA",
      "Data.Int",
      "Data.Typeable",
      "System.IO",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck"
    ],
    "modules": [
      "Codec.Crypto.RSA",
      "Codec.Crypto.RSA.Exceptions",
      "Codec.Crypto.RSA.Pure"
    ],
    "name": "RSA",
    "version": "2.2.0"
  },
  {
    "dependencies": {
      "AC-Vector": [
        "Data.Vector.V3"
      ],
      "GLUT": [
        "Graphics.UI.GLUT"
      ],
      "Octree": [
        "Data.Octree"
      ],
      "OpenGL": [
        "Graphics.Rendering.OpenGL"
      ],
      "QuickCheck": [],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "ghc-prim": [],
      "hPDB": [
        "Bio.PDB",
        "Bio.PDB.EventParser.PDBEventParser",
        "Bio.PDB.EventParser.PDBEventPrinter",
        "Bio.PDB.EventParser.PDBEvents",
        "Bio.PDB.Fasta",
        "Bio.PDB.IO",
        "Bio.PDB.IO.OpenAnyFile",
        "Bio.PDB.Iterable",
        "Bio.PDB.Structure",
        "Bio.PDB.Structure.Elements",
        "Bio.PDB.Structure.Neighbours",
        "Bio.PDB.Structure.Vector"
      ],
      "iterable": [
        "Data.Iterable"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "template-haskell": [],
      "text": [],
      "text-format": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Bio.PDB",
      "Bio.PDB.EventParser.PDBEventParser",
      "Bio.PDB.EventParser.PDBEventPrinter",
      "Bio.PDB.EventParser.PDBEvents",
      "Bio.PDB.Fasta",
      "Bio.PDB.IO",
      "Bio.PDB.IO.OpenAnyFile",
      "Bio.PDB.Iterable",
      "Bio.PDB.Structure",
      "Bio.PDB.Structure.Elements",
      "Bio.PDB.Structure.Neighbours",
      "Bio.PDB.Structure.Vector",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.IfElse",
      "Control.Monad.State",
      "Data.ByteString.Char8",
      "Data.Foldable",
      "Data.IORef",
      "Data.Iterable",
      "Data.List",
      "Data.Map",
      "Data.Octree",
      "Data.Time",
      "Data.Vector",
      "Data.Vector.V3",
      "Graphics.Rendering.OpenGL",
      "Graphics.UI.GLUT",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Mem",
      "System.Process",
      "Text.Printf"
    ],
    "modules": [],
    "name": "hPDB-examples",
    "version": "1.2.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "GHC.Generics",
        "GHC.TypeLits"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes"
      ],
      "blaze-markup": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "cryptonite": [
        "Crypto.Cipher.AES",
        "Crypto.Cipher.Types",
        "Crypto.Error",
        "Crypto.Hash",
        "Crypto.Hash.Algorithms",
        "Crypto.MAC.HMAC",
        "Crypto.Random"
      ],
      "data-default": [
        "Data.Default"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-media": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "memory": [
        "Data.ByteArray"
      ],
      "mtl": [
        "Control.Monad.Except"
      ],
      "servant": [
        "Servant.API.Experimental.Auth",
        "Servant.API.ResponseHeaders"
      ],
      "servant-auth-cookie": [],
      "servant-blaze": [
        "Servant.HTML.Blaze"
      ],
      "servant-server": [
        "Servant",
        "Servant.Server",
        "Servant.Server.Experimental.Auth"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "wai": [
        "Network.Wai"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Except",
      "Criterion",
      "Criterion.Main",
      "Crypto.Cipher.AES",
      "Crypto.Cipher.Types",
      "Crypto.Error",
      "Crypto.Hash",
      "Crypto.Hash.Algorithms",
      "Crypto.MAC.HMAC",
      "Crypto.Random",
      "Data.ByteArray",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.Default",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Serialize",
      "Data.Text",
      "Data.Time",
      "Data.Typeable",
      "GHC.Generics",
      "GHC.TypeLits",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Servant",
      "Servant.API.Experimental.Auth",
      "Servant.API.ResponseHeaders",
      "Servant.HTML.Blaze",
      "Servant.Server",
      "Servant.Server.Experimental.Auth",
      "Servant.Server.Experimental.Auth.Cookie",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Web.Cookie"
    ],
    "modules": [
      "Servant.Server.Experimental.Auth.Cookie"
    ],
    "name": "servant-auth-cookie",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.String"
      ],
      "containers": [
        "Data.Set"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "highlighting-kate": [],
      "mtl": [
        "Control.Monad.State"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.State",
      "Data.Algorithm.Diff",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Data",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Paths",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "Text.Blaze",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.String",
      "Text.Blaze.Renderer.String",
      "Text.Highlighting.Kate",
      "Text.Highlighting.Kate.Common",
      "Text.Highlighting.Kate.Format.HTML",
      "Text.Highlighting.Kate.Format.LaTeX",
      "Text.Highlighting.Kate.Styles",
      "Text.Highlighting.Kate.Syntax",
      "Text.Highlighting.Kate.Syntax.Abc",
      "Text.Highlighting.Kate.Syntax.Actionscript",
      "Text.Highlighting.Kate.Syntax.Ada",
      "Text.Highlighting.Kate.Syntax.Agda",
      "Text.Highlighting.Kate.Syntax.Alert",
      "Text.Highlighting.Kate.Syntax.Apache",
      "Text.Highlighting.Kate.Syntax.Asn1",
      "Text.Highlighting.Kate.Syntax.Asp",
      "Text.Highlighting.Kate.Syntax.Awk",
      "Text.Highlighting.Kate.Syntax.Bash",
      "Text.Highlighting.Kate.Syntax.Bibtex",
      "Text.Highlighting.Kate.Syntax.Boo",
      "Text.Highlighting.Kate.Syntax.C",
      "Text.Highlighting.Kate.Syntax.Changelog",
      "Text.Highlighting.Kate.Syntax.Clojure",
      "Text.Highlighting.Kate.Syntax.Cmake",
      "Text.Highlighting.Kate.Syntax.Coffee",
      "Text.Highlighting.Kate.Syntax.Coldfusion",
      "Text.Highlighting.Kate.Syntax.Commonlisp",
      "Text.Highlighting.Kate.Syntax.Cpp",
      "Text.Highlighting.Kate.Syntax.Cs",
      "Text.Highlighting.Kate.Syntax.Css",
      "Text.Highlighting.Kate.Syntax.Curry",
      "Text.Highlighting.Kate.Syntax.D",
      "Text.Highlighting.Kate.Syntax.Diff",
      "Text.Highlighting.Kate.Syntax.Djangotemplate",
      "Text.Highlighting.Kate.Syntax.Dockerfile",
      "Text.Highlighting.Kate.Syntax.Dot",
      "Text.Highlighting.Kate.Syntax.Doxygen",
      "Text.Highlighting.Kate.Syntax.Doxygenlua",
      "Text.Highlighting.Kate.Syntax.Dtd",
      "Text.Highlighting.Kate.Syntax.Eiffel",
      "Text.Highlighting.Kate.Syntax.Elixir",
      "Text.Highlighting.Kate.Syntax.Email",
      "Text.Highlighting.Kate.Syntax.Erlang",
      "Text.Highlighting.Kate.Syntax.Fasm",
      "Text.Highlighting.Kate.Syntax.Fortran",
      "Text.Highlighting.Kate.Syntax.Fsharp",
      "Text.Highlighting.Kate.Syntax.Gcc",
      "Text.Highlighting.Kate.Syntax.Glsl",
      "Text.Highlighting.Kate.Syntax.Gnuassembler",
      "Text.Highlighting.Kate.Syntax.Go",
      "Text.Highlighting.Kate.Syntax.Hamlet",
      "Text.Highlighting.Kate.Syntax.Haskell",
      "Text.Highlighting.Kate.Syntax.Haxe",
      "Text.Highlighting.Kate.Syntax.Html",
      "Text.Highlighting.Kate.Syntax.Idris",
      "Text.Highlighting.Kate.Syntax.Ini",
      "Text.Highlighting.Kate.Syntax.Isocpp",
      "Text.Highlighting.Kate.Syntax.Java",
      "Text.Highlighting.Kate.Syntax.Javadoc",
      "Text.Highlighting.Kate.Syntax.Javascript",
      "Text.Highlighting.Kate.Syntax.Json",
      "Text.Highlighting.Kate.Syntax.Jsp",
      "Text.Highlighting.Kate.Syntax.Julia",
      "Text.Highlighting.Kate.Syntax.Kotlin",
      "Text.Highlighting.Kate.Syntax.Latex",
      "Text.Highlighting.Kate.Syntax.Lex",
      "Text.Highlighting.Kate.Syntax.Lilypond",
      "Text.Highlighting.Kate.Syntax.LiterateCurry",
      "Text.Highlighting.Kate.Syntax.LiterateHaskell",
      "Text.Highlighting.Kate.Syntax.Llvm",
      "Text.Highlighting.Kate.Syntax.Lua",
      "Text.Highlighting.Kate.Syntax.M4",
      "Text.Highlighting.Kate.Syntax.Makefile",
      "Text.Highlighting.Kate.Syntax.Mandoc",
      "Text.Highlighting.Kate.Syntax.Markdown",
      "Text.Highlighting.Kate.Syntax.Mathematica",
      "Text.Highlighting.Kate.Syntax.Matlab",
      "Text.Highlighting.Kate.Syntax.Maxima",
      "Text.Highlighting.Kate.Syntax.Mediawiki",
      "Text.Highlighting.Kate.Syntax.Metafont",
      "Text.Highlighting.Kate.Syntax.Mips",
      "Text.Highlighting.Kate.Syntax.Modelines",
      "Text.Highlighting.Kate.Syntax.Modula2",
      "Text.Highlighting.Kate.Syntax.Modula3",
      "Text.Highlighting.Kate.Syntax.Monobasic",
      "Text.Highlighting.Kate.Syntax.Nasm",
      "Text.Highlighting.Kate.Syntax.Noweb",
      "Text.Highlighting.Kate.Syntax.Objectivec",
      "Text.Highlighting.Kate.Syntax.Objectivecpp",
      "Text.Highlighting.Kate.Syntax.Ocaml",
      "Text.Highlighting.Kate.Syntax.Octave",
      "Text.Highlighting.Kate.Syntax.Opencl",
      "Text.Highlighting.Kate.Syntax.Pascal",
      "Text.Highlighting.Kate.Syntax.Perl",
      "Text.Highlighting.Kate.Syntax.Php",
      "Text.Highlighting.Kate.Syntax.Pike",
      "Text.Highlighting.Kate.Syntax.Postscript",
      "Text.Highlighting.Kate.Syntax.Prolog",
      "Text.Highlighting.Kate.Syntax.Pure",
      "Text.Highlighting.Kate.Syntax.Python",
      "Text.Highlighting.Kate.Syntax.R",
      "Text.Highlighting.Kate.Syntax.Relaxng",
      "Text.Highlighting.Kate.Syntax.Relaxngcompact",
      "Text.Highlighting.Kate.Syntax.Rest",
      "Text.Highlighting.Kate.Syntax.Rhtml",
      "Text.Highlighting.Kate.Syntax.Roff",
      "Text.Highlighting.Kate.Syntax.Ruby",
      "Text.Highlighting.Kate.Syntax.Rust",
      "Text.Highlighting.Kate.Syntax.Scala",
      "Text.Highlighting.Kate.Syntax.Scheme",
      "Text.Highlighting.Kate.Syntax.Sci",
      "Text.Highlighting.Kate.Syntax.Sed",
      "Text.Highlighting.Kate.Syntax.Sgml",
      "Text.Highlighting.Kate.Syntax.Sql",
      "Text.Highlighting.Kate.Syntax.SqlMysql",
      "Text.Highlighting.Kate.Syntax.SqlPostgresql",
      "Text.Highlighting.Kate.Syntax.Tcl",
      "Text.Highlighting.Kate.Syntax.Tcsh",
      "Text.Highlighting.Kate.Syntax.Texinfo",
      "Text.Highlighting.Kate.Syntax.Verilog",
      "Text.Highlighting.Kate.Syntax.Vhdl",
      "Text.Highlighting.Kate.Syntax.Xml",
      "Text.Highlighting.Kate.Syntax.Xorg",
      "Text.Highlighting.Kate.Syntax.Xslt",
      "Text.Highlighting.Kate.Syntax.Xul",
      "Text.Highlighting.Kate.Syntax.Yacc",
      "Text.Highlighting.Kate.Syntax.Yaml",
      "Text.Highlighting.Kate.Syntax.Zsh",
      "Text.Highlighting.Kate.Types",
      "Text.ParserCombinators.Parsec",
      "Text.PrettyPrint",
      "Text.Printf",
      "Text.Regex.PCRE.ByteString",
      "Text.Regex.PCRE.Light",
      "Text.Regex.Posix",
      "Text.XML.HXT.Core"
    ],
    "modules": [
      "Text.Highlighting.Kate",
      "Text.Highlighting.Kate.Syntax",
      "Text.Highlighting.Kate.Types",
      "Text.Highlighting.Kate.Styles",
      "Text.Highlighting.Kate.Format.HTML",
      "Text.Highlighting.Kate.Format.LaTeX"
    ],
    "name": "highlighting-kate",
    "version": "0.6.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Traversable"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.Logic.Class",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.Foldable",
      "Data.Monoid",
      "Data.Traversable"
    ],
    "modules": [
      "Control.Monad.Logic",
      "Control.Monad.Logic.Class"
    ],
    "name": "logict",
    "version": "0.6.0.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "System.Environment",
        "System.Exit"
      ],
      "blaze-html": [],
      "blaze-markup": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "conduit-extra": [],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "monad-control": [],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "safe": [
        "Safe"
      ],
      "semigroups": [],
      "shakespeare": [
        "Text.Cassius",
        "Text.Hamlet",
        "Text.Julius",
        "Text.Lucius"
      ],
      "streaming-commons": [
        "Data.Streaming.Network"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": [
        "Network.Wai.Middleware.Autohead",
        "Network.Wai.Middleware.Gzip",
        "Network.Wai.Middleware.Jsonp"
      ],
      "wai-logger": [
        "Network.Wai.Logger"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "yaml": [
        "Data.Yaml",
        "Data.Yaml.Config"
      ],
      "yesod-auth": [],
      "yesod-core": [
        "Yesod.Core",
        "Yesod.Core.Types"
      ],
      "yesod-form": [
        "Yesod.Form"
      ],
      "yesod-persistent": [
        "Yesod.Persist"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Control.Monad.Logger",
      "Data.Aeson",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Default",
      "Data.HashMap.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Streaming.Network",
      "Data.String",
      "Data.Text",
      "Data.Yaml",
      "Data.Yaml.Config",
      "Language.Haskell.TH.Syntax",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Logger",
      "Network.Wai.Middleware.Autohead",
      "Network.Wai.Middleware.Gzip",
      "Network.Wai.Middleware.Jsonp",
      "Safe",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.Log.FastLogger",
      "System.Posix.Signals",
      "Text.Cassius",
      "Text.Hamlet",
      "Text.Julius",
      "Text.Lucius",
      "Yesod.Core",
      "Yesod.Core.Types",
      "Yesod.Default.Config",
      "Yesod.Form",
      "Yesod.Persist"
    ],
    "modules": [
      "Yesod",
      "Yesod.Default.Config",
      "Yesod.Default.Config2",
      "Yesod.Default.Main",
      "Yesod.Default.Util",
      "Yesod.Default.Handlers"
    ],
    "name": "yesod",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Data",
        "Data.Version",
        "Data.Word",
        "GHC.IO.Exception",
        "System.IO",
        "System.IO.Error"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc-boot-th": []
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.Data",
      "Data.Version",
      "Data.Word",
      "GHC.IO.Exception",
      "GHC.LanguageExtensions.Type",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "System.IO.Error"
    ],
    "modules": [
      "GHC.LanguageExtensions",
      "GHC.LanguageExtensions.Type",
      "GHC.Lexeme",
      "GHC.PackageDb",
      "GHC.Serialized"
    ],
    "name": "ghc-boot",
    "version": "8.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "auto-update": [
        "Control.AutoUpdate",
        "Control.Debounce"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "GHC.IO.Device",
        "GHC.IO.FD",
        "GHC.IO.IOMode"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "bytestring-builder": [],
      "directory": [
        "System.Directory"
      ],
      "easy-file": [
        "System.EasyFile"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.AutoUpdate",
      "Control.Concurrent",
      "Control.Debounce",
      "Control.Exception",
      "Control.Monad",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.IORef",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.UnixTime",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "GHC.IO.Device",
      "GHC.IO.FD",
      "GHC.IO.IOMode",
      "Graphics.Win32.Misc",
      "System.Directory",
      "System.EasyFile",
      "System.FilePath",
      "System.Locale",
      "System.Log.FastLogger.Date",
      "System.Log.FastLogger.File",
      "System.Log.FastLogger.FileIO",
      "System.Log.FastLogger.IO",
      "System.Log.FastLogger.IORef",
      "System.Log.FastLogger.Logger",
      "System.Log.FastLogger.LogStr",
      "System.Posix",
      "System.Win32.File",
      "System.Win32.Types"
    ],
    "modules": [
      "System.Log.FastLogger",
      "System.Log.FastLogger.File",
      "System.Log.FastLogger.Date"
    ],
    "name": "fast-logger",
    "version": "2.4.7"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "wai": [
        "Network.Wai"
      ],
      "web-routes": [
        "Web.Routes.Base",
        "Web.Routes.PathInfo",
        "Web.Routes.RouteT",
        "Web.Routes.Site"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.HTTP.Types",
      "Network.Wai",
      "Web.Routes.Base",
      "Web.Routes.PathInfo",
      "Web.Routes.RouteT",
      "Web.Routes.Site"
    ],
    "modules": [
      "Web.Routes.Wai"
    ],
    "name": "web-routes-wai",
    "version": "0.24.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Control.Monad.Zip",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Classes",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "Text.Show"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Applicative.Lift",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.Signatures",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Control.Monad.Zip",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Generics",
      "Prelude",
      "Text.Show"
    ],
    "modules": [
      "Control.Monad.Trans.Instances"
    ],
    "name": "transformers-compat",
    "version": "0.5.1.4"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Int",
        "Data.Maybe",
        "Data.Proxy",
        "GHC.Generics",
        "GHC.TypeLits",
        "Text.Read"
      ],
      "containers": [
        "Data.Map"
      ],
      "http-api-data": [
        "Web.HttpApiData",
        "Web.HttpApiData.Internal"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "servant": [
        "Servant.API"
      ],
      "servant-client": [
        "Servant.Client"
      ],
      "servant-docs": [
        "Servant.Docs",
        "Servant.Docs.Internal"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Clock.POSIX"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Aeson",
      "Data.Int",
      "Data.Map",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Text",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock.POSIX",
      "GHC.Generics",
      "GHC.TypeLits",
      "Network.HTTP.Client",
      "Servant.API",
      "Servant.Client",
      "Servant.Docs",
      "Servant.Docs.Internal",
      "Servant.Docs.Pandoc",
      "SMSAero",
      "SMSAero.API",
      "SMSAero.Client",
      "SMSAero.Types",
      "Text.Read",
      "Web.HttpApiData",
      "Web.HttpApiData.Internal"
    ],
    "modules": [
      "SMSAero",
      "SMSAero.API",
      "SMSAero.Client",
      "SMSAero.Types"
    ],
    "name": "smsaero",
    "version": "0.6.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Simple",
        "Distribution.Simple.LocalBuildInfo",
        "Distribution.Simple.Setup",
        "Distribution.Verbosity"
      ],
      "base": [
        "Control.Monad",
        "Data.List",
        "Data.Maybe"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "fay": [
        "Fay"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "safe": [
        "Safe"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Default",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Text",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Simple",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.Setup",
      "Distribution.Verbosity",
      "Fay",
      "Safe",
      "System.Directory",
      "System.FilePath"
    ],
    "modules": [
      "Fay.Builder"
    ],
    "name": "fay-builder",
    "version": "0.2.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Traversable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Foldable",
      "Data.Traversable"
    ],
    "modules": [
      "Control.Monad.Omega"
    ],
    "name": "control-monad-omega",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "Win32": [
        "System.Win32",
        "System.Win32.File"
      ],
      "Win32-notify": [],
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Data.Bits",
        "Data.List"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Data.Bits",
      "Data.List",
      "Data.Map",
      "System.Directory",
      "System.Win32",
      "System.Win32.File",
      "System.Win32.FileNotify",
      "System.Win32.Notify"
    ],
    "modules": [
      "System.Win32.Notify"
    ],
    "name": "Win32-notify",
    "version": "0.3.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Coerce",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Data.Proxy",
        "Data.String",
        "Data.Typeable",
        "Data.Type.Equality",
        "Data.Word",
        "GHC.TypeLits",
        "Unsafe.Coerce"
      ],
      "constraints": [
        "Data.Constraint"
      ],
      "monad-skeleton": [
        "Control.Monad.Skeleton"
      ],
      "profunctors": [
        "Data.Profunctor",
        "Data.Profunctor.Unsafe"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Skeleton",
      "Control.Monad.State",
      "Data.Aeson",
      "Data.Bits",
      "Data.Char",
      "Data.Coerce",
      "Data.Constraint",
      "Data.Extensible",
      "Data.Extensible.Class",
      "Data.Extensible.Dictionary",
      "Data.Extensible.Effect",
      "Data.Extensible.Field",
      "Data.Extensible.Inclusion",
      "Data.Extensible.Internal",
      "Data.Extensible.Internal.Rig",
      "Data.Extensible.Match",
      "Data.Extensible.Nullable",
      "Data.Extensible.Plain",
      "Data.Extensible.Product",
      "Data.Extensible.Record",
      "Data.Extensible.Sum",
      "Data.Extensible.TH",
      "Data.Extensible.Wrapper",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.HashMap.Strict",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Profunctor.Unsafe",
      "Data.Proxy",
      "Data.String",
      "Data.Tagged",
      "Data.Typeable",
      "Data.Type.Equality",
      "Data.Word",
      "GHC.TypeLits",
      "Language.Haskell.TH",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Extensible",
      "Data.Extensible.Class",
      "Data.Extensible.Dictionary",
      "Data.Extensible.Field",
      "Data.Extensible.Effect",
      "Data.Extensible.Inclusion",
      "Data.Extensible.Internal",
      "Data.Extensible.Internal.Rig",
      "Data.Extensible.Match",
      "Data.Extensible.Nullable",
      "Data.Extensible.Plain",
      "Data.Extensible.Product",
      "Data.Extensible.Record",
      "Data.Extensible.Sum",
      "Data.Extensible.Wrapper",
      "Data.Extensible.TH"
    ],
    "name": "extensible",
    "version": "0.3.7"
  },
  {
    "dependencies": {
      "base": [],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "lucid": [],
      "servant": []
    },
    "imports": [
      "Network.HTTP.Media"
    ],
    "modules": [
      "Servant.HTML.Lucid"
    ],
    "name": "servant-lucid",
    "version": "0.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Data.Semigroup",
        "Numeric.Natural"
      ],
      "containers": [
        "Data.Set"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Check",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Set",
      "Numeric.Natural",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Check"
    ],
    "name": "data-check",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "GHC.Generics",
        "Text.Printf"
      ],
      "ghc-prim": [],
      "pretty": [
        "Text.PrettyPrint"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "GHC.Generics",
      "Test.QuickCheck",
      "Text.PrettyPrint",
      "Text.PrettyPrint.GenericPretty",
      "Text.Printf"
    ],
    "modules": [
      "Text.PrettyPrint.GenericPretty"
    ],
    "name": "GenericPretty",
    "version": "1.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Foldable",
      "Data.Functor",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Word",
      "Network.HTTP.Media",
      "Network.HTTP.Media.Accept",
      "Network.HTTP.Media.Accept.Tests",
      "Network.HTTP.Media.Gen",
      "Network.HTTP.Media.Language",
      "Network.HTTP.Media.Language.Gen",
      "Network.HTTP.Media.Language.Internal",
      "Network.HTTP.Media.Language.Tests",
      "Network.HTTP.Media.MediaType",
      "Network.HTTP.Media.MediaType.Gen",
      "Network.HTTP.Media.MediaType.Internal",
      "Network.HTTP.Media.MediaType.Tests",
      "Network.HTTP.Media.Quality",
      "Network.HTTP.Media.RenderHeader",
      "Network.HTTP.Media.Tests",
      "Network.HTTP.Media.Utils",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Gen"
    ],
    "modules": [
      "Network.HTTP.Media",
      "Network.HTTP.Media.Accept",
      "Network.HTTP.Media.Language",
      "Network.HTTP.Media.MediaType",
      "Network.HTTP.Media.RenderHeader"
    ],
    "name": "http-media",
    "version": "0.6.4"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "http-types": [],
      "lrucache": [
        "Data.Cache.LRU"
      ],
      "text": [],
      "wai": [],
      "wai-middleware-caching": [
        "Network.Wai.Middleware.Cache"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Cache.LRU",
      "Network.Wai.Middleware.Cache"
    ],
    "modules": [
      "Network.Wai.Middleware.LRUCache"
    ],
    "name": "wai-middleware-caching-lru",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Foreign.C",
        "Foreign.Safe",
        "System.Environment"
      ]
    },
    "imports": [
      "Control.Monad",
      "Foreign.C",
      "Foreign.Safe",
      "GHC.Windows",
      "System.Environment",
      "System.Posix.Env"
    ],
    "modules": [
      "System.SetEnv"
    ],
    "name": "setenv",
    "version": "0.1.1.3"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "clock": [],
      "containers": [
        "Data.Map"
      ],
      "http-client": [],
      "http-client-tls": [],
      "http-types": [],
      "resource-pool": [],
      "stm": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding"
    ],
    "modules": [
      "Database.InfluxDB.Writer"
    ],
    "name": "libinfluxdb",
    "version": "0.0.4"
  },
  {
    "dependencies": {
      "Cabal": [],
      "HaRe": [],
      "Strafunski-StrategyLib": [
        "Data.Generics.Strafunski.StrategyLib.StrategyLib"
      ],
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Foreign.C.Types",
        "GHC.Exts",
        "Numeric",
        "Prelude"
      ],
      "cabal-helper": [
        "Distribution.Helper"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "ghc": [],
      "ghc-exactprint": [
        "Language.Haskell.GHC.ExactPrint",
        "Language.Haskell.GHC.ExactPrint.Annotate",
        "Language.Haskell.GHC.ExactPrint.Parsers",
        "Language.Haskell.GHC.ExactPrint.Preprocess",
        "Language.Haskell.GHC.ExactPrint.Print",
        "Language.Haskell.GHC.ExactPrint.Transform",
        "Language.Haskell.GHC.ExactPrint.Types",
        "Language.Haskell.GHC.ExactPrint.Utils"
      ],
      "ghc-mod": [
        "Language.Haskell.GhcMod",
        "Language.Haskell.GhcMod.Internal",
        "Language.Haskell.GhcMod.Monad.Types",
        "Language.Haskell.GhcMod.Types"
      ],
      "ghc-paths": [],
      "ghc-prim": [],
      "ghc-syb-utils": [
        "GHC.SYB.Utils"
      ],
      "gitrev": [],
      "hslogger": [
        "System.Log.Handler.Simple",
        "System.Log.Logger"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monoid-extras": [],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State"
      ],
      "old-time": [],
      "optparse-applicative": [],
      "optparse-simple": [],
      "parsec": [
        "Text.Parsec.Char",
        "Text.Parsec.Combinator",
        "Text.Parsec.Prim"
      ],
      "pretty": [],
      "rosezipper": [],
      "semigroups": [],
      "syb": [
        "Data.Generics",
        "Data.Generics.Aliases",
        "Data.Generics.Schemes"
      ],
      "syz": [
        "Data.Generics.Zipper"
      ],
      "time": [],
      "transformers": [],
      "transformers-base": []
    },
    "imports": [
      "AddOneParameter.C1",
      "AddOneParameter.C2",
      "AddOneParameter.D1",
      "AddOneParameter.D2",
      "AddOneParameter.D3",
      "B2",
      "B3",
      "B6",
      "Bag",
      "BasicTypes",
      "C2",
      "C3",
      "C6",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.State",
      "Control.Monad.Trans.Control",
      "D2",
      "D3",
      "D6",
      "Data.Algorithm.Diff",
      "Data.Algorithm.DiffOutput",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Generics",
      "Data.Generics.Aliases",
      "Data.Generics.Schemes",
      "Data.Generics.Strafunski.StrategyLib.StrategyLib",
      "Data.Generics.Zipper",
      "Data.IORef",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Set",
      "Data.Text",
      "Data.Tree.DUAL.Internal",
      "Demote.C1",
      "Demote.C2",
      "Demote.D1",
      "Demote.D2",
      "Digraph",
      "Distribution.Helper",
      "DupDef.Dd1",
      "DynFlags",
      "ErrUtils",
      "Exception",
      "FastString",
      "Foo.Bar",
      "Foo.Baz",
      "Foreign.C.Types",
      "GHC",
      "GHC.Exts",
      "GhcMonad",
      "GHC.SYB.Utils",
      "HscTypes",
      "Language.Haskell.GHC.ExactPrint",
      "Language.Haskell.GHC.ExactPrint.Annotate",
      "Language.Haskell.GHC.ExactPrint.Parsers",
      "Language.Haskell.GHC.ExactPrint.Preprocess",
      "Language.Haskell.GHC.ExactPrint.Print",
      "Language.Haskell.GHC.ExactPrint.Transform",
      "Language.Haskell.GHC.ExactPrint.Types",
      "Language.Haskell.GHC.ExactPrint.Utils",
      "Language.Haskell.GhcMod",
      "Language.Haskell.GhcMod.Internal",
      "Language.Haskell.GhcMod.Monad.Types",
      "Language.Haskell.GhcMod.Types",
      "Language.Haskell.Refact.API",
      "Language.Haskell.Refact.Refactoring.AddRmParam",
      "Language.Haskell.Refact.Refactoring.Case",
      "Language.Haskell.Refact.Refactoring.DupDef",
      "Language.Haskell.Refact.Refactoring.MoveDef",
      "Language.Haskell.Refact.Refactoring.Renaming",
      "Language.Haskell.Refact.Refactoring.RoundTrip",
      "Language.Haskell.Refact.Refactoring.Simple",
      "Language.Haskell.Refact.Refactoring.SwapArgs",
      "Language.Haskell.Refact.Utils.ExactPrint",
      "Language.Haskell.Refact.Utils.GhcModuleGraph",
      "Language.Haskell.Refact.Utils.GhcUtils",
      "Language.Haskell.Refact.Utils.GhcVersionSpecific",
      "Language.Haskell.Refact.Utils.LocUtils",
      "Language.Haskell.Refact.Utils.Monad",
      "Language.Haskell.Refact.Utils.MonadFunctions",
      "Language.Haskell.Refact.Utils.Types",
      "Language.Haskell.Refact.Utils.TypeSyn",
      "Language.Haskell.Refact.Utils.TypeUtils",
      "Language.Haskell.Refact.Utils.Utils",
      "Language.Haskell.Refact.Utils.Variables",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Lexer",
      "LiftOneLevel.C1",
      "LiftOneLevel.C2",
      "LiftOneLevel.C3",
      "LiftOneLevel.D1",
      "LiftOneLevel.D2",
      "LiftOneLevel.D3",
      "LiftToToplevel.C1",
      "LiftToToplevel.C2",
      "LiftToToplevel.C3",
      "LiftToToplevel.D1",
      "LiftToToplevel.D2",
      "LiftToToplevel.D3",
      "M2",
      "M3",
      "Module",
      "MonadUtils",
      "Name",
      "Numeric",
      "Outputable",
      "Panic",
      "Paths",
      "Prelude",
      "RdrName",
      "Renaming.B1",
      "Renaming.B2",
      "Renaming.B3",
      "Renaming.B4",
      "Renaming.B5",
      "Renaming.C1",
      "Renaming.C2",
      "Renaming.C3",
      "Renaming.C4",
      "Renaming.C5",
      "Renaming.D1",
      "Renaming.D2",
      "Renaming.D3",
      "Renaming.D4",
      "Renaming.D5",
      "Renaming.D6",
      "Renaming.D7",
      "Renaming.QualServer",
      "RmOneParameter.D1",
      "RmOneParameter.D2",
      "S1",
      "SrcLoc",
      "StringBuffer",
      "System.Directory",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.Log.Handler.Simple",
      "System.Log.Logger",
      "TestUtils",
      "Text.Parsec.Char",
      "Text.Parsec.Combinator",
      "Text.Parsec.Prim",
      "TH.Printf",
      "TyCon",
      "TyCoRep",
      "TypeRep",
      "TypeUtils.C",
      "Unique",
      "Var"
    ],
    "modules": [
      "Language.Haskell.Refact.API",
      "Language.Haskell.Refact.HaRe",
      "Language.Haskell.Refact.Refactoring.AddRmParam",
      "Language.Haskell.Refact.Refactoring.Case",
      "Language.Haskell.Refact.Refactoring.DupDef",
      "Language.Haskell.Refact.Refactoring.MoveDef",
      "Language.Haskell.Refact.Refactoring.Renaming",
      "Language.Haskell.Refact.Refactoring.RoundTrip",
      "Language.Haskell.Refact.Refactoring.Simple",
      "Language.Haskell.Refact.Refactoring.SwapArgs",
      "Language.Haskell.Refact.Utils.ExactPrint",
      "Language.Haskell.Refact.Utils.GhcBugWorkArounds",
      "Language.Haskell.Refact.Utils.GhcModuleGraph",
      "Language.Haskell.Refact.Utils.GhcUtils",
      "Language.Haskell.Refact.Utils.GhcVersionSpecific",
      "Language.Haskell.Refact.Utils.LocUtils",
      "Language.Haskell.Refact.Utils.Monad",
      "Language.Haskell.Refact.Utils.MonadFunctions",
      "Language.Haskell.Refact.Utils.TypeSyn",
      "Language.Haskell.Refact.Utils.TypeUtils",
      "Language.Haskell.Refact.Utils.Types",
      "Language.Haskell.Refact.Utils.Utils",
      "Language.Haskell.Refact.Utils.Variables",
      "Paths_HaRe"
    ],
    "name": "HaRe",
    "version": "0.8.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Bool",
        "Data.Maybe",
        "Data.String",
        "System.IO",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "connection": [
        "Network.Connection"
      ],
      "network": [
        "Network.Socket"
      ],
      "websockets": [
        "Network.WebSockets",
        "Network.WebSockets.Stream"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Data.Bool",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Maybe",
      "Data.String",
      "Network.Connection",
      "Network.Socket",
      "Network.WebSockets",
      "Network.WebSockets.Stream",
      "System.IO",
      "System.IO.Error"
    ],
    "modules": [
      "Wuss"
    ],
    "name": "wuss",
    "version": "1.1.1"
  },
  {
    "dependencies": {
      "IPv6Addr": [],
      "base": [],
      "cmdargs": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Data.Text",
      "Data.Text.IO"
    ],
    "modules": [],
    "name": "ip6addr",
    "version": "0.5.1.3"
  },
  {
    "dependencies": {
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath.Posix"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "tinytemplate": [
        "Data.Text.Template"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Except"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Except",
      "Data.IORef",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Template",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath.Posix",
      "System.IO",
      "Text.PrettyPrint.ANSI.Leijen"
    ],
    "modules": [],
    "name": "skeletons",
    "version": "0.4.0"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [
        "Control.Exception"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "io-streams": [
        "System.IO.Streams",
        "System.IO.Streams.Attoparsec"
      ],
      "network": [
        "Network.Socket"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Exception",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Network.Socket",
      "System.IO.Streams",
      "System.IO.Streams.Attoparsec",
      "System.IO.Streams.Network.HAProxy",
      "System.IO.Streams.Network.HAProxy.Tests"
    ],
    "modules": [
      "System.IO.Streams.Network.HAProxy"
    ],
    "name": "io-streams-haproxy",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Fixed",
        "Data.Int",
        "Data.IORef",
        "Data.Monoid",
        "Data.Typeable",
        "Foreign",
        "Foreign.C",
        "Prelude",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "containers": [
        "Data.Map"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "persistent": [
        "Database.Persist",
        "Database.Persist.Sql",
        "Database.Persist.Sql.Types.Internal"
      ],
      "persistent-sqlite": [],
      "resource-pool": [
        "Data.Pool"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource",
        "Data.Acquire"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Writer",
      "Data.Acquire",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Database.Persist",
      "Database.Persist.Sql",
      "Database.Persist.Sqlite",
      "Database.Persist.Sql.Types.Internal",
      "Database.Persist.TH",
      "Database.Sqlite",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Fixed",
      "Data.Int",
      "Data.IORef",
      "Data.Map",
      "Data.Monoid",
      "Data.Pool",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Time",
      "Data.Typeable",
      "Foreign",
      "Foreign.C",
      "Prelude",
      "System.IO",
      "System.IO.Temp",
      "System.Locale",
      "Test.Hspec"
    ],
    "modules": [
      "Database.Sqlite",
      "Database.Persist.Sqlite"
    ],
    "name": "persistent-sqlite",
    "version": "2.6"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "aeson": [],
      "aeson-pretty": [],
      "base": [],
      "bytestring": [],
      "directory": [],
      "filepath": [],
      "hspec": [],
      "hspec-golden-aeson": [],
      "quickcheck-arbitrary-adt": [],
      "random": [],
      "servant": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Servant.Aeson.GenericSpecs",
      "Servant.Aeson.Internal"
    ],
    "name": "servant-aeson-specs",
    "version": "0.5.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "GHC.IO.Handle",
        "Prelude",
        "System.IO"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "GHC.Handle",
      "GHC.IO.Handle",
      "Prelude",
      "System.Directory",
      "System.IO"
    ],
    "modules": [
      "System.IO.Silently"
    ],
    "name": "silently",
    "version": "1.2.5"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [],
      "bytestring": [],
      "case-insensitive": [],
      "http-types": [],
      "network": [],
      "transformers": [],
      "wai": [],
      "websockets": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Wai.Handler.WebSockets"
    ],
    "name": "wai-websockets",
    "version": "3.0.1.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "attoparsec": [],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Monoid",
        "Data.Proxy",
        "Data.String",
        "Data.Typeable"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header"
      ],
      "network-uri": [
        "Network.URI"
      ],
      "safe": [],
      "servant": [
        "Servant.API.BasicAuth",
        "Servant.API.ContentTypes"
      ],
      "string-conversions": [
        "Data.String.Conversions"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Except"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Except",
      "Data.ByteString.Base64",
      "Data.ByteString.Lazy",
      "Data.Monoid",
      "Data.Proxy",
      "Data.String",
      "Data.String.Conversions",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Typeable",
      "Network.HTTP.Client",
      "Network.HTTP.Media",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.URI",
      "Servant.API.BasicAuth",
      "Servant.API.ContentTypes",
      "Servant.Common.BaseUrl",
      "Servant.Common.Req",
      "Web.HttpApiData"
    ],
    "modules": [
      "Servant.Client",
      "Servant.Client.Experimental.Auth",
      "Servant.Common.BaseUrl",
      "Servant.Common.BasicAuth",
      "Servant.Common.Req"
    ],
    "name": "servant-client",
    "version": "0.8.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "amazonka-core": [],
      "base": [],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "conduit": [],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "groom": [],
      "http-client": [
        "Network.HTTP.Client.Internal"
      ],
      "http-types": [],
      "process": [],
      "resourcet": [],
      "tasty": [],
      "tasty-hunit": [],
      "template-haskell": [],
      "temporary": [],
      "text": [
        "Data.Text.Encoding"
      ],
      "time": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "yaml": [
        "Data.Yaml"
      ]
    },
    "imports": [
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Conduit.Binary",
      "Data.HashMap.Strict",
      "Data.Text.Encoding",
      "Data.Yaml",
      "Network.HTTP.Client.Internal"
    ],
    "modules": [
      "Test.AWS.Assert",
      "Test.AWS.Diff",
      "Test.AWS.Fixture",
      "Test.AWS.Orphans",
      "Test.AWS.Prelude",
      "Test.AWS.TH"
    ],
    "name": "amazonka-test",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "directory": [],
      "filepath": [],
      "time": []
    },
    "imports": [
      "Data.ByteString.Char8"
    ],
    "modules": [
      "System.RotatingLog"
    ],
    "name": "rotating-log",
    "version": "0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Category",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Category",
      "Data.TASequence",
      "Data.TASequence.ConsList",
      "Data.TASequence.FastQueue",
      "Data.TASequence.SnocList",
      "Data.TASequence.ToCatQueue",
      "Prelude"
    ],
    "modules": [
      "Data.TASequence.BinaryTree",
      "Data.TASequence",
      "Data.TASequence.ConsList",
      "Data.TASequence.FastCatQueue",
      "Data.TASequence.FastQueue",
      "Data.TASequence.FingerTree",
      "Data.TASequence.Queue",
      "Data.TASequence.SnocList",
      "Data.TASequence.ToCatQueue"
    ],
    "name": "type-aligned",
    "version": "0.9.6"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.String",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "GHC.Exts",
        "GHC.Generics",
        "System.Environment",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "bimap": [
        "Data.Bimap"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "binary-bits": [
        "Data.Binary.Bits",
        "Data.Binary.Bits.Get",
        "Data.Binary.Bits.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap.Strict",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "octane": [],
      "overloaded-records": [
        "Data.OverloadedRecords.TH"
      ],
      "regex-compat": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "unordered-containers": [],
      "vector": [
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Monad",
      "Criterion",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Bimap",
      "Data.Binary",
      "Data.Binary.Bits",
      "Data.Binary.Bits.Get",
      "Data.Binary.Bits.Put",
      "Data.Binary.Get",
      "Data.Binary.IEEE754",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Default.Class",
      "Data.FileEmbed",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.IntMap.Strict",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.OverloadedRecords.TH",
      "Data.Proxy",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Vector.Unboxed",
      "Data.Version",
      "Data.Word",
      "Debug.Trace",
      "GHC.Exts",
      "GHC.Generics",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Octane",
      "OctaneBench",
      "Octane.Data",
      "OctaneSpec",
      "Octane.Type",
      "Octane.Type.Boolean",
      "Octane.Type.CacheItem",
      "Octane.Type.CacheProperty",
      "Octane.Type.ClassItem",
      "Octane.Type.CompressedWord",
      "Octane.Type.Dictionary",
      "Octane.Type.Float32",
      "Octane.Type.Frame",
      "Octane.Type.Initialization",
      "Octane.Type.Int32",
      "Octane.Type.Int8",
      "Octane.Type.KeyFrame",
      "Octane.Type.List",
      "Octane.Type.Mark",
      "Octane.Type.Message",
      "Octane.Type.OptimizedReplay",
      "Octane.Type.Property",
      "Octane.Type.Property.ArrayProperty",
      "Octane.Type.Property.BoolProperty",
      "Octane.Type.Property.ByteProperty",
      "Octane.Type.Property.FloatProperty",
      "Octane.Type.Property.IntProperty",
      "Octane.Type.Property.NameProperty",
      "Octane.Type.Property.QWordProperty",
      "Octane.Type.Property.StrProperty",
      "Octane.Type.RawReplay",
      "Octane.Type.RemoteId",
      "Octane.Type.RemoteId.PlayStationId",
      "Octane.Type.RemoteId.SplitscreenId",
      "Octane.Type.RemoteId.SteamId",
      "Octane.Type.RemoteId.XboxId",
      "Octane.Type.Replay",
      "Octane.Type.ReplayWithFrames",
      "Octane.Type.ReplayWithoutFrames",
      "Octane.Type.Replication",
      "Octane.Type.State",
      "Octane.Type.Stream",
      "Octane.Type.Text",
      "Octane.Type.Value",
      "Octane.Type.Value.BooleanValue",
      "Octane.Type.Value.ByteValue",
      "Octane.Type.Value.CamSettingsValue",
      "Octane.Type.Value.DemolishValue",
      "Octane.Type.Value.EnumValue",
      "Octane.Type.Value.ExplosionValue",
      "Octane.Type.Value.FlaggedIntValue",
      "Octane.Type.Value.FloatValue",
      "Octane.Type.Value.GameModeValue",
      "Octane.Type.Value.IntValue",
      "Octane.Type.Value.LoadoutOnlineValue",
      "Octane.Type.Value.LoadoutsOnlineValue",
      "Octane.Type.Value.LoadoutsValue",
      "Octane.Type.Value.LoadoutValue",
      "Octane.Type.Value.LocationValue",
      "Octane.Type.Value.MusicStingerValue",
      "Octane.Type.Value.PickupValue",
      "Octane.Type.Value.PrivateMatchSettingsValue",
      "Octane.Type.Value.QWordValue",
      "Octane.Type.Value.RelativeRotationValue",
      "Octane.Type.Value.ReservationValue",
      "Octane.Type.Value.RigidBodyStateValue",
      "Octane.Type.Value.StringValue",
      "Octane.Type.Value.TeamPaintValue",
      "Octane.Type.Value.UniqueIdValue",
      "Octane.Type.Value.WeldedInfoValue",
      "Octane.Type.Vector",
      "Octane.Type.Word16",
      "Octane.Type.Word32",
      "Octane.Type.Word64",
      "Octane.Type.Word8",
      "Octane.Utility",
      "Octane.Utility.ClassPropertyMap",
      "Octane.Utility.CRC",
      "Octane.Utility.Embed",
      "Octane.Utility.Endian",
      "Octane.Utility.Generator",
      "Octane.Utility.Optimizer",
      "Octane.Utility.Parser",
      "Octane.Version",
      "Paths",
      "System.Environment",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.Hspec",
      "Test.Tasty.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Octane",
      "Octane.Data",
      "Octane.Type",
      "Octane.Type.Boolean",
      "Octane.Type.CacheItem",
      "Octane.Type.CacheProperty",
      "Octane.Type.ClassItem",
      "Octane.Type.CompressedWord",
      "Octane.Type.Dictionary",
      "Octane.Type.Float32",
      "Octane.Type.Frame",
      "Octane.Type.Initialization",
      "Octane.Type.Int32",
      "Octane.Type.Int8",
      "Octane.Type.KeyFrame",
      "Octane.Type.List",
      "Octane.Type.Mark",
      "Octane.Type.Message",
      "Octane.Type.OptimizedReplay",
      "Octane.Type.Property",
      "Octane.Type.Property.ArrayProperty",
      "Octane.Type.Property.BoolProperty",
      "Octane.Type.Property.ByteProperty",
      "Octane.Type.Property.FloatProperty",
      "Octane.Type.Property.IntProperty",
      "Octane.Type.Property.NameProperty",
      "Octane.Type.Property.QWordProperty",
      "Octane.Type.Property.StrProperty",
      "Octane.Type.RawReplay",
      "Octane.Type.RemoteId",
      "Octane.Type.RemoteId.PlayStationId",
      "Octane.Type.RemoteId.SplitscreenId",
      "Octane.Type.RemoteId.SteamId",
      "Octane.Type.RemoteId.XboxId",
      "Octane.Type.Replay",
      "Octane.Type.ReplayWithFrames",
      "Octane.Type.ReplayWithoutFrames",
      "Octane.Type.Replication",
      "Octane.Type.State",
      "Octane.Type.Stream",
      "Octane.Type.Text",
      "Octane.Type.Value",
      "Octane.Type.Value.BooleanValue",
      "Octane.Type.Value.ByteValue",
      "Octane.Type.Value.CamSettingsValue",
      "Octane.Type.Value.DemolishValue",
      "Octane.Type.Value.EnumValue",
      "Octane.Type.Value.ExplosionValue",
      "Octane.Type.Value.FlaggedIntValue",
      "Octane.Type.Value.FloatValue",
      "Octane.Type.Value.GameModeValue",
      "Octane.Type.Value.IntValue",
      "Octane.Type.Value.LoadoutOnlineValue",
      "Octane.Type.Value.LoadoutsOnlineValue",
      "Octane.Type.Value.LoadoutsValue",
      "Octane.Type.Value.LoadoutValue",
      "Octane.Type.Value.LocationValue",
      "Octane.Type.Value.MusicStingerValue",
      "Octane.Type.Value.PickupValue",
      "Octane.Type.Value.PrivateMatchSettingsValue",
      "Octane.Type.Value.QWordValue",
      "Octane.Type.Value.RelativeRotationValue",
      "Octane.Type.Value.ReservationValue",
      "Octane.Type.Value.RigidBodyStateValue",
      "Octane.Type.Value.StringValue",
      "Octane.Type.Value.TeamPaintValue",
      "Octane.Type.Value.UniqueIdValue",
      "Octane.Type.Value.WeldedInfoValue",
      "Octane.Type.Vector",
      "Octane.Type.Word16",
      "Octane.Type.Word32",
      "Octane.Type.Word64",
      "Octane.Type.Word8",
      "Octane.Utility",
      "Octane.Utility.ClassPropertyMap",
      "Octane.Utility.CRC",
      "Octane.Utility.Embed",
      "Octane.Utility.Endian",
      "Octane.Utility.Generator",
      "Octane.Utility.Optimizer",
      "Octane.Utility.Parser",
      "Octane.Version"
    ],
    "name": "octane",
    "version": "0.16.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.ReplicaPool",
      "Network.Google.ReplicaPool.Types",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.AbandonInstances",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.Delete",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.DeleteInstances",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.Get",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.Insert",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.List",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.RecreateInstances",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.Resize",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.SetInstanceTemplate",
      "Network.Google.Resource.ReplicaPool.InstanceGroupManagers.SetTargetPools",
      "Network.Google.Resource.ReplicaPool.ZoneOperations.Get",
      "Network.Google.Resource.ReplicaPool.ZoneOperations.List"
    ],
    "name": "gogol-replicapool",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.CustomSearch",
      "Network.Google.CustomSearch.Types",
      "Network.Google.Resource.Search.CSE.List"
    ],
    "name": "gogol-customsearch",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text",
        "Data.Attoparsec.Text.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Complex",
        "Data.Data",
        "Data.Fixed",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Types",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "directory": [],
      "hashable": [
        "Data.Hashable"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.Int",
        "Data.Text.Lazy.Builder.RealFloat",
        "Data.Text.Lazy.IO"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Text.Lazy",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Complex",
      "Data.Configurator.Instances",
      "Data.Configurator.Parser",
      "Data.Configurator.Types.Internal",
      "Data.Data",
      "Data.Fixed",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Text.Lazy.Builder.RealFloat",
      "Data.Text.Lazy.IO",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.Types",
      "Prelude",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "System.PosixCompat.Files",
      "System.Posix.Types"
    ],
    "modules": [
      "Data.Configurator",
      "Data.Configurator.Types"
    ],
    "name": "configurator",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "HUnit": [],
      "base": [],
      "hspec-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Test.Hspec.Contrib.Retry",
      "Test.Hspec.Contrib.HUnit"
    ],
    "name": "hspec-contrib",
    "version": "0.3.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "GHC.Generics",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Data",
      "GHC.Generics",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Email.Validate",
      "Text.Read"
    ],
    "modules": [
      "Text.Email.Validate",
      "Text.Email.Parser"
    ],
    "name": "email-validate",
    "version": "2.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Int",
        "Data.Maybe",
        "Foreign.C.Types",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.IO.Exception",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Int",
      "Data.Maybe",
      "Foreign.C.Types",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.IO.Exception",
      "Network.BSD",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.ByteString.Internal",
      "Network.Socket.ByteString.IOVec",
      "Network.Socket.ByteString.Lazy.Posix",
      "Network.Socket.ByteString.Lazy.Windows",
      "Network.Socket.ByteString.MsgHdr",
      "Network.Socket.Internal",
      "Prelude",
      "Regression.Issue215",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix.Types",
      "Test.DocTest",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Network",
      "Network.BSD",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.ByteString.Lazy",
      "Network.Socket.Internal"
    ],
    "name": "network",
    "version": "2.6.3.1"
  },
  {
    "dependencies": {
      "GenericPretty": [],
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Ratio",
        "Data.Tuple",
        "Data.Typeable",
        "Debug.Trace",
        "GHC.Generics",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.IO",
        "Text.Printf",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntMap.Strict",
        "Data.Map",
        "Data.Map.Lazy",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "fgl": [
        "Data.Graph.Inductive.Graph"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "fortran-src": [
        "Language.Fortran.Analysis",
        "Language.Fortran.Analysis.BBlocks",
        "Language.Fortran.Analysis.DataFlow",
        "Language.Fortran.Analysis.Renaming",
        "Language.Fortran.Analysis.Types",
        "Language.Fortran.AST",
        "Language.Fortran.Parser.Any",
        "Language.Fortran.ParserMonad",
        "Language.Fortran.Parser.Utils",
        "Language.Fortran.PrettyPrint",
        "Language.Fortran.Util.FirstParameter",
        "Language.Fortran.Util.Position",
        "Language.Fortran.Util.SecondParameter"
      ],
      "ghc-prim": [],
      "hmatrix": [
        "Numeric.LinearAlgebra",
        "Numeric.LinearAlgebra.Devel"
      ],
      "matrix": [
        "Data.Matrix"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Strict"
      ],
      "syb": [
        "Data.Generics",
        "Data.Generics.Aliases"
      ],
      "syz": [
        "Data.Generics.Zipper"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.State.Lazy"
      ],
      "uniplate": [
        "Data.Generics.Str",
        "Data.Generics.Uniplate.Data",
        "Data.Generics.Uniplate.Operations"
      ],
      "vector": []
    },
    "imports": [
      "Camfort.Analysis.Annotations",
      "Camfort.Analysis.CommentAnnotator",
      "Camfort.Analysis.Simple",
      "Camfort.Functionality",
      "Camfort.Helpers",
      "Camfort.Helpers.Syntax",
      "Camfort.Helpers.Vec",
      "Camfort.Input",
      "Camfort.Output",
      "Camfort.Reprint",
      "Camfort.Specification.Stencils",
      "Camfort.Specification.Stencils.Annotation",
      "Camfort.Specification.Stencils.CheckBackend",
      "Camfort.Specification.Stencils.CheckFrontend",
      "Camfort.Specification.Stencils.Grammar",
      "Camfort.Specification.Stencils.InferenceBackend",
      "Camfort.Specification.Stencils.InferenceFrontend",
      "Camfort.Specification.Stencils.Model",
      "Camfort.Specification.Stencils.Syntax",
      "Camfort.Specification.Stencils.Synthesis",
      "Camfort.Specification.Units",
      "Camfort.Specification.Units.Environment",
      "Camfort.Specification.Units.InferenceBackend",
      "Camfort.Specification.Units.InferenceFrontend",
      "Camfort.Specification.Units.Monad",
      "Camfort.Specification.Units.Parser",
      "Camfort.Specification.Units.Synthesis",
      "Camfort.Transformation.CommonBlockElim",
      "Camfort.Transformation.DeadCode",
      "Camfort.Transformation.EquivalenceElim",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Strict",
      "Control.Monad.ST",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Strict",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Generics",
      "Data.Generics.Aliases",
      "Data.Generics.Str",
      "Data.Generics.Uniplate.Data",
      "Data.Generics.Uniplate.Operations",
      "Data.Generics.Zipper",
      "Data.Graph.Inductive.Graph",
      "Data.IntMap",
      "Data.IntMap.Strict",
      "Data.List",
      "Data.Map",
      "Data.Map.Lazy",
      "Data.Map.Strict",
      "Data.Matrix",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ratio",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Tuple",
      "Data.Typeable",
      "Debug.Trace",
      "GHC.Generics",
      "Language.Fortran.Analysis",
      "Language.Fortran.Analysis.BBlocks",
      "Language.Fortran.Analysis.DataFlow",
      "Language.Fortran.Analysis.Renaming",
      "Language.Fortran.Analysis.Types",
      "Language.Fortran.AST",
      "Language.Fortran.Parser.Any",
      "Language.Fortran.ParserMonad",
      "Language.Fortran.Parser.Utils",
      "Language.Fortran.PrettyPrint",
      "Language.Fortran.Util.FirstParameter",
      "Language.Fortran.Util.Position",
      "Language.Fortran.Util.SecondParameter",
      "Numeric.LinearAlgebra",
      "Numeric.LinearAlgebra.Devel",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Text.Printf",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Camfort.Analysis.Annotations",
      "Camfort.Analysis.CommentAnnotator",
      "Camfort.Analysis.Simple",
      "Camfort.Specification.Stencils.Annotation",
      "Camfort.Specification.Stencils.CheckBackend",
      "Camfort.Specification.Stencils.CheckFrontend",
      "Camfort.Specification.Stencils.InferenceBackend",
      "Camfort.Specification.Stencils.InferenceFrontend",
      "Camfort.Specification.Stencils.Model",
      "Camfort.Specification.Stencils.Syntax",
      "Camfort.Specification.Stencils.Grammar",
      "Camfort.Specification.Stencils.Synthesis",
      "Camfort.Specification.Stencils",
      "Camfort.Specification.Units",
      "Camfort.Specification.Units.InferenceFrontend",
      "Camfort.Specification.Units.InferenceBackend",
      "Camfort.Specification.Units.Environment",
      "Camfort.Specification.Units.Monad",
      "Camfort.Specification.Units.Parser",
      "Camfort.Specification.Units.Synthesis",
      "Camfort.Transformation.CommonBlockElim",
      "Camfort.Transformation.DeadCode",
      "Camfort.Transformation.EquivalenceElim",
      "Camfort.Helpers",
      "Camfort.Helpers.Syntax",
      "Camfort.Helpers.Vec",
      "Camfort.Functionality",
      "Camfort.Input",
      "Camfort.Output",
      "Camfort.Reprint"
    ],
    "name": "camfort",
    "version": "0.900"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "api-field-json-th": [
        "Data.Aeson.APIFieldJsonTH"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "classy-prelude-yesod": [
        "ClassyPrelude.Yesod"
      ],
      "cron": [
        "System.Cron.Schedule"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "hedis": [
        "Database.Redis"
      ],
      "lens": [
        "Control.Lens"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "persistent-sqlite": [
        "Database.Persist.Sqlite"
      ],
      "resourcet": [],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader"
      ],
      "uuid": [
        "Data.UUID",
        "Data.UUID.V4"
      ],
      "yesod": [
        "Yesod"
      ],
      "yesod-core": [
        "Yesod.Core"
      ],
      "yesod-job-queue": [],
      "yesod-persistent": [
        "Yesod.Persist.Core"
      ]
    },
    "imports": [
      "ClassyPrelude.Yesod",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Reader",
      "Data.Aeson",
      "Data.Aeson.APIFieldJsonTH",
      "Data.Aeson.TH",
      "Database.Persist.Sqlite",
      "Database.Redis",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.FileEmbed",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Text",
      "Data.Time.Clock",
      "Data.Typeable",
      "Data.UUID",
      "Data.UUID.V4",
      "GHC.Generics",
      "Prelude",
      "System.Cron.Schedule",
      "Text.Read",
      "Yesod",
      "Yesod.Core",
      "Yesod.JobQueue",
      "Yesod.JobQueue.GenericConstr",
      "Yesod.JobQueue.Routes",
      "Yesod.JobQueue.Scheduler",
      "Yesod.JobQueue.Types",
      "Yesod.Persist.Core"
    ],
    "modules": [
      "Yesod.JobQueue",
      "Yesod.JobQueue.GenericConstr",
      "Yesod.JobQueue.Routes",
      "Yesod.JobQueue.Scheduler",
      "Yesod.JobQueue.Types"
    ],
    "name": "yesod-job-queue",
    "version": "0.3.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Int",
        "Data.List"
      ],
      "containers": [
        "Data.Set"
      ],
      "dlist": [
        "Data.DList"
      ],
      "names-th": [
        "Language.Haskell.TH.Lib.Extra",
        "Language.Haskell.TH.Name.CamelCase"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "th-data-compat": [
        "Language.Haskell.TH.Compat.Data"
      ],
      "transformers": [
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.Writer",
      "Data.Array",
      "Database.Record",
      "Database.Record.FromSql",
      "Database.Record.KeyConstraint",
      "Database.Record.Persistable",
      "Database.Record.TH",
      "Database.Record.ToSql",
      "Data.Data",
      "Data.DList",
      "Data.Int",
      "Data.List",
      "Data.Set",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Compat.Data",
      "Language.Haskell.TH.Lib.Extra",
      "Language.Haskell.TH.Name.CamelCase"
    ],
    "modules": [
      "Database.Record.FromSql",
      "Database.Record.ToSql",
      "Database.Record.Persistable",
      "Database.Record.Instances",
      "Database.Record.KeyConstraint",
      "Database.Record",
      "Database.Record.TH"
    ],
    "name": "persistable-record",
    "version": "0.4.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Typeable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Catch",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.ImageSize",
      "Data.Typeable",
      "Test.Hspec"
    ],
    "modules": [
      "Data.Conduit.ImageSize"
    ],
    "name": "imagesize-conduit",
    "version": "1.1"
  },
  {
    "dependencies": {
      "base": [],
      "inline-c": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Language.C.Inline.Cpp",
      "Language.Haskell.TH"
    ],
    "modules": [
      "Language.C.Inline.Cpp"
    ],
    "name": "inline-c-cpp",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Prelude",
        "System.IO.Unsafe",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.Map"
      ],
      "ghcjs-perch": [
        "GHCJS.Perch"
      ],
      "mtl": [],
      "transformers": [],
      "transient": [
        "Transient.Base",
        "Transient.Internals"
      ],
      "transient-universe": [
        "Transient.Move"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.IORef",
      "Data.JSString",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Typeable",
      "GHCJS.HPlay.View",
      "GHCJS.Perch",
      "Haste",
      "Haste.Foreign",
      "Haste.Graphics.Canvas",
      "Haste.HPlay.Cell",
      "Haste.HPlay.View",
      "Prelude",
      "System.IO.Unsafe",
      "Transient.Base",
      "Transient.Internals",
      "Transient.Move",
      "Unsafe.Coerce"
    ],
    "modules": [
      "GHCJS.HPlay.View",
      "GHCJS.HPlay.Cell"
    ],
    "name": "ghcjs-hplay",
    "version": "0.3.4.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.List",
        "Data.Typeable",
        "Data.Word",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "mtl": [],
      "network": [
        "Network.Socket"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.IORef",
      "Data.List",
      "Data.Serialize",
      "Data.Typeable",
      "Data.Word",
      "Network.Socket",
      "System.IO",
      "System.Xen.Store"
    ],
    "modules": [
      "System.Xen.Store"
    ],
    "name": "xenstore",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Container",
      "Network.Google.Container.Types",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.Create",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.Delete",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.Get",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.List",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.NodePools.Create",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.NodePools.Delete",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.NodePools.Get",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.NodePools.List",
      "Network.Google.Resource.Container.Projects.Zones.Clusters.Update",
      "Network.Google.Resource.Container.Projects.Zones.GetServerConfig",
      "Network.Google.Resource.Container.Projects.Zones.Operations.Get",
      "Network.Google.Resource.Container.Projects.Zones.Operations.List"
    ],
    "name": "gogol-container",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Data.IORef",
        "Data.STRef",
        "Data.STRef.Lazy",
        "Foreign.ForeignPtr",
        "Foreign.Storable"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Monad.ST",
      "Control.Monad.ST.Lazy",
      "Control.Monad.Trans",
      "Data.Accessor",
      "Data.IORef",
      "Data.MRef.Instances",
      "Data.MRef.Instances.STM",
      "Data.MRef.Types",
      "Data.StateRef",
      "Data.StateRef.Instances",
      "Data.StateRef.Instances.STM",
      "Data.StateRef.Instances.Undecidable",
      "Data.StateRef.Types",
      "Data.STRef",
      "Data.STRef.Lazy",
      "Foreign.ForeignPtr",
      "Foreign.Storable"
    ],
    "modules": [
      "Data.Accessor",
      "Data.StateRef",
      "Data.StateRef.Types",
      "Data.StateRef.Instances",
      "Data.MRef",
      "Data.MRef.Types",
      "Data.MRef.Instances"
    ],
    "name": "stateref",
    "version": "0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Function",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy"
      ],
      "servant": [
        "Servant.API"
      ],
      "servant-foreign": [
        "Servant.Foreign"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Function",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Text",
      "Data.Text.Encoding",
      "Lackey",
      "Servant.API",
      "Servant.Foreign",
      "Test.Tasty",
      "Test.Tasty.Hspec"
    ],
    "modules": [
      "Lackey"
    ],
    "name": "lackey",
    "version": "0.4.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.IArray"
      ],
      "base": [
        "Data.List"
      ],
      "colour": [
        "Data.Colour",
        "Data.Colour.RGBSpace.HSV",
        "Data.Colour.SRGB"
      ],
      "containers": [
        "Data.Map.Lazy"
      ]
    },
    "imports": [
      "Data.Array.IArray",
      "Data.Colour",
      "Data.Colour.Palette.Types",
      "Data.Colour.RGBSpace.HSV",
      "Data.Colour.SRGB",
      "Data.List",
      "Data.Map.Lazy"
    ],
    "modules": [
      "Data.Colour.Palette.ColorSet",
      "Data.Colour.Palette.Harmony",
      "Data.Colour.Palette.BrewerSet",
      "Data.Colour.Palette.Types"
    ],
    "name": "palette",
    "version": "0.1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.IO.Class",
        "Data.Maybe",
        "Data.Word",
        "Foreign.Concurrent",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.IO.Class",
      "Data.ByteString",
      "Data.Maybe",
      "Data.Word",
      "Foreign.Concurrent",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "System.HID.Internal.Functions",
      "System.HID.Internal.Types",
      "System.HID.Internal.Utils"
    ],
    "modules": [
      "System.HID"
    ],
    "name": "hid",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "abstract-par": [
        "Control.Monad.Par.Class"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Conc",
        "Prelude"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "random": [
        "System.Random"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Par.Class",
      "Control.Monad.Par.Combinator",
      "Control.Monad.Par.State",
      "Control.Monad.Trans",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Data.BitList",
      "Data.List",
      "Data.Serialize",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Conc",
      "Prelude",
      "System.Random"
    ],
    "modules": [
      "Control.Monad.Par.Combinator",
      "Control.Monad.Par.AList",
      "Control.Monad.Par.State",
      "Control.Monad.Par.RNG"
    ],
    "name": "monad-par-extras",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad.IO.Class",
        "Data.Data",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C",
        "Foreign.ForeignPtr",
        "Foreign.Storable",
        "GHC.Generics",
        "GHC.IO",
        "Prelude",
        "System.Timeout"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad.IO.Class",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Data",
      "Data.Hashable",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C",
      "Foreign.ForeignPtr",
      "Foreign.Storable",
      "GHC.Generics",
      "GHC.IO",
      "Network.Transport",
      "Prelude",
      "System.Timeout"
    ],
    "modules": [
      "Network.Transport",
      "Network.Transport.Util",
      "Network.Transport.Internal"
    ],
    "name": "network-transport",
    "version": "0.4.4.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Environment",
        "Text.Printf"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Cpuid",
      "System.Environment",
      "Text.Printf"
    ],
    "modules": [
      "System.Cpuid",
      "System.Endian",
      "System.Arch"
    ],
    "name": "cpu",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "base": [],
      "directory": [],
      "filepath": [],
      "mtl": [],
      "process": [],
      "regex-compat": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "lhs2tex",
    "version": "1.19"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Data.Bits",
        "Data.Char"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Bits",
      "Data.Char",
      "Test.QuickCheck"
    ],
    "modules": [
      "Test.QuickCheck.Unicode"
    ],
    "name": "quickcheck-unicode",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "directory": [],
      "process": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.ReadEditor"
    ],
    "name": "read-editor",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad.Fix",
        "Data.Char",
        "Data.Monoid",
        "GHC.Base"
      ],
      "containers": [
        "Data.IntSet",
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Fix",
      "Control.Monad.Identity",
      "Control.Monad.State",
      "Data.Array",
      "Data.Char",
      "Data.IntSet",
      "Data.Map",
      "Data.Monoid",
      "GHC.Base",
      "Text.Parsers.Frisby"
    ],
    "modules": [
      "Text.Parsers.Frisby",
      "Text.Parsers.Frisby.Char"
    ],
    "name": "frisby",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid",
        "Prelude"
      ],
      "double-conversion": [
        "Data.Double.Conversion.Text"
      ],
      "free": [
        "Control.Monad.Free",
        "Control.Monad.Free.Church"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Free",
      "Control.Monad.Free.Church",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Data.Double.Conversion.Text",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Graphics.Static.Interpreter",
      "Graphics.Static.Javascript",
      "Graphics.Static.Types",
      "Prelude"
    ],
    "modules": [
      "Graphics.Static",
      "Graphics.Static.ColorNames"
    ],
    "name": "static-canvas",
    "version": "0.2.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "GHC.Conc",
        "GHC.Stats"
      ],
      "prometheus-client": [
        "Prometheus"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.ByteString.UTF8",
      "GHC.Conc",
      "GHC.Stats",
      "Prometheus",
      "Test.DocTest"
    ],
    "modules": [
      "Prometheus.Metric.GHC"
    ],
    "name": "prometheus-metrics-ghc",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.Chan",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Monoid",
        "GHC.Stack",
        "Prelude",
        "System.IO"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit.Internal"
      ],
      "conduit-extra": [
        "Data.Conduit.Lazy"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-loops": [
        "Control.Monad.Loops"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "stm-chans": [
        "Control.Concurrent.STM.TBChan"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Applicative",
      "Control.Concurrent.Chan",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TBChan",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Loops",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Conduit.Internal",
      "Data.Conduit.Lazy",
      "Data.Monoid",
      "Data.Text",
      "GHC.Stack",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "System.IO",
      "System.Log.FastLogger"
    ],
    "modules": [
      "Control.Monad.Logger"
    ],
    "name": "monad-logger",
    "version": "0.3.20"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.CivicInfo",
      "Network.Google.CivicInfo.Types",
      "Network.Google.Resource.CivicInfo.Divisions.Search",
      "Network.Google.Resource.CivicInfo.Elections.ElectionQuery",
      "Network.Google.Resource.CivicInfo.Elections.VoterInfoQuery",
      "Network.Google.Resource.CivicInfo.Representatives.RepresentativeInfoByAddress",
      "Network.Google.Resource.CivicInfo.Representatives.RepresentativeInfoByDivision"
    ],
    "name": "gogol-civicinfo",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Foreign",
        "Foreign.C.String",
        "Foreign.C.Types"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Typeable",
      "Foreign",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Sound.HTagLib",
      "Sound.HTagLib.Getter",
      "Sound.HTagLib.Internal",
      "Sound.HTagLib.Setter",
      "Sound.HTagLib.Test.Util",
      "Sound.HTagLib.Type",
      "System.Directory",
      "System.FilePath",
      "Test.Hspec"
    ],
    "modules": [
      "Sound.HTagLib",
      "Sound.HTagLib.Type",
      "Sound.HTagLib.Getter",
      "Sound.HTagLib.Setter"
    ],
    "name": "htaglib",
    "version": "1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Safe.Util"
    ],
    "modules": [
      "Safe",
      "Safe.Exact",
      "Safe.Foldable"
    ],
    "name": "safe",
    "version": "0.3.9"
  },
  {
    "dependencies": {
      "base": [],
      "containers": [
        "Data.IntMap.Strict"
      ],
      "transformers": []
    },
    "imports": [
      "Data.IntMap.Strict"
    ],
    "modules": [
      "Math.Combinatorics.Multiset"
    ],
    "name": "multiset-comb",
    "version": "0.2.4.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.ST",
        "Data.Array.Unsafe"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "GHC.Base",
        "GHC.Generics",
        "GHC.Profiling",
        "GHC.TypeLits",
        "GHC.Word",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder.Prim",
        "Data.ByteString.Builder.Prim.Internal",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [],
      "hashable": [
        "Data.Hashable"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.ST",
      "Criterion",
      "Criterion.Main",
      "Data.Array.ST",
      "Data.Array.Unsafe",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Prim.Internal",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "GHC.Base",
      "GHC.Generics",
      "GHC.Profiling",
      "GHC.TypeLits",
      "GHC.Word",
      "Network.HTTP.Client",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Pinch",
      "Pinch.Arbitrary",
      "Pinch.Expectations",
      "Pinch.Internal.Bits",
      "Pinch.Internal.Builder",
      "Pinch.Internal.FoldList",
      "Pinch.Internal.Generic",
      "Pinch.Internal.Message",
      "Pinch.Internal.Parser",
      "Pinch.Internal.Pinchable",
      "Pinch.Internal.Pinchable.Parser",
      "Pinch.Internal.TType",
      "Pinch.Internal.Util",
      "Pinch.Internal.Value",
      "Pinch.Protocol",
      "Pinch.Protocol.Binary",
      "Pinch.Protocol.Compact",
      "Prelude",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Types"
    ],
    "modules": [
      "Pinch",
      "Pinch.Internal.Builder",
      "Pinch.Internal.FoldList",
      "Pinch.Internal.Generic",
      "Pinch.Internal.Message",
      "Pinch.Internal.Parser",
      "Pinch.Internal.Pinchable",
      "Pinch.Internal.TType",
      "Pinch.Internal.Value",
      "Pinch.Protocol",
      "Pinch.Protocol.Binary",
      "Pinch.Protocol.Compact"
    ],
    "name": "pinch",
    "version": "0.3.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "csv": [
        "Text.CSV"
      ],
      "html": [
        "Text.Html"
      ],
      "mtl": [
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Monad.State",
      "Data.List",
      "Text.CSV",
      "Text.Html",
      "Text.Tabular",
      "Text.Tabular.AsciiArt",
      "Text.Tabular.Csv",
      "Text.Tabular.Html",
      "Text.Tabular.Latex",
      "Text.Tabular.SimpleText"
    ],
    "modules": [
      "Text.Tabular",
      "Text.Tabular.AsciiArt",
      "Text.Tabular.SimpleText",
      "Text.Tabular.Csv",
      "Text.Tabular.Html",
      "Text.Tabular.Latex"
    ],
    "name": "tabular",
    "version": "0.2.2.7"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.APIGateway",
      "Test.AWS.APIGateway",
      "Test.AWS.APIGateway.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.APIGateway",
      "Network.AWS.APIGateway.CreateAPIKey",
      "Network.AWS.APIGateway.CreateAuthorizer",
      "Network.AWS.APIGateway.CreateBasePathMapping",
      "Network.AWS.APIGateway.CreateDeployment",
      "Network.AWS.APIGateway.CreateDomainName",
      "Network.AWS.APIGateway.CreateModel",
      "Network.AWS.APIGateway.CreateResource",
      "Network.AWS.APIGateway.CreateRestAPI",
      "Network.AWS.APIGateway.CreateStage",
      "Network.AWS.APIGateway.DeleteAPIKey",
      "Network.AWS.APIGateway.DeleteAuthorizer",
      "Network.AWS.APIGateway.DeleteBasePathMapping",
      "Network.AWS.APIGateway.DeleteClientCertificate",
      "Network.AWS.APIGateway.DeleteDeployment",
      "Network.AWS.APIGateway.DeleteDomainName",
      "Network.AWS.APIGateway.DeleteIntegration",
      "Network.AWS.APIGateway.DeleteIntegrationResponse",
      "Network.AWS.APIGateway.DeleteMethod",
      "Network.AWS.APIGateway.DeleteMethodResponse",
      "Network.AWS.APIGateway.DeleteModel",
      "Network.AWS.APIGateway.DeleteResource",
      "Network.AWS.APIGateway.DeleteRestAPI",
      "Network.AWS.APIGateway.DeleteStage",
      "Network.AWS.APIGateway.FlushStageAuthorizersCache",
      "Network.AWS.APIGateway.FlushStageCache",
      "Network.AWS.APIGateway.GenerateClientCertificate",
      "Network.AWS.APIGateway.GetAPIKey",
      "Network.AWS.APIGateway.GetAPIKeys",
      "Network.AWS.APIGateway.GetAccount",
      "Network.AWS.APIGateway.GetAuthorizer",
      "Network.AWS.APIGateway.GetAuthorizers",
      "Network.AWS.APIGateway.GetBasePathMapping",
      "Network.AWS.APIGateway.GetBasePathMappings",
      "Network.AWS.APIGateway.GetClientCertificate",
      "Network.AWS.APIGateway.GetClientCertificates",
      "Network.AWS.APIGateway.GetDeployment",
      "Network.AWS.APIGateway.GetDeployments",
      "Network.AWS.APIGateway.GetDomainName",
      "Network.AWS.APIGateway.GetDomainNames",
      "Network.AWS.APIGateway.GetExport",
      "Network.AWS.APIGateway.GetIntegration",
      "Network.AWS.APIGateway.GetIntegrationResponse",
      "Network.AWS.APIGateway.GetMethod",
      "Network.AWS.APIGateway.GetMethodResponse",
      "Network.AWS.APIGateway.GetModel",
      "Network.AWS.APIGateway.GetModelTemplate",
      "Network.AWS.APIGateway.GetModels",
      "Network.AWS.APIGateway.GetResource",
      "Network.AWS.APIGateway.GetResources",
      "Network.AWS.APIGateway.GetRestAPI",
      "Network.AWS.APIGateway.GetRestAPIs",
      "Network.AWS.APIGateway.GetSDK",
      "Network.AWS.APIGateway.GetStage",
      "Network.AWS.APIGateway.GetStages",
      "Network.AWS.APIGateway.ImportRestAPI",
      "Network.AWS.APIGateway.PutIntegration",
      "Network.AWS.APIGateway.PutIntegrationResponse",
      "Network.AWS.APIGateway.PutMethod",
      "Network.AWS.APIGateway.PutMethodResponse",
      "Network.AWS.APIGateway.PutRestAPI",
      "Network.AWS.APIGateway.TestInvokeAuthorizer",
      "Network.AWS.APIGateway.TestInvokeMethod",
      "Network.AWS.APIGateway.Types",
      "Network.AWS.APIGateway.UpdateAPIKey",
      "Network.AWS.APIGateway.UpdateAccount",
      "Network.AWS.APIGateway.UpdateAuthorizer",
      "Network.AWS.APIGateway.UpdateBasePathMapping",
      "Network.AWS.APIGateway.UpdateClientCertificate",
      "Network.AWS.APIGateway.UpdateDeployment",
      "Network.AWS.APIGateway.UpdateDomainName",
      "Network.AWS.APIGateway.UpdateIntegration",
      "Network.AWS.APIGateway.UpdateIntegrationResponse",
      "Network.AWS.APIGateway.UpdateMethod",
      "Network.AWS.APIGateway.UpdateMethodResponse",
      "Network.AWS.APIGateway.UpdateModel",
      "Network.AWS.APIGateway.UpdateResource",
      "Network.AWS.APIGateway.UpdateRestAPI",
      "Network.AWS.APIGateway.UpdateStage",
      "Network.AWS.APIGateway.Waiters"
    ],
    "name": "amazonka-apigateway",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Directory",
      "Network.Google.Directory.Types",
      "Network.Google.Resource.Admin.Channels.Stop",
      "Network.Google.Resource.Directory.Asps.Delete",
      "Network.Google.Resource.Directory.Asps.Get",
      "Network.Google.Resource.Directory.Asps.List",
      "Network.Google.Resource.Directory.ChromeosDevices.Get",
      "Network.Google.Resource.Directory.ChromeosDevices.List",
      "Network.Google.Resource.Directory.ChromeosDevices.Patch",
      "Network.Google.Resource.Directory.ChromeosDevices.Update",
      "Network.Google.Resource.Directory.Customers.Get",
      "Network.Google.Resource.Directory.Customers.Patch",
      "Network.Google.Resource.Directory.Customers.Update",
      "Network.Google.Resource.Directory.DomainAliases.Delete",
      "Network.Google.Resource.Directory.DomainAliases.Get",
      "Network.Google.Resource.Directory.DomainAliases.Insert",
      "Network.Google.Resource.Directory.DomainAliases.List",
      "Network.Google.Resource.Directory.Domains.Delete",
      "Network.Google.Resource.Directory.Domains.Get",
      "Network.Google.Resource.Directory.Domains.Insert",
      "Network.Google.Resource.Directory.Domains.List",
      "Network.Google.Resource.Directory.Groups.Aliases.Delete",
      "Network.Google.Resource.Directory.Groups.Aliases.Insert",
      "Network.Google.Resource.Directory.Groups.Aliases.List",
      "Network.Google.Resource.Directory.Groups.Delete",
      "Network.Google.Resource.Directory.Groups.Get",
      "Network.Google.Resource.Directory.Groups.Insert",
      "Network.Google.Resource.Directory.Groups.List",
      "Network.Google.Resource.Directory.Groups.Patch",
      "Network.Google.Resource.Directory.Groups.Update",
      "Network.Google.Resource.Directory.Members.Delete",
      "Network.Google.Resource.Directory.Members.Get",
      "Network.Google.Resource.Directory.Members.Insert",
      "Network.Google.Resource.Directory.Members.List",
      "Network.Google.Resource.Directory.Members.Patch",
      "Network.Google.Resource.Directory.Members.Update",
      "Network.Google.Resource.Directory.MobileDevices.Action",
      "Network.Google.Resource.Directory.MobileDevices.Delete",
      "Network.Google.Resource.Directory.MobileDevices.Get",
      "Network.Google.Resource.Directory.MobileDevices.List",
      "Network.Google.Resource.Directory.Notifications.Delete",
      "Network.Google.Resource.Directory.Notifications.Get",
      "Network.Google.Resource.Directory.Notifications.List",
      "Network.Google.Resource.Directory.Notifications.Patch",
      "Network.Google.Resource.Directory.Notifications.Update",
      "Network.Google.Resource.Directory.OrgUnits.Delete",
      "Network.Google.Resource.Directory.OrgUnits.Get",
      "Network.Google.Resource.Directory.OrgUnits.Insert",
      "Network.Google.Resource.Directory.OrgUnits.List",
      "Network.Google.Resource.Directory.OrgUnits.Patch",
      "Network.Google.Resource.Directory.OrgUnits.Update",
      "Network.Google.Resource.Directory.Privileges.List",
      "Network.Google.Resource.Directory.Resources.Calendars.Delete",
      "Network.Google.Resource.Directory.Resources.Calendars.Get",
      "Network.Google.Resource.Directory.Resources.Calendars.Insert",
      "Network.Google.Resource.Directory.Resources.Calendars.List",
      "Network.Google.Resource.Directory.Resources.Calendars.Patch",
      "Network.Google.Resource.Directory.Resources.Calendars.Update",
      "Network.Google.Resource.Directory.RoleAssignments.Delete",
      "Network.Google.Resource.Directory.RoleAssignments.Get",
      "Network.Google.Resource.Directory.RoleAssignments.Insert",
      "Network.Google.Resource.Directory.RoleAssignments.List",
      "Network.Google.Resource.Directory.Roles.Delete",
      "Network.Google.Resource.Directory.Roles.Get",
      "Network.Google.Resource.Directory.Roles.Insert",
      "Network.Google.Resource.Directory.Roles.List",
      "Network.Google.Resource.Directory.Roles.Patch",
      "Network.Google.Resource.Directory.Roles.Update",
      "Network.Google.Resource.Directory.Schemas.Delete",
      "Network.Google.Resource.Directory.Schemas.Get",
      "Network.Google.Resource.Directory.Schemas.Insert",
      "Network.Google.Resource.Directory.Schemas.List",
      "Network.Google.Resource.Directory.Schemas.Patch",
      "Network.Google.Resource.Directory.Schemas.Update",
      "Network.Google.Resource.Directory.Tokens.Delete",
      "Network.Google.Resource.Directory.Tokens.Get",
      "Network.Google.Resource.Directory.Tokens.List",
      "Network.Google.Resource.Directory.Users.Aliases.Delete",
      "Network.Google.Resource.Directory.Users.Aliases.Insert",
      "Network.Google.Resource.Directory.Users.Aliases.List",
      "Network.Google.Resource.Directory.Users.Aliases.Watch",
      "Network.Google.Resource.Directory.Users.Delete",
      "Network.Google.Resource.Directory.Users.Get",
      "Network.Google.Resource.Directory.Users.Insert",
      "Network.Google.Resource.Directory.Users.List",
      "Network.Google.Resource.Directory.Users.MakeAdmin",
      "Network.Google.Resource.Directory.Users.Patch",
      "Network.Google.Resource.Directory.Users.Photos.Delete",
      "Network.Google.Resource.Directory.Users.Photos.Get",
      "Network.Google.Resource.Directory.Users.Photos.Patch",
      "Network.Google.Resource.Directory.Users.Photos.Update",
      "Network.Google.Resource.Directory.Users.Undelete",
      "Network.Google.Resource.Directory.Users.Update",
      "Network.Google.Resource.Directory.Users.Watch",
      "Network.Google.Resource.Directory.VerificationCodes.Generate",
      "Network.Google.Resource.Directory.VerificationCodes.Invalidate",
      "Network.Google.Resource.Directory.VerificationCodes.List"
    ],
    "name": "gogol-admin-directory",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Ratio"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ]
    },
    "imports": [
      "Data.Ratio",
      "Text.PrettyPrint.HughesPJ"
    ],
    "modules": [
      "Text.PrettyPrint.HughesPJClass"
    ],
    "name": "prettyclass",
    "version": "1.0.0.0"
  },
  {
    "dependencies": {
      "async": [],
      "base": [
        "Data.IORef"
      ],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "conduit": [
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Network"
      ],
      "containers": [
        "Data.Set"
      ],
      "data-default-class": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [],
      "monad-control": [],
      "network": [],
      "resourcet": [],
      "streaming-commons": [],
      "text": [
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "wai": [
        "Network.Wai"
      ],
      "wai-logger": [],
      "word8": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.Network",
      "Data.IORef",
      "Data.Set",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Network.HTTP.Client",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.Wai"
    ],
    "modules": [
      "Network.HTTP.ReverseProxy"
    ],
    "name": "http-reverse-proxy",
    "version": "0.4.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Monoid"
      ],
      "mtl": [],
      "terminfo": [],
      "transformers": []
    },
    "imports": [
      "Console.Options.Flags",
      "Console.Options.Nid",
      "Control.Applicative",
      "Control.Monad",
      "Data.List",
      "Data.Monoid"
    ],
    "modules": [
      "Console.Display",
      "Console.Options"
    ],
    "name": "cli",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Data.Int",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "glib": [
        "System.Glib.MainLoop",
        "System.Glib.Properties"
      ],
      "gtk": [
        "Graphics.UI.Gtk.Gdk.Pixbuf"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Data.ByteString",
      "Data.Int",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Word",
      "Graphics.UI.Gtk.Gdk.Pixbuf",
      "Libnotify",
      "Libnotify.C.Notify",
      "Libnotify.C.NotifyNotification",
      "System.Glib.MainLoop",
      "System.Glib.Properties"
    ],
    "modules": [
      "Libnotify",
      "Libnotify.C.Notify",
      "Libnotify.C.NotifyNotification"
    ],
    "name": "libnotify",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "microlens": [],
      "template-haskell": []
    },
    "imports": [
      "Data.Map",
      "Data.Set"
    ],
    "modules": [
      "Lens.Micro.TH"
    ],
    "name": "microlens-th",
    "version": "0.4.1.0"
  },
  {
    "dependencies": {
      "StateVar": [
        "Data.StateVar"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Bool",
        "Data.Data",
        "Data.Foldable",
        "Data.Int",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.Generics",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable",
        "Data.Vector.Unboxed.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Data.Bitmask",
      "Data.Bits",
      "Data.Bool",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Data",
      "Data.Foldable",
      "Data.Int",
      "Data.IORef",
      "Data.Maybe",
      "Data.Monoid",
      "Data.StateVar",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Unboxed.Base",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "GHC.Generics",
      "Graphics.Rendering.OpenGL",
      "Linear",
      "Linear.Affine",
      "Paths",
      "Prelude",
      "SDL",
      "SDL.Audio",
      "SDL.Event",
      "SDL.Exception",
      "SDL.Filesystem",
      "SDL.Haptic",
      "SDL.Hint",
      "SDL.Init",
      "SDL.Input",
      "SDL.Input.Joystick",
      "SDL.Input.Keyboard",
      "SDL.Input.Keyboard.Codes",
      "SDL.Input.Mouse",
      "SDL.Internal.Numbered",
      "SDL.Internal.Types",
      "SDL.Internal.Vect",
      "SDL.Power",
      "SDL.Raw",
      "SDL.Raw.Audio",
      "SDL.Raw.Basic",
      "SDL.Raw.Enum",
      "SDL.Raw.Error",
      "SDL.Raw.Event",
      "SDL.Raw.Filesystem",
      "SDL.Raw.Haptic",
      "SDL.Raw.Platform",
      "SDL.Raw.Power",
      "SDL.Raw.Thread",
      "SDL.Raw.Timer",
      "SDL.Raw.Types",
      "SDL.Raw.Video",
      "SDL.Time",
      "SDL.Vect",
      "SDL.Video",
      "SDL.Video.OpenGL",
      "SDL.Video.Renderer"
    ],
    "modules": [
      "SDL",
      "SDL.Audio",
      "SDL.Event",
      "SDL.Filesystem",
      "SDL.Hint",
      "SDL.Init",
      "SDL.Input",
      "SDL.Input.Joystick",
      "SDL.Input.Keyboard",
      "SDL.Input.Keyboard.Codes",
      "SDL.Input.Mouse",
      "SDL.Power",
      "SDL.Time",
      "SDL.Vect",
      "SDL.Video",
      "SDL.Video.OpenGL",
      "SDL.Video.Renderer",
      "SDL.Internal.Types",
      "SDL.Internal.Vect",
      "SDL.Raw",
      "SDL.Raw.Audio",
      "SDL.Raw.Basic",
      "SDL.Raw.Enum",
      "SDL.Raw.Error",
      "SDL.Raw.Event",
      "SDL.Raw.Filesystem",
      "SDL.Raw.Haptic",
      "SDL.Raw.Platform",
      "SDL.Raw.Power",
      "SDL.Raw.Thread",
      "SDL.Raw.Timer",
      "SDL.Raw.Types",
      "SDL.Raw.Video"
    ],
    "name": "sdl2",
    "version": "2.1.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Prelude",
        "System.Environment"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.Aeson.Types",
      "Data.Char",
      "Data.Either",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Text",
      "Elm.Derive",
      "Elm.Json",
      "Elm.Module",
      "Elm.TyRender",
      "Elm.TyRep",
      "Elm.Utils",
      "Elm.Versions",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "System.Environment",
      "Test.Hspec",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Gen"
    ],
    "modules": [
      "Elm.Derive",
      "Elm.Json",
      "Elm.Module",
      "Elm.TyRender",
      "Elm.TyRep",
      "Elm.Versions"
    ],
    "name": "elm-bridge",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "ansigraph": [
        "System.Console.Ansigraph"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Char",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "directory": [
        "System.Directory"
      ],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "quantum-random": [],
      "regex-posix": [
        "Text.Regex.Posix"
      ],
      "terminal-size": [
        "System.Console.Terminal.Size"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad.Reader",
      "Data.Aeson",
      "Data.Bifunctor",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Text",
      "Data.Typeable",
      "Data.Word",
      "GHC.Generics",
      "Network.HTTP.Conduit",
      "Numeric",
      "Paths",
      "Prelude",
      "Quantum.Random",
      "Quantum.Random.ANU",
      "Quantum.Random.Codec",
      "Quantum.Random.Display",
      "Quantum.Random.Exceptions",
      "Quantum.Random.Mutex",
      "Quantum.Random.Store",
      "System.Console.ANSI",
      "System.Console.Ansigraph",
      "System.Console.Haskeline",
      "System.Console.Terminal.Size",
      "System.Directory",
      "System.Environment",
      "System.IO",
      "Test.Hspec",
      "Test.QuickCheck",
      "Text.Regex.Posix"
    ],
    "modules": [
      "Quantum.Random",
      "Quantum.Random.Exceptions",
      "Quantum.Random.ANU",
      "Quantum.Random.Display",
      "Quantum.Random.Store"
    ],
    "name": "quantum-random",
    "version": "0.6.3"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "dlist": [
        "Data.DList"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "insert-ordered-containers": [
        "Data.HashMap.Strict.InsOrd"
      ],
      "lens": [],
      "mtl": [],
      "solga": [],
      "swagger2": [],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.DList",
      "Data.HashMap.Strict",
      "Data.HashMap.Strict.InsOrd",
      "Data.Text",
      "Network.HTTP.Types"
    ],
    "modules": [
      "Solga.Swagger"
    ],
    "name": "solga-swagger",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "adjunctions": [
        "Data.Functor.Rep"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Control.Monad.Zip",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Void",
        "Prelude",
        "System.IO"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "containers": [],
      "distributive": [
        "Data.Distributive"
      ],
      "free": [],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Class"
      ],
      "pointed": [
        "Data.Copointed",
        "Data.Pointed"
      ],
      "profunctors": [
        "Data.Profunctor",
        "Data.Profunctor.Closed",
        "Data.Profunctor.Rep",
        "Data.Profunctor.Sieve",
        "Data.Profunctor.Unsafe"
      ],
      "semigroupoids": [
        "Data.Functor.Extend"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Strict"
      ],
      "transformers-compat": [],
      "void": []
    },
    "imports": [
      "Build",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Writer.Class",
      "Control.Monad.Zip",
      "Criterion.Main",
      "Data.Conduit",
      "Data.Conduit.Combinators",
      "Data.Conduit.List",
      "Data.Copointed",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Functor.Extend",
      "Data.Functor.Identity",
      "Data.Functor.Rep",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Machine",
      "Data.Machine.Group",
      "Data.Machine.Is",
      "Data.Machine.Mealy",
      "Data.Machine.Moore",
      "Data.Machine.Plan",
      "Data.Machine.Process",
      "Data.Machine.Source",
      "Data.Machine.Tee",
      "Data.Machine.Type",
      "Data.Machine.Wye",
      "Data.Monoid",
      "Data.Pointed",
      "Data.Profunctor",
      "Data.Profunctor.Closed",
      "Data.Profunctor.Rep",
      "Data.Profunctor.Sieve",
      "Data.Profunctor.Unsafe",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Void",
      "Pipes",
      "Pipes.Prelude",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "Test.DocTest"
    ],
    "modules": [
      "Data.Machine",
      "Data.Machine.Is",
      "Data.Machine.Fanout",
      "Data.Machine.Lift",
      "Data.Machine.Mealy",
      "Data.Machine.Moore",
      "Data.Machine.Process",
      "Data.Machine.Plan",
      "Data.Machine.Runner",
      "Data.Machine.Source",
      "Data.Machine.Stack",
      "Data.Machine.Tee",
      "Data.Machine.Type",
      "Data.Machine.Wye",
      "Data.Machine.Group",
      "Data.Machine.Pipe"
    ],
    "name": "machines",
    "version": "0.6.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Monad",
      "Data.Array",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Version",
      "Text.Regex.Base",
      "Text.Regex.Base.Context",
      "Text.Regex.Base.RegexLike",
      "Text.Regex.Lib.ByteStringDFAEngine",
      "Text.Regex.Lib.ByteStringLazy",
      "Text.Regex.Lib.ByteStringPCRE",
      "Text.Regex.Lib.ByteStringPosix",
      "Text.Regex.Lib.StringDFAEngine",
      "Text.Regex.Lib.StringLazy",
      "Text.Regex.Lib.StringPCRE",
      "Text.Regex.Lib.StringPosix",
      "Text.Regex.Lib.WrapDFAEngine",
      "Text.Regex.Lib.WrapLazy",
      "Text.Regex.Lib.WrapPCRE",
      "Text.Regex.Lib.WrapPosix"
    ],
    "modules": [
      "Text.Regex.Base",
      "Text.Regex.Base.RegexLike",
      "Text.Regex.Base.Context",
      "Text.Regex.Base.Impl"
    ],
    "name": "regex-base",
    "version": "0.93.2"
  },
  {
    "dependencies": {
      "aeson": [],
      "aeson-casing": [],
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "network": [],
      "random": [],
      "scientific": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "vector": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.Encoding",
      "Test.Graylog.UDP"
    ],
    "modules": [
      "Graylog.Gelf",
      "Graylog.UDP"
    ],
    "name": "graylog",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Foreign",
        "Foreign.C",
        "GHC.Foreign",
        "GHC.IO.Encoding",
        "GHC.IO.Exception",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Internals",
        "System.Posix.Types",
        "System.Timeout",
        "Text.Read"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ]
    },
    "imports": [
      "CanonicalizePath",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "CopyFile001",
      "CopyFile002",
      "CopyFileWithMetadata",
      "CreateDirectory001",
      "CreateDirectoryIfMissing001",
      "CurrentDirectory001",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Directory001",
      "DoesDirectoryExist001",
      "FileTime",
      "FindFile001",
      "Foreign",
      "Foreign.C",
      "GetDirContents001",
      "GetDirContents002",
      "GetHomeDirectory001",
      "GetPermissions001",
      "GHC.Foreign",
      "GHC.IO.Encoding",
      "GHC.IO.Exception",
      "IsSymbolicLink",
      "Prelude",
      "RemoveDirectoryRecursive001",
      "RenameDirectory",
      "RenameFile001",
      "Safe",
      "System.Directory",
      "System.Directory.Internal",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.Posix",
      "System.Posix.Files",
      "System.Posix.Internals",
      "System.Posix.Types",
      "System.Timeout",
      "System.Win32",
      "System.Win32.Types",
      "T8482",
      "TestUtils",
      "Text.Read",
      "Util",
      "WithCurrentDirectory"
    ],
    "modules": [
      "System.Directory"
    ],
    "name": "directory",
    "version": "1.2.6.2"
  },
  {
    "dependencies": {
      "MonadRandom": [
        "Control.Monad.Random",
        "Control.Monad.Random.Class"
      ],
      "base": [
        "Control.Monad.IO.Class",
        "Prelude"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "monadcryptorandom": [
        "Control.Monad.CryptoRandom"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "text": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Monad.Catch",
      "Control.Monad.Cont.Class",
      "Control.Monad.CryptoRandom",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Http.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Random",
      "Control.Monad.Random.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Http",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Prelude",
      "Prelude.Compat"
    ],
    "modules": [
      "Control.Monad.Http",
      "Control.Monad.Http.Class",
      "Control.Monad.Trans.Http"
    ],
    "name": "monad-http",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "ConfigFile": [
        "Data.ConfigFile"
      ],
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "aeson": [],
      "async": [
        "Control.Concurrent.Async"
      ],
      "b9": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "GHC.Generics",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "Text.Printf",
        "Text.Read"
      ],
      "bifunctors": [],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get"
      ],
      "boxes": [
        "Text.PrettyPrint.Boxes"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Process"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "free": [
        "Control.Monad.Free"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Help.Pretty"
      ],
      "parallel": [
        "Control.Parallel.Strategies"
      ],
      "parsec": [],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "pretty-show": [
        "Text.Show.Pretty"
      ],
      "process": [],
      "random": [
        "System.Random"
      ],
      "semigroups": [],
      "syb": [
        "Data.Generics.Aliases",
        "Data.Generics.Schemes"
      ],
      "template": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Format"
      ],
      "transformers": [],
      "unordered-containers": [],
      "vector": [],
      "yaml": [
        "Data.Yaml"
      ]
    },
    "imports": [
      "B9",
      "B9.ArtifactGenerator",
      "B9.ArtifactGeneratorImpl",
      "B9.B9Config",
      "B9.B9Monad",
      "B9.Builder",
      "B9.ConfigUtils",
      "B9.Content.AST",
      "B9.Content.ErlangPropList",
      "B9.Content.ErlTerms",
      "B9.Content.Generator",
      "B9.Content.StringTemplate",
      "B9.Content.YamlObject",
      "B9.DiskImageBuilder",
      "B9.DiskImages",
      "B9.ExecEnv",
      "B9.LibVirtLXC",
      "B9.MBR",
      "B9.PartitionTable",
      "B9.QCUtil",
      "B9.Repository",
      "B9.RepositoryIO",
      "B9.ShellScript",
      "B9.Vm",
      "B9.VmBuilder",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.Async",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Free",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Control.Parallel.Strategies",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Conduit.Process",
      "Data.ConfigFile",
      "Data.Data",
      "Data.Function",
      "Data.Functor",
      "Data.Generics.Aliases",
      "Data.Generics.Schemes",
      "Data.Hashable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Data.Yaml",
      "GHC.Generics",
      "Options.Applicative",
      "Options.Applicative.Help.Pretty",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.Random",
      "Test.Hspec",
      "Test.QuickCheck",
      "Text.PrettyPrint",
      "Text.PrettyPrint.Boxes",
      "Text.Printf",
      "Text.Read",
      "Text.Show.Pretty"
    ],
    "modules": [
      "B9",
      "B9.B9Monad",
      "B9.B9Config",
      "B9.Builder",
      "B9.ConfigUtils",
      "B9.ExecEnv",
      "B9.DiskImages",
      "B9.DiskImageBuilder",
      "B9.ShellScript",
      "B9.PartitionTable",
      "B9.MBR",
      "B9.LibVirtLXC",
      "B9.Repository",
      "B9.RepositoryIO",
      "B9.ArtifactGenerator",
      "B9.ArtifactGeneratorImpl",
      "B9.Vm",
      "B9.VmBuilder",
      "B9.Content.ErlTerms",
      "B9.Content.ErlangPropList",
      "B9.Content.YamlObject",
      "B9.Content.AST",
      "B9.Content.Generator",
      "B9.Content.StringTemplate",
      "B9.QCUtil",
      "B9.DSL"
    ],
    "name": "b9",
    "version": "0.5.21"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Genomics",
      "Network.Google.Genomics.Types",
      "Network.Google.Resource.Genomics.AnnotationSets.Create",
      "Network.Google.Resource.Genomics.AnnotationSets.Delete",
      "Network.Google.Resource.Genomics.AnnotationSets.Get",
      "Network.Google.Resource.Genomics.AnnotationSets.Search",
      "Network.Google.Resource.Genomics.AnnotationSets.Update",
      "Network.Google.Resource.Genomics.Annotations.BatchCreate",
      "Network.Google.Resource.Genomics.Annotations.Create",
      "Network.Google.Resource.Genomics.Annotations.Delete",
      "Network.Google.Resource.Genomics.Annotations.Get",
      "Network.Google.Resource.Genomics.Annotations.Search",
      "Network.Google.Resource.Genomics.Annotations.Update",
      "Network.Google.Resource.Genomics.CallSets.Create",
      "Network.Google.Resource.Genomics.CallSets.Delete",
      "Network.Google.Resource.Genomics.CallSets.Get",
      "Network.Google.Resource.Genomics.CallSets.Patch",
      "Network.Google.Resource.Genomics.CallSets.Search",
      "Network.Google.Resource.Genomics.DataSets.Create",
      "Network.Google.Resource.Genomics.DataSets.Delete",
      "Network.Google.Resource.Genomics.DataSets.Get",
      "Network.Google.Resource.Genomics.DataSets.GetIAMPolicy",
      "Network.Google.Resource.Genomics.DataSets.List",
      "Network.Google.Resource.Genomics.DataSets.Patch",
      "Network.Google.Resource.Genomics.DataSets.SetIAMPolicy",
      "Network.Google.Resource.Genomics.DataSets.TestIAMPermissions",
      "Network.Google.Resource.Genomics.DataSets.Undelete",
      "Network.Google.Resource.Genomics.Operations.Cancel",
      "Network.Google.Resource.Genomics.Operations.Get",
      "Network.Google.Resource.Genomics.Operations.List",
      "Network.Google.Resource.Genomics.ReadGroupSets.CoverageBuckets.List",
      "Network.Google.Resource.Genomics.ReadGroupSets.Delete",
      "Network.Google.Resource.Genomics.ReadGroupSets.Export",
      "Network.Google.Resource.Genomics.ReadGroupSets.Get",
      "Network.Google.Resource.Genomics.ReadGroupSets.Import",
      "Network.Google.Resource.Genomics.ReadGroupSets.Patch",
      "Network.Google.Resource.Genomics.ReadGroupSets.Search",
      "Network.Google.Resource.Genomics.Reads.Search",
      "Network.Google.Resource.Genomics.Reads.Stream",
      "Network.Google.Resource.Genomics.References.Bases.List",
      "Network.Google.Resource.Genomics.References.Get",
      "Network.Google.Resource.Genomics.References.Search",
      "Network.Google.Resource.Genomics.Referencesets.Get",
      "Network.Google.Resource.Genomics.Referencesets.Search",
      "Network.Google.Resource.Genomics.VariantSets.Create",
      "Network.Google.Resource.Genomics.VariantSets.Delete",
      "Network.Google.Resource.Genomics.VariantSets.Export",
      "Network.Google.Resource.Genomics.VariantSets.Get",
      "Network.Google.Resource.Genomics.VariantSets.Patch",
      "Network.Google.Resource.Genomics.VariantSets.Search",
      "Network.Google.Resource.Genomics.Variants.Create",
      "Network.Google.Resource.Genomics.Variants.Delete",
      "Network.Google.Resource.Genomics.Variants.Get",
      "Network.Google.Resource.Genomics.Variants.Import",
      "Network.Google.Resource.Genomics.Variants.Merge",
      "Network.Google.Resource.Genomics.Variants.Patch",
      "Network.Google.Resource.Genomics.Variants.Search",
      "Network.Google.Resource.Genomics.Variants.Stream"
    ],
    "name": "gogol-genomics",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Compute",
      "Network.Google.Compute.Types",
      "Network.Google.Resource.Compute.Addresses.AggregatedList",
      "Network.Google.Resource.Compute.Addresses.Delete",
      "Network.Google.Resource.Compute.Addresses.Get",
      "Network.Google.Resource.Compute.Addresses.Insert",
      "Network.Google.Resource.Compute.Addresses.List",
      "Network.Google.Resource.Compute.Autoscalers.AggregatedList",
      "Network.Google.Resource.Compute.Autoscalers.Delete",
      "Network.Google.Resource.Compute.Autoscalers.Get",
      "Network.Google.Resource.Compute.Autoscalers.Insert",
      "Network.Google.Resource.Compute.Autoscalers.List",
      "Network.Google.Resource.Compute.Autoscalers.Patch",
      "Network.Google.Resource.Compute.Autoscalers.Update",
      "Network.Google.Resource.Compute.BackendServices.Delete",
      "Network.Google.Resource.Compute.BackendServices.Get",
      "Network.Google.Resource.Compute.BackendServices.GetHealth",
      "Network.Google.Resource.Compute.BackendServices.Insert",
      "Network.Google.Resource.Compute.BackendServices.List",
      "Network.Google.Resource.Compute.BackendServices.Patch",
      "Network.Google.Resource.Compute.BackendServices.Update",
      "Network.Google.Resource.Compute.DiskTypes.AggregatedList",
      "Network.Google.Resource.Compute.DiskTypes.Get",
      "Network.Google.Resource.Compute.DiskTypes.List",
      "Network.Google.Resource.Compute.Disks.AggregatedList",
      "Network.Google.Resource.Compute.Disks.CreateSnapshot",
      "Network.Google.Resource.Compute.Disks.Delete",
      "Network.Google.Resource.Compute.Disks.Get",
      "Network.Google.Resource.Compute.Disks.Insert",
      "Network.Google.Resource.Compute.Disks.List",
      "Network.Google.Resource.Compute.Disks.Resize",
      "Network.Google.Resource.Compute.Firewalls.Delete",
      "Network.Google.Resource.Compute.Firewalls.Get",
      "Network.Google.Resource.Compute.Firewalls.Insert",
      "Network.Google.Resource.Compute.Firewalls.List",
      "Network.Google.Resource.Compute.Firewalls.Patch",
      "Network.Google.Resource.Compute.Firewalls.Update",
      "Network.Google.Resource.Compute.ForwardingRules.AggregatedList",
      "Network.Google.Resource.Compute.ForwardingRules.Delete",
      "Network.Google.Resource.Compute.ForwardingRules.Get",
      "Network.Google.Resource.Compute.ForwardingRules.Insert",
      "Network.Google.Resource.Compute.ForwardingRules.List",
      "Network.Google.Resource.Compute.ForwardingRules.SetTarget",
      "Network.Google.Resource.Compute.GlobalAddresses.Delete",
      "Network.Google.Resource.Compute.GlobalAddresses.Get",
      "Network.Google.Resource.Compute.GlobalAddresses.Insert",
      "Network.Google.Resource.Compute.GlobalAddresses.List",
      "Network.Google.Resource.Compute.GlobalForwardingRules.Delete",
      "Network.Google.Resource.Compute.GlobalForwardingRules.Get",
      "Network.Google.Resource.Compute.GlobalForwardingRules.Insert",
      "Network.Google.Resource.Compute.GlobalForwardingRules.List",
      "Network.Google.Resource.Compute.GlobalForwardingRules.SetTarget",
      "Network.Google.Resource.Compute.GlobalOperations.AggregatedList",
      "Network.Google.Resource.Compute.GlobalOperations.Delete",
      "Network.Google.Resource.Compute.GlobalOperations.Get",
      "Network.Google.Resource.Compute.GlobalOperations.List",
      "Network.Google.Resource.Compute.HTTPHealthChecks.Delete",
      "Network.Google.Resource.Compute.HTTPHealthChecks.Get",
      "Network.Google.Resource.Compute.HTTPHealthChecks.Insert",
      "Network.Google.Resource.Compute.HTTPHealthChecks.List",
      "Network.Google.Resource.Compute.HTTPHealthChecks.Patch",
      "Network.Google.Resource.Compute.HTTPHealthChecks.Update",
      "Network.Google.Resource.Compute.HTTPSHealthChecks.Delete",
      "Network.Google.Resource.Compute.HTTPSHealthChecks.Get",
      "Network.Google.Resource.Compute.HTTPSHealthChecks.Insert",
      "Network.Google.Resource.Compute.HTTPSHealthChecks.List",
      "Network.Google.Resource.Compute.HTTPSHealthChecks.Patch",
      "Network.Google.Resource.Compute.HTTPSHealthChecks.Update",
      "Network.Google.Resource.Compute.Images.Delete",
      "Network.Google.Resource.Compute.Images.Deprecate",
      "Network.Google.Resource.Compute.Images.Get",
      "Network.Google.Resource.Compute.Images.GetFromFamily",
      "Network.Google.Resource.Compute.Images.Insert",
      "Network.Google.Resource.Compute.Images.List",
      "Network.Google.Resource.Compute.InstanceGroupManagers.AbandonInstances",
      "Network.Google.Resource.Compute.InstanceGroupManagers.AggregatedList",
      "Network.Google.Resource.Compute.InstanceGroupManagers.Delete",
      "Network.Google.Resource.Compute.InstanceGroupManagers.DeleteInstances",
      "Network.Google.Resource.Compute.InstanceGroupManagers.Get",
      "Network.Google.Resource.Compute.InstanceGroupManagers.Insert",
      "Network.Google.Resource.Compute.InstanceGroupManagers.List",
      "Network.Google.Resource.Compute.InstanceGroupManagers.ListManagedInstances",
      "Network.Google.Resource.Compute.InstanceGroupManagers.RecreateInstances",
      "Network.Google.Resource.Compute.InstanceGroupManagers.Resize",
      "Network.Google.Resource.Compute.InstanceGroupManagers.SetInstanceTemplate",
      "Network.Google.Resource.Compute.InstanceGroupManagers.SetTargetPools",
      "Network.Google.Resource.Compute.InstanceGroups.AddInstances",
      "Network.Google.Resource.Compute.InstanceGroups.AggregatedList",
      "Network.Google.Resource.Compute.InstanceGroups.Delete",
      "Network.Google.Resource.Compute.InstanceGroups.Get",
      "Network.Google.Resource.Compute.InstanceGroups.Insert",
      "Network.Google.Resource.Compute.InstanceGroups.List",
      "Network.Google.Resource.Compute.InstanceGroups.ListInstances",
      "Network.Google.Resource.Compute.InstanceGroups.RemoveInstances",
      "Network.Google.Resource.Compute.InstanceGroups.SetNamedPorts",
      "Network.Google.Resource.Compute.InstanceTemplates.Delete",
      "Network.Google.Resource.Compute.InstanceTemplates.Get",
      "Network.Google.Resource.Compute.InstanceTemplates.Insert",
      "Network.Google.Resource.Compute.InstanceTemplates.List",
      "Network.Google.Resource.Compute.Instances.AddAccessConfig",
      "Network.Google.Resource.Compute.Instances.AggregatedList",
      "Network.Google.Resource.Compute.Instances.AttachDisk",
      "Network.Google.Resource.Compute.Instances.Delete",
      "Network.Google.Resource.Compute.Instances.DeleteAccessConfig",
      "Network.Google.Resource.Compute.Instances.DetachDisk",
      "Network.Google.Resource.Compute.Instances.Get",
      "Network.Google.Resource.Compute.Instances.GetSerialPortOutput",
      "Network.Google.Resource.Compute.Instances.Insert",
      "Network.Google.Resource.Compute.Instances.List",
      "Network.Google.Resource.Compute.Instances.Reset",
      "Network.Google.Resource.Compute.Instances.SetDiskAutoDelete",
      "Network.Google.Resource.Compute.Instances.SetMachineType",
      "Network.Google.Resource.Compute.Instances.SetMetadata",
      "Network.Google.Resource.Compute.Instances.SetScheduling",
      "Network.Google.Resource.Compute.Instances.SetTags",
      "Network.Google.Resource.Compute.Instances.Start",
      "Network.Google.Resource.Compute.Instances.Stop",
      "Network.Google.Resource.Compute.Licenses.Get",
      "Network.Google.Resource.Compute.MachineTypes.AggregatedList",
      "Network.Google.Resource.Compute.MachineTypes.Get",
      "Network.Google.Resource.Compute.MachineTypes.List",
      "Network.Google.Resource.Compute.Networks.Delete",
      "Network.Google.Resource.Compute.Networks.Get",
      "Network.Google.Resource.Compute.Networks.Insert",
      "Network.Google.Resource.Compute.Networks.List",
      "Network.Google.Resource.Compute.Projects.Get",
      "Network.Google.Resource.Compute.Projects.MoveDisk",
      "Network.Google.Resource.Compute.Projects.MoveInstance",
      "Network.Google.Resource.Compute.Projects.SetCommonInstanceMetadata",
      "Network.Google.Resource.Compute.Projects.SetUsageExportBucket",
      "Network.Google.Resource.Compute.RegionOperations.Delete",
      "Network.Google.Resource.Compute.RegionOperations.Get",
      "Network.Google.Resource.Compute.RegionOperations.List",
      "Network.Google.Resource.Compute.Regions.Get",
      "Network.Google.Resource.Compute.Regions.List",
      "Network.Google.Resource.Compute.Routes.Delete",
      "Network.Google.Resource.Compute.Routes.Get",
      "Network.Google.Resource.Compute.Routes.Insert",
      "Network.Google.Resource.Compute.Routes.List",
      "Network.Google.Resource.Compute.SSLCertificates.Delete",
      "Network.Google.Resource.Compute.SSLCertificates.Get",
      "Network.Google.Resource.Compute.SSLCertificates.Insert",
      "Network.Google.Resource.Compute.SSLCertificates.List",
      "Network.Google.Resource.Compute.Snapshots.Delete",
      "Network.Google.Resource.Compute.Snapshots.Get",
      "Network.Google.Resource.Compute.Snapshots.List",
      "Network.Google.Resource.Compute.Subnetworks.AggregatedList",
      "Network.Google.Resource.Compute.Subnetworks.Delete",
      "Network.Google.Resource.Compute.Subnetworks.Get",
      "Network.Google.Resource.Compute.Subnetworks.Insert",
      "Network.Google.Resource.Compute.Subnetworks.List",
      "Network.Google.Resource.Compute.TargetHTTPProxies.Delete",
      "Network.Google.Resource.Compute.TargetHTTPProxies.Get",
      "Network.Google.Resource.Compute.TargetHTTPProxies.Insert",
      "Network.Google.Resource.Compute.TargetHTTPProxies.List",
      "Network.Google.Resource.Compute.TargetHTTPProxies.SetURLMap",
      "Network.Google.Resource.Compute.TargetHTTPSProxies.Delete",
      "Network.Google.Resource.Compute.TargetHTTPSProxies.Get",
      "Network.Google.Resource.Compute.TargetHTTPSProxies.Insert",
      "Network.Google.Resource.Compute.TargetHTTPSProxies.List",
      "Network.Google.Resource.Compute.TargetHTTPSProxies.SetSSLCertificates",
      "Network.Google.Resource.Compute.TargetHTTPSProxies.SetURLMap",
      "Network.Google.Resource.Compute.TargetInstances.AggregatedList",
      "Network.Google.Resource.Compute.TargetInstances.Delete",
      "Network.Google.Resource.Compute.TargetInstances.Get",
      "Network.Google.Resource.Compute.TargetInstances.Insert",
      "Network.Google.Resource.Compute.TargetInstances.List",
      "Network.Google.Resource.Compute.TargetPools.AddHealthCheck",
      "Network.Google.Resource.Compute.TargetPools.AddInstance",
      "Network.Google.Resource.Compute.TargetPools.AggregatedList",
      "Network.Google.Resource.Compute.TargetPools.Delete",
      "Network.Google.Resource.Compute.TargetPools.Get",
      "Network.Google.Resource.Compute.TargetPools.GetHealth",
      "Network.Google.Resource.Compute.TargetPools.Insert",
      "Network.Google.Resource.Compute.TargetPools.List",
      "Network.Google.Resource.Compute.TargetPools.RemoveHealthCheck",
      "Network.Google.Resource.Compute.TargetPools.RemoveInstance",
      "Network.Google.Resource.Compute.TargetPools.SetBackup",
      "Network.Google.Resource.Compute.TargetVPNGateways.AggregatedList",
      "Network.Google.Resource.Compute.TargetVPNGateways.Delete",
      "Network.Google.Resource.Compute.TargetVPNGateways.Get",
      "Network.Google.Resource.Compute.TargetVPNGateways.Insert",
      "Network.Google.Resource.Compute.TargetVPNGateways.List",
      "Network.Google.Resource.Compute.URLMaps.Delete",
      "Network.Google.Resource.Compute.URLMaps.Get",
      "Network.Google.Resource.Compute.URLMaps.Insert",
      "Network.Google.Resource.Compute.URLMaps.List",
      "Network.Google.Resource.Compute.URLMaps.Patch",
      "Network.Google.Resource.Compute.URLMaps.Update",
      "Network.Google.Resource.Compute.URLMaps.Validate",
      "Network.Google.Resource.Compute.VPNTunnels.AggregatedList",
      "Network.Google.Resource.Compute.VPNTunnels.Delete",
      "Network.Google.Resource.Compute.VPNTunnels.Get",
      "Network.Google.Resource.Compute.VPNTunnels.Insert",
      "Network.Google.Resource.Compute.VPNTunnels.List",
      "Network.Google.Resource.Compute.ZoneOperations.Delete",
      "Network.Google.Resource.Compute.ZoneOperations.Get",
      "Network.Google.Resource.Compute.ZoneOperations.List",
      "Network.Google.Resource.Compute.Zones.Get",
      "Network.Google.Resource.Compute.Zones.List"
    ],
    "name": "gogol-compute",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.IORef"
      ],
      "base-compat": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "directory": [],
      "filepath": [],
      "logging-facade": [
        "System.Logging.Facade",
        "System.Logging.Facade.Sink",
        "System.Logging.Facade.Types"
      ],
      "temporary": []
    },
    "imports": [
      "Data.ByteString",
      "Data.IORef",
      "System.Logging.Facade",
      "System.Logging.Facade.Sink",
      "System.Logging.Facade.Types",
      "Test.Hspec",
      "Test.Mockery.Logging"
    ],
    "modules": [
      "Test.Mockery.Directory",
      "Test.Mockery.Environment",
      "Test.Mockery.Logging"
    ],
    "name": "mockery",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad"
      ],
      "semigroupoids": [
        "Data.Functor.Alt",
        "Data.Functor.Bind"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Functor.Alt",
      "Data.Functor.Bind"
    ],
    "modules": [
      "Control.Monad.Product"
    ],
    "name": "monad-products",
    "version": "4.0.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Array",
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.List",
      "Data.Sequence",
      "Data.Version",
      "Foreign.C.String",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "Text.Regex.Base",
      "Text.Regex.Base.Impl",
      "Text.Regex.Base.RegexLike",
      "Text.Regex.Posix.ByteString",
      "Text.Regex.Posix.ByteString.Lazy",
      "Text.Regex.Posix.Sequence",
      "Text.Regex.Posix.String",
      "Text.Regex.Posix.Wrap"
    ],
    "modules": [
      "Text.Regex.Posix",
      "Text.Regex.Posix.Wrap",
      "Text.Regex.Posix.String",
      "Text.Regex.Posix.Sequence",
      "Text.Regex.Posix.ByteString",
      "Text.Regex.Posix.ByteString.Lazy"
    ],
    "name": "regex-posix",
    "version": "0.95.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Data.List"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "cryptonite": [],
      "data-default": [],
      "http-types": [],
      "memory": [],
      "network-uri": [
        "Network.URI"
      ],
      "scientific": [],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ],
      "time": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Extended",
      "Data.ByteString.ExtendedTests",
      "Data.ByteString.Lazy.Char8",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Extended",
      "Data.Text.ExtendedTests",
      "Data.Text.Lazy",
      "Data.Vector",
      "Network.URI",
      "Test.DocTest",
      "Test.QuickCheck",
      "Web.JWTInteropTests",
      "Web.JWTTests",
      "Web.JWTTestsCompat"
    ],
    "modules": [
      "Web.JWT"
    ],
    "name": "jwt",
    "version": "0.7.2"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.InstalledPackageInfo",
        "Distribution.License",
        "Distribution.Package",
        "Distribution.Simple.Configure",
        "Distribution.Simple.LocalBuildInfo",
        "Distribution.Simple.PackageIndex",
        "Distribution.Text"
      ],
      "base": [],
      "containers": [
        "Data.Set"
      ],
      "directory": [],
      "filepath": []
    },
    "imports": [
      "Data.Set",
      "Distribution.InstalledPackageInfo",
      "Distribution.License",
      "Distribution.Package",
      "Distribution.Simple.Configure",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.PackageIndex",
      "Distribution.Text"
    ],
    "modules": [],
    "name": "cabal-dependency-licenses",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.IArray",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "old-time": [
        "System.Time"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Lens.Action",
      "Control.Monad",
      "Data.Array",
      "Data.Array.IArray",
      "Data.Array.Unboxed",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Data.Lens",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.SafeCopy",
      "Data.SafeCopy.Derive",
      "Data.SafeCopy.Instances",
      "Data.SafeCopy.SafeCopy",
      "Data.Sequence",
      "Data.Serialize",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Tree",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "System.Time",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.SafeCopy",
      "Data.SafeCopy.Internal"
    ],
    "name": "safecopy",
    "version": "0.9.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Monoid"
      ],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Monoid",
      "Data.Text",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes"
    ],
    "modules": [
      "Text.Blaze.Bootstrap"
    ],
    "name": "blaze-bootstrap",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Version",
        "Data.Void",
        "Data.Word",
        "Text.ParserCombinators.ReadP",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ]
    },
    "imports": [
      "Build",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.ByteString",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Read",
      "Data.Time",
      "Data.Time.Locale.Compat",
      "Data.Traversable",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "System.Directory",
      "System.FilePath",
      "Test.DocTest",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Text.Read",
      "TextShow",
      "Web.HttpApiData",
      "Web.HttpApiData.Internal"
    ],
    "modules": [
      "Web.HttpApiData",
      "Web.HttpApiData.Internal"
    ],
    "name": "http-api-data",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Real",
        "Prelude",
        "System.IO.Unsafe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.List",
      "Data.Monoid",
      "Data.Ord",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Real",
      "Prelude",
      "Symengine",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Symengine"
    ],
    "name": "symengine",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Maybe"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Generics",
      "Data.Maybe",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Language.Haskell.TH.Extras"
    ],
    "name": "th-extras",
    "version": "0.0.0.4"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid",
        "GHC.Generics",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "extra": [
        "Data.List.Extra"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "quickcheck-combinators": [
        "Test.QuickCheck.Combinators"
      ],
      "quickcheck-instances": [
        "Test.QuickCheck.Instances"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ]
    },
    "imports": [
      "Application.Types",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.List.Extra",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "GHC.Generics",
      "LText.Document",
      "LText.Eval",
      "LText.Expr",
      "LText.Type",
      "Options.Applicative",
      "Prelude",
      "System.Directory",
      "System.Exit",
      "System.IO",
      "Test.QuickCheck",
      "Test.QuickCheck.Combinators",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Application.Types",
      "LText.Expr",
      "LText.Eval",
      "LText.Type",
      "LText.Document"
    ],
    "name": "ltext",
    "version": "0.1.2.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Array",
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Sequence",
      "Data.Version",
      "Foreign",
      "Foreign.C.String",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "Text.Regex.Base",
      "Text.Regex.Base.Impl",
      "Text.Regex.Base.RegexLike",
      "Text.Regex.PCRE.ByteString",
      "Text.Regex.PCRE.ByteString.Lazy",
      "Text.Regex.PCRE.Sequence",
      "Text.Regex.PCRE.String",
      "Text.Regex.PCRE.Wrap"
    ],
    "modules": [
      "Text.Regex.PCRE",
      "Text.Regex.PCRE.Wrap",
      "Text.Regex.PCRE.String",
      "Text.Regex.PCRE.Sequence",
      "Text.Regex.PCRE.ByteString",
      "Text.Regex.PCRE.ByteString.Lazy"
    ],
    "name": "regex-pcre",
    "version": "0.94.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.IORef",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "connection": [
        "Network.Connection"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "http-client": [
        "Network.HTTP.Client",
        "Network.HTTP.Client.Internal"
      ],
      "network": [
        "Network.Socket"
      ],
      "tls": [
        "Network.TLS"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.ByteString",
      "Data.Default.Class",
      "Data.IORef",
      "Network.Connection",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Internal",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Network.Socket",
      "Network.TLS",
      "System.IO.Unsafe",
      "Test.Hspec"
    ],
    "modules": [
      "Network.HTTP.Client.TLS"
    ],
    "name": "http-client-tls",
    "version": "0.2.4.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Monoid",
        "GHC.Generics"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy.Char8",
      "Data.HashMap.Strict",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "GHC.Generics",
      "Network.HTTP.Client",
      "Network.HTTP.Types"
    ],
    "modules": [
      "Web.Ebay"
    ],
    "name": "hsebaysdk",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "enclosed-exceptions": [
        "Control.Exception.Enclosed"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "lifted-async": [
        "Control.Concurrent.Async.Lifted"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.Trans"
      ],
      "process": [
        "System.Process"
      ],
      "system-fileio": [
        "Filesystem"
      ],
      "system-filepath": [
        "Filesystem.Path",
        "Filesystem.Path.CurrentOS"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Async.Lifted",
      "Control.Exception",
      "Control.Exception.Enclosed",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "CopySpec",
      "Data.ByteString",
      "Data.Char",
      "Data.Foldable",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Time.Clock",
      "Data.Tree",
      "Data.Typeable",
      "EnvSpec",
      "FailureSpec",
      "Filesystem",
      "Filesystem.Path",
      "Filesystem.Path.CurrentOS",
      "FindSpec",
      "Help",
      "LiftedSpec",
      "MoveSpec",
      "Prelude",
      "ReadFileSpec",
      "RmSpec",
      "RunSpec",
      "Shelly",
      "Shelly.Base",
      "Shelly.Find",
      "Shelly.Lifted",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.PosixCompat.Files",
      "System.Process",
      "Test.Hspec",
      "Test.Hspec.HUnit",
      "Test.HUnit",
      "TestInit",
      "WhichSpec",
      "WriteSpec"
    ],
    "modules": [
      "Shelly",
      "Shelly.Lifted",
      "Shelly.Pipe",
      "Shelly.Unix"
    ],
    "name": "shelly",
    "version": "1.6.8.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Prelude"
      ],
      "safe": [
        "Safe"
      ],
      "text": [
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.Time.Locale.Compat",
      "Prelude",
      "Safe"
    ],
    "modules": [
      "Data.MBox",
      "Data.MBox.String"
    ],
    "name": "mbox",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [],
      "template-haskell": [],
      "transformers": [
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Strict"
    ],
    "modules": [
      "System.Logging.Facade",
      "System.Logging.Facade.Sink",
      "System.Logging.Facade.Class",
      "System.Logging.Facade.Types"
    ],
    "name": "logging-facade",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "random": [
        "System.Random"
      ],
      "semigroups": []
    },
    "imports": [
      "Control.Applicative",
      "Data.Commutative",
      "Data.CommutativeSpec",
      "Data.Foldable",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Mergeable",
      "Data.Monoid",
      "Prelude",
      "System.IO.Unsafe",
      "System.Random",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Commutative",
      "Data.Mergeable"
    ],
    "name": "commutative",
    "version": "0.0.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Network.Multipart.Header",
      "System.IO",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "Network.Multipart",
      "Network.Multipart.Header"
    ],
    "name": "multipart",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "GHC.Conc",
        "Numeric",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Timeout",
        "Text.Read"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bson": [
        "Data.Bson",
        "Data.Bson.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "cryptohash": [
        "Crypto.Hash.MD5",
        "Crypto.Hash.SHA1",
        "Crypto.MAC.HMAC"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "hashtables": [
        "Data.HashTable.IO"
      ],
      "lifted-base": [
        "Control.Concurrent.MVar.Lifted",
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Trans"
      ],
      "network": [
        "Network"
      ],
      "nonce": [
        "Crypto.Nonce"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "random": [
        "System.Random"
      ],
      "random-shuffle": [
        "System.Random.Shuffle"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "tls": [
        "Network.TLS",
        "Network.TLS.Extra.Cipher"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar.Lifted",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Error",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Control",
      "Criterion.Main",
      "Crypto.Hash.MD5",
      "Crypto.Hash.SHA1",
      "Crypto.MAC.HMAC",
      "Crypto.Nonce",
      "Database.MongoDB",
      "Database.MongoDB.Admin",
      "Database.MongoDB.Connection",
      "Database.MongoDB.Internal.Protocol",
      "Database.MongoDB.Internal.Util",
      "Database.MongoDB.Query",
      "Database.MongoDB.Transport",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.Bson",
      "Data.Bson.Binary",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Default.Class",
      "Data.HashTable.IO",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Time.Format",
      "Data.Typeable",
      "Data.Word",
      "GHC.Conc",
      "Network",
      "Network.TLS",
      "Network.TLS.Extra.Cipher",
      "Numeric",
      "Prelude",
      "Spec",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Random",
      "System.Random.Shuffle",
      "System.Timeout",
      "Test.Hspec",
      "Test.Hspec.Runner",
      "TestImport",
      "Text.ParserCombinators.Parsec",
      "Text.Read"
    ],
    "modules": [
      "Database.MongoDB",
      "Database.MongoDB.Admin",
      "Database.MongoDB.Connection",
      "Database.MongoDB.Query",
      "Database.MongoDB.Transport",
      "Database.MongoDB.Transport.Tls"
    ],
    "name": "mongoDB",
    "version": "2.1.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "drifter": [],
      "either": [],
      "mtl": [],
      "postgresql-simple": [],
      "time": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Drifter.PostgreSQL"
    ],
    "name": "drifter-postgresql",
    "version": "0.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "mtl": [],
      "opaleye": [],
      "opaleye-trans": [],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple"
      ],
      "product-profunctors": [],
      "transformers": [],
      "transformers-base": []
    },
    "imports": [
      "Database.PostgreSQL.Simple"
    ],
    "modules": [
      "Opaleye.Trans"
    ],
    "name": "opaleye-trans",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Int",
        "Data.List.NonEmpty",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Word",
        "Numeric.Natural",
        "Prelude",
        "System.IO"
      ],
      "containers": [],
      "nats": [],
      "semigroupoids": [
        "Data.Functor.Apply",
        "Data.Functor.Bind",
        "Data.Functor.Plus"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.UTF8",
      "Data.Foldable",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Plus",
      "Data.Int",
      "Data.List.NonEmpty",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Traversable",
      "Data.Word",
      "Numeric.Natural",
      "Prelude",
      "System.IO",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.PrettyPrint.Free.Internal"
    ],
    "modules": [
      "Text.PrettyPrint.Free",
      "Text.PrettyPrint.Free.Internal"
    ],
    "name": "wl-pprint-extras",
    "version": "3.5.0.5"
  },
  {
    "dependencies": {
      "array": [],
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ],
      "conduit": [],
      "criterion": [],
      "hw-bits": [],
      "hw-conduit": [],
      "resourcet": [],
      "word8": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Vector.Storable"
    ],
    "modules": [
      "HaskellWorks.Data.Conduit.ByteString",
      "HaskellWorks.Data.Conduit.List"
    ],
    "name": "hw-conduit",
    "version": "0.0.0.11"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Proxy",
        "Data.Typeable",
        "GHC.Exts"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "type-fun": [
        "TypeFun.Data.List",
        "TypeFun.Data.Peano"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.HSet",
      "Data.HSet.Get",
      "Data.HSet.Modify",
      "Data.HSet.Remove",
      "Data.HSet.SubHSet",
      "Data.HSet.Type",
      "Data.HSet.Union",
      "Data.Proxy",
      "Data.Tagged",
      "Data.Typeable",
      "GHC.Exts",
      "Test.HUnit",
      "TypeFun.Data.List",
      "TypeFun.Data.Peano"
    ],
    "modules": [
      "Data.HSet",
      "Data.HSet.Get",
      "Data.HSet.Modify",
      "Data.HSet.Remove",
      "Data.HSet.Reverse",
      "Data.HSet.SubHSet",
      "Data.HSet.Type",
      "Data.HSet.Union"
    ],
    "name": "hset",
    "version": "2.2.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [],
      "bytestring": [],
      "exceptions": [],
      "http-client": [],
      "http-conduit": [],
      "lens": [],
      "lens-aeson": [],
      "mtl": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "unordered-containers": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Attoparsec.Text",
      "Data.Text",
      "Data.Vector"
    ],
    "modules": [
      "Database.Cayley.Client",
      "Database.Cayley.Types"
    ],
    "name": "cayley-client",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Bool",
        "Data.Char",
        "Data.Complex",
        "Data.Either",
        "Data.Eq",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.Kind",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Type.Coercion",
        "Data.Type.Equality",
        "Data.Void",
        "Data.Word",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Enum",
        "GHC.Err",
        "GHC.ExecutionStack",
        "GHC.Exts",
        "GHC.Float",
        "GHC.Generics",
        "GHC.Num",
        "GHC.OverloadedLabels",
        "GHC.Real",
        "GHC.Show",
        "GHC.Stack",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "safe": [
        "Safe"
      ],
      "stm": [
        "Control.Monad.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ],
      "transformers": []
    },
    "imports": [
      "Applicative",
      "Base",
      "Bifunctor",
      "Bool",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.STM",
      "Control.Monad.Trans",
      "Conv",
      "Data.Bifunctor",
      "Data.Bits",
      "Data.Bool",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Complex",
      "Data.Either",
      "Data.Eq",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Kind",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Type.Coercion",
      "Data.Type.Equality",
      "Data.Void",
      "Data.Word",
      "Debug",
      "Either",
      "Foreign.Storable",
      "Functor",
      "GHC.Base",
      "GHC.Enum",
      "GHC.Err",
      "GHC.ExecutionStack",
      "GHC.Exts",
      "GHC.Float",
      "GHC.Generics",
      "GHC.Num",
      "GHC.OverloadedLabels",
      "GHC.Real",
      "GHC.Records",
      "GHC.Show",
      "GHC.Stack",
      "GHC.Types",
      "List",
      "Monad",
      "Panic",
      "Safe",
      "Semiring",
      "Show",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "Text.Read"
    ],
    "modules": [
      "Protolude",
      "Unsafe",
      "Base",
      "Applicative",
      "Bool",
      "Debug",
      "List",
      "Monad",
      "Show",
      "Conv",
      "Either",
      "Functor",
      "Semiring",
      "Bifunctor",
      "Panic"
    ],
    "name": "protolude",
    "version": "0.1.7"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Data.Coerce",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "GHC.Generics",
        "Numeric",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "microlens": [
        "Lens.Micro"
      ],
      "microlens-th": [
        "Lens.Micro.TH"
      ],
      "network": [
        "Network"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad.Catch",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Coerce",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Scientific",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "GHC.Generics",
      "Lens.Micro",
      "Lens.Micro.TH",
      "Network",
      "Network.Bitcoin.BitX",
      "Network.Bitcoin.BitX.Internal",
      "Network.Bitcoin.BitX.Private",
      "Network.Bitcoin.BitX.Private.Order",
      "Network.Bitcoin.BitX.Private.Quote",
      "Network.Bitcoin.BitX.Private.Withdrawal",
      "Network.Bitcoin.BitX.Public",
      "Network.Bitcoin.BitX.Response",
      "Network.Bitcoin.BitX.Spec.Common",
      "Network.Bitcoin.BitX.Spec.Specs.NetSpec",
      "Network.Bitcoin.BitX.Types",
      "Network.Bitcoin.BitX.Types.Internal",
      "Network.Bitcoin.BitX.Types.Internal.Decimal",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types.Status",
      "Numeric",
      "Safe",
      "System.Directory",
      "System.IO.Unsafe",
      "Test.DocTest",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Network.Bitcoin.BitX",
      "Network.Bitcoin.BitX.Public",
      "Network.Bitcoin.BitX.Private",
      "Network.Bitcoin.BitX.Types",
      "Network.Bitcoin.BitX.Private.Quote",
      "Network.Bitcoin.BitX.Private.Order",
      "Network.Bitcoin.BitX.Private.Withdrawal",
      "Network.Bitcoin.BitX.Response"
    ],
    "name": "bitx-bitcoin",
    "version": "0.10.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Bits",
        "Data.IORef",
        "Data.List",
        "Data.Typeable",
        "Foreign",
        "Foreign.C"
      ],
      "vector": [
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Bits",
      "Data.IORef",
      "Data.List",
      "Data.Typeable",
      "Data.Vector.Storable",
      "Foreign",
      "Foreign.C",
      "Freenect.FFI"
    ],
    "modules": [
      "Freenect",
      "Freenect.FFI"
    ],
    "name": "freenect",
    "version": "1.2.1"
  },
  {
    "dependencies": {
      "flexible-defaults": [
        "Language.Haskell.TH.FlexibleDefaults"
      ],
      "mersenne-random-pure64": [
        "System.Random.Mersenne.Pure64"
      ],
      "random": [
        "System.Random"
      ],
      "stateref": [
        "Data.StateRef"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "th-extras": [
        "Language.Haskell.TH.Extras"
      ]
    },
    "imports": [
      "Control.Monad.Reader",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.ST.Strict",
      "Data.Bits",
      "Data.Generics",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Random.Internal.Source",
      "Data.Random.Internal.Words",
      "Data.Random.Source",
      "Data.Random.Source.DevRandom",
      "Data.Random.Source.Internal.Prim",
      "Data.Random.Source.Internal.TH",
      "Data.Random.Source.MWC",
      "Data.Random.Source.StdGen",
      "Data.StateRef",
      "Data.Typeable",
      "Data.Word",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Extras",
      "Language.Haskell.TH.FlexibleDefaults",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "System.Random.Mersenne.Pure64",
      "System.Random.MWC"
    ],
    "modules": [
      "Data.Random.Source",
      "Data.Random.Source.IO",
      "Data.Random.Source.PureMT",
      "Data.Random.Source.Std",
      "Data.Random.Source.StdGen",
      "Data.Random.Internal.Words",
      "Data.Random.Internal.Source"
    ],
    "name": "random-source",
    "version": "0.3.0.6"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.KMS",
      "Test.AWS.Fixture",
      "Test.AWS.KMS",
      "Test.AWS.KMS.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.KMS",
      "Network.AWS.KMS.CancelKeyDeletion",
      "Network.AWS.KMS.CreateAlias",
      "Network.AWS.KMS.CreateGrant",
      "Network.AWS.KMS.CreateKey",
      "Network.AWS.KMS.Decrypt",
      "Network.AWS.KMS.DeleteAlias",
      "Network.AWS.KMS.DescribeKey",
      "Network.AWS.KMS.DisableKey",
      "Network.AWS.KMS.DisableKeyRotation",
      "Network.AWS.KMS.EnableKey",
      "Network.AWS.KMS.EnableKeyRotation",
      "Network.AWS.KMS.Encrypt",
      "Network.AWS.KMS.GenerateDataKey",
      "Network.AWS.KMS.GenerateDataKeyWithoutPlaintext",
      "Network.AWS.KMS.GenerateRandom",
      "Network.AWS.KMS.GetKeyPolicy",
      "Network.AWS.KMS.GetKeyRotationStatus",
      "Network.AWS.KMS.ListAliases",
      "Network.AWS.KMS.ListGrants",
      "Network.AWS.KMS.ListKeyPolicies",
      "Network.AWS.KMS.ListKeys",
      "Network.AWS.KMS.ListRetirableGrants",
      "Network.AWS.KMS.PutKeyPolicy",
      "Network.AWS.KMS.ReEncrypt",
      "Network.AWS.KMS.RetireGrant",
      "Network.AWS.KMS.RevokeGrant",
      "Network.AWS.KMS.ScheduleKeyDeletion",
      "Network.AWS.KMS.Types",
      "Network.AWS.KMS.UpdateAlias",
      "Network.AWS.KMS.UpdateKeyDescription",
      "Network.AWS.KMS.Waiters"
    ],
    "name": "amazonka-kms",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Prelude",
        "System.Environment"
      ],
      "hxt": [
        "Data.Tree.NavigatableTree.Class",
        "Data.Tree.NavigatableTree.XPathAxis",
        "Data.Tree.NTree.Zipper.TypeDefs",
        "Text.XML.HXT.Core",
        "Text.XML.HXT.DOM.ShowXml",
        "Text.XML.HXT.DOM.XmlNode",
        "Text.XML.HXT.DTDValidation.TypeDefs"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.String"
      ],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Tree.NavigatableTree.Class",
      "Data.Tree.NavigatableTree.XPathAxis",
      "Data.Tree.NTree.Zipper.TypeDefs",
      "Prelude",
      "System.Environment",
      "Text.Parsec",
      "Text.Parsec.String",
      "Text.XML.HXT.Core",
      "Text.XML.HXT.CSS",
      "Text.XML.HXT.CSS.Parser",
      "Text.XML.HXT.CSS.TypeDefs",
      "Text.XML.HXT.DOM.ShowXml",
      "Text.XML.HXT.DOM.XmlNode",
      "Text.XML.HXT.DTDValidation.TypeDefs"
    ],
    "modules": [
      "Text.XML.HXT.CSS",
      "Text.XML.HXT.CSS.TypeDefs",
      "Text.XML.HXT.CSS.Parser"
    ],
    "name": "hxt-css",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "bytestring-lexing": [
        "Data.ByteString.Lex.Fractional",
        "Data.ByteString.Lex.Integral"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans"
      ],
      "network": [
        "Network"
      ],
      "resource-pool": [
        "Data.Pool"
      ],
      "scanner": [
        "Scanner"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Database.Redis",
      "Database.Redis.Commands",
      "Database.Redis.Core",
      "Database.Redis.ManualCommands",
      "Database.Redis.Protocol",
      "Database.Redis.ProtocolPipelining",
      "Database.Redis.PubSub",
      "Database.Redis.Transactions",
      "Database.Redis.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lex.Fractional",
      "Data.ByteString.Lex.Integral",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Pool",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Read",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Vector",
      "GHC.Generics",
      "Network",
      "Prelude",
      "PubSubTest",
      "Scanner",
      "SlaveThread",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Printf"
    ],
    "modules": [
      "Database.Redis"
    ],
    "name": "hedis",
    "version": "0.9.4"
  },
  {
    "dependencies": {},
    "imports": [
      ""
    ],
    "modules": [
      "Data.Composition"
    ],
    "name": "composition",
    "version": "1.0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "GHC.Generics"
      ],
      "base-compat": [],
      "base-orphans": [],
      "generics-sop": [],
      "tagged": []
    },
    "imports": [
      "CustomOption",
      "CustomOptionRecord",
      "GHC.Generics",
      "RecordType",
      "Simple",
      "Test01",
      "Test02",
      "Test03",
      "Test04",
      "WithCli",
      "WithCli.Pure.Internal"
    ],
    "modules": [
      "WithCli",
      "WithCli.Pure"
    ],
    "name": "getopt-generics",
    "version": "0.13"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ]
    },
    "imports": [
      "Data.Monoid"
    ],
    "modules": [
      "Data.Semiring"
    ],
    "name": "semiring-simple",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.IORef",
        "Foreign"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception.Base",
      "Control.Monad",
      "Data.Aeson",
      "Data.ByteString.Char8",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Vector",
      "Foreign",
      "Foreign.Ruby",
      "Foreign.Ruby.Bindings",
      "Foreign.Ruby.Helpers",
      "Foreign.Ruby.Safe",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic"
    ],
    "modules": [
      "Foreign.Ruby",
      "Foreign.Ruby.Bindings",
      "Foreign.Ruby.Helpers",
      "Foreign.Ruby.Safe"
    ],
    "name": "hruby",
    "version": "0.3.4.2"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Array",
      "Text.Regex.Base",
      "Text.Regex.TDFA"
    ],
    "modules": [
      "Text.Regex"
    ],
    "name": "regex-compat-tdfa",
    "version": "0.95.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ],
      "network-uri": [
        "Network.URI"
      ],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple"
      ],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Database.PostgreSQL.Simple",
      "Database.PostgreSQL.Simple.URL",
      "Data.List.Split",
      "Network.URI",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Database.PostgreSQL.Simple.URL"
    ],
    "name": "postgresql-simple-url",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.Fix",
        "Control.Monad.Instances",
        "Control.Monad.IO.Class",
        "Control.Monad.Zip",
        "Data.Bifunctor",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Classes",
        "Data.Functor.Identity",
        "Data.Ix",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Foreign",
        "GHC.Generics",
        "Prelude",
        "System.IO.Error",
        "Text.Show"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.Fix",
      "Control.Monad.Instances",
      "Control.Monad.IO.Class",
      "Control.Monad.Signatures",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Zip",
      "Data.Bifunctor",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Classes",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Ix",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Typeable",
      "Foreign",
      "GHC.Generics",
      "Prelude",
      "System.IO.Error",
      "Text.Show"
    ],
    "modules": [
      "Control.Applicative.Backwards",
      "Control.Applicative.Lift",
      "Control.Monad.Signatures",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Functor.Constant",
      "Data.Functor.Reverse"
    ],
    "name": "transformers",
    "version": "0.5.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.CloudTrace",
      "Network.Google.CloudTrace.Types",
      "Network.Google.Resource.CloudTrace.Projects.PatchTraces",
      "Network.Google.Resource.CloudTrace.Projects.Traces.Get",
      "Network.Google.Resource.CloudTrace.Projects.Traces.List"
    ],
    "name": "gogol-cloudtrace",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.Browser",
        "Network.HTTP"
      ],
      "array": [
        "Data.Array.Base",
        "Data.Array.ST",
        "Data.Array.Unboxed"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Compose",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Exts",
        "GHC.IO.Encoding",
        "GHC.IO.Exception",
        "GHC.IO.Handle",
        "GHC.MVar",
        "GHC.Stack",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem",
        "System.Posix.Types",
        "Text.Printf",
        "Unsafe.Coerce"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "cryptohash": [
        "Crypto.Hash.SHA256"
      ],
      "darcs": [],
      "data-ordlist": [
        "Data.List.Ordered"
      ],
      "directory": [
        "System.Directory"
      ],
      "fgl": [
        "Data.Graph.Inductive.Graph",
        "Data.Graph.Inductive.PatriciaTree"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix",
        "System.FilePath.Windows"
      ],
      "graphviz": [
        "Data.GraphViz",
        "Data.GraphViz.Algorithms",
        "Data.GraphViz.Attributes.Complete"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "html": [
        "Text.Html"
      ],
      "mmap": [
        "System.IO.MMap"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "old-time": [
        "System.Time"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Error",
        "Text.ParserCombinators.Parsec.Expr"
      ],
      "process": [
        "System.Process",
        "System.Process.Internals"
      ],
      "random": [
        "System.Random"
      ],
      "regex-applicative": [
        "Text.Regex.Applicative"
      ],
      "regex-compat-tdfa": [
        "Text.Regex"
      ],
      "sandi": [
        "Codec.Binary.Base16"
      ],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Entry"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.Format",
        "Data.Time.LocalTime"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ],
      "transformers-compat": [],
      "unix-compat": [
        "System.PosixCompat"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ],
      "vector": [
        "Data.Vector"
      ],
      "zip-archive": [
        "Codec.Archive.Zip"
      ],
      "zlib": [
        "Codec.Compression.GZip",
        "Codec.Compression.Zlib.Internal"
      ]
    },
    "imports": [
      "Bundled.Posix",
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Codec.Archive.Zip",
      "Codec.Binary.Base16",
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib.Internal",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Strict",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Strict",
      "Control.Monad.ST.Lazy",
      "Control.Monad.Trans",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Writer",
      "Crypto.Hash.SHA256",
      "Darcs.Patch",
      "Darcs.Patch.Annotate",
      "Darcs.Patch.Apply",
      "Darcs.Patch.ApplyMonad",
      "Darcs.Patch.ApplyPatches",
      "Darcs.Patch.Bracketed",
      "Darcs.Patch.Bracketed.Instances",
      "Darcs.Patch.Bundle",
      "Darcs.Patch.Choices",
      "Darcs.Patch.Commute",
      "Darcs.Patch.CommuteFn",
      "Darcs.Patch.Conflict",
      "Darcs.Patch.Debug",
      "Darcs.Patch.Depends",
      "Darcs.Patch.Dummy",
      "Darcs.Patch.Effect",
      "Darcs.Patch.FileHunk",
      "Darcs.Patch.Format",
      "Darcs.Patch.Index.Monad",
      "Darcs.Patch.Index.Types",
      "Darcs.Patch.Info",
      "Darcs.Patch.Inspect",
      "Darcs.Patch.Invert",
      "Darcs.Patch.Match",
      "Darcs.Patch.Matchable",
      "Darcs.Patch.Merge",
      "Darcs.Patch.MonadProgress",
      "Darcs.Patch.Named",
      "Darcs.Patch.Named.Wrapped",
      "Darcs.Patch.OldDate",
      "Darcs.Patch.PatchInfoAnd",
      "Darcs.Patch.Patchy",
      "Darcs.Patch.Patchy.Instances",
      "Darcs.Patch.Permutations",
      "Darcs.Patch.Prim",
      "Darcs.Patch.Prim.Class",
      "Darcs.Patch.Prim.FileUUID",
      "Darcs.Patch.Prim.FileUUID.Apply",
      "Darcs.Patch.Prim.FileUUID.Coalesce",
      "Darcs.Patch.Prim.FileUUID.Commute",
      "Darcs.Patch.Prim.FileUUID.Core",
      "Darcs.Patch.Prim.FileUUID.Details",
      "Darcs.Patch.Prim.FileUUID.ObjectMap",
      "Darcs.Patch.Prim.FileUUID.Read",
      "Darcs.Patch.Prim.FileUUID.Show",
      "Darcs.Patch.Prim.V1",
      "Darcs.Patch.Prim.V1.Apply",
      "Darcs.Patch.Prim.V1.Coalesce",
      "Darcs.Patch.Prim.V1.Commute",
      "Darcs.Patch.Prim.V1.Core",
      "Darcs.Patch.Prim.V1.Details",
      "Darcs.Patch.Prim.V1.Read",
      "Darcs.Patch.Prim.V1.Show",
      "Darcs.Patch.Progress",
      "Darcs.Patch.Read",
      "Darcs.Patch.ReadMonads",
      "Darcs.Patch.Rebase",
      "Darcs.Patch.Rebase.Container",
      "Darcs.Patch.Rebase.Fixup",
      "Darcs.Patch.Rebase.Item",
      "Darcs.Patch.Rebase.Name",
      "Darcs.Patch.Rebase.Viewing",
      "Darcs.Patch.RegChars",
      "Darcs.Patch.Repair",
      "Darcs.Patch.RepoPatch",
      "Darcs.Patch.RepoType",
      "Darcs.Patch.Set",
      "Darcs.Patch.Show",
      "Darcs.Patch.Split",
      "Darcs.Patch.Summary",
      "Darcs.Patch.SummaryData",
      "Darcs.Patch.TokenReplace",
      "Darcs.Patch.TouchesFiles",
      "Darcs.Patch.Type",
      "Darcs.Patch.V1",
      "Darcs.Patch.V1.Apply",
      "Darcs.Patch.V1.Commute",
      "Darcs.Patch.V1.Core",
      "Darcs.Patch.V1.Read",
      "Darcs.Patch.V1.Show",
      "Darcs.Patch.V1.Viewing",
      "Darcs.Patch.V2",
      "Darcs.Patch.V2.Non",
      "Darcs.Patch.V2.RepoPatch",
      "Darcs.Patch.Viewing",
      "Darcs.Patch.Witnesses.Eq",
      "Darcs.Patch.Witnesses.Ordered",
      "Darcs.Patch.Witnesses.Sealed",
      "Darcs.Patch.Witnesses.Show",
      "Darcs.Patch.Witnesses.Unsafe",
      "Darcs.Patch.Witnesses.WZipper",
      "Darcs.Prelude",
      "Darcs.Repository",
      "Darcs.Repository.ApplyPatches",
      "Darcs.Repository.Cache",
      "Darcs.Repository.Clone",
      "Darcs.Repository.Diff",
      "Darcs.Repository.Flags",
      "Darcs.Repository.Format",
      "Darcs.Repository.HashedIO",
      "Darcs.Repository.HashedRepo",
      "Darcs.Repository.Internal",
      "Darcs.Repository.InternalTypes",
      "Darcs.Repository.Job",
      "Darcs.Repository.Match",
      "Darcs.Repository.Merge",
      "Darcs.Repository.Motd",
      "Darcs.Repository.Old",
      "Darcs.Repository.Packs",
      "Darcs.Repository.PatchIndex",
      "Darcs.Repository.Pending",
      "Darcs.Repository.Prefs",
      "Darcs.Repository.Rebase",
      "Darcs.Repository.Repair",
      "Darcs.Repository.Resolution",
      "Darcs.Repository.State",
      "Darcs.Repository.Test",
      "Darcs.Test.Email",
      "Darcs.Test.Misc",
      "Darcs.Test.Patch",
      "Darcs.Test.Patch.Arbitrary.Generic",
      "Darcs.Test.Patch.Arbitrary.PrimFileUUID",
      "Darcs.Test.Patch.Arbitrary.PrimV1",
      "Darcs.Test.Patch.Arbitrary.RepoPatchV1",
      "Darcs.Test.Patch.Arbitrary.RepoPatchV2",
      "Darcs.Test.Patch.Check",
      "Darcs.Test.Patch.Examples.Set1",
      "Darcs.Test.Patch.Examples.Set2Unwitnessed",
      "Darcs.Test.Patch.FileUUIDModel",
      "Darcs.Test.Patch.Info",
      "Darcs.Test.Patch.Properties.Check",
      "Darcs.Test.Patch.Properties.Generic",
      "Darcs.Test.Patch.Properties.GenericUnwitnessed",
      "Darcs.Test.Patch.Properties.RepoPatchV2",
      "Darcs.Test.Patch.Properties.V1Set1",
      "Darcs.Test.Patch.Properties.V1Set2",
      "Darcs.Test.Patch.Rebase",
      "Darcs.Test.Patch.RepoModel",
      "Darcs.Test.Patch.Selection",
      "Darcs.Test.Patch.Utils",
      "Darcs.Test.Patch.V1Model",
      "Darcs.Test.Patch.WithState",
      "Darcs.Test.Patch.WSub",
      "Darcs.Test.Util.QuickCheck",
      "Darcs.Test.Util.TestResult",
      "Darcs.UI.ApplyPatches",
      "Darcs.UI.Commands",
      "Darcs.UI.Commands.Add",
      "Darcs.UI.Commands.Amend",
      "Darcs.UI.Commands.Annotate",
      "Darcs.UI.Commands.Apply",
      "Darcs.UI.CommandsAux",
      "Darcs.UI.Commands.Clone",
      "Darcs.UI.Commands.Convert",
      "Darcs.UI.Commands.Diff",
      "Darcs.UI.Commands.Dist",
      "Darcs.UI.Commands.GZCRCs",
      "Darcs.UI.Commands.Help",
      "Darcs.UI.Commands.Init",
      "Darcs.UI.Commands.Log",
      "Darcs.UI.Commands.MarkConflicts",
      "Darcs.UI.Commands.Move",
      "Darcs.UI.Commands.Optimize",
      "Darcs.UI.Commands.Pull",
      "Darcs.UI.Commands.Push",
      "Darcs.UI.Commands.Rebase",
      "Darcs.UI.Commands.Record",
      "Darcs.UI.Commands.Remove",
      "Darcs.UI.Commands.Repair",
      "Darcs.UI.Commands.Replace",
      "Darcs.UI.Commands.Revert",
      "Darcs.UI.Commands.Rollback",
      "Darcs.UI.Commands.Send",
      "Darcs.UI.Commands.SetPref",
      "Darcs.UI.Commands.Show",
      "Darcs.UI.Commands.ShowAuthors",
      "Darcs.UI.Commands.ShowBug",
      "Darcs.UI.Commands.ShowContents",
      "Darcs.UI.Commands.ShowDependencies",
      "Darcs.UI.Commands.ShowFiles",
      "Darcs.UI.Commands.ShowIndex",
      "Darcs.UI.Commands.ShowPatchIndex",
      "Darcs.UI.Commands.ShowRepo",
      "Darcs.UI.Commands.ShowTags",
      "Darcs.UI.Commands.Tag",
      "Darcs.UI.Commands.Test",
      "Darcs.UI.Commands.TransferMode",
      "Darcs.UI.Commands.Unrecord",
      "Darcs.UI.Commands.Unrevert",
      "Darcs.UI.Commands.Util",
      "Darcs.UI.Commands.Util.Tree",
      "Darcs.UI.Commands.WhatsNew",
      "Darcs.UI.Defaults",
      "Darcs.UI.Email",
      "Darcs.UI.External",
      "Darcs.UI.Flags",
      "Darcs.UI.Message.Send",
      "Darcs.UI.Options",
      "Darcs.UI.Options.All",
      "Darcs.UI.Options.Core",
      "Darcs.UI.Options.Flags",
      "Darcs.UI.Options.Iso",
      "Darcs.UI.Options.Markdown",
      "Darcs.UI.Options.Matching",
      "Darcs.UI.Options.Util",
      "Darcs.UI.PatchHeader",
      "Darcs.UI.PrintPatch",
      "Darcs.UI.RunCommand",
      "Darcs.UI.SelectChanges",
      "Darcs.UI.TheCommands",
      "Darcs.UI.Usage",
      "Darcs.Util.AtExit",
      "Darcs.Util.ByteString",
      "Darcs.Util.CommandLine",
      "Darcs.Util.Compat",
      "Darcs.Util.Crypt.SHA1",
      "Darcs.Util.Crypt.SHA256",
      "Darcs.Util.CtrlC",
      "Darcs.Util.DateMatcher",
      "Darcs.Util.DateTime",
      "Darcs.Util.Diff",
      "Darcs.Util.Diff.Myers",
      "Darcs.Util.Diff.Patience",
      "Darcs.Util.Download",
      "Darcs.Util.Download.Curl",
      "Darcs.Util.Download.HTTP",
      "Darcs.Util.Download.Request",
      "Darcs.Util.Encoding",
      "Darcs.Util.Encoding.IConv",
      "Darcs.Util.Encoding.Win32",
      "Darcs.Util.English",
      "Darcs.Util.Environment",
      "Darcs.Util.Exception",
      "Darcs.Util.Exec",
      "Darcs.Util.External",
      "Darcs.Util.File",
      "Darcs.Util.Global",
      "Darcs.Util.Hash",
      "Darcs.Util.Index",
      "Darcs.Util.IsoDate",
      "Darcs.Util.Lock",
      "Darcs.Util.Path",
      "Darcs.Util.Printer",
      "Darcs.Util.Printer.Color",
      "Darcs.Util.Progress",
      "Darcs.Util.Prompt",
      "Darcs.Util.Ratified",
      "Darcs.Util.Show",
      "Darcs.Util.SignalHandler",
      "Darcs.Util.Ssh",
      "Darcs.Util.Text",
      "Darcs.Util.Tree",
      "Darcs.Util.Tree.Hashed",
      "Darcs.Util.Tree.Monad",
      "Darcs.Util.Tree.Plain",
      "Darcs.Util.URL",
      "Darcs.Util.Workaround",
      "Data.Array.Base",
      "Data.Array.ST",
      "Data.Array.Unboxed",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Binary",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Compose",
      "Data.Graph.Inductive.Graph",
      "Data.Graph.Inductive.PatriciaTree",
      "Data.GraphViz",
      "Data.GraphViz.Algorithms",
      "Data.GraphViz.Attributes.Complete",
      "Data.Hashable",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.List.Ordered",
      "Data.List.Split",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Vector",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Exts",
      "GHC.IO.Encoding",
      "GHC.IO.Exception",
      "GHC.IO.Handle",
      "GHC.MVar",
      "GHC.Stack",
      "Network.Browser",
      "Network.HTTP",
      "Network.URI",
      "Numeric",
      "Prelude",
      "Shelly",
      "Storage.Hashed.Test",
      "System.Console.CmdArgs",
      "System.Console.GetOpt",
      "System.Console.Haskeline",
      "System.Console.Terminfo",
      "System.Directory",
      "System.Environment",
      "System.Environment.FindBin",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.FilePath.Windows",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.IO.MMap",
      "System.IO.Unsafe",
      "System.Mem",
      "System.PosixCompat",
      "System.Posix.Env",
      "System.Posix.Files",
      "System.Posix.IO",
      "System.Posix.Signals",
      "System.Posix.Types",
      "System.Process",
      "System.Process.Internals",
      "System.Random",
      "System.Time",
      "System.Win32",
      "System.Win32.File",
      "Test.Framework",
      "Test.Framework.Providers.API",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Property",
      "Text.Html",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Error",
      "Text.ParserCombinators.Parsec.Expr",
      "Text.Printf",
      "Text.Regex",
      "Text.Regex.Applicative",
      "Unsafe.Coerce",
      "Version"
    ],
    "modules": [
      "Darcs.Patch",
      "Darcs.Patch.Annotate",
      "Darcs.Patch.Apply",
      "Darcs.Patch.ApplyMonad",
      "Darcs.Patch.ApplyPatches",
      "Darcs.Patch.Bracketed",
      "Darcs.Patch.Bracketed.Instances",
      "Darcs.Patch.Bundle",
      "Darcs.Patch.Choices",
      "Darcs.Patch.Commute",
      "Darcs.Patch.CommuteFn",
      "Darcs.Patch.Conflict",
      "Darcs.Patch.Debug",
      "Darcs.Patch.Depends",
      "Darcs.Patch.Dummy",
      "Darcs.Patch.Effect",
      "Darcs.Patch.FileHunk",
      "Darcs.Patch.Index.Monad",
      "Darcs.Patch.Index.Types",
      "Darcs.Patch.Format",
      "Darcs.Patch.Info",
      "Darcs.Patch.Inspect",
      "Darcs.Patch.Invert",
      "Darcs.Patch.Match",
      "Darcs.Patch.Matchable",
      "Darcs.Patch.Merge",
      "Darcs.Patch.MonadProgress",
      "Darcs.Patch.Named",
      "Darcs.Patch.Named.Wrapped",
      "Darcs.Patch.OldDate",
      "Darcs.Patch.PatchInfoAnd",
      "Darcs.Patch.Patchy",
      "Darcs.Patch.Patchy.Instances",
      "Darcs.Patch.Permutations",
      "Darcs.Patch.Prim",
      "Darcs.Patch.Prim.Class",
      "Darcs.Patch.Prim.V1",
      "Darcs.Patch.Prim.V1.Apply",
      "Darcs.Patch.Prim.V1.Coalesce",
      "Darcs.Patch.Prim.V1.Commute",
      "Darcs.Patch.Prim.V1.Core",
      "Darcs.Patch.Prim.V1.Details",
      "Darcs.Patch.Prim.V1.Read",
      "Darcs.Patch.Prim.V1.Show",
      "Darcs.Patch.Prim.FileUUID",
      "Darcs.Patch.Prim.FileUUID.ObjectMap",
      "Darcs.Patch.Prim.FileUUID.Apply",
      "Darcs.Patch.Prim.FileUUID.Coalesce",
      "Darcs.Patch.Prim.FileUUID.Commute",
      "Darcs.Patch.Prim.FileUUID.Core",
      "Darcs.Patch.Prim.FileUUID.Details",
      "Darcs.Patch.Prim.FileUUID.Read",
      "Darcs.Patch.Prim.FileUUID.Show",
      "Darcs.Patch.Progress",
      "Darcs.Patch.Read",
      "Darcs.Patch.Rebase",
      "Darcs.Patch.Rebase.Container",
      "Darcs.Patch.Rebase.Fixup",
      "Darcs.Patch.Rebase.Item",
      "Darcs.Patch.Rebase.Name",
      "Darcs.Patch.Rebase.Viewing",
      "Darcs.Patch.ReadMonads",
      "Darcs.Patch.RegChars",
      "Darcs.Patch.Repair",
      "Darcs.Patch.RepoPatch",
      "Darcs.Patch.RepoType",
      "Darcs.Patch.Set",
      "Darcs.Patch.Show",
      "Darcs.Patch.Split",
      "Darcs.Patch.Summary",
      "Darcs.Patch.SummaryData",
      "Darcs.Patch.TokenReplace",
      "Darcs.Patch.TouchesFiles",
      "Darcs.Patch.Type",
      "Darcs.Patch.Viewing",
      "Darcs.Patch.V1",
      "Darcs.Patch.V1.Apply",
      "Darcs.Patch.V1.Commute",
      "Darcs.Patch.V1.Core",
      "Darcs.Patch.V1.Read",
      "Darcs.Patch.V1.Show",
      "Darcs.Patch.V1.Viewing",
      "Darcs.Patch.V2",
      "Darcs.Patch.V2.Non",
      "Darcs.Patch.V2.RepoPatch",
      "Darcs.Patch.Witnesses.Eq",
      "Darcs.Patch.Witnesses.Ordered",
      "Darcs.Patch.Witnesses.Sealed",
      "Darcs.Patch.Witnesses.Show",
      "Darcs.Patch.Witnesses.Unsafe",
      "Darcs.Patch.Witnesses.WZipper",
      "Darcs.Prelude",
      "Darcs.Repository",
      "Darcs.Repository.ApplyPatches",
      "Darcs.Repository.Cache",
      "Darcs.Repository.Clone",
      "Darcs.Repository.PatchIndex",
      "Darcs.Repository.Diff",
      "Darcs.Repository.Flags",
      "Darcs.Repository.Format",
      "Darcs.Repository.HashedIO",
      "Darcs.Repository.HashedRepo",
      "Darcs.Repository.Internal",
      "Darcs.Repository.Job",
      "Darcs.Repository.Merge",
      "Darcs.Repository.InternalTypes",
      "Darcs.Repository.Match",
      "Darcs.Repository.Motd",
      "Darcs.Repository.Old",
      "Darcs.Repository.Packs",
      "Darcs.Repository.Pending",
      "Darcs.Repository.Prefs",
      "Darcs.Repository.Rebase",
      "Darcs.Repository.Repair",
      "Darcs.Repository.Resolution",
      "Darcs.Repository.State",
      "Darcs.Repository.Test",
      "Darcs.UI.ApplyPatches",
      "Darcs.UI.Commands",
      "Darcs.UI.Commands.Add",
      "Darcs.UI.Commands.Amend",
      "Darcs.UI.Commands.Annotate",
      "Darcs.UI.Commands.Apply",
      "Darcs.UI.CommandsAux",
      "Darcs.UI.Commands.Clone",
      "Darcs.UI.Commands.Convert",
      "Darcs.UI.Commands.Diff",
      "Darcs.UI.Commands.Dist",
      "Darcs.UI.Commands.GZCRCs",
      "Darcs.UI.Commands.Help",
      "Darcs.UI.Commands.Init",
      "Darcs.UI.Commands.Log",
      "Darcs.UI.Commands.MarkConflicts",
      "Darcs.UI.Commands.Move",
      "Darcs.UI.Commands.Optimize",
      "Darcs.UI.Commands.Pull",
      "Darcs.UI.Commands.Push",
      "Darcs.UI.Commands.Rebase",
      "Darcs.UI.Commands.Record",
      "Darcs.UI.Commands.Remove",
      "Darcs.UI.Commands.Repair",
      "Darcs.UI.Commands.Replace",
      "Darcs.UI.Commands.Revert",
      "Darcs.UI.Commands.Rollback",
      "Darcs.UI.Commands.Send",
      "Darcs.UI.Commands.SetPref",
      "Darcs.UI.Commands.Show",
      "Darcs.UI.Commands.ShowAuthors",
      "Darcs.UI.Commands.ShowBug",
      "Darcs.UI.Commands.ShowContents",
      "Darcs.UI.Commands.ShowDependencies",
      "Darcs.UI.Commands.ShowFiles",
      "Darcs.UI.Commands.ShowIndex",
      "Darcs.UI.Commands.ShowPatchIndex",
      "Darcs.UI.Commands.ShowRepo",
      "Darcs.UI.Commands.ShowTags",
      "Darcs.UI.Commands.Tag",
      "Darcs.UI.Commands.Test",
      "Darcs.UI.Commands.TransferMode",
      "Darcs.UI.Commands.Util",
      "Darcs.UI.Commands.Util.Tree",
      "Darcs.UI.Commands.Unrecord",
      "Darcs.UI.Commands.Unrevert",
      "Darcs.UI.Commands.WhatsNew",
      "Darcs.UI.Email",
      "Darcs.UI.External",
      "Darcs.UI.Defaults",
      "Darcs.UI.Flags",
      "Darcs.UI.Options",
      "Darcs.UI.Options.All",
      "Darcs.UI.Options.Core",
      "Darcs.UI.Options.Flags",
      "Darcs.UI.Options.Iso",
      "Darcs.UI.Options.Markdown",
      "Darcs.UI.Options.Matching",
      "Darcs.UI.Options.Util",
      "Darcs.UI.PatchHeader",
      "Darcs.UI.PrintPatch",
      "Darcs.UI.RunCommand",
      "Darcs.UI.SelectChanges",
      "Darcs.UI.TheCommands",
      "Darcs.UI.Usage",
      "Darcs.UI.Message.Send",
      "Darcs.Util.AtExit",
      "Darcs.Util.Bug",
      "Darcs.Util.ByteString",
      "Darcs.Util.CommandLine",
      "Darcs.Util.Compat",
      "Darcs.Util.Crypt.SHA1",
      "Darcs.Util.Crypt.SHA256",
      "Darcs.Util.DateMatcher",
      "Darcs.Util.DateTime",
      "Darcs.Util.Diff",
      "Darcs.Util.Diff.Myers",
      "Darcs.Util.Diff.Patience",
      "Darcs.Util.Download",
      "Darcs.Util.Download.Request",
      "Darcs.Util.Download.HTTP",
      "Darcs.Util.English",
      "Darcs.Util.Environment",
      "Darcs.Util.Exception",
      "Darcs.Util.Exec",
      "Darcs.Util.External",
      "Darcs.Util.File",
      "Darcs.Util.Global",
      "Darcs.Util.Hash",
      "Darcs.Util.Index",
      "Darcs.Util.IsoDate",
      "Darcs.Util.Lock",
      "Darcs.Util.Path",
      "Darcs.Util.Printer",
      "Darcs.Util.Printer.Color",
      "Darcs.Util.Progress",
      "Darcs.Util.Prompt",
      "Darcs.Util.Ratified",
      "Darcs.Util.Show",
      "Darcs.Util.SignalHandler",
      "Darcs.Util.Ssh",
      "Darcs.Util.Text",
      "Darcs.Util.Tree",
      "Darcs.Util.Tree.Hashed",
      "Darcs.Util.Tree.Monad",
      "Darcs.Util.Tree.Plain",
      "Darcs.Util.URL",
      "Darcs.Util.Workaround",
      "Bundled.Posix"
    ],
    "name": "darcs",
    "version": "2.12.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Complex",
        "Data.Data",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "Prelude",
        "Text.Printf"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "primitive": [
        "Data.Primitive.ByteArray"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed"
      ],
      "vector-th-unbox": [
        "Data.Vector.Unboxed.Deriving"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.ST",
      "CPython",
      "CPython.MPMath",
      "CPython.Sugar",
      "Criterion.Main",
      "Data.Bits",
      "Data.Complex",
      "Data.Data",
      "Data.Foldable",
      "Data.Int",
      "Data.List",
      "Data.Primitive.ByteArray",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Deriving",
      "Data.Word",
      "GHC.Generics",
      "HEP.ROOT.Plot",
      "Numeric.MathFunctions.Comparison",
      "Numeric.MathFunctions.Constants",
      "Numeric.Polynomial",
      "Numeric.Polynomial.Chebyshev",
      "Numeric.RootFinding",
      "Numeric.Series",
      "Numeric.SpecFunctions",
      "Numeric.SpecFunctions.Internal",
      "Numeric.Sum",
      "Prelude",
      "System.Random.MWC",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Tests.Chebyshev",
      "Tests.Comparison",
      "Tests.Helpers",
      "Tests.SpecFunctions",
      "Tests.SpecFunctions.Tables",
      "Tests.Sum",
      "Text.Printf"
    ],
    "modules": [
      "Numeric.MathFunctions.Constants",
      "Numeric.MathFunctions.Comparison",
      "Numeric.Polynomial",
      "Numeric.Polynomial.Chebyshev",
      "Numeric.RootFinding",
      "Numeric.SpecFunctions",
      "Numeric.SpecFunctions.Extra",
      "Numeric.Series",
      "Numeric.Sum"
    ],
    "name": "math-functions",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "ghc-prim": [],
      "template-haskell": [
        "Language.Haskell.TH.Lib",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Fix",
      "Data.Complex",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Sum",
      "Data.Ix",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Generics.Deriving.Base",
      "Generics.Deriving.Base.Internal",
      "Generics.Deriving.ConNames",
      "Generics.Deriving.Copoint",
      "Generics.Deriving.Enum",
      "Generics.Deriving.Eq",
      "Generics.Deriving.Functor",
      "Generics.Deriving.Instances",
      "Generics.Deriving.Monoid",
      "Generics.Deriving.Show",
      "Generics.Deriving.TH",
      "Generics.Deriving.TH.Internal",
      "Generics.Deriving.Uniplate",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.Prim",
      "GHC.Ptr",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Syntax",
      "System.Exit",
      "Test.Hspec",
      "Text.ParserCombinators.ReadPrec",
      "Text.Read",
      "Text.Read.Lex"
    ],
    "modules": [
      "Generics.Deriving",
      "Generics.Deriving.Base",
      "Generics.Deriving.Instances",
      "Generics.Deriving.Copoint",
      "Generics.Deriving.ConNames",
      "Generics.Deriving.Enum",
      "Generics.Deriving.Eq",
      "Generics.Deriving.Foldable",
      "Generics.Deriving.Functor",
      "Generics.Deriving.Monoid",
      "Generics.Deriving.Semigroup",
      "Generics.Deriving.Show",
      "Generics.Deriving.Traversable",
      "Generics.Deriving.Uniplate",
      "Generics.Deriving.TH"
    ],
    "name": "generic-deriving",
    "version": "1.11.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Data.Bits",
        "Data.Bool",
        "Data.Foldable",
        "Data.Functor",
        "Data.Int",
        "Data.List",
        "Data.Word",
        "GHC.Generics",
        "Prelude"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.Bool",
      "Data.Foldable",
      "Data.Functor",
      "Data.Int",
      "Data.List",
      "Data.Word",
      "GHC.Generics",
      "Prelude"
    ],
    "modules": [
      "Data.ByteSet"
    ],
    "name": "byteset",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding"
    ],
    "modules": [
      "Data.Text.Through"
    ],
    "name": "through-text",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "bindings-libzip": [
        "Bindings.LibZip"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Bindings.LibZip",
      "Codec.Archive.LibZip",
      "Codec.Archive.LibZip.Errors",
      "Codec.Archive.LibZip.Types",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.State.Strict",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "Test.HUnit",
      "Tests.Common",
      "Tests.MonadicTests"
    ],
    "modules": [
      "Codec.Archive.LibZip",
      "Codec.Archive.LibZip.Types"
    ],
    "name": "LibZip",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Data",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Exts",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "lens": [
        "Control.Lens"
      ],
      "newtype": [
        "Control.Newtype"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Lens",
      "Control.Newtype",
      "Data.Data",
      "Data.Foldable",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Exts",
      "Prelude"
    ],
    "modules": [
      "Data.Map.Monoidal",
      "Data.HashMap.Monoidal",
      "Data.Map.Monoidal.Strict"
    ],
    "name": "monoidal-containers",
    "version": "0.3.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.Exit"
      ],
      "base-compat": [
        "System.Environment.Compat"
      ],
      "dotenv": [],
      "megaparsec": [
        "Text.Megaparsec",
        "Text.Megaparsec.Char",
        "Text.Megaparsec.String"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Configuration.Dotenv",
      "Configuration.Dotenv.Parse",
      "Configuration.Dotenv.Text",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Options.Applicative",
      "Prelude",
      "System.Environment.Compat",
      "System.Exit",
      "System.Process",
      "Test.Hspec",
      "Text.Megaparsec",
      "Text.Megaparsec.Char",
      "Text.Megaparsec.String"
    ],
    "modules": [
      "Configuration.Dotenv",
      "Configuration.Dotenv.Parse",
      "Configuration.Dotenv.Text"
    ],
    "name": "dotenv",
    "version": "0.3.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Typeable",
        "Data.Typeable.Internal",
        "Data.Word",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.Generics.Any",
      "Data.Generics.Any.Prelude",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Typeable",
      "Data.Typeable.Internal",
      "Data.Word",
      "Language.Haskell.TH",
      "Prelude",
      "System.Console.CmdArgs",
      "System.Console.CmdArgs.Annotate",
      "System.Console.CmdArgs.Default",
      "System.Console.CmdArgs.Explicit",
      "System.Console.CmdArgs.Explicit.Complete",
      "System.Console.CmdArgs.Explicit.ExpandArgsAt",
      "System.Console.CmdArgs.Explicit.Help",
      "System.Console.CmdArgs.Explicit.Process",
      "System.Console.CmdArgs.Explicit.SplitJoin",
      "System.Console.CmdArgs.Explicit.Type",
      "System.Console.CmdArgs.GetOpt",
      "System.Console.CmdArgs.Helper",
      "System.Console.CmdArgs.Implicit",
      "System.Console.CmdArgs.Implicit.Ann",
      "System.Console.CmdArgs.Implicit.Global",
      "System.Console.CmdArgs.Implicit.Local",
      "System.Console.CmdArgs.Implicit.Reader",
      "System.Console.CmdArgs.Implicit.Reform",
      "System.Console.CmdArgs.Implicit.Type",
      "System.Console.CmdArgs.Implicit.UI",
      "System.Console.CmdArgs.Quote",
      "System.Console.CmdArgs.Test.All",
      "System.Console.CmdArgs.Test.Explicit",
      "System.Console.CmdArgs.Test.GetOpt",
      "System.Console.CmdArgs.Test.Implicit",
      "System.Console.CmdArgs.Test.Implicit.Diffy",
      "System.Console.CmdArgs.Test.Implicit.HLint",
      "System.Console.CmdArgs.Test.Implicit.Maker",
      "System.Console.CmdArgs.Test.Implicit.Tests",
      "System.Console.CmdArgs.Test.Implicit.Util",
      "System.Console.CmdArgs.Test.SplitJoin",
      "System.Console.CmdArgs.Test.Util",
      "System.Console.CmdArgs.Text",
      "System.Console.CmdArgs.Verbosity",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process"
    ],
    "modules": [
      "System.Console.CmdArgs",
      "System.Console.CmdArgs.Annotate",
      "System.Console.CmdArgs.Default",
      "System.Console.CmdArgs.Explicit",
      "System.Console.CmdArgs.GetOpt",
      "System.Console.CmdArgs.Implicit",
      "System.Console.CmdArgs.Text",
      "System.Console.CmdArgs.Helper",
      "System.Console.CmdArgs.Verbosity"
    ],
    "name": "cmdargs",
    "version": "0.10.14"
  },
  {
    "dependencies": {
      "base": [],
      "data-accessor": [
        "Data.Accessor.Basic"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Accessor.Basic"
    ],
    "modules": [
      "Data.Accessor.Monad.MTL.State"
    ],
    "name": "data-accessor-mtl",
    "version": "0.2.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.StablePtr",
        "GHC.TypeLits",
        "System.IO.Unsafe",
        "Unsafe.Coerce"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Control.Newtype",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Aeson.Lens",
      "Data.Aeson.Types",
      "Data.Bits",
      "Data.Constraint",
      "Data.Constraint.Unsafe",
      "Data.Foldable",
      "Data.Monoid",
      "Data.NewReflection",
      "Data.Proxy",
      "Data.Reflection",
      "Data.Text",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "GHC.TypeLits",
      "Hugs.IOExts",
      "Language.Haskell.TH",
      "System.IO.Unsafe",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Reflection"
    ],
    "name": "reflection",
    "version": "2.1.2"
  },
  {
    "dependencies": {
      "NumInstances": [],
      "base": [
        "Data.Foldable"
      ],
      "cmdargs": [],
      "containers": [],
      "data-default-class": [],
      "diagrams-core": [],
      "diagrams-lib": [],
      "lens": [],
      "mtl": [],
      "optparse-applicative": [],
      "split": [],
      "statestack": [
        "Control.Monad.StateStack"
      ],
      "static-canvas": [
        "Graphics.Static"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy.IO"
      ]
    },
    "imports": [
      "Control.Monad.StateStack",
      "Data.Foldable",
      "Data.Text",
      "Data.Text.Lazy.IO",
      "Graphics.Static"
    ],
    "modules": [
      "Diagrams.Backend.Html5",
      "Diagrams.Backend.Html5.CmdLine"
    ],
    "name": "diagrams-html5",
    "version": "1.3.0.7"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AppsTasks",
      "Network.Google.AppsTasks.Types",
      "Network.Google.Resource.Tasks.TaskLists.Delete",
      "Network.Google.Resource.Tasks.TaskLists.Get",
      "Network.Google.Resource.Tasks.TaskLists.Insert",
      "Network.Google.Resource.Tasks.TaskLists.List",
      "Network.Google.Resource.Tasks.TaskLists.Patch",
      "Network.Google.Resource.Tasks.TaskLists.Update",
      "Network.Google.Resource.Tasks.Tasks.Clear",
      "Network.Google.Resource.Tasks.Tasks.Delete",
      "Network.Google.Resource.Tasks.Tasks.Get",
      "Network.Google.Resource.Tasks.Tasks.Insert",
      "Network.Google.Resource.Tasks.Tasks.List",
      "Network.Google.Resource.Tasks.Tasks.Move",
      "Network.Google.Resource.Tasks.Tasks.Patch",
      "Network.Google.Resource.Tasks.Tasks.Update"
    ],
    "name": "gogol-apps-tasks",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "constraints": [
        "Data.Constraint"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "hashable": [],
      "transformers": [],
      "unfoldable": [
        "Data.Unfolder"
      ],
      "unit-constraint": [
        "Data.Constraint.Unit"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ]
    },
    "imports": [
      "Data.Constraint",
      "Data.Constraint.Unit",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.Map",
      "Data.Set",
      "Data.Unfolder"
    ],
    "modules": [
      "Data.Unfoldable.Restricted"
    ],
    "name": "unfoldable-restricted",
    "version": "0.0.2"
  },
  {
    "dependencies": {
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "process": [
        "System.Process"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Options.Applicative",
      "Options.Applicative.Arrows",
      "Options.Applicative.BashCompletion",
      "Options.Applicative.Builder",
      "Options.Applicative.Builder.Completer",
      "Options.Applicative.Builder.Internal",
      "Options.Applicative.Common",
      "Options.Applicative.Extra",
      "Options.Applicative.Help",
      "Options.Applicative.Help.Chunk",
      "Options.Applicative.Help.Core",
      "Options.Applicative.Help.Pretty",
      "Options.Applicative.Help.Types",
      "Options.Applicative.Internal",
      "Options.Applicative.Types",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Process",
      "Text.PrettyPrint.ANSI.Leijen"
    ],
    "modules": [
      "Options.Applicative",
      "Options.Applicative.Arrows",
      "Options.Applicative.BashCompletion",
      "Options.Applicative.Builder",
      "Options.Applicative.Builder.Completer",
      "Options.Applicative.Builder.Internal",
      "Options.Applicative.Common",
      "Options.Applicative.Extra",
      "Options.Applicative.Help",
      "Options.Applicative.Help.Pretty",
      "Options.Applicative.Help.Chunk",
      "Options.Applicative.Help.Core",
      "Options.Applicative.Help.Types",
      "Options.Applicative.Types",
      "Options.Applicative.Internal"
    ],
    "name": "optparse-applicative",
    "version": "0.12.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Typeable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "stm": [
        "Control.Concurrent.STM.TChan",
        "Control.Concurrent.STM.TQueue",
        "Control.Concurrent.STM.TVar",
        "Control.Monad.STM"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.STM.TChan",
      "Control.Concurrent.STM.TQueue",
      "Control.Concurrent.STM.TVar",
      "Control.Monad.STM",
      "Data.Typeable",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Control.Concurrent.STM.TBChan",
      "Control.Concurrent.STM.TBMChan",
      "Control.Concurrent.STM.TMChan",
      "Control.Concurrent.STM.TBMQueue",
      "Control.Concurrent.STM.TMQueue"
    ],
    "name": "stm-chans",
    "version": "3.0.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Data.Word",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ]
    },
    "imports": [
      "Data.Data",
      "Data.Map",
      "Data.Set",
      "Data.Word",
      "Prelude"
    ],
    "modules": [
      "Data.MultiMap",
      "Data.SetMap"
    ],
    "name": "multimap",
    "version": "1.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Foreign",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary"
      ],
      "hmatrix": [
        "Numeric.LinearAlgebra.Data",
        "Numeric.LinearAlgebra.Devel"
      ],
      "storable-complex": [],
      "vector": [
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Data.Binary",
      "Data.Vector.Storable",
      "Foreign",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Numeric.GSL.Distribution.Common",
      "Numeric.GSL.Distribution.Internal",
      "Numeric.LinearAlgebra.Data",
      "Numeric.LinearAlgebra.Devel",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Numeric.GSL.Sort",
      "Numeric.GSL.Statistics",
      "Numeric.GSL.Histogram",
      "Numeric.GSL.Histogram2D",
      "Numeric.GSL.Permutation",
      "Numeric.GSL.Distribution.Continuous",
      "Numeric.GSL.Distribution.Discrete",
      "Numeric.GSL.Distribution.Common",
      "Numeric.GSL.Fitting.Linear"
    ],
    "name": "hmatrix-gsl-stats",
    "version": "0.4.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST.Strict",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "GHC.Generics",
        "GHC.IO.Handle",
        "Numeric",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Types",
        "System.Timeout",
        "Text.Printf"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.ByteString",
        "Blaze.ByteString.Builder.Internal.Write",
        "Blaze.ByteString.Builder.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [],
      "hashable": [],
      "microlens": [
        "Lens.Micro"
      ],
      "microlens-mtl": [
        "Lens.Micro.Mtl"
      ],
      "microlens-th": [
        "Lens.Micro.TH"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "parallel": [],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Token"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "terminfo": [
        "System.Console.Terminfo"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State"
      ],
      "unix": [
        "System.Posix.Env",
        "System.Posix.IO",
        "System.Posix.Signals.Exts",
        "System.Posix.Terminal"
      ],
      "utf8-string": [
        "Codec.Binary.UTF8.Generic",
        "Codec.Binary.UTF8.String",
        "Data.String.UTF8"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable",
        "Data.Vector.Unboxed"
      ],
      "vty": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.ByteString",
      "Blaze.ByteString.Builder.Internal.Write",
      "Blaze.ByteString.Builder.Word",
      "Codec.Binary.UTF8.Generic",
      "Codec.Binary.UTF8.String",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Strict",
      "Control.Monad.ST.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Control.Monad.Writer",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Default",
      "Data.Foldable",
      "Data.Functor",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.String.QQ",
      "Data.String.UTF8",
      "Data.Terminfo.Eval",
      "Data.Terminfo.Parse",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Distribution.TestSuite",
      "Foreign",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "GHC.Generics",
      "GHC.IO.Handle",
      "Graphics.Text.Width",
      "Graphics.Vty",
      "Graphics.Vty.Attributes",
      "Graphics.Vty.Attributes.Color",
      "Graphics.Vty.Attributes.Color240",
      "Graphics.Vty.Config",
      "Graphics.Vty.Debug",
      "Graphics.Vty.Debug.Image",
      "Graphics.Vty.DisplayAttributes",
      "Graphics.Vty.Image",
      "Graphics.Vty.Image.Internal",
      "Graphics.Vty.Inline",
      "Graphics.Vty.Inline.Unsafe",
      "Graphics.Vty.Input",
      "Graphics.Vty.Input.Classify",
      "Graphics.Vty.Input.Classify.Parse",
      "Graphics.Vty.Input.Classify.Types",
      "Graphics.Vty.Input.Events",
      "Graphics.Vty.Input.Loop",
      "Graphics.Vty.Input.Mouse",
      "Graphics.Vty.Input.Paste",
      "Graphics.Vty.Input.Terminfo",
      "Graphics.Vty.Input.Terminfo.ANSIVT",
      "Graphics.Vty.Output",
      "Graphics.Vty.Output.Interface",
      "Graphics.Vty.Output.Mock",
      "Graphics.Vty.Output.TerminfoBased",
      "Graphics.Vty.Output.XTermColor",
      "Graphics.Vty.Picture",
      "Graphics.Vty.PictureToSpans",
      "Graphics.Vty.Prelude",
      "Graphics.Vty.Span",
      "Lens.Micro",
      "Lens.Micro.Mtl",
      "Lens.Micro.TH",
      "Numeric",
      "Prelude",
      "System.Console.Terminfo",
      "System.Directory",
      "System.IO",
      "System.IO.Unsafe",
      "System.Posix.Env",
      "System.Posix.IO",
      "System.Posix.Signals.Exts",
      "System.Posix.Terminal",
      "System.Posix.Types",
      "System.Timeout",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.SmallCheck",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Modifiers",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Property",
      "Test.SmallCheck",
      "Test.SmallCheck.Series",
      "Text.Parsec",
      "Text.Parsec.Token",
      "Text.Printf",
      "Verify",
      "Verify.Data.Terminfo.Parse",
      "Verify.Graphics.Vty.Attributes",
      "Verify.Graphics.Vty.DisplayAttributes",
      "Verify.Graphics.Vty.Image",
      "Verify.Graphics.Vty.Output",
      "Verify.Graphics.Vty.Picture",
      "Verify.Graphics.Vty.Prelude",
      "Verify.Graphics.Vty.Span"
    ],
    "modules": [
      "Graphics.Vty",
      "Graphics.Vty.Attributes",
      "Graphics.Vty.Config",
      "Graphics.Vty.Error",
      "Graphics.Vty.Image",
      "Graphics.Vty.Inline",
      "Graphics.Vty.Inline.Unsafe",
      "Graphics.Vty.Input",
      "Graphics.Vty.Input.Events",
      "Graphics.Vty.Picture",
      "Graphics.Vty.Prelude",
      "Graphics.Vty.Output",
      "Graphics.Text.Width",
      "Codec.Binary.UTF8.Debug",
      "Data.Terminfo.Parse",
      "Data.Terminfo.Eval",
      "Graphics.Vty.Debug",
      "Graphics.Vty.DisplayAttributes",
      "Graphics.Vty.Image.Internal",
      "Graphics.Vty.Input.Classify",
      "Graphics.Vty.Input.Classify.Types",
      "Graphics.Vty.Input.Classify.Parse",
      "Graphics.Vty.Input.Loop",
      "Graphics.Vty.Input.Mouse",
      "Graphics.Vty.Input.Paste",
      "Graphics.Vty.Input.Terminfo",
      "Graphics.Vty.PictureToSpans",
      "Graphics.Vty.Span",
      "Graphics.Vty.Output.Mock",
      "Graphics.Vty.Output.Interface",
      "Graphics.Vty.Output.XTermColor",
      "Graphics.Vty.Output.TerminfoBased"
    ],
    "name": "vty",
    "version": "5.11"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bool",
        "Data.Either",
        "Data.Eq",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Prelude",
        "Text.Printf",
        "Text.Show"
      ],
      "binary": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "hashable": [],
      "mtl": [],
      "network": [],
      "old-locale": [],
      "scientific": [],
      "stm": [],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Database.RethinkDB.Types.Datum",
      "Data.Bool",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Either",
      "Data.Eq",
      "Data.Function",
      "Data.Functor",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Text.Printf",
      "Text.Show"
    ],
    "modules": [
      "Database.RethinkDB",
      "Database.RethinkDB.TH"
    ],
    "name": "rethinkdb-client-driver",
    "version": "0.0.23"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Version"
      ]
    },
    "imports": [
      "Data.List",
      "Data.Version",
      "Language.Javascript.JQuery",
      "Network.HTTP",
      "Paths"
    ],
    "modules": [
      "Language.Javascript.JQuery"
    ],
    "name": "js-jquery",
    "version": "3.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "securemem": [
        "Data.SecureMem"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Crypto.Random",
      "Crypto.Random.Entropy",
      "Crypto.Random.Entropy.RDRand",
      "Crypto.Random.Entropy.Source",
      "Crypto.Random.Entropy.Unix",
      "Crypto.Random.Entropy.Windows",
      "Crypto.Random.Generator",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.SecureMem",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Word",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "System.Posix.IO",
      "System.Posix.Types",
      "System.Win32.Types"
    ],
    "modules": [
      "Crypto.Random",
      "Crypto.Random.Test",
      "Crypto.Random.API"
    ],
    "name": "crypto-random",
    "version": "0.0.9"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Dataflow",
      "Network.Google.Dataflow.Types",
      "Network.Google.Resource.Dataflow.Projects.Jobs.Create",
      "Network.Google.Resource.Dataflow.Projects.Jobs.Get",
      "Network.Google.Resource.Dataflow.Projects.Jobs.GetMetrics",
      "Network.Google.Resource.Dataflow.Projects.Jobs.List",
      "Network.Google.Resource.Dataflow.Projects.Jobs.Messages.List",
      "Network.Google.Resource.Dataflow.Projects.Jobs.Update",
      "Network.Google.Resource.Dataflow.Projects.Jobs.WorkItems.Lease",
      "Network.Google.Resource.Dataflow.Projects.Jobs.WorkItems.ReportStatus",
      "Network.Google.Resource.Dataflow.Projects.WorkerMessages"
    ],
    "name": "gogol-dataflow",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.IAM",
      "Test.AWS.Fixture",
      "Test.AWS.IAM",
      "Test.AWS.IAM.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.IAM",
      "Network.AWS.IAM.AddClientIdToOpenIdConnectProvider",
      "Network.AWS.IAM.AddRoleToInstanceProfile",
      "Network.AWS.IAM.AddUserToGroup",
      "Network.AWS.IAM.AttachGroupPolicy",
      "Network.AWS.IAM.AttachRolePolicy",
      "Network.AWS.IAM.AttachUserPolicy",
      "Network.AWS.IAM.ChangePassword",
      "Network.AWS.IAM.CreateAccessKey",
      "Network.AWS.IAM.CreateAccountAlias",
      "Network.AWS.IAM.CreateGroup",
      "Network.AWS.IAM.CreateInstanceProfile",
      "Network.AWS.IAM.CreateLoginProfile",
      "Network.AWS.IAM.CreateOpenIdConnectProvider",
      "Network.AWS.IAM.CreatePolicy",
      "Network.AWS.IAM.CreatePolicyVersion",
      "Network.AWS.IAM.CreateRole",
      "Network.AWS.IAM.CreateSAMLProvider",
      "Network.AWS.IAM.CreateUser",
      "Network.AWS.IAM.CreateVirtualMFADevice",
      "Network.AWS.IAM.DeactivateMFADevice",
      "Network.AWS.IAM.DeleteAccessKey",
      "Network.AWS.IAM.DeleteAccountAlias",
      "Network.AWS.IAM.DeleteAccountPasswordPolicy",
      "Network.AWS.IAM.DeleteGroup",
      "Network.AWS.IAM.DeleteGroupPolicy",
      "Network.AWS.IAM.DeleteInstanceProfile",
      "Network.AWS.IAM.DeleteLoginProfile",
      "Network.AWS.IAM.DeleteOpenIdConnectProvider",
      "Network.AWS.IAM.DeletePolicy",
      "Network.AWS.IAM.DeletePolicyVersion",
      "Network.AWS.IAM.DeleteRole",
      "Network.AWS.IAM.DeleteRolePolicy",
      "Network.AWS.IAM.DeleteSAMLProvider",
      "Network.AWS.IAM.DeleteSSHPublicKey",
      "Network.AWS.IAM.DeleteServerCertificate",
      "Network.AWS.IAM.DeleteSigningCertificate",
      "Network.AWS.IAM.DeleteUser",
      "Network.AWS.IAM.DeleteUserPolicy",
      "Network.AWS.IAM.DeleteVirtualMFADevice",
      "Network.AWS.IAM.DetachGroupPolicy",
      "Network.AWS.IAM.DetachRolePolicy",
      "Network.AWS.IAM.DetachUserPolicy",
      "Network.AWS.IAM.EnableMFADevice",
      "Network.AWS.IAM.GenerateCredentialReport",
      "Network.AWS.IAM.GetAccessKeyLastUsed",
      "Network.AWS.IAM.GetAccountAuthorizationDetails",
      "Network.AWS.IAM.GetAccountPasswordPolicy",
      "Network.AWS.IAM.GetAccountSummary",
      "Network.AWS.IAM.GetContextKeysForCustomPolicy",
      "Network.AWS.IAM.GetContextKeysForPrincipalPolicy",
      "Network.AWS.IAM.GetCredentialReport",
      "Network.AWS.IAM.GetGroup",
      "Network.AWS.IAM.GetGroupPolicy",
      "Network.AWS.IAM.GetInstanceProfile",
      "Network.AWS.IAM.GetLoginProfile",
      "Network.AWS.IAM.GetOpenIdConnectProvider",
      "Network.AWS.IAM.GetPolicy",
      "Network.AWS.IAM.GetPolicyVersion",
      "Network.AWS.IAM.GetRole",
      "Network.AWS.IAM.GetRolePolicy",
      "Network.AWS.IAM.GetSAMLProvider",
      "Network.AWS.IAM.GetSSHPublicKey",
      "Network.AWS.IAM.GetServerCertificate",
      "Network.AWS.IAM.GetUser",
      "Network.AWS.IAM.GetUserPolicy",
      "Network.AWS.IAM.ListAccessKeys",
      "Network.AWS.IAM.ListAccountAliases",
      "Network.AWS.IAM.ListAttachedGroupPolicies",
      "Network.AWS.IAM.ListAttachedRolePolicies",
      "Network.AWS.IAM.ListAttachedUserPolicies",
      "Network.AWS.IAM.ListEntitiesForPolicy",
      "Network.AWS.IAM.ListGroupPolicies",
      "Network.AWS.IAM.ListGroups",
      "Network.AWS.IAM.ListGroupsForUser",
      "Network.AWS.IAM.ListInstanceProfiles",
      "Network.AWS.IAM.ListInstanceProfilesForRole",
      "Network.AWS.IAM.ListMFADevices",
      "Network.AWS.IAM.ListOpenIdConnectProviders",
      "Network.AWS.IAM.ListPolicies",
      "Network.AWS.IAM.ListPolicyVersions",
      "Network.AWS.IAM.ListRolePolicies",
      "Network.AWS.IAM.ListRoles",
      "Network.AWS.IAM.ListSAMLProviders",
      "Network.AWS.IAM.ListSSHPublicKeys",
      "Network.AWS.IAM.ListServerCertificates",
      "Network.AWS.IAM.ListSigningCertificates",
      "Network.AWS.IAM.ListUserPolicies",
      "Network.AWS.IAM.ListUsers",
      "Network.AWS.IAM.ListVirtualMFADevices",
      "Network.AWS.IAM.PutGroupPolicy",
      "Network.AWS.IAM.PutRolePolicy",
      "Network.AWS.IAM.PutUserPolicy",
      "Network.AWS.IAM.RemoveClientIdFromOpenIdConnectProvider",
      "Network.AWS.IAM.RemoveRoleFromInstanceProfile",
      "Network.AWS.IAM.RemoveUserFromGroup",
      "Network.AWS.IAM.ResyncMFADevice",
      "Network.AWS.IAM.SetDefaultPolicyVersion",
      "Network.AWS.IAM.SimulateCustomPolicy",
      "Network.AWS.IAM.SimulatePrincipalPolicy",
      "Network.AWS.IAM.Types",
      "Network.AWS.IAM.UpdateAccessKey",
      "Network.AWS.IAM.UpdateAccountPasswordPolicy",
      "Network.AWS.IAM.UpdateAssumeRolePolicy",
      "Network.AWS.IAM.UpdateGroup",
      "Network.AWS.IAM.UpdateLoginProfile",
      "Network.AWS.IAM.UpdateOpenIdConnectProviderThumbprint",
      "Network.AWS.IAM.UpdateSAMLProvider",
      "Network.AWS.IAM.UpdateSSHPublicKey",
      "Network.AWS.IAM.UpdateServerCertificate",
      "Network.AWS.IAM.UpdateSigningCertificate",
      "Network.AWS.IAM.UpdateUser",
      "Network.AWS.IAM.UploadSSHPublicKey",
      "Network.AWS.IAM.UploadServerCertificate",
      "Network.AWS.IAM.UploadSigningCertificate",
      "Network.AWS.IAM.Waiters"
    ],
    "name": "amazonka-iam",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Instances",
        "Data.Char",
        "Data.List",
        "Data.Maybe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Instances",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Prefix.Units",
      "Data.Prefix.Units.Compat",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Prefix.Units"
    ],
    "name": "prefix-units",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Prelude"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Language.Haskell.Exts.Pretty",
      "Language.Haskell.Exts.Syntax",
      "Network.HTTP",
      "Prelude"
    ],
    "modules": [
      "Data.LanguageCodes"
    ],
    "name": "iso639",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Category",
        "Data.Fixed",
        "Prelude"
      ],
      "data-lens-light": [
        "Data.Lens.Light"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Category",
      "Data.Fixed",
      "Data.Lens.Light",
      "Data.Time",
      "Prelude"
    ],
    "modules": [
      "Data.Time.Lens"
    ],
    "name": "time-lens",
    "version": "0.4.0.1"
  },
  {
    "dependencies": {
      "diagrams-contrib": [],
      "diagrams-core": [],
      "diagrams-lib": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "diagrams",
    "version": "1.3.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Fixed",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.String",
        "Data.Traversable",
        "GHC.TypeLits",
        "Numeric",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "colour": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-ordlist": [
        "Data.List.Ordered"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "lazy-csv": [
        "Text.CSV.Lazy.String"
      ],
      "logict": [
        "Control.Monad.Logic"
      ],
      "multiset-comb": [
        "Math.Combinatorics.Multiset"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "permutation": [
        "Data.Permute"
      ],
      "primes": [
        "Data.Numbers.Primes"
      ],
      "safe": [
        "Safe"
      ],
      "split": [
        "Data.List.Split"
      ],
      "utf8-string": [
        "Codec.Binary.UTF8.String"
      ]
    },
    "imports": [
      "Codec.Binary.UTF8.String",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Logic",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString",
      "Data.Char",
      "Data.Fixed",
      "Data.Function",
      "Data.List",
      "Data.List.Ordered",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Modular",
      "Data.Monoid",
      "Data.Numbers.Primes",
      "Data.Permute",
      "Data.Ratio",
      "Data.Set",
      "Data.String",
      "Data.Traversable",
      "Data.Tree",
      "GHC.TypeLits",
      "Math.Combinatorics.Multiset",
      "Music.Theory.Array.CSV",
      "Music.Theory.Clef",
      "Music.Theory.Contour.Polansky",
      "Music.Theory.Duration",
      "Music.Theory.Duration.Annotation",
      "Music.Theory.Duration.Name",
      "Music.Theory.Duration.RQ",
      "Music.Theory.Duration.RQ.Tied",
      "Music.Theory.Either",
      "Music.Theory.Function",
      "Music.Theory.Interval",
      "Music.Theory.List",
      "Music.Theory.Math",
      "Music.Theory.Permutations",
      "Music.Theory.Permutations.List",
      "Music.Theory.Pitch",
      "Music.Theory.Pitch.Name",
      "Music.Theory.Pitch.Note",
      "Music.Theory.Pitch.Spelling",
      "Music.Theory.Set.List",
      "Music.Theory.Tiling.Canon",
      "Music.Theory.Time",
      "Music.Theory.Time.Seq",
      "Music.Theory.Tuning",
      "Music.Theory.Tuple",
      "Music.Theory.Z",
      "Music.Theory.Z12",
      "Music.Theory.Z12.Castren",
      "Music.Theory.Z12.Forte",
      "Music.Theory.Z12.Morris",
      "Music.Theory.Z12.SRO",
      "Music.Theory.Z12.TTO",
      "Music.Theory.Z.Forte",
      "Music.Theory.Z.Read",
      "Music.Theory.Z.SRO",
      "Numeric",
      "Safe",
      "System.Directory",
      "System.FilePath",
      "Text.CSV.Lazy.String",
      "Text.ParserCombinators.Parsec",
      "Text.Printf"
    ],
    "modules": [
      "Music.Theory.Array.CSV",
      "Music.Theory.Array.CSV.Midi",
      "Music.Theory.Array.MD",
      "Music.Theory.Bjorklund",
      "Music.Theory.Block_Design.Johnson_2007",
      "Music.Theory.Clef",
      "Music.Theory.Combinations",
      "Music.Theory.Contour.Polansky_1992",
      "Music.Theory.Duration",
      "Music.Theory.Duration.Annotation",
      "Music.Theory.Duration.CT",
      "Music.Theory.Duration.Name",
      "Music.Theory.Duration.Name.Abbreviation",
      "Music.Theory.Duration.RQ",
      "Music.Theory.Duration.RQ.Division",
      "Music.Theory.Duration.RQ.Tied",
      "Music.Theory.Duration.Sequence.Notate",
      "Music.Theory.Dynamic_Mark",
      "Music.Theory.Either",
      "Music.Theory.Function",
      "Music.Theory.Instrument.Choir",
      "Music.Theory.Interval",
      "Music.Theory.Interval.Barlow_1987",
      "Music.Theory.Interval.Name",
      "Music.Theory.Interval.Spelling",
      "Music.Theory.Key",
      "Music.Theory.List",
      "Music.Theory.Math",
      "Music.Theory.Maybe",
      "Music.Theory.Meter.Barlow_1987",
      "Music.Theory.Metric.Buchler_1998",
      "Music.Theory.Metric.Morris_1980",
      "Music.Theory.Metric.Polansky_1996",
      "Music.Theory.Permutations",
      "Music.Theory.Permutations.List",
      "Music.Theory.Permutations.Morris_1984",
      "Music.Theory.Pitch",
      "Music.Theory.Pitch.Name",
      "Music.Theory.Pitch.Note",
      "Music.Theory.Pitch.Spelling",
      "Music.Theory.Pitch.Spelling.Cluster",
      "Music.Theory.Set.List",
      "Music.Theory.Set.Set",
      "Music.Theory.Tempo_Marking",
      "Music.Theory.Tiling.Canon",
      "Music.Theory.Tiling.Johnson_2004",
      "Music.Theory.Tiling.Johnson_2009",
      "Music.Theory.Time.Bel1990.R",
      "Music.Theory.Time.Duration",
      "Music.Theory.Time.Notation",
      "Music.Theory.Time.Seq",
      "Music.Theory.Time_Signature",
      "Music.Theory.Tuple",
      "Music.Theory.Tuning",
      "Music.Theory.Tuning.Alves",
      "Music.Theory.Tuning.Alves_1997",
      "Music.Theory.Tuning.ET",
      "Music.Theory.Tuning.Gann",
      "Music.Theory.Tuning.Meyer_1929",
      "Music.Theory.Tuning.Microtonal_Synthesis",
      "Music.Theory.Tuning.Polansky_1978",
      "Music.Theory.Tuning.Polansky_1984",
      "Music.Theory.Tuning.Polansky_1985c",
      "Music.Theory.Tuning.Polansky_1990",
      "Music.Theory.Tuning.Riley",
      "Music.Theory.Tuning.Scala",
      "Music.Theory.Tuning.Syntonic",
      "Music.Theory.Tuning.Werckmeister",
      "Music.Theory.Unicode",
      "Music.Theory.Xenakis.S4",
      "Music.Theory.Xenakis.Sieve",
      "Music.Theory.Z",
      "Music.Theory.Z.Forte_1973",
      "Music.Theory.Z.Read_1978",
      "Music.Theory.Z.SRO",
      "Music.Theory.Z12",
      "Music.Theory.Z12.Castren_1994",
      "Music.Theory.Z12.Drape_1999",
      "Music.Theory.Z12.Forte_1973",
      "Music.Theory.Z12.Lewin_1980",
      "Music.Theory.Z12.Literature",
      "Music.Theory.Z12.Morris_1974",
      "Music.Theory.Z12.Morris_1987",
      "Music.Theory.Z12.Morris_1987.Parse",
      "Music.Theory.Z12.Rahn_1980",
      "Music.Theory.Z12.Read_1978",
      "Music.Theory.Z12.SRO",
      "Music.Theory.Z12.TTO"
    ],
    "name": "hmt",
    "version": "0.15"
  },
  {
    "dependencies": {
      "base": [
        "Foreign"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Foreign",
      "Graphics.GD.Internal"
    ],
    "modules": [
      "Graphics.GD",
      "Graphics.GD.ByteString",
      "Graphics.GD.ByteString.Lazy"
    ],
    "name": "gd",
    "version": "3000.7.3"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "base": [],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "entropy": [],
      "largeword": [],
      "mtl": [],
      "string-conversions": []
    },
    "imports": [
      "Crypto.Secp256k1.Internal.Tests",
      "Crypto.Secp256k1.Tests",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.Serialize",
      "Test.Framework"
    ],
    "modules": [
      "Crypto.Secp256k1",
      "Crypto.Secp256k1.Internal"
    ],
    "name": "secp256k1",
    "version": "0.4.6"
  },
  {
    "dependencies": {
      "base": [
        "Data.Fixed",
        "Data.List"
      ]
    },
    "imports": [
      "Data.Fixed",
      "Data.List",
      "System.Clock",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "System.Clock"
    ],
    "name": "clock",
    "version": "0.7.2"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Text.Html.BlockTable"
    ],
    "modules": [
      "Text.Html",
      "Text.Html.BlockTable"
    ],
    "name": "html",
    "version": "1.0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Char",
        "Data.Word"
      ],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.Char",
      "Data.List.Split",
      "Data.Word"
    ],
    "modules": [
      "GPolyline"
    ],
    "name": "gpolyline",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.List",
        "Prelude",
        "System.Exit",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "exceptions": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Bimap",
      "Data.List",
      "Data.Map",
      "Data.Set",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "System.Exit",
      "Test.QuickCheck",
      "Test.Tests",
      "Test.Util",
      "Text.Printf"
    ],
    "modules": [
      "Data.Bimap"
    ],
    "name": "bimap",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "system-filepath": [
        "Filesystem.Path",
        "Filesystem.Path.CurrentOS"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Typeable",
      "Filesystem.Path",
      "Filesystem.Path.CurrentOS",
      "Prelude",
      "ReadArgs",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Test.Hspec"
    ],
    "modules": [
      "ReadArgs"
    ],
    "name": "ReadArgs",
    "version": "1.2.2"
  },
  {
    "dependencies": {
      "base": [],
      "conduit": [],
      "conduit-parse": [],
      "containers": [],
      "exceptions": [],
      "foldl": [],
      "lens-simple": [],
      "mono-traversable": [],
      "parsers": [],
      "safe": [],
      "text": [],
      "time": [],
      "timerep": [],
      "uri-bytestring": [],
      "xml-conduit": [],
      "xml-conduit-parse": [],
      "xml-types": []
    },
    "imports": [
      "Language.Haskell.HLint"
    ],
    "modules": [
      "Text.RSS.Conduit.Parse",
      "Text.RSS.Conduit.Render",
      "Text.RSS.Lens",
      "Text.RSS.Types"
    ],
    "name": "rss-conduit",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8"
      ],
      "authenticate-oauth": [
        "Web.Authenticate.OAuth"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "GHC.Exts",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.Timeout"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.IntSet",
        "Data.Map"
      ],
      "cryptohash": [
        "Crypto.Hash",
        "Crypto.Hash.SHA256",
        "Crypto.MAC"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "ghc-prim": [],
      "hashable": [
        "Data.Hashable"
      ],
      "http-client": [
        "Network.HTTP.Client",
        "Network.HTTP.Client.Internal",
        "Network.HTTP.Client.MultipartFormData"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header",
        "Network.HTTP.Types.Status",
        "Network.HTTP.Types.Version"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.TH"
      ],
      "lens-aeson": [
        "Data.Aeson.Lens"
      ],
      "mime-types": [
        "Network.Mime"
      ],
      "psqueues": [
        "Data.HashPSQ"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Format",
        "Data.Time.LocalTime"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ]
    },
    "imports": [
      "AWS",
      "AWS.Aeson",
      "AWS.DynamoDB",
      "AWS.IAM",
      "AWS.S3",
      "AWS.SQS",
      "Build",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Lens",
      "Control.Lens.TH",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Crypto.Hash",
      "Crypto.Hash.SHA256",
      "Crypto.MAC",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Encode.Pretty",
      "Data.Aeson.Lens",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Foldable",
      "Data.Functor",
      "Data.Hashable",
      "Data.HashPSQ",
      "Data.HashSet",
      "Data.Int",
      "Data.IntSet",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Read",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Data.Time.LocalTime",
      "Data.Typeable",
      "Data.UUID",
      "Data.UUID.V4",
      "Data.Vector",
      "Data.Version",
      "Data.Word",
      "GHC.Exts",
      "GHC.Generics",
      "HttpBin.Server",
      "Language.Haskell.TH.Syntax",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Internal",
      "Network.HTTP.Client.MultipartFormData",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.Status",
      "Network.HTTP.Types.Version",
      "Network.Info",
      "Network.Mime",
      "Network.Wreq",
      "Network.Wreq.Cache.Store",
      "Network.Wreq.Internal",
      "Network.Wreq.Internal.AWS",
      "Network.Wreq.Internal.Lens",
      "Network.Wreq.Internal.Link",
      "Network.Wreq.Internal.OAuth1",
      "Network.Wreq.Internal.Types",
      "Network.Wreq.Lens",
      "Network.Wreq.Lens.Machinery",
      "Network.Wreq.Lens.TH",
      "Network.Wreq.Session",
      "Network.Wreq.Types",
      "Options.Applicative",
      "Options.Applicative.Types",
      "Paths",
      "Prelude",
      "Properties.Store",
      "Snap.Core",
      "Snap.Http.Server",
      "Snap.Http.Server.Config",
      "Snap.Util.GZip",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.PosixCompat.Time",
      "System.Timeout",
      "Test.DocTest",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.HTML.TagSoup",
      "UnitTests",
      "Web.Authenticate.OAuth"
    ],
    "modules": [
      "Network.Wreq",
      "Network.Wreq.Cache",
      "Network.Wreq.Cache.Store",
      "Network.Wreq.Lens",
      "Network.Wreq.Session",
      "Network.Wreq.Types"
    ],
    "name": "wreq",
    "version": "0.4.1.0"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [
        "Data.List"
      ],
      "base58string": [
        "Data.Base58String"
      ],
      "binary": [],
      "bitcoin-block": [
        "Data.Bitcoin.Block"
      ],
      "bitcoin-script": [],
      "bitcoin-tx": [
        "Data.Bitcoin.Transaction"
      ],
      "bitcoin-types": [
        "Data.Bitcoin.Types"
      ],
      "bytestring": [],
      "hexstring": [
        "Data.HexString"
      ],
      "lens": [],
      "lens-aeson": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wreq": [
        "Network.Wreq",
        "Network.Wreq.Session"
      ]
    },
    "imports": [
      "Data.Base58String",
      "Data.Bitcoin.Block",
      "Data.Bitcoin.Transaction",
      "Data.Bitcoin.Types",
      "Data.HashMap.Strict",
      "Data.HexString",
      "Data.List",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.Bitcoin.Api.Blockchain",
      "Network.Bitcoin.Api.Dump",
      "Network.Bitcoin.Api.Internal",
      "Network.Bitcoin.Api.Mining",
      "Network.Bitcoin.Api.Misc",
      "Network.Bitcoin.Api.Types",
      "Network.Bitcoin.Api.Wallet",
      "Network.Wreq",
      "Network.Wreq.Session",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Network.Bitcoin.Api.Client",
      "Network.Bitcoin.Api.Types",
      "Network.Bitcoin.Api.Types.UnspentTransaction",
      "Network.Bitcoin.Api.Blockchain",
      "Network.Bitcoin.Api.Dump",
      "Network.Bitcoin.Api.Mining",
      "Network.Bitcoin.Api.Misc",
      "Network.Bitcoin.Api.Transaction",
      "Network.Bitcoin.Api.Wallet"
    ],
    "name": "bitcoin-api",
    "version": "0.12.1"
  },
  {
    "dependencies": {
      "base": [
        "Prelude"
      ]
    },
    "imports": [
      "Prelude"
    ],
    "modules": [
      "System.Locale"
    ],
    "name": "old-locale",
    "version": "1.0.0.7"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec",
        "Data.Attoparsec.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.Attoparsec",
      "Data.Attoparsec.Char8",
      "Data.ByteString.Char8",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Typeable",
      "IO",
      "Network.Beanstalk",
      "Network.Socket",
      "Network.Socket.ByteString",
      "System.Random",
      "Test.HUnit"
    ],
    "modules": [
      "Network.Beanstalk"
    ],
    "name": "hbeanstalk",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Function",
        "Data.List",
        "Data.Maybe"
      ],
      "fgl": [
        "Data.Graph.Inductive.Graph",
        "Data.Graph.Inductive.PatriciaTree",
        "Data.Graph.Inductive.Tree"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Function",
      "Data.Graph.Inductive.Arbitrary",
      "Data.Graph.Inductive.Graph",
      "Data.Graph.Inductive.PatriciaTree",
      "Data.Graph.Inductive.Tree",
      "Data.List",
      "Data.Maybe",
      "Data.Set",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Graph.Inductive.Arbitrary"
    ],
    "name": "fgl-arbitrary",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "multipart": [
        "Network.Multipart",
        "Network.Multipart.Header"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.Format"
      ],
      "xhtml": [
        "Text.XHtml"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Except",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Typeable",
      "DocTest",
      "Network",
      "Network.CGI.Accept",
      "Network.CGI.Compat",
      "Network.CGI.Cookie",
      "Network.CGI.Monad",
      "Network.CGI.Protocol",
      "Network.Multipart",
      "Network.Multipart.Header",
      "Network.Socket",
      "Network.URI",
      "Numeric",
      "Prelude",
      "System.Environment",
      "System.IO",
      "System.IO.Error",
      "Test.DocTest",
      "Text.ParserCombinators.Parsec",
      "Text.XHtml"
    ],
    "modules": [
      "Network.CGI",
      "Network.CGI.Monad",
      "Network.CGI.Protocol",
      "Network.CGI.Cookie",
      "Network.CGI.Compat"
    ],
    "name": "cgi",
    "version": "3001.3.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Generics",
        "Numeric",
        "System.IO"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.Data",
      "Data.Generics",
      "Data.List",
      "Data.Maybe",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Generics",
      "Network.URI",
      "Numeric",
      "System.IO",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "Network.URI"
    ],
    "name": "network-uri",
    "version": "2.6.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.DataTransfer",
      "Network.Google.DataTransfer.Types",
      "Network.Google.Resource.DataTransfer.Applications.Get",
      "Network.Google.Resource.DataTransfer.Applications.List",
      "Network.Google.Resource.DataTransfer.Transfers.Get",
      "Network.Google.Resource.DataTransfer.Transfers.Insert",
      "Network.Google.Resource.DataTransfer.Transfers.List"
    ],
    "name": "gogol-admin-datatransfer",
    "version": "0.1.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Char",
      "Data.List",
      "Data.Ratio",
      "GHC.Exts",
      "Prelude",
      "Prelude.SafeEnum"
    ],
    "modules": [
      "Prelude.SafeEnum",
      "Data.Number.CalkinWilf"
    ],
    "name": "prelude-safeenum",
    "version": "0.1.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.IO.Error"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Maybe",
      "Data.Monoid",
      "Prelude",
      "System.IO.Error"
    ],
    "modules": [
      "PartialHandler"
    ],
    "name": "partial-handler",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Types"
      ],
      "base": [
        "Control.Applicative",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Types",
      "Data.Monoid"
    ],
    "modules": [
      "Data.Attoparsec.Expr"
    ],
    "name": "attoparsec-expr",
    "version": "0.1.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Functor.Identity",
        "Data.Proxy",
        "Data.Type.Equality",
        "GHC.TypeLits",
        "Unsafe.Coerce"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "constraints": [
        "Data.Constraint"
      ],
      "reflection": [
        "Data.Reflection"
      ],
      "transformers": []
    },
    "imports": [
      "Data.Constraint",
      "Data.Functor.Identity",
      "Data.Proxy",
      "Data.Reflection",
      "Data.Type.Equality",
      "GHC.TypeLits",
      "Prelude.Compat",
      "Unsafe.Coerce"
    ],
    "modules": [
      "GHC.TypeLits.Witnesses",
      "GHC.TypeLits.List",
      "GHC.TypeLits.Compare"
    ],
    "name": "typelits-witnesses",
    "version": "0.2.3.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Data",
        "Data.Foldable",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Foreign.C.Error",
        "Foreign.C.Types",
        "GHC.Generics",
        "GHC.IO.Exception",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO.Error"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch",
        "Control.Monad.Catch.Pure"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer"
      ],
      "mtl-compat": [],
      "text": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": [],
      "unix": [],
      "unix-bytestring": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Catch.Pure",
      "Control.Monad.Cont",
      "Control.Monad.Except",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Data",
      "Data.Foldable",
      "Data.Ix",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Tree",
      "Data.Typeable",
      "Foreign.C.Error",
      "Foreign.C.Types",
      "GHC.Generics",
      "GHC.IO.Exception",
      "Language.Haskell.HLint",
      "Options.Applicative",
      "Prelude",
      "Prelude.Compat",
      "Spec",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.GPIO.Linux",
      "System.GPIO.Linux.Sysfs",
      "System.GPIO.Linux.Sysfs.IO",
      "System.GPIO.Linux.Sysfs.Mock",
      "System.GPIO.Linux.Sysfs.Mock.Internal",
      "System.GPIO.Linux.Sysfs.Monad",
      "System.GPIO.Linux.Sysfs.Types",
      "System.GPIO.Linux.Sysfs.Util",
      "System.GPIO.Monad",
      "System.GPIO.Types",
      "System.IO.Error",
      "Test.DocTest",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "System.GPIO",
      "System.GPIO.Linux",
      "System.GPIO.Linux.Sysfs",
      "System.GPIO.Linux.Sysfs.IO",
      "System.GPIO.Linux.Sysfs.Monad",
      "System.GPIO.Linux.Sysfs.Mock",
      "System.GPIO.Linux.Sysfs.Types",
      "System.GPIO.Linux.Sysfs.Util",
      "System.GPIO.Monad",
      "System.GPIO.Tutorial",
      "System.GPIO.Types"
    ],
    "name": "hpio",
    "version": "0.8.0.3"
  },
  {
    "dependencies": {
      "base": [],
      "constraints": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.Constraint.Unit"
    ],
    "name": "unit-constraint",
    "version": "0.0.0"
  },
  {
    "dependencies": {
      "SHA": [],
      "attoparsec": [
        "Data.Attoparsec.ByteString"
      ],
      "base": [],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "binary": [],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [],
      "entropy": [],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString",
        "Network.Socket.ByteString.Lazy"
      ],
      "random": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "websockets": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Data.Attoparsec.ByteString",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.ByteString.Lazy",
      "Network.WebSockets.Handshake.Tests",
      "Network.WebSockets.Http.Tests",
      "Network.WebSockets.Hybi13",
      "Network.WebSockets.Server.Tests",
      "Network.WebSockets.Stream",
      "Network.WebSockets.Tests",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic"
    ],
    "modules": [
      "Network.WebSockets",
      "Network.WebSockets.Connection",
      "Network.WebSockets.Stream"
    ],
    "name": "websockets",
    "version": "0.9.7.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Mirror",
      "Network.Google.Mirror.Types",
      "Network.Google.Resource.Mirror.Accounts.Insert",
      "Network.Google.Resource.Mirror.Contacts.Delete",
      "Network.Google.Resource.Mirror.Contacts.Get",
      "Network.Google.Resource.Mirror.Contacts.Insert",
      "Network.Google.Resource.Mirror.Contacts.List",
      "Network.Google.Resource.Mirror.Contacts.Patch",
      "Network.Google.Resource.Mirror.Contacts.Update",
      "Network.Google.Resource.Mirror.Locations.Get",
      "Network.Google.Resource.Mirror.Locations.List",
      "Network.Google.Resource.Mirror.Settings.Get",
      "Network.Google.Resource.Mirror.Subscriptions.Delete",
      "Network.Google.Resource.Mirror.Subscriptions.Insert",
      "Network.Google.Resource.Mirror.Subscriptions.List",
      "Network.Google.Resource.Mirror.Subscriptions.Update",
      "Network.Google.Resource.Mirror.Timeline.Attachments.Delete",
      "Network.Google.Resource.Mirror.Timeline.Attachments.Get",
      "Network.Google.Resource.Mirror.Timeline.Attachments.Insert",
      "Network.Google.Resource.Mirror.Timeline.Attachments.List",
      "Network.Google.Resource.Mirror.Timeline.Delete",
      "Network.Google.Resource.Mirror.Timeline.Get",
      "Network.Google.Resource.Mirror.Timeline.Insert",
      "Network.Google.Resource.Mirror.Timeline.List",
      "Network.Google.Resource.Mirror.Timeline.Patch",
      "Network.Google.Resource.Mirror.Timeline.Update"
    ],
    "name": "gogol-mirror",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-html": [
        "Text.Blaze.Html.Renderer.Text"
      ],
      "blaze-markup": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "shakespeare": [
        "Text.Hamlet"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "xml-conduit": [
        "Text.XML"
      ],
      "yesod-core": [
        "Yesod.Core"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.Map",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time.Clock",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Hamlet",
      "Text.XML",
      "Yesod.AtomFeed",
      "Yesod.Core",
      "Yesod.FeedTypes",
      "Yesod.RssFeed"
    ],
    "modules": [
      "Yesod.AtomFeed",
      "Yesod.RssFeed",
      "Yesod.Feed"
    ],
    "name": "yesod-newsfeed",
    "version": "1.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Functor.HT",
      "Control.Monad",
      "Data.Bits",
      "Data.Bool.HT",
      "Data.Bool.HT.Private",
      "Data.Char",
      "Data.Function",
      "Data.Function.HT",
      "Data.Function.HT.Private",
      "Data.List",
      "Data.List.HT",
      "Data.List.HT.Private",
      "Data.List.Key.Private",
      "Data.List.Match",
      "Data.List.Match.Private",
      "Data.List.Reverse.StrictElement",
      "Data.List.Reverse.StrictSpine",
      "Data.Maybe",
      "Data.Maybe.HT",
      "Data.Monoid",
      "Data.Record.HT.Private",
      "Data.Tuple.HT",
      "Data.Tuple.Lazy",
      "Data.Tuple.Strict",
      "Prelude",
      "Test.Data.Function",
      "Test.Data.List",
      "Test.Data.ListMatch",
      "Test.Data.List.Reverse.StrictElement",
      "Test.Data.List.Reverse.StrictSpine",
      "Test.Data.Maybe",
      "Test.QuickCheck",
      "Test.Utility"
    ],
    "modules": [
      "Data.Bits.HT",
      "Data.Bool.HT",
      "Data.Eq.HT",
      "Data.Function.HT",
      "Data.Ix.Enum",
      "Data.List.HT",
      "Data.List.Key",
      "Data.List.Match",
      "Data.List.Reverse.StrictElement",
      "Data.List.Reverse.StrictSpine",
      "Data.Maybe.HT",
      "Data.Monoid.HT",
      "Data.Ord.HT",
      "Data.Record.HT",
      "Data.String.HT",
      "Data.Tuple.HT",
      "Data.Tuple.Lazy",
      "Data.Tuple.Strict",
      "Control.Monad.HT",
      "Control.Applicative.HT",
      "Control.Functor.HT",
      "Data.Strictness.HT",
      "Text.Read.HT",
      "Text.Show.HT"
    ],
    "name": "utility-ht",
    "version": "0.0.12"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "System.IO.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Control.Spoon"
    ],
    "name": "spoon",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "GHC.Conc",
        "System.IO.Unsafe"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Concurrent.NanoErl",
      "Control.Concurrent.STM",
      "Control.Monad",
      "GHC.Conc",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Control.Concurrent.NanoErl",
      "Control.Concurrent.NanoErl.Examples.Dominos",
      "Control.Concurrent.NanoErl.Examples.PingPong"
    ],
    "name": "nano-erl",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "Text.Printf"
      ],
      "tagged": [],
      "tasty": [
        "Test.Tasty",
        "Test.Tasty.Options",
        "Test.Tasty.Providers",
        "Test.Tasty.Runners"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Typeable",
      "System.Random",
      "Test.QuickCheck",
      "Test.QuickCheck.Random",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.Runners",
      "Text.Printf",
      "Text.Regex.PCRE.Light.Char8"
    ],
    "modules": [
      "Test.Tasty.QuickCheck"
    ],
    "name": "tasty-quickcheck",
    "version": "0.8.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Typeable",
      "System.Console.ParseArgs",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Process"
    ],
    "modules": [
      "System.Console.ParseArgs"
    ],
    "name": "parseargs",
    "version": "0.2.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "options": [],
      "patience": [
        "Data.Algorithm.Patience"
      ],
      "random": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "transformers": [
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.Algorithm.Patience",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Text",
      "Data.Text.Lazy",
      "Language.Haskell.TH",
      "System.Console.ANSI"
    ],
    "modules": [
      "Test.Chell"
    ],
    "name": "chell",
    "version": "0.4.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Numeric"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Numeric",
      "Text.XML.Light.Input",
      "Text.XML.Light.Lexer",
      "Text.XML.Light.Output",
      "Text.XML.Light.Proc",
      "Text.XML.Light.Types"
    ],
    "modules": [
      "Text.XML.Light",
      "Text.XML.Light.Types",
      "Text.XML.Light.Output",
      "Text.XML.Light.Input",
      "Text.XML.Light.Lexer",
      "Text.XML.Light.Proc",
      "Text.XML.Light.Cursor"
    ],
    "name": "xml",
    "version": "1.3.14"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Text",
        "Distribution.Version"
      ],
      "aeson": [],
      "base": [
        "Data.Traversable"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "exceptions": [],
      "hashable": [],
      "safe": [
        "Safe"
      ],
      "semigroups": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": []
    },
    "imports": [
      "Data.HashMap.Strict",
      "Data.Map",
      "Data.Set",
      "Data.Text",
      "Data.Traversable",
      "Distribution.Text",
      "Distribution.Version",
      "Safe"
    ],
    "modules": [
      "Stackage.Types"
    ],
    "name": "stackage-types",
    "version": "1.2.0"
  },
  {
    "dependencies": {
      "acid-state": [
        "Data.Acid",
        "Data.Acid.Local"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.String"
      ],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "clckwrks": [
        "Clckwrks",
        "Clckwrks.Acid",
        "Clckwrks.Admin.Template",
        "Clckwrks.IOThread",
        "Clckwrks.Monad",
        "Clckwrks.Plugin"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "gd": [
        "Graphics.GD"
      ],
      "happstack-server": [
        "Happstack.Server",
        "Happstack.Server.Internal.Monads"
      ],
      "hsp": [
        "HSP.XML",
        "HSP.XMLGenerator"
      ],
      "ixset": [
        "Data.IxSet"
      ],
      "magic": [
        "Magic"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "reform": [
        "Text.Reform"
      ],
      "reform-happstack": [
        "Text.Reform.Happstack"
      ],
      "reform-hsp": [
        "Text.Reform.HSP.Text"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "web-plugins": [
        "Web.Plugins.Core"
      ],
      "web-routes": [
        "Web.Routes"
      ],
      "web-routes-th": [
        "Web.Routes.TH"
      ]
    },
    "imports": [
      "Clckwrks",
      "Clckwrks.Acid",
      "Clckwrks.Admin.Template",
      "Clckwrks.IOThread",
      "Clckwrks.Media.Acid",
      "Clckwrks.Media.Monad",
      "Clckwrks.Media.Page.AllMedia",
      "Clckwrks.Media.Page.GetMedium",
      "Clckwrks.Media.Page.Preview",
      "Clckwrks.Media.Page.Upload",
      "Clckwrks.Media.PreProcess",
      "Clckwrks.Media.Preview",
      "Clckwrks.Media.Route",
      "Clckwrks.Media.Types",
      "Clckwrks.Media.URL",
      "Clckwrks.Monad",
      "Clckwrks.Plugin",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Acid",
      "Data.Acid.Local",
      "Data.Attoparsec.Text.Lazy",
      "Data.Data",
      "Data.IxSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.SafeCopy",
      "Data.Serialize",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Graphics.GD",
      "Happstack.Server",
      "Happstack.Server.Internal.Monads",
      "HSP.XML",
      "HSP.XMLGenerator",
      "Magic",
      "System.Directory",
      "System.FilePath",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Reform",
      "Text.Reform.Happstack",
      "Text.Reform.HSP.Text",
      "Web.Plugins.Core",
      "Web.Routes",
      "Web.Routes.TH"
    ],
    "modules": [
      "Clckwrks.Media",
      "Clckwrks.Media.Acid",
      "Clckwrks.Media.Monad",
      "Clckwrks.Media.Page.AllMedia",
      "Clckwrks.Media.Page.GetMedium",
      "Clckwrks.Media.Page.Preview",
      "Clckwrks.Media.Page.Upload",
      "Clckwrks.Media.Plugin",
      "Clckwrks.Media.PreProcess",
      "Clckwrks.Media.Preview",
      "Clckwrks.Media.Route",
      "Clckwrks.Media.Types",
      "Clckwrks.Media.URL",
      "Paths_clckwrks_plugin_media"
    ],
    "name": "clckwrks-plugin-media",
    "version": "0.6.16"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Version",
        "GHC.Conc",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem.Weak",
        "Text.ParserCombinators.ReadP",
        "Unsafe.Coerce"
      ],
      "cmdargs": [
        "System.Console.CmdArgs.Explicit",
        "System.Console.CmdArgs.Implicit",
        "System.Console.CmdArgs.Verbosity"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "cpphs": [
        "Language.Preprocessor.Cpphs"
      ],
      "directory": [
        "System.Directory"
      ],
      "extra": [
        "Control.Monad.Extra",
        "Data.Either.Extra",
        "Data.List.Extra",
        "Data.Tuple.Extra",
        "System.Directory.Extra",
        "System.Info.Extra",
        "System.IO.Extra",
        "System.Process.Extra"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts",
        "Language.Haskell.Exts.Annotated",
        "Language.Haskell.Exts.Annotated.Simplify",
        "Language.Haskell.Exts.Extension"
      ],
      "hlint": [],
      "process": [
        "System.Process"
      ],
      "refact": [
        "Refact.Types"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data",
        "Data.Generics.Uniplate.Operations"
      ]
    },
    "imports": [
      "A",
      "Apply",
      "Array",
      "B",
      "Char",
      "CmdLine",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.Extra",
      "Control.Monad.Trans.State",
      "Control.Parallel.Strategies",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Either.Extra",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Generics.Uniplate.Data",
      "Data.Generics.Uniplate.Operations",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.List.Extra",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.Text.Lazy",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Tuple.Extra",
      "Data.Typeable",
      "Data.Version",
      "Foo",
      "GHC.Conc",
      "Grep",
      "Hint.All",
      "Hint.Bracket",
      "Hint.Comment",
      "Hint.Duplicate",
      "Hint.Extensions",
      "Hint.Import",
      "Hint.Lambda",
      "Hint.List",
      "Hint.ListRec",
      "Hint.Match",
      "Hint.Monad",
      "Hint.Naming",
      "Hint.Pattern",
      "Hint.Pragma",
      "Hint.Type",
      "Hint.Unsafe",
      "Hint.Util",
      "HLint",
      "HsColour",
      "HSE.All",
      "HSE.Bracket",
      "HSE.Evaluate",
      "HSE.FreeVars",
      "HSE.Match",
      "HSE.Scope",
      "HSE.Type",
      "HSE.Util",
      "Idea",
      "IO",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Annotated",
      "Language.Haskell.Exts.Annotated.Simplify",
      "Language.Haskell.Exts.Extension",
      "Language.Haskell.HLint2",
      "Language.Haskell.HLint3",
      "Language.Haskell.HsColour.Colourise",
      "Language.Haskell.HsColour.CSS",
      "Language.Haskell.HsColour.TTY",
      "Language.Preprocessor.Cpphs",
      "List",
      "Maybe",
      "Monad",
      "Numeric",
      "Parallel",
      "Paths",
      "Prelude",
      "Refact",
      "Refact.Types",
      "Report",
      "Settings",
      "System.Console.ANSI",
      "System.Console.CmdArgs.Explicit",
      "System.Console.CmdArgs.Implicit",
      "System.Console.CmdArgs.Verbosity",
      "System.Directory",
      "System.Directory.Extra",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Info.Extra",
      "System.IO",
      "System.IO.Extra",
      "System.IO.Unsafe",
      "System.Mem.Weak",
      "System.Process",
      "System.Process.Extra",
      "Test.All",
      "Test.Annotations",
      "Test.InputOutput",
      "Test.Proof",
      "Test.QuickCheck",
      "Test.QuickCheck.Modifiers",
      "Test.QuickCheck.Test",
      "Test.Translate",
      "Test.Util",
      "Text.Blaze.Html5.Attributes",
      "Text.ParserCombinators.ReadP",
      "Unsafe.Coerce",
      "Util"
    ],
    "modules": [
      "Language.Haskell.HLint",
      "Language.Haskell.HLint2",
      "Language.Haskell.HLint3"
    ],
    "name": "hlint",
    "version": "1.9.35"
  },
  {
    "dependencies": {
      "base": [],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "containers": [],
      "data-default": [
        "Data.Default"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ],
      "xml-conduit": [
        "Text.XML.Stream.Render"
      ],
      "xml-types": [
        "Data.XML.Types"
      ],
      "yesod-core": [
        "Yesod.Core"
      ]
    },
    "imports": [
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Default",
      "Data.Text",
      "Data.Time",
      "Data.XML.Types",
      "Text.XML.Stream.Render",
      "Yesod.Core"
    ],
    "modules": [
      "Yesod.Sitemap"
    ],
    "name": "yesod-sitemap",
    "version": "1.4.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Tuple",
        "Prelude"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [
        "Control.Monad.Trans.Error"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans.Error",
      "Criterion.Main",
      "Data.Char",
      "Data.Foldable",
      "Data.Label",
      "Data.Label.Base",
      "Data.Label.Derive",
      "Data.Label.Failing",
      "Data.Label.Monadic",
      "Data.Label.Mono",
      "Data.Label.Partial",
      "Data.Label.Point",
      "Data.Label.Poly",
      "Data.Label.Total",
      "Data.List",
      "Data.Maybe",
      "Data.Ord",
      "Data.Tuple",
      "Language.Haskell.TH",
      "Prelude",
      "Test.HUnit"
    ],
    "modules": [
      "Data.Label",
      "Data.Label.Base",
      "Data.Label.Derive",
      "Data.Label.Failing",
      "Data.Label.Monadic",
      "Data.Label.Mono",
      "Data.Label.Partial",
      "Data.Label.Point",
      "Data.Label.Poly",
      "Data.Label.Total"
    ],
    "name": "fclabels",
    "version": "2.0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "criterion": [],
      "hw-bits": [],
      "hw-prim": [],
      "mmap": [],
      "parsec": [],
      "resourcet": [],
      "safe": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.ByteString",
      "Data.Vector",
      "Data.Vector.Storable",
      "HaskellWorks.Data.Bits.AllExcess.AllExcess0",
      "HaskellWorks.Data.Bits.AllExcess.AllExcess1",
      "HaskellWorks.Data.Bits.BitWise"
    ],
    "modules": [
      "HaskellWorks.Data.Bits",
      "HaskellWorks.Data.Bits.AllExcess",
      "HaskellWorks.Data.Bits.AllExcess.AllExcess0",
      "HaskellWorks.Data.Bits.AllExcess.AllExcess1",
      "HaskellWorks.Data.Bits.BitLength",
      "HaskellWorks.Data.Bits.BitParse",
      "HaskellWorks.Data.Bits.BitRead",
      "HaskellWorks.Data.Bits.BitShow",
      "HaskellWorks.Data.Bits.BitShown",
      "HaskellWorks.Data.Bits.BitWise",
      "HaskellWorks.Data.Bits.Broadword",
      "HaskellWorks.Data.Bits.ElemFixedBitSize",
      "HaskellWorks.Data.Bits.FixedBitSize",
      "HaskellWorks.Data.Bits.FromBitTextByteString",
      "HaskellWorks.Data.Bits.Log2",
      "HaskellWorks.Data.Bits.PopCount",
      "HaskellWorks.Data.Bits.PopCount.PopCount0",
      "HaskellWorks.Data.Bits.PopCount.PopCount1",
      "HaskellWorks.Data.Bits.SubWord64Vector",
      "HaskellWorks.Data.Bits.SubWord64Vector.Internal",
      "HaskellWorks.Data.Bits.Types.Broadword",
      "HaskellWorks.Data.Bits.Types.Builtin",
      "HaskellWorks.Data.Bits.Unmatched",
      "HaskellWorks.Data.Bits.Word"
    ],
    "name": "hw-bits",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.List"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.List"
    ],
    "modules": [
      "Harp.Match"
    ],
    "name": "harp",
    "version": "0.4.2"
  },
  {
    "dependencies": {
      "base": [],
      "generics-sop": [
        "Generics.SOP"
      ],
      "lens": [
        "Control.Lens"
      ]
    },
    "imports": [
      "Control.Lens",
      "Generics.SOP"
    ],
    "modules": [
      "Generics.SOP.Lens"
    ],
    "name": "generics-sop-lens",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "conduit": [],
      "conduit-parse": [],
      "exceptions": [],
      "foldl": [],
      "lens-simple": [],
      "mono-traversable": [],
      "parsers": [],
      "text": [],
      "time": [],
      "timerep": [],
      "uri-bytestring": [],
      "xml-conduit": [],
      "xml-conduit-parse": [],
      "xml-types": []
    },
    "imports": [
      "Language.Haskell.HLint"
    ],
    "modules": [
      "Text.Atom.Conduit.Parse",
      "Text.Atom.Conduit.Render",
      "Text.Atom.Lens",
      "Text.Atom.Types"
    ],
    "name": "atom-conduit",
    "version": "0.3.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.List",
        "Numeric"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.List",
      "Numeric"
    ],
    "modules": [
      "Hexdump"
    ],
    "name": "pretty-hex",
    "version": "1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "System.Environment"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "cryptohash": [
        "Crypto.Hash"
      ],
      "http-types": [
        "Network.HTTP.Types.Header",
        "Network.HTTP.Types.URI"
      ],
      "simple": [
        "Web.Simple.Controller"
      ],
      "transformers": [],
      "wai": [
        "Network.Wai.Internal"
      ],
      "wai-extra": [
        "Network.Wai.Request"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Crypto.Hash",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.Map",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.URI",
      "Network.Wai.Internal",
      "Network.Wai.Request",
      "System.Environment",
      "Web.Cookie",
      "Web.Simple.Controller"
    ],
    "modules": [
      "Web.Simple.Session"
    ],
    "name": "simple-session",
    "version": "0.10.1.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Parser",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Fixed",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.String",
        "Data.Word",
        "GHC.Generics"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "generic-aeson": [
        "Generics.Generic.Aeson",
        "Generics.Generic.Aeson.Util"
      ],
      "generic-deriving": [
        "Generics.Deriving.ConNames"
      ],
      "mtl": [
        "Control.Monad.RWS.Strict"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.RWS.Strict",
      "Data.Aeson",
      "Data.Aeson.Parser",
      "Data.Aeson.Types",
      "Data.Aeson.Utils",
      "Data.Attoparsec.Lazy",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Fixed",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.JSON.Schema",
      "Data.JSON.Schema.Combinators",
      "Data.JSON.Schema.Generic",
      "Data.JSON.Schema.Types",
      "Data.JSON.Schema.Validate",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Scientific",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time.Clock",
      "Data.Vector",
      "Data.Word",
      "Example",
      "Generics.Deriving.ConNames",
      "Generics.Generic.Aeson",
      "Generics.Generic.Aeson.Util",
      "GHC.Generics",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.TH",
      "Test.Util",
      "Test.Validate"
    ],
    "modules": [
      "Data.JSON.Schema",
      "Data.JSON.Schema.Combinators",
      "Data.JSON.Schema.Generic",
      "Data.JSON.Schema.Types",
      "Data.JSON.Schema.Validate"
    ],
    "name": "json-schema",
    "version": "0.7.4.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.DataPipeline",
      "Test.AWS.DataPipeline",
      "Test.AWS.DataPipeline.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.DataPipeline",
      "Network.AWS.DataPipeline.ActivatePipeline",
      "Network.AWS.DataPipeline.AddTags",
      "Network.AWS.DataPipeline.CreatePipeline",
      "Network.AWS.DataPipeline.DeactivatePipeline",
      "Network.AWS.DataPipeline.DeletePipeline",
      "Network.AWS.DataPipeline.DescribeObjects",
      "Network.AWS.DataPipeline.DescribePipelines",
      "Network.AWS.DataPipeline.EvaluateExpression",
      "Network.AWS.DataPipeline.GetPipelineDefinition",
      "Network.AWS.DataPipeline.ListPipelines",
      "Network.AWS.DataPipeline.PollForTask",
      "Network.AWS.DataPipeline.PutPipelineDefinition",
      "Network.AWS.DataPipeline.QueryObjects",
      "Network.AWS.DataPipeline.RemoveTags",
      "Network.AWS.DataPipeline.ReportTaskProgress",
      "Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat",
      "Network.AWS.DataPipeline.SetStatus",
      "Network.AWS.DataPipeline.SetTaskStatus",
      "Network.AWS.DataPipeline.Types",
      "Network.AWS.DataPipeline.ValidatePipelineDefinition",
      "Network.AWS.DataPipeline.Waiters"
    ],
    "name": "amazonka-datapipeline",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.String"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Maybe",
      "Data.Monoid",
      "Data.OFX",
      "Data.Time",
      "Text.Parsec",
      "Text.Parsec.String",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Data.OFX"
    ],
    "name": "ofx",
    "version": "0.4.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Functor.Compose",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "GHC.Generics",
        "Numeric"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "generic-deriving": [
        "Generics.Deriving.Monoid"
      ],
      "ghc-prim": [],
      "mtl": [
        "Control.Monad.State"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "tasty": [
        "Test.Tasty.Options",
        "Test.Tasty.Runners"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "xml": [
        "Text.XML.Light"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.STM",
      "Control.Monad.State",
      "Control.Monad.Trans.Class",
      "Data.Functor.Compose",
      "Data.IntMap",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Tagged",
      "Data.Typeable",
      "Generics.Deriving.Monoid",
      "GHC.Generics",
      "Numeric",
      "Test.Tasty.Options",
      "Test.Tasty.Runners",
      "Text.XML.Light"
    ],
    "modules": [
      "Test.Tasty.Runners.AntXML"
    ],
    "name": "tasty-ant-xml",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Foreign.C.Types",
        "Foreign.Marshal.Error",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable"
      ]
    },
    "imports": [
      "Foreign.C.Types",
      "Foreign.Marshal.Error",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable"
    ],
    "modules": [
      "Foreign.Marshal.MissingAlloc",
      "Foreign.Marshal.MissingUtils"
    ],
    "name": "missing-foreign",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "System.Exit",
        "System.IO"
      ],
      "blaze-builder": [],
      "blaze-textual": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "direct-sqlite": [
        "Database.SQLite3",
        "Database.SQLite3.Direct"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ],
      "time": [],
      "transformers": []
    },
    "imports": [
      "Common",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Database.SQLite3",
      "Database.SQLite3.Direct",
      "Database.SQLite.Simple",
      "Database.SQLite.Simple.Time.Implementation",
      "Database.SQLite.Simple.ToField",
      "Database.SQLite.Simple.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Data.Word",
      "Debug",
      "DirectSqlite",
      "Errors",
      "Fold",
      "ParamConv",
      "Simple",
      "Statement",
      "System.Exit",
      "System.IO",
      "Test.HUnit",
      "TestImports",
      "UserInstances",
      "Utf8Strings"
    ],
    "modules": [
      "Database.SQLite.Simple",
      "Database.SQLite.Simple.Ok",
      "Database.SQLite.Simple.FromField",
      "Database.SQLite.Simple.FromRow",
      "Database.SQLite.Simple.Internal",
      "Database.SQLite.Simple.ToField",
      "Database.SQLite.Simple.ToRow",
      "Database.SQLite.Simple.Types",
      "Database.SQLite.Simple.Time",
      "Database.SQLite.Simple.Time.Implementation"
    ],
    "name": "sqlite-simple",
    "version": "0.4.9.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Numeric",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ],
      "crypto-api": [
        "Crypto.Classes"
      ],
      "tagged": [
        "Data.Tagged"
      ]
    },
    "imports": [
      "Control.Monad",
      "Crypto.Classes",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Digest.Pure.MD5",
      "Data.List",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.Tagged",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Hexdump",
      "Numeric",
      "System.IO.Unsafe",
      "Test.Crypto",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.MD5",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Digest.Pure.MD5"
    ],
    "name": "pureMD5",
    "version": "2.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Word",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "random": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.ByteString",
      "Data.Word",
      "Development.IncludeFile",
      "Language.Haskell.TH",
      "System.Exit"
    ],
    "modules": [
      "Development.IncludeFile"
    ],
    "name": "include-file",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "atomic-primops": [
        "Data.Atomics"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Foldable",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Prelude",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive.Array"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.Async",
      "Control.Concurrent.Map",
      "Control.Concurrent.Map.Array",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Criterion.Main",
      "Data.Atomics",
      "Data.Bits",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Primitive.Array",
      "Data.Word",
      "Prelude",
      "System.IO.Unsafe",
      "System.Random",
      "System.Random.Shuffle",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic",
      "Text.Printf"
    ],
    "modules": [
      "Control.Concurrent.Map"
    ],
    "name": "ctrie",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "attoparsec": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Version",
        "Data.Word",
        "GHC.Exts",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.IO"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "binary-conduit": [
        "Data.Conduit.Serialization.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "crypto-pubkey": [],
      "cryptohash": [
        "Crypto.Hash.SHA3"
      ],
      "directory": [
        "System.Directory"
      ],
      "errors": [
        "Control.Error.Util"
      ],
      "fgl": [
        "Data.Graph.Inductive.Graph",
        "Data.Graph.Inductive.PatriciaTree",
        "Data.Graph.Inductive.Query.SP"
      ],
      "graphviz": [
        "Data.GraphViz",
        "Data.GraphViz.Attributes",
        "Data.GraphViz.Types"
      ],
      "hOpenPGP": [
        "Codec.Encryption.OpenPGP.Expirations",
        "Codec.Encryption.OpenPGP.Fingerprint",
        "Codec.Encryption.OpenPGP.KeyInfo",
        "Codec.Encryption.OpenPGP.KeySelection",
        "Codec.Encryption.OpenPGP.Ontology",
        "Codec.Encryption.OpenPGP.Serialize",
        "Codec.Encryption.OpenPGP.Signatures",
        "Codec.Encryption.OpenPGP.Types",
        "Data.Conduit.OpenPGP.Filter",
        "Data.Conduit.OpenPGP.Keyring"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "ixset-typed": [
        "Data.IxSet.Typed"
      ],
      "lens": [
        "Control.Lens",
        "Data.Data.Lens"
      ],
      "monad-loops": [
        "Control.Monad.Loops"
      ],
      "openpgp-asciiarmor": [
        "Codec.Encryption.OpenPGP.ASCIIArmor",
        "Codec.Encryption.OpenPGP.ASCIIArmor.Types"
      ],
      "optparse-applicative": [
        "Options.Applicative.Builder",
        "Options.Applicative.Extra",
        "Options.Applicative.Types"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time.Clock.POSIX",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "transformers": [
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.Writer.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "wl-pprint-extras": [
        "Text.PrettyPrint.Free"
      ],
      "wl-pprint-terminfo": [
        "System.Console.Terminfo.PrettyPrint"
      ],
      "yaml": [
        "Data.Yaml"
      ]
    },
    "imports": [
      "Array",
      "Codec.Encryption.OpenPGP.ASCIIArmor",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Types",
      "Codec.Encryption.OpenPGP.Expirations",
      "Codec.Encryption.OpenPGP.Fingerprint",
      "Codec.Encryption.OpenPGP.KeyInfo",
      "Codec.Encryption.OpenPGP.KeySelection",
      "Codec.Encryption.OpenPGP.Ontology",
      "Codec.Encryption.OpenPGP.Serialize",
      "Codec.Encryption.OpenPGP.Signatures",
      "Codec.Encryption.OpenPGP.Types",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Error.Util",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Loops",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.Writer.Lazy",
      "Crypto.Hash.SHA3",
      "Data.Aeson",
      "Data.Array",
      "Data.Array.Base",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.OpenPGP.Filter",
      "Data.Conduit.OpenPGP.Keyring",
      "Data.Conduit.Serialization.Binary",
      "Data.Data.Lens",
      "Data.Either",
      "Data.Foldable",
      "Data.Graph.Inductive.Graph",
      "Data.Graph.Inductive.PatriciaTree",
      "Data.Graph.Inductive.Query.SP",
      "Data.GraphViz",
      "Data.GraphViz.Attributes",
      "Data.GraphViz.Types",
      "Data.HashMap.Lazy",
      "Data.IxSet.Typed",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy.IO",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Version",
      "Data.Word",
      "Data.Yaml",
      "GHC.Exts",
      "GHC.Generics",
      "GlaExts",
      "HOpenPGP.Tools.Common",
      "HOpenPGP.Tools.HKP",
      "HOpenPGP.Tools.Lexer",
      "HOpenPGP.Tools.Parser",
      "HOpenPGP.Tools.TKUtils",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types.Status",
      "Numeric",
      "Options.Applicative.Builder",
      "Options.Applicative.Extra",
      "Options.Applicative.Types",
      "Paths",
      "Prelude",
      "System.Console.Terminfo.PrettyPrint",
      "System.Directory",
      "System.IO",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.PrettyPrint.Free"
    ],
    "modules": [],
    "name": "hopenpgp-tools",
    "version": "0.19.4"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.ForeignPtr",
        "GHC.IO",
        "GHC.ST",
        "GHC.Word",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntSet"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Array",
        "Data.Text.Encoding",
        "Data.Text.Internal",
        "Data.Text.Internal.Encoding.Utf16",
        "Data.Text.Internal.Unsafe.Char",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Internal",
        "Data.Text.Read",
        "Data.Text.Unsafe"
      ],
      "transformers": []
    },
    "imports": [
      "Aeson",
      "Common",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.IO.Class",
      "Control.Monad.ST",
      "Criterion",
      "Criterion.Main",
      "Criterion.Types",
      "Data.Array.Base",
      "Data.Array.Unboxed",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Buffer",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.FastSet",
      "Data.Attoparsec.ByteString.Internal",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Internal",
      "Data.Attoparsec.Internal.Fhthagn",
      "Data.Attoparsec.Internal.Types",
      "Data.Attoparsec.Lazy",
      "Data.Attoparsec.Number",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Text.Buffer",
      "Data.Attoparsec.Text.FastSet",
      "Data.Attoparsec.Text.Internal",
      "Data.Attoparsec.Text.Lazy",
      "Data.Attoparsec.Zepto",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Int",
      "Data.IntSet",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Semigroup",
      "Data.String",
      "Data.Text",
      "Data.Text.Array",
      "Data.Text.Encoding",
      "Data.Text.Internal",
      "Data.Text.Internal.Encoding.Utf16",
      "Data.Text.Internal.Unsafe.Char",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Internal",
      "Data.Text.Read",
      "Data.Text.Unsafe",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Word",
      "Debug.Trace",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Genome",
      "GHC.Base",
      "GHC.ForeignPtr",
      "GHC.IO",
      "GHC.Prim",
      "GHC.ST",
      "GHC.Types",
      "GHC.Word",
      "HeadersByteString",
      "HeadersByteString.Atto",
      "HeadersText",
      "Links",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.Version",
      "Network.Wai.Handler.Warp.ReadInt",
      "Network.Wai.Handler.Warp.RequestHeader",
      "Numbers",
      "Numeric",
      "Prelude",
      "QC.Buffer",
      "QC.ByteString",
      "QC.Combinator",
      "QC.Common",
      "QC.IPv6.Types",
      "QC.Rechunked",
      "QC.Simple",
      "QC.Text",
      "QC.Text.FastSet",
      "QC.Text.Regressions",
      "RFC2616",
      "Sets",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "Test.QuickCheck",
      "Test.QuickCheck.Unicode",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "TextFastSet",
      "Text.Parsec",
      "Text.Parsec.ByteString",
      "Text.Parsec.ByteString.Lazy",
      "Text.Parsec.Char",
      "Text.Parsec.Combinator",
      "Text.Parsec.Prim",
      "Text.Parsec.Text",
      "Text.Parsec.Text.Lazy",
      "Warp"
    ],
    "modules": [
      "Data.Attoparsec",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Char8",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Internal",
      "Data.Attoparsec.Internal.Types",
      "Data.Attoparsec.Lazy",
      "Data.Attoparsec.Number",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Text.Lazy",
      "Data.Attoparsec.Types",
      "Data.Attoparsec.Zepto"
    ],
    "name": "attoparsec",
    "version": "0.13.1.0"
  },
  {
    "dependencies": {
      "JuicyPixels": [
        "Codec.Picture"
      ],
      "base": [
        "Control.Monad",
        "Data.Function",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Word",
        "GHC.TypeLits"
      ],
      "bytestring": [
        "Data.ByteString"
      ]
    },
    "imports": [
      "Codec.Picture",
      "Control.Monad",
      "Data.ByteString",
      "Data.Function",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Word",
      "GHC.TypeLits",
      "Graphics.Identicon",
      "Graphics.Identicon.Primitive",
      "Test.Hspec"
    ],
    "modules": [
      "Graphics.Identicon",
      "Graphics.Identicon.Primitive"
    ],
    "name": "identicon",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable"
      ],
      "containers": [],
      "data-default-class": [],
      "diagrams-core": [],
      "diagrams-lib": [],
      "dlist": [],
      "filepath": [],
      "hashable": [],
      "lens": [],
      "monoid-extras": [],
      "mtl": [],
      "semigroups": [],
      "split": [],
      "statestack": [
        "Control.Monad.StateStack"
      ]
    },
    "imports": [
      "Control.Monad.StateStack",
      "Data.Foldable",
      "Graphics.Rendering.Postscript"
    ],
    "modules": [
      "Diagrams.Backend.Postscript",
      "Diagrams.Backend.Postscript.CMYK",
      "Diagrams.Backend.Postscript.CmdLine",
      "Graphics.Rendering.Postscript"
    ],
    "name": "diagrams-postscript",
    "version": "1.3.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Word",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder"
      ],
      "cipher-aes": [
        "Crypto.Cipher.AES"
      ],
      "cipher-rc4": [
        "Crypto.Cipher.RC4"
      ],
      "containers": [
        "Data.Map"
      ],
      "crypto-api": [
        "Crypto.Padding"
      ],
      "cryptohash": [
        "Crypto.Hash.MD5"
      ],
      "io-streams": [
        "System.IO.Streams",
        "System.IO.Streams.Attoparsec"
      ],
      "pdf-toolbox-content": [
        "Pdf.Toolbox.Content"
      ],
      "pdf-toolbox-core": [
        "Pdf.Toolbox.Core",
        "Pdf.Toolbox.Core.Error",
        "Pdf.Toolbox.Core.Object.Types",
        "Pdf.Toolbox.Core.Object.Util"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Crypto.Cipher.AES",
      "Crypto.Cipher.RC4",
      "Crypto.Hash.MD5",
      "Crypto.Padding",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.Functor",
      "Data.Int",
      "Data.IORef",
      "Data.Map",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Traversable",
      "Data.Word",
      "Pdf.Toolbox.Content",
      "Pdf.Toolbox.Core",
      "Pdf.Toolbox.Core.Error",
      "Pdf.Toolbox.Core.Object.Types",
      "Pdf.Toolbox.Core.Object.Util",
      "Pdf.Toolbox.Document.Catalog",
      "Pdf.Toolbox.Document.Document",
      "Pdf.Toolbox.Document.Encryption",
      "Pdf.Toolbox.Document.FontDict",
      "Pdf.Toolbox.Document.Info",
      "Pdf.Toolbox.Document.Internal.Types",
      "Pdf.Toolbox.Document.Internal.Util",
      "Pdf.Toolbox.Document.Monad",
      "Pdf.Toolbox.Document.Page",
      "Pdf.Toolbox.Document.PageNode",
      "Pdf.Toolbox.Document.Pdf",
      "Pdf.Toolbox.Document.Types",
      "System.IO",
      "System.IO.Streams",
      "System.IO.Streams.Attoparsec"
    ],
    "modules": [
      "Pdf.Toolbox.Document",
      "Pdf.Toolbox.Document.Types",
      "Pdf.Toolbox.Document.Monad",
      "Pdf.Toolbox.Document.Pdf",
      "Pdf.Toolbox.Document.Document",
      "Pdf.Toolbox.Document.Info",
      "Pdf.Toolbox.Document.Catalog",
      "Pdf.Toolbox.Document.PageNode",
      "Pdf.Toolbox.Document.Page",
      "Pdf.Toolbox.Document.FontDict",
      "Pdf.Toolbox.Document.Encryption",
      "Pdf.Toolbox.Document.Internal.Types",
      "Pdf.Toolbox.Document.Internal.Util"
    ],
    "name": "pdf-toolbox-document",
    "version": "0.0.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Monoid"
      ],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Error.Class",
      "Control.Monad.Journal.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Either",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Writer.Class",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Monad.Journal",
      "Control.Monad.Journal.Class",
      "Control.Monad.Trans.Journal"
    ],
    "name": "monad-journal",
    "version": "0.7.2"
  },
  {
    "dependencies": {
      "GLUT": [
        "Graphics.UI.GLUT"
      ],
      "OpenGL": [
        "Graphics.Rendering.OpenGL",
        "Graphics.Rendering.OpenGL.GL"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.IORef",
        "Data.Maybe",
        "GHC.Float",
        "System.Exit",
        "System.Mem",
        "Unsafe.Coerce"
      ],
      "bmp": [],
      "bytestring": [],
      "containers": [
        "Data.Map"
      ],
      "ghc-prim": [],
      "gloss-rendering": [
        "Graphics.Gloss.Rendering"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.IORef",
      "Data.Map",
      "Data.Maybe",
      "GHC.Float",
      "Graphics.Gloss.Data.Bitmap",
      "Graphics.Gloss.Data.Color",
      "Graphics.Gloss.Data.Controller",
      "Graphics.Gloss.Data.Display",
      "Graphics.Gloss.Data.Picture",
      "Graphics.Gloss.Data.Point",
      "Graphics.Gloss.Data.Vector",
      "Graphics.Gloss.Data.ViewPort",
      "Graphics.Gloss.Data.ViewState",
      "Graphics.Gloss.Geometry.Angle",
      "Graphics.Gloss.Interface.Pure.Animate",
      "Graphics.Gloss.Interface.Pure.Display",
      "Graphics.Gloss.Interface.Pure.Game",
      "Graphics.Gloss.Interface.Pure.Simulate",
      "Graphics.Gloss.Internals.Color",
      "Graphics.Gloss.Internals.Interface.Animate",
      "Graphics.Gloss.Internals.Interface.Animate.State",
      "Graphics.Gloss.Internals.Interface.Animate.Timing",
      "Graphics.Gloss.Internals.Interface.Backend",
      "Graphics.Gloss.Internals.Interface.Backend.GLFW",
      "Graphics.Gloss.Internals.Interface.Backend.GLUT",
      "Graphics.Gloss.Internals.Interface.Backend.Types",
      "Graphics.Gloss.Internals.Interface.Callback",
      "Graphics.Gloss.Internals.Interface.Common.Exit",
      "Graphics.Gloss.Internals.Interface.Debug",
      "Graphics.Gloss.Internals.Interface.Display",
      "Graphics.Gloss.Internals.Interface.Event",
      "Graphics.Gloss.Internals.Interface.Game",
      "Graphics.Gloss.Internals.Interface.Simulate",
      "Graphics.Gloss.Internals.Interface.Simulate.Idle",
      "Graphics.Gloss.Internals.Interface.Simulate.State",
      "Graphics.Gloss.Internals.Interface.ViewState.KeyMouse",
      "Graphics.Gloss.Internals.Interface.ViewState.Motion",
      "Graphics.Gloss.Internals.Interface.ViewState.Reshape",
      "Graphics.Gloss.Internals.Interface.Window",
      "Graphics.Gloss.Rendering",
      "Graphics.Rendering.OpenGL",
      "Graphics.Rendering.OpenGL.GL",
      "Graphics.UI.GLFW",
      "Graphics.UI.GLUT",
      "System.Exit",
      "System.Mem",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Graphics.Gloss",
      "Graphics.Gloss.Data.Bitmap",
      "Graphics.Gloss.Data.Color",
      "Graphics.Gloss.Data.Controller",
      "Graphics.Gloss.Data.Display",
      "Graphics.Gloss.Data.Picture",
      "Graphics.Gloss.Data.Point",
      "Graphics.Gloss.Data.Vector",
      "Graphics.Gloss.Data.ViewPort",
      "Graphics.Gloss.Data.ViewState",
      "Graphics.Gloss.Geometry.Angle",
      "Graphics.Gloss.Geometry.Line",
      "Graphics.Gloss.Interface.Pure.Display",
      "Graphics.Gloss.Interface.Pure.Animate",
      "Graphics.Gloss.Interface.Pure.Simulate",
      "Graphics.Gloss.Interface.Pure.Game",
      "Graphics.Gloss.Interface.IO.Animate",
      "Graphics.Gloss.Interface.IO.Display",
      "Graphics.Gloss.Interface.IO.Simulate",
      "Graphics.Gloss.Interface.IO.Game"
    ],
    "name": "gloss",
    "version": "1.10.2.3"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Maybe",
      "Data.Monoid",
      "Test.QuickCheck",
      "Test.QuickCheck.Simple"
    ],
    "modules": [
      "Test.QuickCheck.Simple"
    ],
    "name": "quickcheck-simple",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Void",
        "System.Environment",
        "System.Exit"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "contravariant": [
        "Data.Functor.Contravariant",
        "Data.Functor.Contravariant.Divisible"
      ],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple",
        "Database.PostgreSQL.Simple.Arrays",
        "Database.PostgreSQL.Simple.FromRow",
        "Database.PostgreSQL.Simple.TypeInfo"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ],
      "product-profunctors": [
        "Data.Profunctor.Product",
        "Data.Profunctor.Product.Default"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "uuid": [
        "Data.UUID"
      ],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Monad.Trans.State",
      "Data.Aeson",
      "Database.PostgreSQL.Simple",
      "Database.PostgreSQL.Simple.Arrays",
      "Database.PostgreSQL.Simple.FromRow",
      "Database.PostgreSQL.Simple.TypeInfo",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Foldable",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Divisible",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.MultiSet",
      "Data.Ord",
      "Data.Profunctor",
      "Data.Profunctor.Product",
      "Data.Profunctor.Product.Default",
      "Data.Semigroup",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Locale.Compat",
      "Data.Traversable",
      "Data.UUID",
      "Data.Void",
      "DefaultExplanation",
      "Opaleye",
      "Opaleye.Aggregate",
      "Opaleye.Binary",
      "Opaleye.Column",
      "Opaleye.Constant",
      "Opaleye.Distinct",
      "Opaleye.Internal.Aggregate",
      "Opaleye.Internal.Binary",
      "Opaleye.Internal.Column",
      "Opaleye.Internal.HaskellDB.PrimQuery",
      "Opaleye.Internal.HaskellDB.Sql",
      "Opaleye.Internal.HaskellDB.Sql.Default",
      "Opaleye.Internal.HaskellDB.Sql.Generate",
      "Opaleye.Internal.HaskellDB.Sql.Print",
      "Opaleye.Internal.Join",
      "Opaleye.Internal.Label",
      "Opaleye.Internal.Operators",
      "Opaleye.Internal.Optimize",
      "Opaleye.Internal.Order",
      "Opaleye.Internal.PackMap",
      "Opaleye.Internal.PGTypes",
      "Opaleye.Internal.PrimQuery",
      "Opaleye.Internal.Print",
      "Opaleye.Internal.QueryArr",
      "Opaleye.Internal.RunQuery",
      "Opaleye.Internal.Sql",
      "Opaleye.Internal.Table",
      "Opaleye.Internal.TableMaker",
      "Opaleye.Internal.Tag",
      "Opaleye.Internal.Unpackspec",
      "Opaleye.Join",
      "Opaleye.Label",
      "Opaleye.Manipulation",
      "Opaleye.Operators",
      "Opaleye.Order",
      "Opaleye.PGTypes",
      "Opaleye.QueryArr",
      "Opaleye.RunQuery",
      "Opaleye.Sql",
      "Opaleye.Table",
      "Opaleye.Values",
      "QuickCheck",
      "System.Environment",
      "System.Exit",
      "Test.QuickCheck",
      "Text.PrettyPrint.HughesPJ",
      "TutorialAdvanced",
      "TutorialBasic",
      "TutorialBasicMonomorphic",
      "TutorialBasicTypeFamilies",
      "TutorialManipulation"
    ],
    "modules": [
      "Opaleye",
      "Opaleye.Aggregate",
      "Opaleye.Binary",
      "Opaleye.Column",
      "Opaleye.Constant",
      "Opaleye.Distinct",
      "Opaleye.Join",
      "Opaleye.Label",
      "Opaleye.Manipulation",
      "Opaleye.Operators",
      "Opaleye.Order",
      "Opaleye.PGTypes",
      "Opaleye.QueryArr",
      "Opaleye.RunQuery",
      "Opaleye.Sql",
      "Opaleye.Table",
      "Opaleye.Values",
      "Opaleye.Internal.Aggregate",
      "Opaleye.Internal.Binary",
      "Opaleye.Internal.Column",
      "Opaleye.Internal.Distinct",
      "Opaleye.Internal.Helpers",
      "Opaleye.Internal.Join",
      "Opaleye.Internal.Label",
      "Opaleye.Internal.Order",
      "Opaleye.Internal.Operators",
      "Opaleye.Internal.Optimize",
      "Opaleye.Internal.PackMap",
      "Opaleye.Internal.PGTypes",
      "Opaleye.Internal.PrimQuery",
      "Opaleye.Internal.Print",
      "Opaleye.Internal.QueryArr",
      "Opaleye.Internal.RunQuery",
      "Opaleye.Internal.Sql",
      "Opaleye.Internal.Table",
      "Opaleye.Internal.TableMaker",
      "Opaleye.Internal.Tag",
      "Opaleye.Internal.Unpackspec",
      "Opaleye.Internal.Values",
      "Opaleye.Internal.HaskellDB.PrimQuery",
      "Opaleye.Internal.HaskellDB.Sql",
      "Opaleye.Internal.HaskellDB.Sql.Default",
      "Opaleye.Internal.HaskellDB.Sql.Generate",
      "Opaleye.Internal.HaskellDB.Sql.Print"
    ],
    "name": "opaleye",
    "version": "0.5.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "deepseq": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.Geolocation.GeoIP"
    ],
    "name": "hs-GeoIP",
    "version": "0.3"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.Generics",
        "Prelude"
      ],
      "distributive": [
        "Data.Distributive"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Data.Data",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Function",
      "Data.Monoid",
      "Data.Traversable",
      "GHC.Generics",
      "Numeric.Interval.Exception",
      "Numeric.Interval.Internal",
      "Numeric.Interval.NonEmpty.Internal",
      "Prelude"
    ],
    "modules": [
      "Numeric.Interval",
      "Numeric.Interval.Exception",
      "Numeric.Interval.Internal",
      "Numeric.Interval.Kaucher",
      "Numeric.Interval.NonEmpty",
      "Numeric.Interval.NonEmpty.Internal"
    ],
    "name": "intervals",
    "version": "0.7.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Dynamic",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Typeable.Internal"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Binary",
      "Data.ByteString.Lazy",
      "Data.ConcreteTypeRep",
      "Data.Dynamic",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.Monoid",
      "Data.Typeable",
      "Data.Typeable.Internal"
    ],
    "modules": [
      "Data.ConcreteTypeRep",
      "Data.DynamicState",
      "Data.DynamicState.Serializable"
    ],
    "name": "dynamic-state",
    "version": "0.2.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Foldable",
        "Prelude"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Internal"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State.Strict",
        "Data.Functor.Constant"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State.Strict",
      "Data.Foldable",
      "Data.Functor.Constant",
      "Pipes",
      "Pipes.Internal",
      "Pipes.Parse",
      "Prelude"
    ],
    "modules": [
      "Pipes.Parse",
      "Pipes.Parse.Tutorial"
    ],
    "name": "pipes-parse",
    "version": "3.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.IORef",
        "Data.Maybe"
      ],
      "ghc": []
    },
    "imports": [
      "BasicTypes",
      "Coercion",
      "Control.Monad",
      "Data.IORef",
      "Data.Maybe",
      "FastString",
      "Module",
      "Name",
      "OccName",
      "Outputable",
      "Panic",
      "StaticFlags",
      "TcEvidence",
      "TcMType",
      "TcPluginM",
      "TcRnTypes",
      "TyCoRep",
      "Type",
      "Var"
    ],
    "modules": [
      "GHC.TcPluginM.Extra"
    ],
    "name": "ghc-tcplugins-extra",
    "version": "0.2"
  },
  {
    "dependencies": {
      "Chart": [
        "Graphics.Rendering.Chart.Backend",
        "Graphics.Rendering.Chart.Backend.Impl",
        "Graphics.Rendering.Chart.Backend.Types",
        "Graphics.Rendering.Chart.Drawing",
        "Graphics.Rendering.Chart.Geometry",
        "Graphics.Rendering.Chart.Renderable",
        "Graphics.Rendering.Chart.SparkLine",
        "Graphics.Rendering.Chart.State"
      ],
      "array": [],
      "base": [
        "Data.List",
        "Data.Monoid"
      ],
      "cairo": [
        "Graphics.Rendering.Cairo",
        "Graphics.Rendering.Cairo.Matrix"
      ],
      "colour": [
        "Data.Colour",
        "Data.Colour.Names",
        "Data.Colour.SRGB"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "old-locale": [],
      "operational": [
        "Control.Monad.Operational"
      ],
      "time": []
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Operational",
      "Control.Monad.Reader",
      "Data.Colour",
      "Data.Colour.Names",
      "Data.Colour.SRGB",
      "Data.Default.Class",
      "Data.List",
      "Data.Monoid",
      "Graphics.Rendering.Cairo",
      "Graphics.Rendering.Cairo.Matrix",
      "Graphics.Rendering.Chart.Backend",
      "Graphics.Rendering.Chart.Backend.Impl",
      "Graphics.Rendering.Chart.Backend.Types",
      "Graphics.Rendering.Chart.Drawing",
      "Graphics.Rendering.Chart.Geometry",
      "Graphics.Rendering.Chart.Renderable",
      "Graphics.Rendering.Chart.SparkLine",
      "Graphics.Rendering.Chart.State"
    ],
    "modules": [
      "Graphics.Rendering.Chart.Backend.Cairo"
    ],
    "name": "Chart-cairo",
    "version": "1.8"
  },
  {
    "dependencies": {
      "Spock-core": [
        "Web.Spock.Action",
        "Web.Spock.Core",
        "Web.Spock.Internal.Cookies",
        "Web.Spock.Internal.Util"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Word",
        "Prelude"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [],
      "cryptonite": [
        "Crypto.Random"
      ],
      "focus": [
        "Focus"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "http-types": [
        "Network.HTTP.Types.Status"
      ],
      "hvect": [
        "Data.HVect"
      ],
      "list-t": [
        "ListT"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.Trans"
      ],
      "reroute": [],
      "resource-pool": [
        "Data.Pool"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "stm-containers": [
        "STMContainers.Map"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock"
      ],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vault": [
        "Data.Vault.Lazy"
      ],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Crypto.Random",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Lazy",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.HVect",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.Pool",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Traversable",
      "Data.Vault.Lazy",
      "Data.Word",
      "Focus",
      "ListT",
      "Network.HTTP.Types.Status",
      "Network.Wai",
      "Network.Wai.Test",
      "Prelude",
      "STMContainers.Map",
      "Test.Hspec",
      "Test.Hspec.Wai",
      "Test.Hspec.Wai.Internal",
      "Web.Spock",
      "Web.Spock.Action",
      "Web.Spock.Config",
      "Web.Spock.Core",
      "Web.Spock.Internal.Cookies",
      "Web.Spock.Internal.Monad",
      "Web.Spock.Internal.SessionManager",
      "Web.Spock.Internal.SessionVault",
      "Web.Spock.Internal.Types",
      "Web.Spock.Internal.Util",
      "Web.Spock.SessionActions",
      "Web.Spock.TestUtils"
    ],
    "modules": [
      "Web.Spock",
      "Web.Spock.Config",
      "Web.Spock.SessionActions",
      "Web.Spock.Internal.SessionVault",
      "Web.Spock.Internal.SessionManager"
    ],
    "name": "Spock",
    "version": "0.11.0.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "haskell-src-exts": [],
      "haskell-src-meta": [
        "Language.Haskell.Meta.Parse"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer"
      ],
      "parseargs": [
        "System.Console.ParseArgs"
      ],
      "parsec": [
        "Text.Parsec.Prim",
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Error",
        "Text.ParserCombinators.Parsec.Expr",
        "Text.ParserCombinators.Parsec.Language",
        "Text.ParserCombinators.Parsec.Token"
      ],
      "regex-posix": [
        "Text.Regex.Posix.String"
      ],
      "safe": [
        "Safe"
      ],
      "syb": [
        "Data.Generics"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "wl-pprint-text": [
        "Text.PrettyPrint.Leijen.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Generics",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Traversable",
      "Data.Vector",
      "Language.Haskell.Meta.Parse",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Javascript.JMacro",
      "Language.Javascript.JMacro.Base",
      "Language.Javascript.JMacro.ParseTH",
      "Language.Javascript.JMacro.Prelude",
      "Language.Javascript.JMacro.QQ",
      "Language.Javascript.JMacro.Types",
      "Numeric",
      "Prelude",
      "Safe",
      "System.Console.ParseArgs",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "Text.Parsec.Prim",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Error",
      "Text.ParserCombinators.Parsec.Expr",
      "Text.ParserCombinators.Parsec.Language",
      "Text.ParserCombinators.Parsec.Token",
      "Text.PrettyPrint.Leijen.Text",
      "Text.Regex.Posix.String"
    ],
    "modules": [
      "Language.Javascript.JMacro",
      "Language.Javascript.JMacro.Util",
      "Language.Javascript.JMacro.TypeCheck",
      "Language.Javascript.JMacro.Types",
      "Language.Javascript.JMacro.Prelude"
    ],
    "name": "jmacro",
    "version": "0.6.14"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.MachineLearning",
      "Test.AWS.Fixture",
      "Test.AWS.MachineLearning",
      "Test.AWS.MachineLearning.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.MachineLearning",
      "Network.AWS.MachineLearning.CreateBatchPrediction",
      "Network.AWS.MachineLearning.CreateDataSourceFromRDS",
      "Network.AWS.MachineLearning.CreateDataSourceFromRedshift",
      "Network.AWS.MachineLearning.CreateDataSourceFromS3",
      "Network.AWS.MachineLearning.CreateEvaluation",
      "Network.AWS.MachineLearning.CreateMLModel",
      "Network.AWS.MachineLearning.CreateRealtimeEndpoint",
      "Network.AWS.MachineLearning.DeleteBatchPrediction",
      "Network.AWS.MachineLearning.DeleteDataSource",
      "Network.AWS.MachineLearning.DeleteEvaluation",
      "Network.AWS.MachineLearning.DeleteMLModel",
      "Network.AWS.MachineLearning.DeleteRealtimeEndpoint",
      "Network.AWS.MachineLearning.DescribeBatchPredictions",
      "Network.AWS.MachineLearning.DescribeDataSources",
      "Network.AWS.MachineLearning.DescribeEvaluations",
      "Network.AWS.MachineLearning.DescribeMLModels",
      "Network.AWS.MachineLearning.GetBatchPrediction",
      "Network.AWS.MachineLearning.GetDataSource",
      "Network.AWS.MachineLearning.GetEvaluation",
      "Network.AWS.MachineLearning.GetMLModel",
      "Network.AWS.MachineLearning.Predict",
      "Network.AWS.MachineLearning.Types",
      "Network.AWS.MachineLearning.UpdateBatchPrediction",
      "Network.AWS.MachineLearning.UpdateDataSource",
      "Network.AWS.MachineLearning.UpdateEvaluation",
      "Network.AWS.MachineLearning.UpdateMLModel",
      "Network.AWS.MachineLearning.Waiters"
    ],
    "name": "amazonka-ml",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor",
        "Data.Functor.Classes",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Sum",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Foreign.C.Error",
        "GHC.IO.Exception",
        "Prelude",
        "System.IO",
        "Text.Read"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "ghc-prim": [
        "GHC.Magic"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Class"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Morph",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Writer.Class",
      "Data.Bifunctor",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Sum",
      "Data.Monoid",
      "Data.String",
      "Data.Time",
      "Data.Traversable",
      "Foreign.C.Error",
      "GHC.IO.Exception",
      "GHC.Magic",
      "Prelude",
      "Streaming",
      "Streaming.Internal",
      "Streaming.Prelude",
      "System.IO",
      "Text.Read"
    ],
    "modules": [
      "Streaming",
      "Streaming.Prelude",
      "Streaming.Internal"
    ],
    "name": "streaming",
    "version": "0.1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Text"
    ],
    "modules": [
      "Data.Readable"
    ],
    "name": "readable",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "HDBC": [
        "Database.HDBC"
      ],
      "base": [
        "Control.Applicative"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "convertible": [
        "Data.Convertible"
      ],
      "persistable-record": [
        "Database.Record.FromSql",
        "Database.Record.Persistable",
        "Database.Record.ToSql"
      ],
      "relational-query-HDBC": [
        "Database.HDBC.Query.TH",
        "Database.HDBC.Record.Persistable",
        "Database.HDBC.Schema.Driver",
        "Database.HDBC.Schema.PostgreSQL"
      ],
      "text-postgresql": [
        "Database.PostgreSQL.Parser",
        "Database.PostgreSQL.Printer",
        "Data.PostgreSQL.NetworkAddress"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Database.HDBC",
      "Database.HDBC.PostgreSQL",
      "Database.HDBC.PostgreSQL.Instances",
      "Database.HDBC.PostgreSQL.Persistable",
      "Database.HDBC.Query.TH",
      "Database.HDBC.Record.Persistable",
      "Database.HDBC.Schema.Driver",
      "Database.HDBC.Schema.PostgreSQL",
      "Database.PostgreSQL.Parser",
      "Database.PostgreSQL.Printer",
      "Database.Record.FromSql",
      "Database.Record.Persistable",
      "Database.Record.ToSql",
      "Data.ByteString.Char8",
      "Data.Convertible",
      "Data.PostgreSQL.NetworkAddress",
      "DS",
      "Language.Haskell.TH"
    ],
    "modules": [
      "Database.HDBC.PostgreSQL.Instances",
      "Database.HDBC.PostgreSQL.Persistable"
    ],
    "name": "persistable-types-HDBC-pg",
    "version": "0.0.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid",
        "GHC.Exts"
      ]
    },
    "imports": [
      "Control.Monad.Writer",
      "Criterion.Main",
      "Data.DoList",
      "Data.DoMonoid",
      "Data.Monoid",
      "Data.Text",
      "GHC.Exts",
      "Test.Hspec"
    ],
    "modules": [
      "Data.DoList",
      "Data.DoMonoid"
    ],
    "name": "do-list",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "Foreign.C",
        "Foreign.C.String",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cairo": [
        "Graphics.Rendering.Cairo"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "dbus": [
        "DBus"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "gio": [
        "System.GIO.File.File"
      ],
      "glib": [
        "System.Glib.GError",
        "System.Glib.GObject",
        "System.Glib.Properties",
        "System.Glib.Signals"
      ],
      "gtk3": [
        "Graphics.UI.Gtk",
        "Graphics.UI.Gtk.Cairo"
      ],
      "hgettext": [
        "Text.I18N.GetText"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "pango": [
        "Graphics.Rendering.Pango.BasicTypes",
        "Graphics.Rendering.Pango.Font",
        "Graphics.Rendering.Pango.Layout",
        "Graphics.Rendering.Pango.Markup"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "pcap": [
        "Network.Pcap"
      ],
      "process": [
        "System.Process"
      ],
      "setlocale": [
        "System.Locale.SetLocale"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Bustle.Application.Monad",
      "Bustle.Diagram",
      "Bustle.Loader",
      "Bustle.Loader.OldSkool",
      "Bustle.Loader.Pcap",
      "Bustle.Marquee",
      "Bustle.Monitor",
      "Bustle.Noninteractive",
      "Bustle.Regions",
      "Bustle.Renderer",
      "Bustle.StatisticsPane",
      "Bustle.Stats",
      "Bustle.Translation",
      "Bustle.Types",
      "Bustle.UI",
      "Bustle.UI.AboutDialog",
      "Bustle.UI.Canvas",
      "Bustle.UI.DetailsView",
      "Bustle.UI.FilterDialog",
      "Bustle.UI.OpenTwoDialog",
      "Bustle.UI.Recorder",
      "Bustle.UI.Util",
      "Bustle.Upgrade",
      "Bustle.Util",
      "Bustle.VariantFormatter",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.ByteString",
      "Data.Char",
      "Data.Either",
      "Data.Function",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.Text",
      "Data.Time",
      "Data.Version",
      "Data.Word",
      "DBus",
      "Debug.Trace",
      "Distribution.PackageDescription",
      "Distribution.Simple",
      "Distribution.Simple.Configure",
      "Distribution.Simple.InstallDirs",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.Setup",
      "Distribution.Simple.Utils",
      "Foreign.C",
      "Foreign.C.String",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "GetText",
      "Graphics.Rendering.Cairo",
      "Graphics.Rendering.Pango.BasicTypes",
      "Graphics.Rendering.Pango.Font",
      "Graphics.Rendering.Pango.Layout",
      "Graphics.Rendering.Pango.Markup",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.Cairo",
      "Language.Haskell.Extension",
      "Network.Pcap",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.GIO.File.File",
      "System.Glib.GError",
      "System.Glib.GObject",
      "System.Glib.Properties",
      "System.Glib.Signals",
      "System.IO",
      "System.IO.Unsafe",
      "System.Locale.SetLocale",
      "System.Process",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.All",
      "Text.I18N.GetText",
      "Text.ParserCombinators.Parsec",
      "Text.Printf"
    ],
    "modules": [],
    "name": "bustle",
    "version": "0.5.4"
  },
  {
    "dependencies": {
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Writer"
      ],
      "pandoc-types": [
        "Text.Pandoc.Definition"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Error",
        "Text.Parsec.String",
        "Text.ParserCombinators.Parsec"
      ],
      "xml": [
        "Text.XML.Light"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.Writer",
      "Data.Aeson",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Either",
      "Data.Generics",
      "Data.IntMap",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ratio",
      "Data.Text",
      "Data.Text.IO",
      "Data.Version",
      "Debug.Trace",
      "Foreign.C",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.IO.Encoding",
      "Network.URI",
      "Numeric",
      "Paths",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Process",
      "Text.Pandoc.Definition",
      "Text.Parsec",
      "Text.Parsec.Error",
      "Text.Parsec.String",
      "Text.ParserCombinators.Parsec",
      "Text.Printf",
      "Text.TeXMath",
      "Text.TeXMath.Compat",
      "Text.TeXMath.Readers.MathML",
      "Text.TeXMath.Readers.MathML.EntityMap",
      "Text.TeXMath.Readers.MathML.MMLDict",
      "Text.TeXMath.Readers.OMML",
      "Text.TeXMath.Readers.TeX",
      "Text.TeXMath.Readers.TeX.Macros",
      "Text.TeXMath.Shared",
      "Text.TeXMath.TeX",
      "Text.TeXMath.Types",
      "Text.TeXMath.Unicode.ToASCII",
      "Text.TeXMath.Unicode.ToTeX",
      "Text.TeXMath.Unicode.ToUnicode",
      "Text.TeXMath.Writers.MathML",
      "Text.TeXMath.Writers.OMML",
      "Text.TeXMath.Writers.Pandoc",
      "Text.TeXMath.Writers.TeX",
      "Text.XML.Light"
    ],
    "modules": [
      "Text.TeXMath",
      "Text.TeXMath.Types",
      "Text.TeXMath.Readers.TeX",
      "Text.TeXMath.Readers.TeX.Macros",
      "Text.TeXMath.Readers.MathML",
      "Text.TeXMath.Readers.MathML.MMLDict",
      "Text.TeXMath.Readers.MathML.EntityMap",
      "Text.TeXMath.Readers.OMML",
      "Text.TeXMath.Writers.MathML",
      "Text.TeXMath.Writers.OMML",
      "Text.TeXMath.Writers.Pandoc",
      "Text.TeXMath.Writers.TeX",
      "Text.TeXMath.Unicode.ToUnicode",
      "Text.TeXMath.Unicode.ToTeX",
      "Text.TeXMath.Unicode.ToASCII"
    ],
    "name": "texmath",
    "version": "0.8.6.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "System.IO.Unsafe"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "crypto-cipher-types": [
        "Crypto.Cipher.Types"
      ],
      "securemem": [
        "Data.SecureMem"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Crypto.Cipher.AES",
      "Crypto.Cipher.Benchmarks",
      "Crypto.Cipher.Tests",
      "Crypto.Cipher.Types",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.SecureMem",
      "Data.Word",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "KATCBC",
      "KATECB",
      "KATGCM",
      "KATOCB3",
      "KATXTS",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Test"
    ],
    "modules": [
      "Crypto.Cipher.AES"
    ],
    "name": "cipher-aes",
    "version": "0.2.11"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Word"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Unsafe"
      ],
      "crypto-cipher-types": [
        "Crypto.Cipher.Types"
      ],
      "securemem": [],
      "vector": [
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Crypto.Cipher.Benchmarks",
      "Crypto.Cipher.Camellia",
      "Crypto.Cipher.Camellia.Primitive",
      "Crypto.Cipher.Tests",
      "Crypto.Cipher.Types",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Unsafe",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Test"
    ],
    "modules": [
      "Crypto.Cipher.Camellia"
    ],
    "name": "cipher-camellia",
    "version": "0.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Foreign.C.Types",
        "GHC.Exception",
        "GHC.Exts",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec",
        "Text.Printf",
        "Text.Read"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ],
      "cabal-helper": [
        "Distribution.Helper"
      ],
      "containers": [
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "djinn-ghc": [
        "Djinn.GHC"
      ],
      "extra": [
        "System.Info.Extra"
      ],
      "fclabels": [
        "Data.Label",
        "Data.Label.Base",
        "Data.Label.Derive"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc": [],
      "ghc-mod": [],
      "ghc-paths": [
        "GHC.Paths"
      ],
      "ghc-syb-utils": [
        "GHC.SYB.Utils"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Annotated",
        "Language.Haskell.Exts.SrcLoc"
      ],
      "hlint": [
        "Language.Haskell.HLint3"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-journal": [
        "Control.Monad.Journal.Class",
        "Control.Monad.Trans.Journal"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.State.Strict"
      ],
      "old-time": [
        "System.Time"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Builder.Internal",
        "Options.Applicative.Help.Pretty",
        "Options.Applicative.Types"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Lift"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "process": [
        "System.Process"
      ],
      "safe": [
        "Safe"
      ],
      "split": [
        "Data.List.Split"
      ],
      "syb": [
        "Data.Generics",
        "Data.Generics.Aliases",
        "Data.Generics.Schemes"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.State"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "A",
      "A1",
      "A2",
      "A3",
      "B",
      "Bag",
      "Bar",
      "Bar.Baz",
      "C",
      "Class",
      "CoAxiom",
      "Config",
      "ConLike",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Error",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Journal.Class",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Journal",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.State",
      "CoreSyn",
      "CoreUtils",
      "Data.Binary",
      "Data.Binary.Generic",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.Char",
      "DataCon",
      "Data.Convertible",
      "Data.Either",
      "Data.Foldable",
      "Data.Foo",
      "Data.Function",
      "Data.Functor",
      "Data.Generics",
      "Data.Generics.Aliases",
      "Data.Generics.Schemes",
      "Data.IntSet",
      "Data.IORef",
      "Data.Label",
      "Data.Label.Base",
      "Data.Label.Derive",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Desugar",
      "Dir",
      "Distribution.Helper",
      "Distribution.PackageDescription",
      "Distribution.Simple",
      "Distribution.Simple.Install",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.Setup",
      "Djinn.GHC",
      "DriverPipeline",
      "DynFlags",
      "ErrUtils",
      "Exception",
      "FamInstEnv",
      "FastString",
      "Finder",
      "Foo",
      "FooQ",
      "Foreign.C.Types",
      "GHC",
      "GHC.Exception",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.LanguageExtensions",
      "GHCMod.Options",
      "GHCMod.Options.Commands",
      "GHCMod.Options.ShellParse",
      "GHCMod.Version",
      "GhcMonad",
      "GHC.Paths",
      "GHC.SYB.Utils",
      "HsBinds",
      "HscMain",
      "HscTypes",
      "HsPat",
      "InstEnv",
      "Language.Haskell.Exts.Annotated",
      "Language.Haskell.Exts.SrcLoc",
      "Language.Haskell.GhcMod",
      "Language.Haskell.GhcMod.Boot",
      "Language.Haskell.GhcMod.Browse",
      "Language.Haskell.GhcMod.CabalHelper",
      "Language.Haskell.GhcMod.Caching",
      "Language.Haskell.GhcMod.Caching.Types",
      "Language.Haskell.GhcMod.CaseSplit",
      "Language.Haskell.GhcMod.Check",
      "Language.Haskell.GhcMod.Convert",
      "Language.Haskell.GhcMod.Cradle",
      "Language.Haskell.GhcMod.CustomPackageDb",
      "Language.Haskell.GhcMod.Debug",
      "Language.Haskell.GhcMod.DebugLogger",
      "Language.Haskell.GhcMod.Doc",
      "Language.Haskell.GhcMod.DynFlags",
      "Language.Haskell.GhcMod.DynFlagsTH",
      "Language.Haskell.GhcMod.Error",
      "Language.Haskell.GhcMod.FileMapping",
      "Language.Haskell.GhcMod.FillSig",
      "Language.Haskell.GhcMod.Find",
      "Language.Haskell.GhcMod.Flag",
      "Language.Haskell.GhcMod.Gap",
      "Language.Haskell.GhcMod.GhcPkg",
      "Language.Haskell.GhcMod.HomeModuleGraph",
      "Language.Haskell.GhcMod.Info",
      "Language.Haskell.GhcMod.Internal",
      "Language.Haskell.GhcMod.Lang",
      "Language.Haskell.GhcMod.LightGhc",
      "Language.Haskell.GhcMod.Lint",
      "Language.Haskell.GhcMod.Logger",
      "Language.Haskell.GhcMod.Logging",
      "Language.Haskell.GhcMod.Modules",
      "Language.Haskell.GhcMod.Monad",
      "Language.Haskell.GhcMod.Monad.Env",
      "Language.Haskell.GhcMod.Monad.Log",
      "Language.Haskell.GhcMod.Monad.Newtypes",
      "Language.Haskell.GhcMod.Monad.Orphans",
      "Language.Haskell.GhcMod.Monad.Out",
      "Language.Haskell.GhcMod.Monad.State",
      "Language.Haskell.GhcMod.Monad.Types",
      "Language.Haskell.GhcMod.Options.DocUtils",
      "Language.Haskell.GhcMod.Options.Help",
      "Language.Haskell.GhcMod.Options.Options",
      "Language.Haskell.GhcMod.Output",
      "Language.Haskell.GhcMod.PathsAndFiles",
      "Language.Haskell.GhcMod.PkgDoc",
      "Language.Haskell.GhcMod.Pretty",
      "Language.Haskell.GhcMod.Read",
      "Language.Haskell.GhcMod.SrcUtils",
      "Language.Haskell.GhcMod.Stack",
      "Language.Haskell.GhcMod.Target",
      "Language.Haskell.GhcMod.Test",
      "Language.Haskell.GhcMod.Types",
      "Language.Haskell.GhcMod.Utils",
      "Language.Haskell.GhcMod.World",
      "Language.Haskell.HLint3",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Lexer",
      "Lib",
      "Module",
      "MonadUtils",
      "Mutual1",
      "Mutual2",
      "Name",
      "NameSet",
      "NotCPP.Declarations",
      "NotCPP.LookupValueName",
      "NotCPP.ScopeLookup",
      "NotCPP.Utils",
      "OccName",
      "Options.Applicative",
      "Options.Applicative.Builder.Internal",
      "Options.Applicative.Help.Pretty",
      "Options.Applicative.Types",
      "Outputable",
      "Packages",
      "Panic",
      "Parser",
      "Paths",
      "PatSyn",
      "Pipes",
      "Pipes.Lift",
      "PprTyThing",
      "Prelude",
      "Preprocessed",
      "Pretty",
      "RdrName",
      "Safe",
      "Spec",
      "SrcLoc",
      "StaticFlags",
      "StringBuffer",
      "System.Directory",
      "System.Directory.ModTime",
      "System.Environment",
      "System.Environment.Executable",
      "System.Exit",
      "System.FilePath",
      "System.Info.Extra",
      "System.IO",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Process",
      "System.Time",
      "SysTools",
      "TcHsSyn",
      "TcRnTypes",
      "TcType",
      "Test.DocTest",
      "Test.Hspec",
      "TestUtils",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.PrettyPrint",
      "Text.Printf",
      "Text.Read",
      "TyCon",
      "Type",
      "UniqFM",
      "Utils",
      "Var"
    ],
    "modules": [
      "Language.Haskell.GhcMod",
      "Language.Haskell.GhcMod.Internal",
      "Language.Haskell.GhcMod.Boot",
      "Language.Haskell.GhcMod.Browse",
      "Language.Haskell.GhcMod.CabalHelper",
      "Language.Haskell.GhcMod.Caching",
      "Language.Haskell.GhcMod.Caching.Types",
      "Language.Haskell.GhcMod.CaseSplit",
      "Language.Haskell.GhcMod.Check",
      "Language.Haskell.GhcMod.Convert",
      "Language.Haskell.GhcMod.Cradle",
      "Language.Haskell.GhcMod.CustomPackageDb",
      "Language.Haskell.GhcMod.Debug",
      "Language.Haskell.GhcMod.DebugLogger",
      "Language.Haskell.GhcMod.Doc",
      "Language.Haskell.GhcMod.DynFlags",
      "Language.Haskell.GhcMod.DynFlagsTH",
      "Language.Haskell.GhcMod.Error",
      "Language.Haskell.GhcMod.FileMapping",
      "Language.Haskell.GhcMod.FillSig",
      "Language.Haskell.GhcMod.Find",
      "Language.Haskell.GhcMod.Flag",
      "Language.Haskell.GhcMod.Gap",
      "Language.Haskell.GhcMod.GhcPkg",
      "Language.Haskell.GhcMod.HomeModuleGraph",
      "Language.Haskell.GhcMod.Info",
      "Language.Haskell.GhcMod.Lang",
      "Language.Haskell.GhcMod.Lint",
      "Language.Haskell.GhcMod.LightGhc",
      "Language.Haskell.GhcMod.Logger",
      "Language.Haskell.GhcMod.Logging",
      "Language.Haskell.GhcMod.Modules",
      "Language.Haskell.GhcMod.Monad",
      "Language.Haskell.GhcMod.Monad.Env",
      "Language.Haskell.GhcMod.Monad.Log",
      "Language.Haskell.GhcMod.Monad.Newtypes",
      "Language.Haskell.GhcMod.Monad.Orphans",
      "Language.Haskell.GhcMod.Monad.Out",
      "Language.Haskell.GhcMod.Monad.State",
      "Language.Haskell.GhcMod.Monad.Types",
      "Language.Haskell.GhcMod.Output",
      "Language.Haskell.GhcMod.PathsAndFiles",
      "Language.Haskell.GhcMod.PkgDoc",
      "Language.Haskell.GhcMod.Pretty",
      "Language.Haskell.GhcMod.Read",
      "Language.Haskell.GhcMod.SrcUtils",
      "Language.Haskell.GhcMod.Stack",
      "Language.Haskell.GhcMod.Target",
      "Language.Haskell.GhcMod.Test",
      "Language.Haskell.GhcMod.Types",
      "Language.Haskell.GhcMod.Utils",
      "Language.Haskell.GhcMod.World",
      "Language.Haskell.GhcMod.Options.Options",
      "Language.Haskell.GhcMod.Options.DocUtils",
      "Language.Haskell.GhcMod.Options.Help"
    ],
    "name": "ghc-mod",
    "version": "5.6.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.HashSet",
      "Text.XML.HXT.Core"
    ],
    "modules": [
      "Text.Html.IsLink"
    ],
    "name": "islink",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.Generics"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "semigroups": [],
      "tagged": [],
      "universe-base": [
        "Data.Universe.Class"
      ],
      "universe-reverse-instances": [
        "Data.Universe.Instances.Eq"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "void": []
    },
    "imports": [
      "Algebra.Lattice",
      "Algebra.Lattice.Dropped",
      "Algebra.Lattice.Levitated",
      "Algebra.Lattice.Lexicographic",
      "Algebra.Lattice.Lifted",
      "Algebra.Lattice.Op",
      "Algebra.Lattice.Ordered",
      "Algebra.PartialOrd",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Map",
      "Data.Monoid",
      "Data.Set",
      "Data.Traversable",
      "Data.Universe.Class",
      "Data.Universe.Instances.Eq",
      "GHC.Generics",
      "Test.QuickCheck.Function",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Algebra.Enumerable",
      "Algebra.Lattice",
      "Algebra.Lattice.Dropped",
      "Algebra.Lattice.Levitated",
      "Algebra.Lattice.Lexicographic",
      "Algebra.Lattice.Lifted",
      "Algebra.Lattice.Op",
      "Algebra.Lattice.Ordered",
      "Algebra.PartialOrd",
      "Algebra.PartialOrd.Instances"
    ],
    "name": "lattices",
    "version": "1.5.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.DFAReporting",
      "Network.Google.DFAReporting.Types",
      "Network.Google.Resource.DFAReporting.AccountActiveAdSummaries.Get",
      "Network.Google.Resource.DFAReporting.AccountPermissionGroups.Get",
      "Network.Google.Resource.DFAReporting.AccountPermissionGroups.List",
      "Network.Google.Resource.DFAReporting.AccountPermissions.Get",
      "Network.Google.Resource.DFAReporting.AccountPermissions.List",
      "Network.Google.Resource.DFAReporting.AccountUserProFiles.Get",
      "Network.Google.Resource.DFAReporting.AccountUserProFiles.Insert",
      "Network.Google.Resource.DFAReporting.AccountUserProFiles.List",
      "Network.Google.Resource.DFAReporting.AccountUserProFiles.Patch",
      "Network.Google.Resource.DFAReporting.AccountUserProFiles.Update",
      "Network.Google.Resource.DFAReporting.Accounts.Get",
      "Network.Google.Resource.DFAReporting.Accounts.List",
      "Network.Google.Resource.DFAReporting.Accounts.Patch",
      "Network.Google.Resource.DFAReporting.Accounts.Update",
      "Network.Google.Resource.DFAReporting.Ads.Get",
      "Network.Google.Resource.DFAReporting.Ads.Insert",
      "Network.Google.Resource.DFAReporting.Ads.List",
      "Network.Google.Resource.DFAReporting.Ads.Patch",
      "Network.Google.Resource.DFAReporting.Ads.Update",
      "Network.Google.Resource.DFAReporting.AdvertiserGroups.Delete",
      "Network.Google.Resource.DFAReporting.AdvertiserGroups.Get",
      "Network.Google.Resource.DFAReporting.AdvertiserGroups.Insert",
      "Network.Google.Resource.DFAReporting.AdvertiserGroups.List",
      "Network.Google.Resource.DFAReporting.AdvertiserGroups.Patch",
      "Network.Google.Resource.DFAReporting.AdvertiserGroups.Update",
      "Network.Google.Resource.DFAReporting.Advertisers.Get",
      "Network.Google.Resource.DFAReporting.Advertisers.Insert",
      "Network.Google.Resource.DFAReporting.Advertisers.List",
      "Network.Google.Resource.DFAReporting.Advertisers.Patch",
      "Network.Google.Resource.DFAReporting.Advertisers.Update",
      "Network.Google.Resource.DFAReporting.Browsers.List",
      "Network.Google.Resource.DFAReporting.CampaignCreativeAssociations.Insert",
      "Network.Google.Resource.DFAReporting.CampaignCreativeAssociations.List",
      "Network.Google.Resource.DFAReporting.Campaigns.Get",
      "Network.Google.Resource.DFAReporting.Campaigns.Insert",
      "Network.Google.Resource.DFAReporting.Campaigns.List",
      "Network.Google.Resource.DFAReporting.Campaigns.Patch",
      "Network.Google.Resource.DFAReporting.Campaigns.Update",
      "Network.Google.Resource.DFAReporting.ChangeLogs.Get",
      "Network.Google.Resource.DFAReporting.ChangeLogs.List",
      "Network.Google.Resource.DFAReporting.Cities.List",
      "Network.Google.Resource.DFAReporting.ConnectionTypes.Get",
      "Network.Google.Resource.DFAReporting.ConnectionTypes.List",
      "Network.Google.Resource.DFAReporting.ContentCategories.Delete",
      "Network.Google.Resource.DFAReporting.ContentCategories.Get",
      "Network.Google.Resource.DFAReporting.ContentCategories.Insert",
      "Network.Google.Resource.DFAReporting.ContentCategories.List",
      "Network.Google.Resource.DFAReporting.ContentCategories.Patch",
      "Network.Google.Resource.DFAReporting.ContentCategories.Update",
      "Network.Google.Resource.DFAReporting.Conversions.Batchinsert",
      "Network.Google.Resource.DFAReporting.Countries.Get",
      "Network.Google.Resource.DFAReporting.Countries.List",
      "Network.Google.Resource.DFAReporting.CreativeAssets.Insert",
      "Network.Google.Resource.DFAReporting.CreativeFieldValues.Delete",
      "Network.Google.Resource.DFAReporting.CreativeFieldValues.Get",
      "Network.Google.Resource.DFAReporting.CreativeFieldValues.Insert",
      "Network.Google.Resource.DFAReporting.CreativeFieldValues.List",
      "Network.Google.Resource.DFAReporting.CreativeFieldValues.Patch",
      "Network.Google.Resource.DFAReporting.CreativeFieldValues.Update",
      "Network.Google.Resource.DFAReporting.CreativeFields.Delete",
      "Network.Google.Resource.DFAReporting.CreativeFields.Get",
      "Network.Google.Resource.DFAReporting.CreativeFields.Insert",
      "Network.Google.Resource.DFAReporting.CreativeFields.List",
      "Network.Google.Resource.DFAReporting.CreativeFields.Patch",
      "Network.Google.Resource.DFAReporting.CreativeFields.Update",
      "Network.Google.Resource.DFAReporting.CreativeGroups.Get",
      "Network.Google.Resource.DFAReporting.CreativeGroups.Insert",
      "Network.Google.Resource.DFAReporting.CreativeGroups.List",
      "Network.Google.Resource.DFAReporting.CreativeGroups.Patch",
      "Network.Google.Resource.DFAReporting.CreativeGroups.Update",
      "Network.Google.Resource.DFAReporting.Creatives.Get",
      "Network.Google.Resource.DFAReporting.Creatives.Insert",
      "Network.Google.Resource.DFAReporting.Creatives.List",
      "Network.Google.Resource.DFAReporting.Creatives.Patch",
      "Network.Google.Resource.DFAReporting.Creatives.Update",
      "Network.Google.Resource.DFAReporting.DimensionValues.Query",
      "Network.Google.Resource.DFAReporting.DirectorySiteContacts.Get",
      "Network.Google.Resource.DFAReporting.DirectorySiteContacts.List",
      "Network.Google.Resource.DFAReporting.DirectorySites.Get",
      "Network.Google.Resource.DFAReporting.DirectorySites.Insert",
      "Network.Google.Resource.DFAReporting.DirectorySites.List",
      "Network.Google.Resource.DFAReporting.DynamicTargetingKeys.Delete",
      "Network.Google.Resource.DFAReporting.DynamicTargetingKeys.Insert",
      "Network.Google.Resource.DFAReporting.DynamicTargetingKeys.List",
      "Network.Google.Resource.DFAReporting.EventTags.Delete",
      "Network.Google.Resource.DFAReporting.EventTags.Get",
      "Network.Google.Resource.DFAReporting.EventTags.Insert",
      "Network.Google.Resource.DFAReporting.EventTags.List",
      "Network.Google.Resource.DFAReporting.EventTags.Patch",
      "Network.Google.Resource.DFAReporting.EventTags.Update",
      "Network.Google.Resource.DFAReporting.Files.Get",
      "Network.Google.Resource.DFAReporting.Files.List",
      "Network.Google.Resource.DFAReporting.FloodlightActivities.Delete",
      "Network.Google.Resource.DFAReporting.FloodlightActivities.Generatetag",
      "Network.Google.Resource.DFAReporting.FloodlightActivities.Get",
      "Network.Google.Resource.DFAReporting.FloodlightActivities.Insert",
      "Network.Google.Resource.DFAReporting.FloodlightActivities.List",
      "Network.Google.Resource.DFAReporting.FloodlightActivities.Patch",
      "Network.Google.Resource.DFAReporting.FloodlightActivities.Update",
      "Network.Google.Resource.DFAReporting.FloodlightActivityGroups.Get",
      "Network.Google.Resource.DFAReporting.FloodlightActivityGroups.Insert",
      "Network.Google.Resource.DFAReporting.FloodlightActivityGroups.List",
      "Network.Google.Resource.DFAReporting.FloodlightActivityGroups.Patch",
      "Network.Google.Resource.DFAReporting.FloodlightActivityGroups.Update",
      "Network.Google.Resource.DFAReporting.FloodlightConfigurations.Get",
      "Network.Google.Resource.DFAReporting.FloodlightConfigurations.List",
      "Network.Google.Resource.DFAReporting.FloodlightConfigurations.Patch",
      "Network.Google.Resource.DFAReporting.FloodlightConfigurations.Update",
      "Network.Google.Resource.DFAReporting.InventoryItems.Get",
      "Network.Google.Resource.DFAReporting.InventoryItems.List",
      "Network.Google.Resource.DFAReporting.LandingPages.Delete",
      "Network.Google.Resource.DFAReporting.LandingPages.Get",
      "Network.Google.Resource.DFAReporting.LandingPages.Insert",
      "Network.Google.Resource.DFAReporting.LandingPages.List",
      "Network.Google.Resource.DFAReporting.LandingPages.Patch",
      "Network.Google.Resource.DFAReporting.LandingPages.Update",
      "Network.Google.Resource.DFAReporting.Metros.List",
      "Network.Google.Resource.DFAReporting.MobileCarriers.Get",
      "Network.Google.Resource.DFAReporting.MobileCarriers.List",
      "Network.Google.Resource.DFAReporting.OperatingSystemVersions.Get",
      "Network.Google.Resource.DFAReporting.OperatingSystemVersions.List",
      "Network.Google.Resource.DFAReporting.OperatingSystems.Get",
      "Network.Google.Resource.DFAReporting.OperatingSystems.List",
      "Network.Google.Resource.DFAReporting.OrderDocuments.Get",
      "Network.Google.Resource.DFAReporting.OrderDocuments.List",
      "Network.Google.Resource.DFAReporting.Orders.Get",
      "Network.Google.Resource.DFAReporting.Orders.List",
      "Network.Google.Resource.DFAReporting.PlacementGroups.Get",
      "Network.Google.Resource.DFAReporting.PlacementGroups.Insert",
      "Network.Google.Resource.DFAReporting.PlacementGroups.List",
      "Network.Google.Resource.DFAReporting.PlacementGroups.Patch",
      "Network.Google.Resource.DFAReporting.PlacementGroups.Update",
      "Network.Google.Resource.DFAReporting.PlacementStrategies.Delete",
      "Network.Google.Resource.DFAReporting.PlacementStrategies.Get",
      "Network.Google.Resource.DFAReporting.PlacementStrategies.Insert",
      "Network.Google.Resource.DFAReporting.PlacementStrategies.List",
      "Network.Google.Resource.DFAReporting.PlacementStrategies.Patch",
      "Network.Google.Resource.DFAReporting.PlacementStrategies.Update",
      "Network.Google.Resource.DFAReporting.Placements.Generatetags",
      "Network.Google.Resource.DFAReporting.Placements.Get",
      "Network.Google.Resource.DFAReporting.Placements.Insert",
      "Network.Google.Resource.DFAReporting.Placements.List",
      "Network.Google.Resource.DFAReporting.Placements.Patch",
      "Network.Google.Resource.DFAReporting.Placements.Update",
      "Network.Google.Resource.DFAReporting.PlatformTypes.Get",
      "Network.Google.Resource.DFAReporting.PlatformTypes.List",
      "Network.Google.Resource.DFAReporting.PostalCodes.Get",
      "Network.Google.Resource.DFAReporting.PostalCodes.List",
      "Network.Google.Resource.DFAReporting.Projects.Get",
      "Network.Google.Resource.DFAReporting.Projects.List",
      "Network.Google.Resource.DFAReporting.Regions.List",
      "Network.Google.Resource.DFAReporting.RemarketingListShares.Get",
      "Network.Google.Resource.DFAReporting.RemarketingListShares.Patch",
      "Network.Google.Resource.DFAReporting.RemarketingListShares.Update",
      "Network.Google.Resource.DFAReporting.RemarketingLists.Get",
      "Network.Google.Resource.DFAReporting.RemarketingLists.Insert",
      "Network.Google.Resource.DFAReporting.RemarketingLists.List",
      "Network.Google.Resource.DFAReporting.RemarketingLists.Patch",
      "Network.Google.Resource.DFAReporting.RemarketingLists.Update",
      "Network.Google.Resource.DFAReporting.Reports.CompatibleFields.Query",
      "Network.Google.Resource.DFAReporting.Reports.Delete",
      "Network.Google.Resource.DFAReporting.Reports.Files.Get",
      "Network.Google.Resource.DFAReporting.Reports.Files.List",
      "Network.Google.Resource.DFAReporting.Reports.Get",
      "Network.Google.Resource.DFAReporting.Reports.Insert",
      "Network.Google.Resource.DFAReporting.Reports.List",
      "Network.Google.Resource.DFAReporting.Reports.Patch",
      "Network.Google.Resource.DFAReporting.Reports.Run",
      "Network.Google.Resource.DFAReporting.Reports.Update",
      "Network.Google.Resource.DFAReporting.Sites.Get",
      "Network.Google.Resource.DFAReporting.Sites.Insert",
      "Network.Google.Resource.DFAReporting.Sites.List",
      "Network.Google.Resource.DFAReporting.Sites.Patch",
      "Network.Google.Resource.DFAReporting.Sites.Update",
      "Network.Google.Resource.DFAReporting.Sizes.Get",
      "Network.Google.Resource.DFAReporting.Sizes.Insert",
      "Network.Google.Resource.DFAReporting.Sizes.List",
      "Network.Google.Resource.DFAReporting.SubAccounts.Get",
      "Network.Google.Resource.DFAReporting.SubAccounts.Insert",
      "Network.Google.Resource.DFAReporting.SubAccounts.List",
      "Network.Google.Resource.DFAReporting.SubAccounts.Patch",
      "Network.Google.Resource.DFAReporting.SubAccounts.Update",
      "Network.Google.Resource.DFAReporting.TargetableRemarketingLists.Get",
      "Network.Google.Resource.DFAReporting.TargetableRemarketingLists.List",
      "Network.Google.Resource.DFAReporting.UserProFiles.Get",
      "Network.Google.Resource.DFAReporting.UserProFiles.List",
      "Network.Google.Resource.DFAReporting.UserRolePermissionGroups.Get",
      "Network.Google.Resource.DFAReporting.UserRolePermissionGroups.List",
      "Network.Google.Resource.DFAReporting.UserRolePermissions.Get",
      "Network.Google.Resource.DFAReporting.UserRolePermissions.List",
      "Network.Google.Resource.DFAReporting.UserRoles.Delete",
      "Network.Google.Resource.DFAReporting.UserRoles.Get",
      "Network.Google.Resource.DFAReporting.UserRoles.Insert",
      "Network.Google.Resource.DFAReporting.UserRoles.List",
      "Network.Google.Resource.DFAReporting.UserRoles.Patch",
      "Network.Google.Resource.DFAReporting.UserRoles.Update"
    ],
    "name": "gogol-dfareporting",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Prelude"
      ],
      "containers": [
        "Data.Map"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Prim",
        "Text.ParserCombinators.Parsec.Char"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Prelude",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Inflections",
      "Text.Inflections.Camelize",
      "Text.Inflections.Dasherize",
      "Text.Inflections.Data",
      "Text.Inflections.Humanize",
      "Text.Inflections.HumanizeTest",
      "Text.Inflections.Ordinal",
      "Text.Inflections.OrdinalTest",
      "Text.Inflections.Parameterize",
      "Text.Inflections.Parse.Acronym",
      "Text.Inflections.Parse.CamelCase",
      "Text.Inflections.Parse.Parameterizable",
      "Text.Inflections.Parse.SnakeCase",
      "Text.Inflections.Parse.Types",
      "Text.InflectionsTest",
      "Text.Inflections.Tests",
      "Text.Inflections.Titleize",
      "Text.Inflections.TitleizeTest",
      "Text.Inflections.Transliterate",
      "Text.Inflections.Underscore",
      "Text.Inflections.UnderscoreTest",
      "Text.Parsec",
      "Text.Parsec.Prim",
      "Text.ParserCombinators.Parsec.Char"
    ],
    "modules": [
      "Text.Inflections",
      "Text.Inflections.Parse.Types"
    ],
    "name": "inflections",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.HTTP"
      ],
      "base": [
        "Control.Arrow",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "System.IO",
        "System.IO.Unsafe"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Math.OEIS",
      "Math.OEIS.Internal",
      "Math.OEIS.Types",
      "Network.HTTP",
      "Network.URI",
      "System.IO",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Math.OEIS",
      "Math.OEIS.Internal"
    ],
    "name": "oeis",
    "version": "0.3.7"
  },
  {
    "dependencies": {
      "RepLib": [
        "Generics.RepLib",
        "Generics.RepLib.Unify"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO.Unsafe",
        "Text.Read"
      ],
      "binary": [
        "Data.Binary"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error",
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.State",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.Binary",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Set",
      "Examples.Basic",
      "Examples.LC",
      "Examples.STLC",
      "Generics.RepLib",
      "Generics.RepLib.Unify",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO.Unsafe",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Parsec",
      "Text.Parsec.Expr",
      "Text.Parsec.Language",
      "Text.Parsec.String",
      "Text.Parsec.Token",
      "Text.ParserCombinators.Parsec.Pos",
      "Text.PrettyPrint",
      "Text.Read",
      "Unbound.DynR",
      "Unbound.LocallyNameless",
      "Unbound.LocallyNameless.Alpha",
      "Unbound.LocallyNameless.Fresh",
      "Unbound.LocallyNameless.Name",
      "Unbound.LocallyNameless.Ops",
      "Unbound.LocallyNameless.Subst",
      "Unbound.LocallyNameless.Types",
      "Unbound.PermM",
      "Unbound.Util"
    ],
    "modules": [
      "Unbound.LocallyNameless",
      "Unbound.LocallyNameless.Name",
      "Unbound.LocallyNameless.Fresh",
      "Unbound.LocallyNameless.Types",
      "Unbound.LocallyNameless.Alpha",
      "Unbound.LocallyNameless.Subst",
      "Unbound.LocallyNameless.Ops",
      "Unbound.PermM",
      "Unbound.Util",
      "Unbound.DynR"
    ],
    "name": "unbound",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.IArray",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "Numeric",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Posix.Types"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntMap.Strict",
        "Data.Map",
        "Data.Map.Strict"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix",
        "System.FilePath.Windows"
      ]
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Check",
      "Codec.Archive.Tar.Index",
      "Codec.Archive.Tar.Index.IntTrie",
      "Codec.Archive.Tar.Index.StringTable",
      "Codec.Archive.Tar.Pack",
      "Codec.Archive.Tar.Read",
      "Codec.Archive.Tar.Types",
      "Codec.Archive.Tar.Unpack",
      "Codec.Archive.Tar.Write",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Criterion",
      "Criterion.Main",
      "Data.Array.IArray",
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Char8",
      "Data.ByteString.Handle",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Builder.Extras",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Function",
      "Data.Int",
      "Data.IntMap",
      "Data.IntMap.Strict",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Word",
      "Numeric",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.FilePath.Windows",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix.Types",
      "System.Time",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Codec.Archive.Tar.Check",
      "Codec.Archive.Tar.Index"
    ],
    "name": "tar",
    "version": "0.5.0.3"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "yaml": []
    },
    "imports": [
      "Data.ByteString.Char8"
    ],
    "modules": [
      "Data.Frontmatter",
      "Data.Frontmatter.Internal",
      "Data.Yaml.Frontmatter"
    ],
    "name": "frontmatter",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.List",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr"
    ],
    "modules": [
      "Data.Byteable"
    ],
    "name": "byteable",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Version"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Traversable",
        "Data.Version",
        "GHC.IO.Handle",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "cmdargs": [
        "System.Console.CmdArgs",
        "System.Console.CmdArgs.Default"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "curl": [
        "Network.Curl"
      ],
      "directory": [
        "System.Directory"
      ],
      "directory-tree": [
        "System.Directory.Tree"
      ],
      "hpc": [
        "Trace.Hpc.Mix",
        "Trace.Hpc.Tix",
        "Trace.Hpc.Util"
      ],
      "process": [
        "System.Process"
      ],
      "pureMD5": [],
      "regex-posix": [
        "Text.Regex.Posix"
      ],
      "retry": [],
      "safe": [],
      "split": [
        "Data.List.Split"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.Async",
      "Control.Monad",
      "Control.Monad.Trans.Maybe",
      "Data.Aeson",
      "Data.ByteString.Lazy.Char8",
      "Data.Data",
      "Data.Function",
      "Data.List",
      "Data.List.Split",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Ord",
      "Data.Traversable",
      "Data.Version",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Version",
      "GHC.IO.Handle",
      "Network.Curl",
      "Paths",
      "Prelude",
      "System.Console.CmdArgs",
      "System.Console.CmdArgs.Default",
      "System.Directory",
      "System.Directory.Tree",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Process",
      "TestHpcCoverallsLix",
      "TestHpcCoverallsUtil",
      "Test.HUnit",
      "Text.Regex.Posix",
      "Trace.Hpc.Coveralls.Lix",
      "Trace.Hpc.Coveralls.Types",
      "Trace.Hpc.Coveralls.Util",
      "Trace.Hpc.Mix",
      "Trace.Hpc.Tix",
      "Trace.Hpc.Util"
    ],
    "modules": [
      "Trace.Hpc.Coveralls",
      "Trace.Hpc.Coveralls.Lix",
      "Trace.Hpc.Coveralls.Types",
      "Trace.Hpc.Coveralls.Util"
    ],
    "name": "hpc-coveralls",
    "version": "1.0.6"
  },
  {
    "dependencies": {},
    "imports": [
      ""
    ],
    "modules": [
      "Text.Bibutils"
    ],
    "name": "hs-bibutils",
    "version": "5.5"
  },
  {
    "dependencies": {
      "adjunctions": [
        "Data.Functor.Rep"
      ],
      "base": [
        "Data.Void"
      ],
      "comonad": [
        "Control.Comonad.Trans.Traced"
      ],
      "universe-instances-base": [
        "Data.Universe.Instances.Base"
      ],
      "void": []
    },
    "imports": [
      "Control.Comonad.Trans.Traced",
      "Data.Functor.Rep",
      "Data.Universe.Instances.Base",
      "Data.Void"
    ],
    "modules": [
      "Data.Universe.Instances.Extended"
    ],
    "name": "universe-instances-extended",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.List",
        "Data.Word",
        "Foreign.ForeignPtr.Safe",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "pipes-bgzf": [
        "Pipes.Bgzf"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Int",
      "Data.List",
      "Data.Word",
      "Foreign.ForeignPtr.Safe",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Pipes",
      "Pipes.Bgzf",
      "Pipes.Illumina",
      "Pipes.Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO"
    ],
    "modules": [
      "Pipes.Illumina",
      "Pipes.NextSeq"
    ],
    "name": "pipes-illumina",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Version",
        "Data.Word",
        "Foreign",
        "Numeric",
        "System.Environment",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "Text.ParserCombinators.ReadP",
        "Text.Read.Lex"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "time": [
        "Data.Time.Clock"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit.Lazy",
      "Data.Digest.Pure.MD5",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Time.Clock",
      "Data.Version",
      "Data.Word",
      "Foreign",
      "Httpd",
      "Network.Browser",
      "Network.BufferType",
      "Network.HTTP",
      "Network.HTTP.Auth",
      "Network.HTTP.Base",
      "Network.HTTP.Base64",
      "Network.HTTP.Cookie",
      "Network.HTTP.HandleStream",
      "Network.HTTP.Headers",
      "Network.HTTP.MD5Aux",
      "Network.HTTP.Proxy",
      "Network.HTTP.Types",
      "Network.HTTP.Utils",
      "Network.Shed.Httpd",
      "Network.Socket",
      "Network.Stream",
      "Network.StreamDebugger",
      "Network.TCP",
      "Network.URI",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Numeric",
      "Paths",
      "System.Environment",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.Win32.Registry",
      "System.Win32.Types",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.ReadP",
      "Text.Read.Lex",
      "UnitTests"
    ],
    "modules": [
      "Network.BufferType",
      "Network.Stream",
      "Network.StreamDebugger",
      "Network.StreamSocket",
      "Network.TCP",
      "Network.HTTP",
      "Network.HTTP.Headers",
      "Network.HTTP.Base",
      "Network.HTTP.Stream",
      "Network.HTTP.Auth",
      "Network.HTTP.Cookie",
      "Network.HTTP.Proxy",
      "Network.HTTP.HandleStream",
      "Network.Browser"
    ],
    "name": "HTTP",
    "version": "4000.3.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode",
        "Data.Aeson.Parser",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Attoparsec",
        "Data.Conduit.Network"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-client": [
        "Network.HTTP.Client",
        "Network.HTTP.Client.Internal",
        "Network.HTTP.Client.MultipartFormData"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [],
      "mtl": [],
      "resourcet": [],
      "transformers": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "CookieTest",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Parser",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.UTF8",
      "Data.CaseInsensitive",
      "Data.Conduit",
      "Data.Conduit.Attoparsec",
      "Data.Conduit.Internal",
      "Data.Conduit.List",
      "Data.Conduit.Network",
      "Data.Default.Class",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Streaming.Network",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Traversable",
      "Data.Typeable",
      "Network",
      "Network.BSD",
      "Network.Connection",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Conduit",
      "Network.HTTP.Client.Internal",
      "Network.HTTP.Client.MultipartFormData",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Conduit",
      "Network.HTTP.Simple",
      "Network.HTTP.Types",
      "Network.Socket",
      "Network.Wai",
      "Network.Wai.Conduit",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.WarpTLS",
      "Prelude",
      "System.IO",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Test.HUnit",
      "Web.Cookie"
    ],
    "modules": [
      "Network.HTTP.Conduit",
      "Network.HTTP.Client.Conduit",
      "Network.HTTP.Simple"
    ],
    "name": "http-conduit",
    "version": "2.1.11"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Error",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ]
    },
    "imports": [
      "Codec.Text.IConv",
      "Codec.Text.IConv.Internal",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Error",
      "Prelude",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Codec.Text.IConv"
    ],
    "name": "iconv",
    "version": "0.4.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable"
      ]
    },
    "imports": [
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Win32.Types"
    ],
    "modules": [
      "Network.HostName"
    ],
    "name": "hostname",
    "version": "1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Typeable",
        "Data.Void",
        "System.IO.Unsafe",
        "System.Timeout"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Safe",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Data.Typeable",
      "Data.Void",
      "System.IO.Unsafe",
      "System.Timeout",
      "Test.Hspec"
    ],
    "modules": [
      "Control.Exception.Safe"
    ],
    "name": "safe-exceptions",
    "version": "0.1.4.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.Maybe",
        "Data.Word",
        "Foreign",
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Numeric",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "bytestring": []
    },
    "imports": [
      "Control.Exception",
      "Data.Bits",
      "Data.Char",
      "Data.Int",
      "Data.Maybe",
      "Data.Word",
      "Foreign",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Graphics.Win32.Control",
      "Graphics.Win32.Dialogue",
      "Graphics.Win32.GDI",
      "Graphics.Win32.GDI.Bitmap",
      "Graphics.Win32.GDI.Brush",
      "Graphics.Win32.GDI.Clip",
      "Graphics.Win32.GDI.Font",
      "Graphics.Win32.GDI.Graphics2D",
      "Graphics.Win32.GDI.HDC",
      "Graphics.Win32.GDI.Palette",
      "Graphics.Win32.GDI.Path",
      "Graphics.Win32.GDI.Pen",
      "Graphics.Win32.GDI.Region",
      "Graphics.Win32.GDI.Types",
      "Graphics.Win32.Icon",
      "Graphics.Win32.Key",
      "Graphics.Win32.Menu",
      "Graphics.Win32.Message",
      "Graphics.Win32.Misc",
      "Graphics.Win32.Resource",
      "Graphics.Win32.Window",
      "Numeric",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Win32.Console",
      "System.Win32.DLL",
      "System.Win32.File",
      "System.Win32.FileMapping",
      "System.Win32.Info",
      "System.Win32.Mem",
      "System.Win32.NLS",
      "System.Win32.Process",
      "System.Win32.Registry",
      "System.Win32.Security",
      "System.Win32.Shell",
      "System.Win32.Time",
      "System.Win32.Types"
    ],
    "modules": [
      "Graphics.Win32.GDI",
      "Graphics.Win32.GDI.Bitmap",
      "Graphics.Win32.GDI.Brush",
      "Graphics.Win32.GDI.Clip",
      "Graphics.Win32.GDI.Font",
      "Graphics.Win32.GDI.Graphics2D",
      "Graphics.Win32.GDI.HDC",
      "Graphics.Win32.GDI.Palette",
      "Graphics.Win32.GDI.Path",
      "Graphics.Win32.GDI.Pen",
      "Graphics.Win32.GDI.Region",
      "Graphics.Win32.GDI.Types",
      "Graphics.Win32",
      "Graphics.Win32.Control",
      "Graphics.Win32.Dialogue",
      "Graphics.Win32.Icon",
      "Graphics.Win32.Key",
      "Graphics.Win32.Menu",
      "Graphics.Win32.Message",
      "Graphics.Win32.Misc",
      "Graphics.Win32.Resource",
      "Graphics.Win32.Window",
      "System.Win32",
      "System.Win32.DebugApi",
      "System.Win32.DLL",
      "System.Win32.File",
      "System.Win32.FileMapping",
      "System.Win32.Info",
      "System.Win32.Mem",
      "System.Win32.NLS",
      "System.Win32.Process",
      "System.Win32.Registry",
      "System.Win32.SimpleMAPI",
      "System.Win32.Time",
      "System.Win32.Console",
      "System.Win32.Security",
      "System.Win32.Types",
      "System.Win32.Shell"
    ],
    "name": "Win32",
    "version": "2.3.1.1"
  },
  {
    "dependencies": {
      "HTTP": [
        "Network.Browser",
        "Network.HTTP"
      ],
      "JuicyPixels": [
        "Codec.Picture"
      ],
      "SHA": [
        "Data.Digest.Pure.SHA"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Unique",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "GHC.Generics",
        "GHC.IO.Encoding",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "Text.Printf"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html.Renderer.Utf8",
        "Text.Blaze.XHtml1.Transitional",
        "Text.Blaze.XHtml1.Transitional.Attributes",
        "Text.Blaze.XHtml5"
      ],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal",
        "Text.Blaze.Renderer.String"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cmark": [
        "CMark"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "filemanip": [
        "System.FilePath.Glob"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "ghc-prim": [],
      "haddock-library": [
        "Documentation.Haddock.Parser",
        "Documentation.Haddock.Types"
      ],
      "highlighting-kate": [
        "Text.Highlighting.Kate",
        "Text.Highlighting.Kate.Types"
      ],
      "hslua": [
        "Scripting.Lua"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "old-time": [
        "System.Time"
      ],
      "pandoc": [],
      "pandoc-types": [
        "Text.Pandoc.Builder",
        "Text.Pandoc.Definition",
        "Text.Pandoc.Generic",
        "Text.Pandoc.JSON",
        "Text.Pandoc.Walk"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Error",
        "Text.Parsec.Pos",
        "Text.Parsec.String",
        "Text.Parsec.Text"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "syb": [
        "Data.Generics"
      ],
      "tagsoup": [
        "Text.HTML.TagSoup",
        "Text.HTML.TagSoup.Entity",
        "Text.HTML.TagSoup.Match"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "texmath": [
        "Text.TeXMath",
        "Text.TeXMath.Readers.MathML.EntityMap",
        "Text.TeXMath.Readers.OMML",
        "Text.TeXMath.Readers.TeX.Macros"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "xml": [
        "Text.XML.Light",
        "Text.XML.Light.Cursor",
        "Text.XML.Light.Output"
      ],
      "yaml": [
        "Data.Yaml"
      ],
      "zip-archive": [
        "Codec.Archive.Zip"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "CMark",
      "Codec.Archive.Zip",
      "Codec.Compression.GZip",
      "Codec.Picture",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Criterion.Main",
      "Criterion.Types",
      "Data.Aeson",
      "Data.Algorithm.Diff",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Default",
      "Data.Digest.Pure.SHA",
      "Data.Either",
      "Data.Foldable",
      "Data.Generics",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Scientific",
      "Data.Sequence",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Unique",
      "Data.Vector",
      "Data.Version",
      "Data.Word",
      "Data.Yaml",
      "Debug.Trace",
      "Documentation.Haddock.Parser",
      "Documentation.Haddock.Types",
      "GHC.Generics",
      "GHC.IO.Encoding",
      "Network",
      "Network.Browser",
      "Network.HTTP",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Internal",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.Status",
      "Network.HTTP.Types.URI",
      "Network.URI",
      "Network.Wai",
      "Network.Wai.Handler.CGI",
      "Numeric",
      "Paths",
      "Prelude",
      "Scripting.Lua",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Environment.Executable",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Glob",
      "System.FilePath.Posix",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.Locale",
      "System.Process",
      "System.Random",
      "System.Time",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Property",
      "Tests.Arbitrary",
      "Tests.Helpers",
      "Tests.Old",
      "Tests.Readers.Docx",
      "Tests.Readers.EPUB",
      "Tests.Readers.HTML",
      "Tests.Readers.LaTeX",
      "Tests.Readers.Markdown",
      "Tests.Readers.Odt",
      "Tests.Readers.Org",
      "Tests.Readers.RST",
      "Tests.Readers.Txt2Tags",
      "Tests.Shared",
      "Tests.Walk",
      "Tests.Writers.AsciiDoc",
      "Tests.Writers.ConTeXt",
      "Tests.Writers.Docbook",
      "Tests.Writers.Docx",
      "Tests.Writers.HTML",
      "Tests.Writers.LaTeX",
      "Tests.Writers.Markdown",
      "Tests.Writers.Native",
      "Tests.Writers.Plain",
      "Tests.Writers.RST",
      "Tests.Writers.TEI",
      "Text.Blaze",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.String",
      "Text.Blaze.XHtml1.Transitional",
      "Text.Blaze.XHtml1.Transitional.Attributes",
      "Text.Blaze.XHtml5",
      "Text.Highlighting.Kate",
      "Text.Highlighting.Kate.Types",
      "Text.HTML.TagSoup",
      "Text.HTML.TagSoup.Entity",
      "Text.HTML.TagSoup.Match",
      "Text.Pandoc",
      "Text.Pandoc.Asciify",
      "Text.Pandoc.Builder",
      "Text.Pandoc.Compat.Directory",
      "Text.Pandoc.Compat.Except",
      "Text.Pandoc.Compat.Monoid",
      "Text.Pandoc.Compat.TagSoupEntity",
      "Text.Pandoc.Compat.Time",
      "Text.Pandoc.CSS",
      "Text.Pandoc.Data",
      "Text.Pandoc.Definition",
      "Text.Pandoc.Emoji",
      "Text.Pandoc.Error",
      "Text.Pandoc.Generic",
      "Text.Pandoc.Highlighting",
      "Text.Pandoc.ImageSize",
      "Text.Pandoc.JSON",
      "Text.Pandoc.MediaBag",
      "Text.Pandoc.MIME",
      "Text.Pandoc.Options",
      "Text.Pandoc.Parsing",
      "Text.Pandoc.PDF",
      "Text.Pandoc.Pretty",
      "Text.Pandoc.Process",
      "Text.Pandoc.Readers.CommonMark",
      "Text.Pandoc.Readers.DocBook",
      "Text.Pandoc.Readers.Docx",
      "Text.Pandoc.Readers.Docx.Combine",
      "Text.Pandoc.Readers.Docx.Fonts",
      "Text.Pandoc.Readers.Docx.Lists",
      "Text.Pandoc.Readers.Docx.Parse",
      "Text.Pandoc.Readers.Docx.StyleMap",
      "Text.Pandoc.Readers.Docx.Util",
      "Text.Pandoc.Readers.EPUB",
      "Text.Pandoc.Readers.Haddock",
      "Text.Pandoc.Readers.HTML",
      "Text.Pandoc.Readers.LaTeX",
      "Text.Pandoc.Readers.Markdown",
      "Text.Pandoc.Readers.MediaWiki",
      "Text.Pandoc.Readers.Native",
      "Text.Pandoc.Readers.Odt",
      "Text.Pandoc.Readers.Odt.Generic.SetMap",
      "Text.Pandoc.Readers.OPML",
      "Text.Pandoc.Readers.Org",
      "Text.Pandoc.Readers.RST",
      "Text.Pandoc.Readers.TeXMath",
      "Text.Pandoc.Readers.Textile",
      "Text.Pandoc.Readers.TWiki",
      "Text.Pandoc.Readers.Txt2Tags",
      "Text.Pandoc.SelfContained",
      "Text.Pandoc.Shared",
      "Text.Pandoc.Slides",
      "Text.Pandoc.Templates",
      "Text.Pandoc.UTF8",
      "Text.Pandoc.UUID",
      "Text.Pandoc.Walk",
      "Text.Pandoc.Writers.AsciiDoc",
      "Text.Pandoc.Writers.CommonMark",
      "Text.Pandoc.Writers.ConTeXt",
      "Text.Pandoc.Writers.Custom",
      "Text.Pandoc.Writers.Docbook",
      "Text.Pandoc.Writers.Docx",
      "Text.Pandoc.Writers.DokuWiki",
      "Text.Pandoc.Writers.EPUB",
      "Text.Pandoc.Writers.FB2",
      "Text.Pandoc.Writers.Haddock",
      "Text.Pandoc.Writers.HTML",
      "Text.Pandoc.Writers.ICML",
      "Text.Pandoc.Writers.LaTeX",
      "Text.Pandoc.Writers.Man",
      "Text.Pandoc.Writers.Markdown",
      "Text.Pandoc.Writers.MediaWiki",
      "Text.Pandoc.Writers.Native",
      "Text.Pandoc.Writers.ODT",
      "Text.Pandoc.Writers.OpenDocument",
      "Text.Pandoc.Writers.OPML",
      "Text.Pandoc.Writers.Org",
      "Text.Pandoc.Writers.RST",
      "Text.Pandoc.Writers.RTF",
      "Text.Pandoc.Writers.Shared",
      "Text.Pandoc.Writers.TEI",
      "Text.Pandoc.Writers.Texinfo",
      "Text.Pandoc.Writers.Textile",
      "Text.Pandoc.XML",
      "Text.Parsec",
      "Text.Parsec.Error",
      "Text.Parsec.Pos",
      "Text.Parsec.String",
      "Text.Parsec.Text",
      "Text.Printf",
      "Text.TeXMath",
      "Text.TeXMath.Readers.MathML.EntityMap",
      "Text.TeXMath.Readers.OMML",
      "Text.TeXMath.Readers.TeX.Macros",
      "Text.XML.Light",
      "Text.XML.Light.Cursor",
      "Text.XML.Light.Output"
    ],
    "modules": [
      "Text.Pandoc",
      "Text.Pandoc.Options",
      "Text.Pandoc.Pretty",
      "Text.Pandoc.Shared",
      "Text.Pandoc.MediaBag",
      "Text.Pandoc.Error",
      "Text.Pandoc.Readers.HTML",
      "Text.Pandoc.Readers.LaTeX",
      "Text.Pandoc.Readers.Markdown",
      "Text.Pandoc.Readers.CommonMark",
      "Text.Pandoc.Readers.MediaWiki",
      "Text.Pandoc.Readers.RST",
      "Text.Pandoc.Readers.Org",
      "Text.Pandoc.Readers.DocBook",
      "Text.Pandoc.Readers.OPML",
      "Text.Pandoc.Readers.TeXMath",
      "Text.Pandoc.Readers.Textile",
      "Text.Pandoc.Readers.Native",
      "Text.Pandoc.Readers.Haddock",
      "Text.Pandoc.Readers.TWiki",
      "Text.Pandoc.Readers.Txt2Tags",
      "Text.Pandoc.Readers.Docx",
      "Text.Pandoc.Readers.Odt",
      "Text.Pandoc.Readers.EPUB",
      "Text.Pandoc.Writers.Native",
      "Text.Pandoc.Writers.Docbook",
      "Text.Pandoc.Writers.OPML",
      "Text.Pandoc.Writers.HTML",
      "Text.Pandoc.Writers.ICML",
      "Text.Pandoc.Writers.LaTeX",
      "Text.Pandoc.Writers.ConTeXt",
      "Text.Pandoc.Writers.OpenDocument",
      "Text.Pandoc.Writers.Texinfo",
      "Text.Pandoc.Writers.Man",
      "Text.Pandoc.Writers.Markdown",
      "Text.Pandoc.Writers.CommonMark",
      "Text.Pandoc.Writers.Haddock",
      "Text.Pandoc.Writers.RST",
      "Text.Pandoc.Writers.Org",
      "Text.Pandoc.Writers.AsciiDoc",
      "Text.Pandoc.Writers.Custom",
      "Text.Pandoc.Writers.Textile",
      "Text.Pandoc.Writers.MediaWiki",
      "Text.Pandoc.Writers.DokuWiki",
      "Text.Pandoc.Writers.RTF",
      "Text.Pandoc.Writers.ODT",
      "Text.Pandoc.Writers.Docx",
      "Text.Pandoc.Writers.EPUB",
      "Text.Pandoc.Writers.FB2",
      "Text.Pandoc.Writers.TEI",
      "Text.Pandoc.PDF",
      "Text.Pandoc.UTF8",
      "Text.Pandoc.Templates",
      "Text.Pandoc.XML",
      "Text.Pandoc.SelfContained",
      "Text.Pandoc.Process",
      "Text.Pandoc.CSS"
    ],
    "name": "pandoc",
    "version": "1.17.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "path": [
        "Path"
      ]
    },
    "imports": [
      "Control.Monad.Catch",
      "Data.List",
      "Path"
    ],
    "modules": [
      "Path.Extended"
    ],
    "name": "path-extra",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ECS",
      "Test.AWS.ECS",
      "Test.AWS.ECS.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ECS",
      "Network.AWS.ECS.CreateCluster",
      "Network.AWS.ECS.CreateService",
      "Network.AWS.ECS.DeleteCluster",
      "Network.AWS.ECS.DeleteService",
      "Network.AWS.ECS.DeregisterContainerInstance",
      "Network.AWS.ECS.DeregisterTaskDefinition",
      "Network.AWS.ECS.DescribeClusters",
      "Network.AWS.ECS.DescribeContainerInstances",
      "Network.AWS.ECS.DescribeServices",
      "Network.AWS.ECS.DescribeTaskDefinition",
      "Network.AWS.ECS.DescribeTasks",
      "Network.AWS.ECS.DiscoverPollEndpoint",
      "Network.AWS.ECS.ListClusters",
      "Network.AWS.ECS.ListContainerInstances",
      "Network.AWS.ECS.ListServices",
      "Network.AWS.ECS.ListTaskDefinitionFamilies",
      "Network.AWS.ECS.ListTaskDefinitions",
      "Network.AWS.ECS.ListTasks",
      "Network.AWS.ECS.RegisterContainerInstance",
      "Network.AWS.ECS.RegisterTaskDefinition",
      "Network.AWS.ECS.RunTask",
      "Network.AWS.ECS.StartTask",
      "Network.AWS.ECS.StopTask",
      "Network.AWS.ECS.SubmitContainerStateChange",
      "Network.AWS.ECS.SubmitTaskStateChange",
      "Network.AWS.ECS.Types",
      "Network.AWS.ECS.UpdateContainerAgent",
      "Network.AWS.ECS.UpdateService",
      "Network.AWS.ECS.Waiters"
    ],
    "name": "amazonka-ecs",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.DNS",
      "Network.Google.DNS.Types",
      "Network.Google.Resource.DNS.Changes.Create",
      "Network.Google.Resource.DNS.Changes.Get",
      "Network.Google.Resource.DNS.Changes.List",
      "Network.Google.Resource.DNS.ManagedZones.Create",
      "Network.Google.Resource.DNS.ManagedZones.Delete",
      "Network.Google.Resource.DNS.ManagedZones.Get",
      "Network.Google.Resource.DNS.ManagedZones.List",
      "Network.Google.Resource.DNS.Projects.Get",
      "Network.Google.Resource.DNS.ResourceRecordSets.List"
    ],
    "name": "gogol-dns",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.Environment"
      ],
      "monoid-subclasses": [
        "Data.Monoid.Cancellative",
        "Data.Monoid.Factorial",
        "Data.Monoid.Instances.ByteString.UTF8",
        "Data.Monoid.Instances.Concat",
        "Data.Monoid.Null",
        "Data.Monoid.Textual"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Monoid",
      "Control.DeepSeq",
      "Control.Monad",
      "Criterion.Main",
      "Data.ByteString",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Monoid.Cancellative",
      "Data.Monoid.Factorial",
      "Data.Monoid.Instances.ByteString.UTF8",
      "Data.Monoid.Instances.Concat",
      "Data.Monoid.Null",
      "Data.Monoid.Textual",
      "Data.Text.IO",
      "Prelude",
      "System.Environment",
      "Test.QuickCheck.Checkers",
      "Test.QuickCheck.Classes",
      "Test.Tasty.QuickCheck",
      "Text.ParserCombinators.Incremental",
      "Text.ParserCombinators.Incremental.LeftBiasedLocal",
      "Text.ParserCombinators.Incremental.Symmetric"
    ],
    "modules": [
      "Text.ParserCombinators.Incremental",
      "Text.ParserCombinators.Incremental.LeftBiasedLocal",
      "Text.ParserCombinators.Incremental.Symmetric",
      "Control.Applicative.Monoid"
    ],
    "name": "incremental-parser",
    "version": "0.2.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Foreign",
        "Foreign.C",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad.Identity",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.Conduit",
      "Data.Conduit.IConv",
      "Data.Conduit.List",
      "Data.Text",
      "Data.Text.Encoding",
      "Foreign",
      "Foreign.C",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2"
    ],
    "modules": [
      "Data.Conduit.IConv"
    ],
    "name": "conduit-iconv",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.IORef",
        "Data.Monoid",
        "System.IO.Unsafe"
      ],
      "blaze-html": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "nonce": [
        "Crypto.Nonce"
      ],
      "persistent": [
        "Database.Persist"
      ],
      "pwstore-fast": [
        "Crypto.PasswordStore"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "yesod-auth": [
        "Yesod.Auth",
        "Yesod.Auth.Message"
      ],
      "yesod-core": [
        "Yesod.Core"
      ],
      "yesod-form": [
        "Yesod.Form"
      ],
      "yesod-persistent": [
        "Yesod.Persist"
      ]
    },
    "imports": [
      "BasicTests",
      "Control.Applicative",
      "Control.Monad.Logger",
      "Control.Monad.Reader",
      "Control.Monad.Trans.Resource",
      "Crypto.Nonce",
      "Crypto.PasswordStore",
      "Database.Persist",
      "Database.Persist.Sqlite",
      "Data.ByteString",
      "Data.Char",
      "Data.IORef",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Foundation",
      "NewAccount",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Text.XML.Cursor",
      "Yesod",
      "Yesod.Auth",
      "Yesod.Auth.Account",
      "Yesod.Auth.Account.Message",
      "Yesod.Auth.Message",
      "Yesod.Core",
      "Yesod.Form",
      "Yesod.Persist",
      "Yesod.Test"
    ],
    "modules": [
      "Yesod.Auth.Account",
      "Yesod.Auth.Account.Message"
    ],
    "name": "yesod-auth-account",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Char",
        "Data.Fixed",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Text.ParserCombinators.ReadP",
        "Unsafe.Coerce"
      ],
      "parsers": [
        "Text.Parser.Char",
        "Text.Parser.LookAhead"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.LocalTime"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.Bifunctor",
      "Data.Bits",
      "Data.Char",
      "Data.Fixed",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.LocalTime",
      "Data.Time.Parsers",
      "Data.Time.TH",
      "Language.Haskell.TH",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Text.Parsec",
      "Text.Parser.Char",
      "Text.ParserCombinators.ReadP",
      "Text.Parser.LookAhead",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Time.Parsers",
      "Data.Time.TH"
    ],
    "name": "time-parsers",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Numeric",
        "System.IO",
        "System.Timeout"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "network": [
        "Network",
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Reader",
      "Criterion.Main",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.IEEE754",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Word",
      "Network",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Numeric",
      "Sound.OSC",
      "Sound.OSC.Class",
      "Sound.OSC.Coding",
      "Sound.OSC.Coding.Byte",
      "Sound.OSC.Coding.Cast",
      "Sound.OSC.Coding.Decode.Base",
      "Sound.OSC.Coding.Decode.Binary",
      "Sound.OSC.Coding.Encode.Base",
      "Sound.OSC.Coding.Encode.Builder",
      "Sound.OSC.Core",
      "Sound.OSC.Datum",
      "Sound.OSC.NFData",
      "Sound.OSC.Normalise",
      "Sound.OSC.Time",
      "Sound.OSC.Transport.FD",
      "Sound.OSC.Transport.FD.TCP",
      "Sound.OSC.Transport.FD.UDP",
      "Sound.OSC.Transport.Monad",
      "Sound.OSC.Type",
      "Sound.OSC.Wait",
      "System.IO",
      "System.Timeout",
      "Test.QuickCheck"
    ],
    "modules": [
      "Sound.OSC",
      "Sound.OSC.Class",
      "Sound.OSC.Coding",
      "Sound.OSC.Coding.Byte",
      "Sound.OSC.Coding.Cast",
      "Sound.OSC.Coding.Decode.Base",
      "Sound.OSC.Coding.Decode.Binary",
      "Sound.OSC.Coding.Encode.Base",
      "Sound.OSC.Coding.Encode.Builder",
      "Sound.OSC.Core",
      "Sound.OSC.Datum",
      "Sound.OSC.FD",
      "Sound.OSC.Normalise",
      "Sound.OSC.Time",
      "Sound.OSC.Transport.FD",
      "Sound.OSC.Transport.FD.TCP",
      "Sound.OSC.Transport.FD.UDP",
      "Sound.OSC.Transport.Monad",
      "Sound.OSC.Type",
      "Sound.OSC.Wait"
    ],
    "name": "hosc",
    "version": "0.15"
  },
  {
    "dependencies": {
      "base": [
        "Data.Function",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Data.Function",
      "Data.Monoid",
      "Test.QuickCheck.Property.Common",
      "Test.QuickCheck.Property.Common.Internal",
      "Test.QuickCheck.Property.Generic"
    ],
    "modules": [
      "Test.QuickCheck.Property.Common",
      "Test.QuickCheck.Property.Common.Internal",
      "Test.QuickCheck.Property.Generic",
      "Test.QuickCheck.Property.Monoid",
      "Test.QuickCheck.Property.Functor"
    ],
    "name": "quickcheck-properties",
    "version": "0.1"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Data.Ratio",
        "Data.Typeable",
        "Data.Word"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "tagshare": [
        "Control.Monad.TagShare"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Ppr",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.State",
      "Control.Monad.TagShare",
      "Data.Bits",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ratio",
      "Data.Typeable",
      "Data.Word",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.Meta",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.Syntax",
      "Language.Haskell.TH.Syntax.Internals",
      "Test.Feat",
      "Test.Feat.Access",
      "Test.Feat.Class",
      "Test.Feat.Enumerate",
      "Test.Feat.Internals.Derive",
      "Test.Feat.Internals.Newtypes",
      "Test.Feat.Internals.Tag",
      "Test.Feat.Modifiers",
      "Test.QuickCheck",
      "Test.SmallCheck",
      "Test.SmallCheck.Series"
    ],
    "modules": [
      "Test.Feat",
      "Test.Feat.Access",
      "Test.Feat.Class",
      "Test.Feat.Class.Override",
      "Test.Feat.Enumerate",
      "Test.Feat.Modifiers"
    ],
    "name": "testing-feat",
    "version": "0.4.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Text.ParserCombinators.ReadP",
        "Text.Read"
      ],
      "base-unicode-symbols": [
        "Prelude.Unicode"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.List",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Prelude.Unicode",
      "Test.Hspec",
      "Text.Format",
      "Text.ParserCombinators.ReadP",
      "Text.Read"
    ],
    "modules": [
      "Text.Format"
    ],
    "name": "hformat",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Either",
        "Data.List",
        "Data.Monoid",
        "System.Environment",
        "System.IO",
        "System.IO.Error"
      ],
      "containers": [
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "path": [
        "Path"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Writer.Lazy"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Writer.Lazy",
      "Data.Either",
      "Data.List",
      "Data.Monoid",
      "Data.Set",
      "Data.Time",
      "Path",
      "Path.IO",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.PosixCompat.Files",
      "Test.Hspec"
    ],
    "modules": [
      "Path.IO"
    ],
    "name": "path-io",
    "version": "1.2.0"
  },
  {
    "dependencies": {
      "GLURaw": [
        "Graphics.GLU"
      ],
      "ObjectName": [
        "Data.ObjectName"
      ],
      "OpenGLRaw": [
        "Graphics.GL",
        "Graphics.GL.Types"
      ],
      "StateVar": [
        "Data.StateVar"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor",
        "Data.IORef",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Traversable",
        "Data.Typeable",
        "Foreign.C.String",
        "Foreign.ForeignPtr",
        "Foreign.Marshal",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Pool",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Set"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Foldable",
      "Data.Functor",
      "Data.IORef",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "Data.ObjectName",
      "Data.Set",
      "Data.StateVar",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Traversable",
      "Data.Typeable",
      "Foreign.C.String",
      "Foreign.ForeignPtr",
      "Foreign.Marshal",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Pool",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Graphics.GL",
      "Graphics.GL.Types",
      "Graphics.GLU",
      "Graphics.Rendering.OpenGL.GL",
      "Graphics.Rendering.OpenGL.GL.Antialiasing",
      "Graphics.Rendering.OpenGL.GL.BeginEnd",
      "Graphics.Rendering.OpenGL.GL.Bitmaps",
      "Graphics.Rendering.OpenGL.GL.BlendingFactor",
      "Graphics.Rendering.OpenGL.GL.BufferMode",
      "Graphics.Rendering.OpenGL.GL.BufferObjects",
      "Graphics.Rendering.OpenGL.GL.ByteString",
      "Graphics.Rendering.OpenGL.GL.Capability",
      "Graphics.Rendering.OpenGL.GL.Clipping",
      "Graphics.Rendering.OpenGL.GL.Colors",
      "Graphics.Rendering.OpenGL.GL.ColorSum",
      "Graphics.Rendering.OpenGL.GL.ComparisonFunction",
      "Graphics.Rendering.OpenGL.GL.ConditionalRendering",
      "Graphics.Rendering.OpenGL.GL.ControlPoint",
      "Graphics.Rendering.OpenGL.GL.CoordTrans",
      "Graphics.Rendering.OpenGL.GL.DataType",
      "Graphics.Rendering.OpenGL.GL.DebugOutput",
      "Graphics.Rendering.OpenGL.GL.DisplayLists",
      "Graphics.Rendering.OpenGL.GL.Domain",
      "Graphics.Rendering.OpenGL.GL.EdgeFlag",
      "Graphics.Rendering.OpenGL.GL.Evaluators",
      "Graphics.Rendering.OpenGL.GL.Exception",
      "Graphics.Rendering.OpenGL.GL.Face",
      "Graphics.Rendering.OpenGL.GL.Feedback",
      "Graphics.Rendering.OpenGL.GL.FlushFinish",
      "Graphics.Rendering.OpenGL.GL.Fog",
      "Graphics.Rendering.OpenGL.GL.Framebuffer",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.Attachments",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.FramebufferObject",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.FramebufferObjectAttachment",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.FramebufferObjects",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.FramebufferTarget",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.Queries",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.RenderbufferObject",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.RenderbufferObjects",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.RenderbufferTarget",
      "Graphics.Rendering.OpenGL.GL.GLboolean",
      "Graphics.Rendering.OpenGL.GL.Hints",
      "Graphics.Rendering.OpenGL.GL.IOState",
      "Graphics.Rendering.OpenGL.GL.LineSegments",
      "Graphics.Rendering.OpenGL.GL.MatrixComponent",
      "Graphics.Rendering.OpenGL.GL.PeekPoke",
      "Graphics.Rendering.OpenGL.GL.PerFragment",
      "Graphics.Rendering.OpenGL.GL.PixelData",
      "Graphics.Rendering.OpenGL.GL.PixelFormat",
      "Graphics.Rendering.OpenGL.GL.PixellikeObject",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.ColorTable",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Convolution",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Histogram",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Minmax",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.PixelMap",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.PixelStorage",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.PixelTransfer",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Rasterization",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Reset",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Sink",
      "Graphics.Rendering.OpenGL.GL.PointParameter",
      "Graphics.Rendering.OpenGL.GL.Points",
      "Graphics.Rendering.OpenGL.GL.PolygonMode",
      "Graphics.Rendering.OpenGL.GL.Polygons",
      "Graphics.Rendering.OpenGL.GL.PrimitiveMode",
      "Graphics.Rendering.OpenGL.GL.PrimitiveModeInternal",
      "Graphics.Rendering.OpenGL.GL.QueryObject",
      "Graphics.Rendering.OpenGL.GL.QueryObjects",
      "Graphics.Rendering.OpenGL.GL.QueryUtils",
      "Graphics.Rendering.OpenGL.GL.QueryUtils.PName",
      "Graphics.Rendering.OpenGL.GL.QueryUtils.VertexAttrib",
      "Graphics.Rendering.OpenGL.GL.RasterPos",
      "Graphics.Rendering.OpenGL.GL.ReadCopyPixels",
      "Graphics.Rendering.OpenGL.GL.Rectangles",
      "Graphics.Rendering.OpenGL.GL.RenderMode",
      "Graphics.Rendering.OpenGL.GL.SavingState",
      "Graphics.Rendering.OpenGL.GL.Selection",
      "Graphics.Rendering.OpenGL.GL.Shaders",
      "Graphics.Rendering.OpenGL.GL.Shaders.Attribs",
      "Graphics.Rendering.OpenGL.GL.Shaders.Limits",
      "Graphics.Rendering.OpenGL.GL.Shaders.Program",
      "Graphics.Rendering.OpenGL.GL.Shaders.ProgramBinaries",
      "Graphics.Rendering.OpenGL.GL.Shaders.ProgramObjects",
      "Graphics.Rendering.OpenGL.GL.Shaders.Shader",
      "Graphics.Rendering.OpenGL.GL.Shaders.ShaderBinaries",
      "Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects",
      "Graphics.Rendering.OpenGL.GL.Shaders.Uniform",
      "Graphics.Rendering.OpenGL.GL.Shaders.Variables",
      "Graphics.Rendering.OpenGL.GL.StringQueries",
      "Graphics.Rendering.OpenGL.GL.SyncObjects",
      "Graphics.Rendering.OpenGL.GL.Tensor",
      "Graphics.Rendering.OpenGL.GL.Texturing",
      "Graphics.Rendering.OpenGL.GL.Texturing.Application",
      "Graphics.Rendering.OpenGL.GL.Texturing.Environments",
      "Graphics.Rendering.OpenGL.GL.Texturing.Filter",
      "Graphics.Rendering.OpenGL.GL.Texturing.Objects",
      "Graphics.Rendering.OpenGL.GL.Texturing.Parameters",
      "Graphics.Rendering.OpenGL.GL.Texturing.PixelInternalFormat",
      "Graphics.Rendering.OpenGL.GL.Texturing.Queries",
      "Graphics.Rendering.OpenGL.GL.Texturing.Specification",
      "Graphics.Rendering.OpenGL.GL.Texturing.TexParameter",
      "Graphics.Rendering.OpenGL.GL.Texturing.TextureObject",
      "Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget",
      "Graphics.Rendering.OpenGL.GL.Texturing.TextureUnit",
      "Graphics.Rendering.OpenGL.GL.TransformFeedback",
      "Graphics.Rendering.OpenGL.GLU",
      "Graphics.Rendering.OpenGL.GLU.Errors",
      "Graphics.Rendering.OpenGL.GLU.ErrorsInternal",
      "Graphics.Rendering.OpenGL.GLU.Initialization",
      "Graphics.Rendering.OpenGL.GLU.Matrix",
      "Graphics.Rendering.OpenGL.GLU.Mipmapping",
      "Graphics.Rendering.OpenGL.GLU.NURBS",
      "Graphics.Rendering.OpenGL.GLU.Quadrics",
      "Graphics.Rendering.OpenGL.GLU.Tessellation",
      "Graphics.Rendering.OpenGL.GL.VertexArrayObjects",
      "Graphics.Rendering.OpenGL.GL.VertexArrays",
      "Graphics.Rendering.OpenGL.GL.VertexAttributes",
      "Graphics.Rendering.OpenGL.GL.VertexSpec",
      "IO",
      "System.IO.Unsafe",
      "Text.ParserCombinators.ReadP"
    ],
    "modules": [
      "Graphics.Rendering.OpenGL",
      "Graphics.Rendering.OpenGL.GL",
      "Graphics.Rendering.OpenGL.GL.Antialiasing",
      "Graphics.Rendering.OpenGL.GL.BeginEnd",
      "Graphics.Rendering.OpenGL.GL.Bitmaps",
      "Graphics.Rendering.OpenGL.GL.BufferObjects",
      "Graphics.Rendering.OpenGL.GL.Clipping",
      "Graphics.Rendering.OpenGL.GL.ColorSum",
      "Graphics.Rendering.OpenGL.GL.Colors",
      "Graphics.Rendering.OpenGL.GL.ConditionalRendering",
      "Graphics.Rendering.OpenGL.GL.CoordTrans",
      "Graphics.Rendering.OpenGL.GL.DebugOutput",
      "Graphics.Rendering.OpenGL.GL.DisplayLists",
      "Graphics.Rendering.OpenGL.GL.Evaluators",
      "Graphics.Rendering.OpenGL.GL.Feedback",
      "Graphics.Rendering.OpenGL.GL.FlushFinish",
      "Graphics.Rendering.OpenGL.GL.Fog",
      "Graphics.Rendering.OpenGL.GL.Framebuffer",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.Attachments",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.FramebufferObjects",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.Queries",
      "Graphics.Rendering.OpenGL.GL.FramebufferObjects.RenderbufferObjects",
      "Graphics.Rendering.OpenGL.GL.Hints",
      "Graphics.Rendering.OpenGL.GL.LineSegments",
      "Graphics.Rendering.OpenGL.GL.PerFragment",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.ColorTable",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Convolution",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Histogram",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Minmax",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.PixelMap",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.PixelStorage",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.PixelTransfer",
      "Graphics.Rendering.OpenGL.GL.PixelRectangles.Rasterization",
      "Graphics.Rendering.OpenGL.GL.PixellikeObject",
      "Graphics.Rendering.OpenGL.GL.Points",
      "Graphics.Rendering.OpenGL.GL.Polygons",
      "Graphics.Rendering.OpenGL.GL.PrimitiveMode",
      "Graphics.Rendering.OpenGL.GL.QueryObjects",
      "Graphics.Rendering.OpenGL.GL.RasterPos",
      "Graphics.Rendering.OpenGL.GL.ReadCopyPixels",
      "Graphics.Rendering.OpenGL.GL.Rectangles",
      "Graphics.Rendering.OpenGL.GL.SavingState",
      "Graphics.Rendering.OpenGL.GL.Selection",
      "Graphics.Rendering.OpenGL.GL.Shaders",
      "Graphics.Rendering.OpenGL.GL.Shaders.Attribs",
      "Graphics.Rendering.OpenGL.GL.Shaders.Limits",
      "Graphics.Rendering.OpenGL.GL.Shaders.ProgramBinaries",
      "Graphics.Rendering.OpenGL.GL.Shaders.ProgramObjects",
      "Graphics.Rendering.OpenGL.GL.Shaders.ShaderBinaries",
      "Graphics.Rendering.OpenGL.GL.Shaders.ShaderObjects",
      "Graphics.Rendering.OpenGL.GL.Shaders.Uniform",
      "Graphics.Rendering.OpenGL.GL.StringQueries",
      "Graphics.Rendering.OpenGL.GL.SyncObjects",
      "Graphics.Rendering.OpenGL.GL.Tensor",
      "Graphics.Rendering.OpenGL.GL.Texturing",
      "Graphics.Rendering.OpenGL.GL.Texturing.Application",
      "Graphics.Rendering.OpenGL.GL.Texturing.Environments",
      "Graphics.Rendering.OpenGL.GL.Texturing.Objects",
      "Graphics.Rendering.OpenGL.GL.Texturing.Parameters",
      "Graphics.Rendering.OpenGL.GL.Texturing.Queries",
      "Graphics.Rendering.OpenGL.GL.Texturing.Specification",
      "Graphics.Rendering.OpenGL.GL.TransformFeedback",
      "Graphics.Rendering.OpenGL.GL.VertexArrayObjects",
      "Graphics.Rendering.OpenGL.GL.VertexArrays",
      "Graphics.Rendering.OpenGL.GL.VertexSpec",
      "Graphics.Rendering.OpenGL.GLU",
      "Graphics.Rendering.OpenGL.GLU.Errors",
      "Graphics.Rendering.OpenGL.GLU.Initialization",
      "Graphics.Rendering.OpenGL.GLU.Matrix",
      "Graphics.Rendering.OpenGL.GLU.Mipmapping",
      "Graphics.Rendering.OpenGL.GLU.NURBS",
      "Graphics.Rendering.OpenGL.GLU.Quadrics",
      "Graphics.Rendering.OpenGL.GLU.Tessellation"
    ],
    "name": "OpenGL",
    "version": "3.0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "containers": [
        "Data.Map.Lazy"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.Function",
      "Data.IORef",
      "Data.List",
      "Data.Map.Lazy",
      "Data.Maybe",
      "Data.Text",
      "HFlags",
      "Language.Haskell.TH",
      "Prelude",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "TupMain",
      "X.B",
      "X.Y"
    ],
    "modules": [
      "HFlags"
    ],
    "name": "hflags",
    "version": "0.4.2"
  },
  {
    "dependencies": {
      "aws": [
        "Aws",
        "Aws.S3"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Lazy",
        "Data.Conduit.Zlib"
      ],
      "cryptohash": [
        "Crypto.Hash.SHA512"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "fast-logger": [],
      "filepath": [
        "System.FilePath"
      ],
      "hackage-mirror": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "lifted-async": [
        "Control.Concurrent.Async.Lifted"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "old-locale": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "retry": [
        "Control.Retry"
      ],
      "shakespeare": [
        "Text.Shakespeare.Text"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Entry"
      ],
      "template-haskell": [],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "thyme": [],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Aws",
      "Aws.S3",
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Control.Applicative",
      "Control.Concurrent.Async.Lifted",
      "Control.Concurrent.STM",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Morph",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Control.Retry",
      "Crypto.Hash.SHA512",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.Lazy",
      "Data.Conduit.List",
      "Data.Conduit.Zlib",
      "Data.Default",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.Serialize",
      "Data.Text",
      "Data.Text.Encoding",
      "Hackage.Mirror",
      "Network.HTTP.Conduit",
      "Options.Applicative",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "Text.Shakespeare.Text"
    ],
    "modules": [
      "Hackage.Mirror"
    ],
    "name": "hackage-mirror",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.ST"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "auto-update": [
        "Control.AutoUpdate",
        "Control.Reaper"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Foreign.C.Error",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Conc",
        "GHC.IO.Exception",
        "GHC.IO.FD",
        "GHC.Storable",
        "GHC.Word",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Posix.Types",
        "System.Timeout"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder.HTTP"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "bytestring-builder": [],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.IntMap.Strict",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "http-date": [
        "Network.HTTP.Date"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header"
      ],
      "http2": [
        "Network.HPACK",
        "Network.HPACK.Token",
        "Network.HTTP2",
        "Network.HTTP2.Priority"
      ],
      "iproute": [],
      "simple-sendfile": [
        "Network.Sendfile"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "streaming-commons": [
        "Data.Streaming.Blaze",
        "Data.Streaming.ByteString.Builder.Buffer",
        "Data.Streaming.Network"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ],
      "vault": [
        "Data.Vault.Lazy"
      ],
      "wai": [
        "Network.Wai",
        "Network.Wai.Internal"
      ],
      "word8": [
        "Data.Word8"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder.HTTP",
      "Control.Applicative",
      "Control.Arrow",
      "Control.AutoUpdate",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Reaper",
      "Criterion.Main",
      "Data.Array",
      "Data.Array.ST",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.Int",
      "Data.IntMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Streaming.Blaze",
      "Data.Streaming.ByteString.Builder.Buffer",
      "Data.Streaming.Network",
      "Data.Text",
      "Data.Text.IO",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Vault.Lazy",
      "Data.Version",
      "Data.Word",
      "Data.Word8",
      "Foreign.C.Error",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Conc",
      "GHC.IO.Exception",
      "GHC.IO.FD",
      "GHC.Prim",
      "GHC.Storable",
      "GHC.Types",
      "GHC.Word",
      "HTTP",
      "Network",
      "Network.HPACK",
      "Network.HPACK.Token",
      "Network.HTTP",
      "Network.HTTP2",
      "Network.HTTP2.Priority",
      "Network.HTTP.Date",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.Sendfile",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Stream",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.Warp.Buffer",
      "Network.Wai.Handler.Warp.Conduit",
      "Network.Wai.Handler.Warp.Counter",
      "Network.Wai.Handler.Warp.Date",
      "Network.Wai.Handler.Warp.FdCache",
      "Network.Wai.Handler.Warp.File",
      "Network.Wai.Handler.Warp.FileInfoCache",
      "Network.Wai.Handler.Warp.HashMap",
      "Network.Wai.Handler.Warp.Header",
      "Network.Wai.Handler.Warp.HTTP2",
      "Network.Wai.Handler.Warp.HTTP2.EncodeFrame",
      "Network.Wai.Handler.Warp.HTTP2.File",
      "Network.Wai.Handler.Warp.HTTP2.HPACK",
      "Network.Wai.Handler.Warp.HTTP2.Manager",
      "Network.Wai.Handler.Warp.HTTP2.Receiver",
      "Network.Wai.Handler.Warp.HTTP2.Request",
      "Network.Wai.Handler.Warp.HTTP2.Sender",
      "Network.Wai.Handler.Warp.HTTP2.Types",
      "Network.Wai.Handler.Warp.HTTP2.Worker",
      "Network.Wai.Handler.Warp.IO",
      "Network.Wai.Handler.Warp.IORef",
      "Network.Wai.Handler.Warp.MultiMap",
      "Network.Wai.Handler.Warp.PackInt",
      "Network.Wai.Handler.Warp.ReadInt",
      "Network.Wai.Handler.Warp.Recv",
      "Network.Wai.Handler.Warp.Request",
      "Network.Wai.Handler.Warp.RequestHeader",
      "Network.Wai.Handler.Warp.Response",
      "Network.Wai.Handler.Warp.ResponseHeader",
      "Network.Wai.Handler.Warp.Run",
      "Network.Wai.Handler.Warp.SendFile",
      "Network.Wai.Handler.Warp.Settings",
      "Network.Wai.Handler.Warp.Some",
      "Network.Wai.Handler.Warp.Timeout",
      "Network.Wai.Handler.Warp.Types",
      "Network.Wai.Handler.Warp.Windows",
      "Network.Wai.Handler.Warp.WithApplication",
      "Network.Wai.Internal",
      "Numeric",
      "Paths",
      "Prelude",
      "RunSpec",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix",
      "System.PosixCompat.Files",
      "System.Posix.IO",
      "System.Posix.Types",
      "System.Process",
      "System.Timeout",
      "Test.DocTest",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck"
    ],
    "modules": [
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.Warp.Internal"
    ],
    "name": "warp",
    "version": "3.2.8"
  },
  {
    "dependencies": {
      "base": [],
      "hasty-hamiltonian": [
        "Numeric.MCMC.Hamiltonian"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mcmc-types": [
        "Data.Sampling.Types"
      ],
      "mighty-metropolis": [
        "Numeric.MCMC.Metropolis"
      ],
      "mwc-probability": [
        "System.Random.MWC.Probability"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "speedy-slice": [
        "Numeric.MCMC.Slice"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Primitive",
      "Control.Monad.Trans.State.Strict",
      "Data.Sampling.Types",
      "Numeric.MCMC",
      "Numeric.MCMC.Hamiltonian",
      "Numeric.MCMC.Metropolis",
      "Numeric.MCMC.Slice",
      "Pipes",
      "Pipes.Prelude",
      "System.Random.MWC.Probability"
    ],
    "modules": [
      "Numeric.MCMC"
    ],
    "name": "declarative",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [],
      "composition": [
        "Data.Composition"
      ],
      "contravariant": []
    },
    "imports": [
      "Control.Monad.Syntax.Five",
      "Control.Monad.Syntax.Four",
      "Control.Monad.Syntax.Six",
      "Control.Monad.Syntax.Three",
      "Control.Monad.Syntax.Two",
      "Data.Composition",
      "Data.Function.Apply",
      "Data.Function.Contravariant.Syntax",
      "Data.Function.Flip",
      "Data.Function.Slip",
      "Data.Function.Syntax",
      "Data.Function.Twist"
    ],
    "modules": [
      "Data.Function.Syntax",
      "Data.Function.Contravariant.Syntax",
      "Data.Function.Apply",
      "Data.Function.Flip",
      "Data.Function.Slip",
      "Data.Function.Twist",
      "Data.Functor.Syntax",
      "Control.Monad.Syntax",
      "Control.Monad.Syntax.Two",
      "Control.Monad.Syntax.Three",
      "Control.Monad.Syntax.Four",
      "Control.Monad.Syntax.Five",
      "Control.Monad.Syntax.Six"
    ],
    "name": "composition-extra",
    "version": "2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Data.Typeable",
        "GHC.Exts",
        "Numeric",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.IntMap",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "GHC.Exts",
      "Numeric",
      "System.Cmd",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "TagSoup.Benchmark",
      "TagSoup.Sample",
      "TagSoup.Test",
      "Test.QuickCheck",
      "Text.HTML.TagSoup",
      "Text.HTML.TagSoup.Entity",
      "Text.HTML.TagSoup.Generated",
      "Text.HTML.TagSoup.Implementation",
      "Text.HTML.TagSoup.Manual",
      "Text.HTML.TagSoup.Match",
      "Text.HTML.TagSoup.Options",
      "Text.HTML.TagSoup.Parser",
      "Text.HTML.TagSoup.Render",
      "Text.HTML.TagSoup.Specification",
      "Text.HTML.TagSoup.Type",
      "Text.StringLike"
    ],
    "modules": [
      "Text.HTML.TagSoup",
      "Text.HTML.TagSoup.Entity",
      "Text.HTML.TagSoup.Match",
      "Text.HTML.TagSoup.Tree",
      "Text.StringLike"
    ],
    "name": "tagsoup",
    "version": "0.14"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.IO",
        "Text.Printf"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "cipher-aes": [
        "Crypto.Cipher.AES"
      ],
      "cryptohash": [
        "Crypto.Hash.SHA256"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "mmap": [
        "System.IO.MMap"
      ],
      "random": [
        "System.Random"
      ],
      "storable-endian": [
        "Data.Storable.Endian"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Crypto.Cipher.AES",
      "Crypto.Hash.SHA256",
      "Data.Bits",
      "Data.BitSet",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Serialize",
      "Data.Storable.Endian",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Vhd",
      "Data.Vhd.Bat",
      "Data.Vhd.Batmap",
      "Data.Vhd.Bitmap",
      "Data.Vhd.Block",
      "Data.Vhd.Checksum",
      "Data.Vhd.Const",
      "Data.Vhd.Crypt",
      "Data.Vhd.Footer",
      "Data.Vhd.Geometry",
      "Data.Vhd.Header",
      "Data.Vhd.Lowlevel",
      "Data.Vhd.Node",
      "Data.Vhd.Serialize",
      "Data.Vhd.Time",
      "Data.Vhd.Types",
      "Data.Vhd.UniqueId",
      "Data.Vhd.Utils",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.IO",
      "System.IO.MMap",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Data.Vhd",
      "Data.Vhd.Lowlevel",
      "Data.Vhd.Time"
    ],
    "name": "vhd",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "System.Exit"
      ],
      "containers": [
        "Data.Map"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Aeson",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lift",
      "Language.Haskell.TH.Quote",
      "Paths",
      "System.Console.ANSI",
      "System.Console.Docopt",
      "System.Console.Docopt.ApplicativeParsec",
      "System.Console.Docopt.OptParse",
      "System.Console.Docopt.ParseUtils",
      "System.Console.Docopt.Public",
      "System.Console.Docopt.QQ",
      "System.Console.Docopt.QQ.Instances",
      "System.Console.Docopt.Types",
      "System.Console.Docopt.UsageParse",
      "System.Exit",
      "Test.HUnit",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "System.Console.Docopt.NoTH"
    ],
    "name": "docopt",
    "version": "0.7.0.4"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Void"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "dlist": [
        "Data.DList"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Except"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.Trans.Except",
      "Data.Aeson",
      "Data.Aeson.BetterErrors.Internal",
      "Data.Aeson.BetterErrors.Utils",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.DList",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Vector",
      "Data.Void"
    ],
    "modules": [
      "Data.Aeson.BetterErrors",
      "Data.Aeson.BetterErrors.Internal"
    ],
    "name": "aeson-better-errors",
    "version": "0.9.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Int",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Array",
        "Foreign.Storable"
      ],
      "bytestring": [
        "Data.ByteString.Internal"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Storable.Internal",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.ByteString.Internal",
      "Data.Int",
      "Data.Serialize",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Primitive",
      "Data.Vector.Serialize",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Internal",
      "Data.Vector.Storable.UnsafeSerialize",
      "Data.Vector.Unboxed",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Storable",
      "Test.QuickCheck.All"
    ],
    "modules": [
      "Data.Vector.Serialize",
      "Data.Vector.Storable.UnsafeSerialize"
    ],
    "name": "cereal-vector",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "attoparsec": [
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.ByteString",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [],
      "data-default": [
        "Data.Default"
      ],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "haskell-src-meta": [
        "Language.Haskell.Meta.Parse.Careful"
      ],
      "hreader": [
        "Control.Monad.HReader"
      ],
      "hset": [
        "Data.HSet"
      ],
      "inflections": [
        "Text.Inflections"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader",
        "Control.Monad.State.Class",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Class"
      ],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple",
        "Database.PostgreSQL.Simple.FromField",
        "Database.PostgreSQL.Simple.FromRow",
        "Database.PostgreSQL.Simple.HStore",
        "Database.PostgreSQL.Simple.Internal",
        "Database.PostgreSQL.Simple.ToField",
        "Database.PostgreSQL.Simple.ToRow",
        "Database.PostgreSQL.Simple.Transaction",
        "Database.PostgreSQL.Simple.Types"
      ],
      "resource-pool": [
        "Data.Pool"
      ],
      "semigroups": [],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "th-lift": [
        "Language.Haskell.TH.Lift"
      ],
      "th-lift-instances": [
        "Instances.TH.Lift"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": [],
      "type-fun": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.ByteString",
      "Blaze.ByteString.Builder.Char.Utf8",
      "BuilderTest",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.HReader",
      "Control.Monad.Logger",
      "Control.Monad.Reader",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Either",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Text",
      "Database.PostgreSQL.Query",
      "Database.PostgreSQL.Query.Entity",
      "Database.PostgreSQL.Query.Entity.Class",
      "Database.PostgreSQL.Query.Entity.Functions",
      "Database.PostgreSQL.Query.Entity.Internal",
      "Database.PostgreSQL.Query.Functions",
      "Database.PostgreSQL.Query.Internal",
      "Database.PostgreSQL.Query.SqlBuilder",
      "Database.PostgreSQL.Query.SqlBuilder.Builder",
      "Database.PostgreSQL.Query.SqlBuilder.Class",
      "Database.PostgreSQL.Query.SqlBuilder.Types",
      "Database.PostgreSQL.Query.TH",
      "Database.PostgreSQL.Query.TH.Common",
      "Database.PostgreSQL.Query.TH.Entity",
      "Database.PostgreSQL.Query.TH.Enum",
      "Database.PostgreSQL.Query.TH.Row",
      "Database.PostgreSQL.Query.TH.SqlExp",
      "Database.PostgreSQL.Query.Types",
      "Database.PostgreSQL.Simple",
      "Database.PostgreSQL.Simple.FromField",
      "Database.PostgreSQL.Simple.FromRow",
      "Database.PostgreSQL.Simple.HStore",
      "Database.PostgreSQL.Simple.Internal",
      "Database.PostgreSQL.Simple.ToField",
      "Database.PostgreSQL.Simple.ToRow",
      "Database.PostgreSQL.Simple.Transaction",
      "Database.PostgreSQL.Simple.Types",
      "Data.ByteString",
      "Data.Char",
      "Data.Default",
      "Data.Derive.Arbitrary",
      "Data.DeriveTH",
      "Data.FileEmbed",
      "Data.HSet",
      "Data.Int",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Pool",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Generics",
      "Instances.TH.Lift",
      "Language.Haskell.Meta.Parse.Careful",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lift",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "ParserTest",
      "Prelude",
      "Test.QuickCheck.Assertions",
      "Test.QuickCheck.Instances",
      "Test.QuickCheck.Modifiers",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.TH",
      "Text.Inflections"
    ],
    "modules": [
      "Database.PostgreSQL.Query",
      "Database.PostgreSQL.Query.Entity",
      "Database.PostgreSQL.Query.Entity.Class",
      "Database.PostgreSQL.Query.Entity.Functions",
      "Database.PostgreSQL.Query.Entity.Internal",
      "Database.PostgreSQL.Query.Functions",
      "Database.PostgreSQL.Query.Internal",
      "Database.PostgreSQL.Query.SqlBuilder",
      "Database.PostgreSQL.Query.SqlBuilder.Builder",
      "Database.PostgreSQL.Query.SqlBuilder.Class",
      "Database.PostgreSQL.Query.SqlBuilder.Types",
      "Database.PostgreSQL.Query.TH",
      "Database.PostgreSQL.Query.TH.Common",
      "Database.PostgreSQL.Query.TH.Entity",
      "Database.PostgreSQL.Query.TH.Enum",
      "Database.PostgreSQL.Query.TH.Row",
      "Database.PostgreSQL.Query.TH.SqlExp",
      "Database.PostgreSQL.Query.Types"
    ],
    "name": "postgresql-query",
    "version": "3.0.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.State",
      "Control.Monad.Trans.Resource",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Types",
      "Data.Binary",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Attoparsec",
      "Data.Conduit.Network",
      "Data.IntMap",
      "Data.IP",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Typeable",
      "Data.Word",
      "Data.Word8",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Network",
      "Network.BSD",
      "Network.DNS",
      "Network.DNS.Decode",
      "Network.DNS.Encode",
      "Network.DNS.Internal",
      "Network.DNS.Lookup",
      "Network.DNS.Resolver",
      "Network.DNS.StateBinary",
      "Network.DNS.Types",
      "Network.DNS.Utils",
      "Network.Socket",
      "Network.Socket.ByteString.Lazy",
      "Prelude",
      "Safe",
      "System.Random",
      "System.Timeout",
      "Test.DocTest",
      "Test.Hspec"
    ],
    "modules": [
      "Network.DNS",
      "Network.DNS.Lookup",
      "Network.DNS.Resolver",
      "Network.DNS.Utils",
      "Network.DNS.Types",
      "Network.DNS.Encode",
      "Network.DNS.Decode"
    ],
    "name": "dns",
    "version": "2.0.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.List",
        "Data.Maybe",
        "GHC.Generics",
        "GHC.Int",
        "GHC.Stats",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.Mem",
        "Text.Printf"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "mtl": [
        "Control.Monad.Writer"
      ],
      "process": [
        "System.Process"
      ],
      "split": [
        "Data.List.Split"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad.Writer",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.IntMap.Lazy",
      "Data.IntMap.Strict",
      "Data.List",
      "Data.List.Split",
      "Data.Map.Lazy",
      "Data.Map.Strict",
      "Data.Maybe",
      "GHC.Generics",
      "GHC.Int",
      "GHC.Stats",
      "Language.Haskell.TH",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.Mem",
      "System.Process",
      "Text.Printf",
      "Weigh",
      "Weigh.GHCStats"
    ],
    "modules": [
      "Weigh"
    ],
    "name": "weigh",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.Instances",
        "Control.Monad.IO.Class",
        "Data.Complex",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Functor.Sum",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Void",
        "Prelude"
      ],
      "comonad": [
        "Control.Comonad",
        "Control.Comonad.Env.Class",
        "Control.Comonad.Hoist.Class",
        "Control.Comonad.Store.Class",
        "Control.Comonad.Traced.Class",
        "Control.Comonad.Trans.Class",
        "Control.Comonad.Trans.Env",
        "Control.Comonad.Trans.Traced"
      ],
      "containers": [],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "distributive": [
        "Data.Distributive"
      ],
      "free": [
        "Control.Comonad.Cofree",
        "Control.Comonad.Cofree.Class",
        "Control.Monad.Free",
        "Control.Monad.Free.Class"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "semigroupoids": [
        "Data.Functor.Apply",
        "Data.Functor.Bind",
        "Data.Functor.Bind.Trans",
        "Data.Functor.Extend",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable"
      ],
      "semigroups": [],
      "tagged": [
        "Data.Tagged"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.Writer"
      ],
      "transformers-compat": [],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Comonad",
      "Control.Comonad.Cofree",
      "Control.Comonad.Cofree.Class",
      "Control.Comonad.Env.Class",
      "Control.Comonad.Hoist.Class",
      "Control.Comonad.Store.Class",
      "Control.Comonad.Traced.Class",
      "Control.Comonad.Trans.Class",
      "Control.Comonad.Trans.Env",
      "Control.Comonad.Trans.Traced",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Free",
      "Control.Monad.Free.Class",
      "Control.Monad.Identity",
      "Control.Monad.Instances",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Writer.Class",
      "Data.Complex",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Functor.Adjunction",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Bind.Trans",
      "Data.Functor.Compose",
      "Data.Functor.Contravariant",
      "Data.Functor.Contravariant.Adjunction",
      "Data.Functor.Contravariant.Rep",
      "Data.Functor.Extend",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Rep",
      "Data.Functor.Sum",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Traversable",
      "Data.Sequence",
      "Data.Tagged",
      "Data.Traversable",
      "Data.Void",
      "Prelude"
    ],
    "modules": [
      "Control.Comonad.Representable.Store",
      "Control.Comonad.Trans.Adjoint",
      "Control.Monad.Representable.Reader",
      "Control.Monad.Representable.State",
      "Control.Monad.Trans.Adjoint",
      "Control.Monad.Trans.Contravariant.Adjoint",
      "Control.Monad.Trans.Conts",
      "Data.Functor.Adjunction",
      "Data.Functor.Contravariant.Adjunction",
      "Data.Functor.Contravariant.Rep",
      "Data.Functor.Rep"
    ],
    "name": "adjunctions",
    "version": "4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad.ST",
        "Control.Monad.ST.Unsafe",
        "Data.IORef",
        "Data.Monoid",
        "Data.Unique",
        "GHC.Exts",
        "Prelude",
        "System.IO.Unsafe",
        "System.Mem.StableName",
        "Unsafe.Coerce"
      ],
      "containers": [],
      "hashable": [
        "Data.Hashable"
      ],
      "unordered-containers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad.ST",
      "Control.Monad.ST.Unsafe",
      "Data.Hashable",
      "Data.HashMap.LAZINESS",
      "Data.IORef",
      "Data.Monoid",
      "Data.Unique",
      "Data.Unique.Really",
      "Data.Vault.ST.LAZINESS",
      "GHC.Exts",
      "Prelude",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Vault.Lazy",
      "Data.Vault.Strict",
      "Data.Vault.ST.Lazy",
      "Data.Vault.ST.Strict",
      "Data.Unique.Really"
    ],
    "name": "vault",
    "version": "0.3.0.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.IO.Class"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "cryptohash": [
        "Crypto.Hash"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Resource",
      "Crypto.Hash",
      "Data.ByteString",
      "Data.Conduit",
      "Data.Conduit.Binary"
    ],
    "modules": [
      "Crypto.Hash.Conduit"
    ],
    "name": "cryptohash-conduit",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.Word",
        "System.Exit"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.TokenBucket",
      "Control.Exception",
      "Control.Monad",
      "Data.IORef",
      "Data.Time.Clock.POSIX",
      "Data.Word",
      "System.Exit"
    ],
    "modules": [
      "Control.Concurrent.TokenBucket"
    ],
    "name": "token-bucket",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "deepseq": [],
      "deepseq-generics": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.HIDAPI"
    ],
    "name": "hidapi",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Map"
      ],
      "persistable-record": [
        "Database.Record.Instances"
      ],
      "relational-query": [
        "Database.Relational.Query",
        "Database.Relational.Query.TH",
        "Database.Relational.Query.Type"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Database.Record.Instances",
      "Database.Relational.Query",
      "Database.Relational.Query.TH",
      "Database.Relational.Query.Type",
      "Database.Relational.Schema.DB2Syscat.Columns",
      "Database.Relational.Schema.DB2Syscat.Config",
      "Database.Relational.Schema.DB2Syscat.Keycoluse",
      "Database.Relational.Schema.DB2Syscat.Tabconst",
      "Database.Relational.Schema.MySQLInfo.Columns",
      "Database.Relational.Schema.MySQLInfo.Config",
      "Database.Relational.Schema.MySQLInfo.KeyColumnUsage",
      "Database.Relational.Schema.MySQLInfo.TableConstraints",
      "Database.Relational.Schema.OracleDataDictionary.Config",
      "Database.Relational.Schema.OracleDataDictionary.ConsColumns",
      "Database.Relational.Schema.OracleDataDictionary.Constraints",
      "Database.Relational.Schema.OracleDataDictionary.TabColumns",
      "Database.Relational.Schema.PgCatalog.Config",
      "Database.Relational.Schema.PgCatalog.PgAttribute",
      "Database.Relational.Schema.PgCatalog.PgClass",
      "Database.Relational.Schema.PgCatalog.PgConstraint",
      "Database.Relational.Schema.PgCatalog.PgNamespace",
      "Database.Relational.Schema.PgCatalog.PgType",
      "Database.Relational.Schema.SQLite3Syscat.Config",
      "Database.Relational.Schema.SQLite3Syscat.IndexInfo",
      "Database.Relational.Schema.SQLite3Syscat.IndexList",
      "Database.Relational.Schema.SQLite3Syscat.TableInfo",
      "Database.Relational.Schema.SQLServerSyscat.Columns",
      "Database.Relational.Schema.SQLServerSyscat.Config",
      "Database.Relational.Schema.SQLServerSyscat.IndexColumns",
      "Database.Relational.Schema.SQLServerSyscat.Indexes",
      "Database.Relational.Schema.SQLServerSyscat.Types",
      "Data.ByteString",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Time",
      "Language.Haskell.TH",
      "Prelude"
    ],
    "modules": [
      "Database.Relational.Schema.DB2Syscat.Columns",
      "Database.Relational.Schema.IBMDB2",
      "Database.Relational.Schema.PgCatalog.PgAttribute",
      "Database.Relational.Schema.PgCatalog.PgType",
      "Database.Relational.Schema.PostgreSQL",
      "Database.Relational.Schema.SQLServerSyscat.Columns",
      "Database.Relational.Schema.SQLServerSyscat.Types",
      "Database.Relational.Schema.SQLServer",
      "Database.Relational.Schema.SQLite3Syscat.IndexInfo",
      "Database.Relational.Schema.SQLite3Syscat.IndexList",
      "Database.Relational.Schema.SQLite3Syscat.TableInfo",
      "Database.Relational.Schema.SQLite3",
      "Database.Relational.Schema.OracleDataDictionary.TabColumns",
      "Database.Relational.Schema.Oracle",
      "Database.Relational.Schema.MySQLInfo.Columns",
      "Database.Relational.Schema.MySQL",
      "Database.Relational.Schema.DB2Syscat.Config",
      "Database.Relational.Schema.PgCatalog.Config",
      "Database.Relational.Schema.SQLServerSyscat.Config",
      "Database.Relational.Schema.SQLite3Syscat.Config",
      "Database.Relational.Schema.OracleDataDictionary.Config",
      "Database.Relational.Schema.MySQLInfo.Config"
    ],
    "name": "relational-schemas",
    "version": "0.1.3.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Attoparsec.ByteString",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Maybe",
      "Data.Word",
      "Network.IRC",
      "Network.IRC.Base",
      "Network.IRC.Commands",
      "Network.IRC.Parser",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Network.IRC",
      "Network.IRC.Base",
      "Network.IRC.Commands",
      "Network.IRC.Parser"
    ],
    "name": "irc",
    "version": "0.6.1.0"
  },
  {
    "dependencies": {
      "FontyFruity": [
        "Graphics.Text.TrueType"
      ],
      "JuicyPixels": [
        "Codec.Picture",
        "Codec.Picture.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Fixed",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Word",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Numeric",
        "Prelude",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [],
      "dlist": [
        "Data.DList"
      ],
      "free": [
        "Control.Monad.Free",
        "Control.Monad.Free.Church"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Class"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Storable.Mutable",
        "Data.Vector.Unboxed"
      ],
      "vector-algorithms": [
        "Data.Vector.Algorithms.Intro"
      ]
    },
    "imports": [
      "Codec.Picture",
      "Codec.Picture.Types",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Free",
      "Control.Monad.Free.Church",
      "Control.Monad.Identity",
      "Control.Monad.Primitive",
      "Control.Monad.Reader",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Data.Bits",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.DList",
      "Data.Fixed",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Algorithms.Intro",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Graphics.Rasterific",
      "Graphics.Rasterific.Command",
      "Graphics.Rasterific.ComplexPrimitive",
      "Graphics.Rasterific.Compositor",
      "Graphics.Rasterific.CubicBezier",
      "Graphics.Rasterific.Immediate",
      "Graphics.Rasterific.Line",
      "Graphics.Rasterific.Linear",
      "Graphics.Rasterific.MicroPdf",
      "Graphics.Rasterific.MiniLens",
      "Graphics.Rasterific.Operators",
      "Graphics.Rasterific.Outline",
      "Graphics.Rasterific.PathWalker",
      "Graphics.Rasterific.PlaneBoundable",
      "Graphics.Rasterific.QuadraticBezier",
      "Graphics.Rasterific.QuadraticFormula",
      "Graphics.Rasterific.Rasterize",
      "Graphics.Rasterific.Shading",
      "Graphics.Rasterific.StrokeInternal",
      "Graphics.Rasterific.Texture",
      "Graphics.Rasterific.Transformations",
      "Graphics.Rasterific.Types",
      "Graphics.Text.TrueType",
      "Linear",
      "Numeric",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "Text.Printf"
    ],
    "modules": [
      "Graphics.Rasterific",
      "Graphics.Rasterific.Outline",
      "Graphics.Rasterific.Texture",
      "Graphics.Rasterific.Linear",
      "Graphics.Rasterific.Lenses",
      "Graphics.Rasterific.Transformations",
      "Graphics.Rasterific.Immediate",
      "Graphics.Rasterific.PathWalker"
    ],
    "name": "Rasterific",
    "version": "0.6.1.1"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "GHC.IO.Exception",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.Read"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "process": [
        "System.Process"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TSem"
      ],
      "terminal-size": [
        "System.Console.Terminal.Size"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TSem",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Time.Clock",
      "GHC.IO.Exception",
      "Prelude",
      "System.Console.ANSI",
      "System.Console.Concurrent",
      "System.Console.Concurrent.Internal",
      "System.Console.Regions",
      "System.Console.Terminal.Size",
      "System.Directory",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix.Signals",
      "System.Posix.Signals.Exts",
      "System.Process",
      "Text.Read",
      "Utility.Data",
      "Utility.Exception",
      "Utility.Monad"
    ],
    "modules": [
      "System.Console.Concurrent",
      "System.Console.Concurrent.Internal",
      "System.Console.Regions",
      "System.Process.Concurrent"
    ],
    "name": "concurrent-output",
    "version": "1.7.7"
  },
  {
    "dependencies": {
      "HsOpenSSL": [
        "OpenSSL",
        "OpenSSL.Session"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.Word",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe",
        "System.Timeout"
      ],
      "base64-bytestring": [],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8",
        "Blaze.ByteString.Builder.HTTP"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "directory": [
        "System.Directory"
      ],
      "http-common": [
        "Network.Http.Internal",
        "Network.Http.RequestBuilder",
        "Network.Http.Types"
      ],
      "io-streams": [
        "System.IO.Streams",
        "System.IO.Streams.Attoparsec",
        "System.IO.Streams.Debug"
      ],
      "mtl": [],
      "openssl-streams": [
        "System.IO.Streams.SSL"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Blaze.ByteString.Builder.HTTP",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Aeson",
      "Data.Aeson.Encode.Pretty",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Typeable",
      "Data.Word",
      "Debug.Trace",
      "Filesystem",
      "Filesystem.Path.CurrentOS",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.Word",
      "MockServer",
      "Network.Http.Client",
      "Network.Http.Connection",
      "Network.Http.Inconvenience",
      "Network.Http.Internal",
      "Network.Http.RequestBuilder",
      "Network.Http.ResponseParser",
      "Network.Http.Types",
      "Network.Http.Utilities",
      "Network.Socket",
      "Network.URI",
      "OpenSSL",
      "OpenSSL.Session",
      "Prelude",
      "Snap.Core",
      "Snap.Http.Server",
      "Snap.Util.FileServe",
      "System.Directory",
      "System.IO",
      "System.IO.Streams",
      "System.IO.Streams.Attoparsec",
      "System.IO.Streams.Debug",
      "System.IO.Streams.SSL",
      "System.IO.Unsafe",
      "System.Timeout",
      "Test.Hspec",
      "Test.Hspec.Expectations",
      "Test.HUnit",
      "TestSuite"
    ],
    "modules": [
      "Network.Http.Client"
    ],
    "name": "http-streams",
    "version": "0.8.4.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.CPUTime",
        "System.IO"
      ],
      "binary": [],
      "bmp": [
        "Codec.BMP"
      ],
      "bytestring": [
        "Data.ByteString.Unsafe"
      ],
      "old-time": [
        "System.Time"
      ],
      "repa": [
        "Data.Array.Repa",
        "Data.Array.Repa.Repr.ByteString",
        "Data.Array.Repa.Repr.ForeignPtr",
        "Data.Array.Repa.Repr.Unboxed",
        "Data.Array.Repa.Unsafe"
      ],
      "vector": [
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Codec.BMP",
      "Control.Monad",
      "Data.Array.Repa",
      "Data.Array.Repa.IO.Internals.Text",
      "Data.Array.Repa.Repr.ByteString",
      "Data.Array.Repa.Repr.ForeignPtr",
      "Data.Array.Repa.Repr.Unboxed",
      "Data.Array.Repa.Unsafe",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.List",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "System.CPUTime",
      "System.IO",
      "System.Time"
    ],
    "modules": [
      "Data.Array.Repa.IO.Binary",
      "Data.Array.Repa.IO.BMP",
      "Data.Array.Repa.IO.Matrix",
      "Data.Array.Repa.IO.Timing",
      "Data.Array.Repa.IO.Vector"
    ],
    "name": "repa-io",
    "version": "3.4.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Maybe",
        "Data.Typeable",
        "System.IO"
      ],
      "bytestring": [],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "gd": [
        "Graphics.GD"
      ],
      "imagesize-conduit": [
        "Data.Conduit.ImageSize"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Either",
      "Control.Monad.Trans.Resource",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.ImageSize",
      "Data.Default",
      "Data.Maybe",
      "Data.Typeable",
      "Graphics.GD",
      "Graphics.ThumbnailPlus",
      "Graphics.ThumbnailPlus.ImageSize",
      "System.Directory",
      "System.IO",
      "System.IO.Temp",
      "Test.Hspec"
    ],
    "modules": [
      "Graphics.ThumbnailPlus",
      "Graphics.ThumbnailPlus.ImageSize"
    ],
    "name": "thumbnail-plus",
    "version": "1.0.5"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad.IO.Class",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable"
      ],
      "language-javascript": [
        "Language.JavaScript.Parser"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "webdriver": [
        "Test.WebDriver.Class",
        "Test.WebDriver.Commands",
        "Test.WebDriver.Commands.Internal",
        "Test.WebDriver.JSON"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad.IO.Class",
      "Data.Aeson",
      "Data.HashMap.Lazy",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Typeable",
      "Language.Haskell.TH",
      "Language.JavaScript.Parser",
      "Network.Wai.Application.Static",
      "Network.Wai.Handler.Warp",
      "NgSpec",
      "Test.Hspec",
      "Test.Hspec.WebDriver",
      "Test.WebDriver.Class",
      "Test.WebDriver.Commands",
      "Test.WebDriver.Commands.Angular",
      "Test.WebDriver.Commands.Internal",
      "Test.WebDriver.JSON"
    ],
    "modules": [
      "Test.WebDriver.Commands.Angular"
    ],
    "name": "webdriver-angular",
    "version": "0.1.11"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "array": [
        "Data.Array.IO"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Foldable",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "Numeric",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "connection": [
        "Network.Connection"
      ],
      "containers": [
        "Data.Set"
      ],
      "dns": [
        "Network.DNS"
      ],
      "dotnet-timespan": [
        "Data.DotNet.TimeSpan"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "protobuf": [
        "Data.ProtocolBuffers"
      ],
      "random": [
        "System.Random"
      ],
      "semigroups": [],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "uuid": [
        "Data.UUID",
        "Data.UUID.V4"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Array.IO",
      "Database.EventStore",
      "Database.EventStore.Internal.Connection",
      "Database.EventStore.Internal.Discovery",
      "Database.EventStore.Internal.Generator",
      "Database.EventStore.Internal.Manager.Operation.Model",
      "Database.EventStore.Internal.Manager.Subscription",
      "Database.EventStore.Internal.Manager.Subscription.Driver",
      "Database.EventStore.Internal.Manager.Subscription.Message",
      "Database.EventStore.Internal.Manager.Subscription.Model",
      "Database.EventStore.Internal.Manager.Subscription.Packages",
      "Database.EventStore.Internal.Operation",
      "Database.EventStore.Internal.Operation.Catchup",
      "Database.EventStore.Internal.Operation.DeleteStream",
      "Database.EventStore.Internal.Operation.DeleteStream.Message",
      "Database.EventStore.Internal.Operation.ReadAllEvents",
      "Database.EventStore.Internal.Operation.ReadAllEvents.Message",
      "Database.EventStore.Internal.Operation.Read.Common",
      "Database.EventStore.Internal.Operation.ReadEvent",
      "Database.EventStore.Internal.Operation.ReadEvent.Message",
      "Database.EventStore.Internal.Operation.ReadStreamEvents",
      "Database.EventStore.Internal.Operation.ReadStreamEvents.Message",
      "Database.EventStore.Internal.Operations",
      "Database.EventStore.Internal.Operation.StreamMetadata",
      "Database.EventStore.Internal.Operation.Transaction",
      "Database.EventStore.Internal.Operation.Transaction.Message",
      "Database.EventStore.Internal.Operation.Write.Common",
      "Database.EventStore.Internal.Operation.WriteEvents",
      "Database.EventStore.Internal.Operation.WriteEvents.Message",
      "Database.EventStore.Internal.Processor",
      "Database.EventStore.Internal.Stream",
      "Database.EventStore.Internal.Types",
      "Database.EventStore.Logging",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.DotNet.TimeSpan",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.ProtocolBuffers",
      "Data.Sequence",
      "Data.Serialize",
      "Data.Set",
      "Data.Text",
      "Data.Time",
      "Data.Traversable",
      "Data.Typeable",
      "Data.UUID",
      "Data.UUID.V4",
      "Data.Word",
      "GHC.Generics",
      "Network.Connection",
      "Network.DNS",
      "Network.HTTP.Client",
      "Numeric",
      "Prelude",
      "System.Random",
      "Tests",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.Ingredients.Basic"
    ],
    "modules": [
      "Database.EventStore",
      "Database.EventStore.Logging"
    ],
    "name": "eventstore",
    "version": "0.13.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "GHC.Exts",
        "Prelude"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Criterion.Main",
      "Data.Foldable",
      "Data.List",
      "Data.Monoid",
      "Data.Ord",
      "Data.SortedList",
      "GHC.Exts",
      "Prelude"
    ],
    "modules": [
      "Data.SortedList"
    ],
    "name": "sorted-list",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.DMS",
      "Test.AWS.DMS",
      "Test.AWS.DMS.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.DMS",
      "Network.AWS.DMS.AddTagsToResource",
      "Network.AWS.DMS.CreateEndpoint",
      "Network.AWS.DMS.CreateReplicationInstance",
      "Network.AWS.DMS.CreateReplicationSubnetGroup",
      "Network.AWS.DMS.CreateReplicationTask",
      "Network.AWS.DMS.DeleteEndpoint",
      "Network.AWS.DMS.DeleteReplicationInstance",
      "Network.AWS.DMS.DeleteReplicationSubnetGroup",
      "Network.AWS.DMS.DeleteReplicationTask",
      "Network.AWS.DMS.DescribeAccountAttributes",
      "Network.AWS.DMS.DescribeConnections",
      "Network.AWS.DMS.DescribeEndpointTypes",
      "Network.AWS.DMS.DescribeEndpoints",
      "Network.AWS.DMS.DescribeOrderableReplicationInstances",
      "Network.AWS.DMS.DescribeRefreshSchemasStatus",
      "Network.AWS.DMS.DescribeReplicationInstances",
      "Network.AWS.DMS.DescribeReplicationSubnetGroups",
      "Network.AWS.DMS.DescribeReplicationTasks",
      "Network.AWS.DMS.DescribeSchemas",
      "Network.AWS.DMS.DescribeTableStatistics",
      "Network.AWS.DMS.ListTagsForResource",
      "Network.AWS.DMS.ModifyEndpoint",
      "Network.AWS.DMS.ModifyReplicationInstance",
      "Network.AWS.DMS.ModifyReplicationSubnetGroup",
      "Network.AWS.DMS.RefreshSchemas",
      "Network.AWS.DMS.RemoveTagsFromResource",
      "Network.AWS.DMS.StartReplicationTask",
      "Network.AWS.DMS.StopReplicationTask",
      "Network.AWS.DMS.TestConnection",
      "Network.AWS.DMS.Types",
      "Network.AWS.DMS.Waiters"
    ],
    "name": "amazonka-dms",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.Monoid"
      ],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal",
        "Text.Blaze.Renderer.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [],
      "data-default": [
        "Data.Default"
      ],
      "exceptions": [],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "vector": [
        "Data.Vector"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Stream.Parse"
      ],
      "xml-types": [
        "Data.XML.Types"
      ],
      "zip-archive": [
        "Codec.Archive.Zip"
      ]
    },
    "imports": [
      "Codec.Archive.Zip",
      "Control.Applicative",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans.Resource",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Default",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Data.Vector",
      "Data.XML.Types",
      "Text.Blaze",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.Utf8",
      "Text.XML",
      "Text.XML.Stream.Parse",
      "Xlsx.Sheet",
      "Xlsx.Types",
      "Xlsx.Types.Class",
      "Xlsx.Types.Instances",
      "Xlsx.Types.Internal",
      "Xlsx.Writer"
    ],
    "modules": [
      "Xlsx.Writer",
      "Xlsx.Sheet",
      "Xlsx.Parse",
      "Xlsx.Types"
    ],
    "name": "xlsior",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.List",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Attoparsec",
        "Data.Conduit.Binary",
        "Data.Conduit.Text"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "operational": [
        "Control.Monad.Operational"
      ],
      "process": [
        "System.Process"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Operational",
      "Control.Monad.Reader",
      "Control.Monad.Trans.Resource",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Attoparsec",
      "Data.Conduit.Binary",
      "Data.Conduit.Internal",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.List",
      "Data.Text",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Process"
    ],
    "modules": [
      "System.Serf",
      "System.Serf.Handler"
    ],
    "name": "serf",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": []
    },
    "imports": [
      "Data.Aeson"
    ],
    "modules": [
      "Data.Aeson.Generic.Compat"
    ],
    "name": "aeson-generic-compat",
    "version": "0.0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Int"
      ],
      "ekg-core": [
        "System.Metrics",
        "System.Metrics.Counter",
        "System.Metrics.Distribution"
      ],
      "http-types": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Control.Monad",
      "Criterion.Main",
      "Data.ByteString",
      "Data.Int",
      "Data.Text",
      "Network.Wai",
      "Network.Wai.Metrics",
      "Network.Wai.Test",
      "System.Metrics",
      "System.Metrics.Counter",
      "System.Metrics.Distribution",
      "Test.QuickCheck.Monadic",
      "Test.Tasty.QuickCheck",
      "Web.Scotty"
    ],
    "modules": [
      "Network.Wai.Metrics"
    ],
    "name": "wai-middleware-metrics",
    "version": "0.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.List",
        "Data.Monoid",
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "directory": [
        "System.Directory"
      ],
      "pager": [],
      "process": [
        "System.Process"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "safe": [
        "Safe"
      ],
      "terminfo": [
        "System.Console.Terminfo"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "transformers": [],
      "unix": [
        "System.Posix.ByteString"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Paths",
      "Safe",
      "System.Console.Terminfo",
      "System.Directory",
      "System.Exit",
      "System.IO",
      "System.Pager",
      "System.Posix.ByteString",
      "System.Process"
    ],
    "modules": [
      "System.Pager"
    ],
    "name": "pager",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "Win32": [
        "Graphics.Win32",
        "Graphics.Win32.GDI.Types",
        "Graphics.Win32.Misc",
        "Graphics.Win32.Window",
        "System.Win32.Console",
        "System.Win32.DLL",
        "System.Win32.File",
        "System.Win32.Info",
        "System.Win32.NLS",
        "System.Win32.Process",
        "System.Win32.Time",
        "System.Win32.Types"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Functor",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Unsafe",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO.Error"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Functor",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Unsafe",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Graphics.Win32",
      "Graphics.Win32.GDI.Types",
      "Graphics.Win32.Misc",
      "Graphics.Win32.Window",
      "Prelude",
      "System.IO.Error",
      "System.Win32.Console",
      "System.Win32.Console.Title",
      "System.Win32.DLL",
      "System.Win32.DLL.LoadFunction",
      "System.Win32.Encoding",
      "System.Win32.Error",
      "System.Win32.Exception.Unsupported",
      "System.Win32.File",
      "System.Win32.Info",
      "System.Win32.NLS",
      "System.Win32.Process",
      "System.Win32.Process.Current",
      "System.Win32.String",
      "System.Win32.Time",
      "System.Win32.Types",
      "System.Win32.Types.Compat",
      "System.Win32.Word"
    ],
    "modules": [
      "Graphics.Win32.Compat",
      "Graphics.Win32.LayeredWindow",
      "Graphics.Win32.SafeImport",
      "Graphics.Win32.GDI.AlphaBlend",
      "Graphics.Win32.Window.HotKey",
      "Graphics.Win32.Window.IMM",
      "Graphics.Win32.Window.ForegroundWindow",
      "Graphics.Win32.Window.PostMessage",
      "Media.Win32",
      "System.Win32.Console.CtrlHandler",
      "System.Win32.Console.HWND",
      "System.Win32.Console.Title",
      "System.Win32.DLL.LoadFunction",
      "System.Win32.Encoding",
      "System.Win32.Error",
      "System.Win32.Exception.Unsupported",
      "System.Win32.HardLink",
      "System.Win32.Info.Computer",
      "System.Win32.Info.Version",
      "System.Win32.Process.Current",
      "System.Win32.String",
      "System.Win32.SymbolicLink",
      "System.Win32.Types.Compat",
      "System.Win32.Utils",
      "System.Win32.Word"
    ],
    "name": "Win32-extras",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "Agda": [],
      "EdisonAPI": [],
      "EdisonCore": [
        "Data.Edison.Seq.BankersQueue",
        "Data.Edison.Seq.SimpleQueue"
      ],
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "array": [
        "Data.Array",
        "Data.Array.Base",
        "Data.Array.IArray"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Bits",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Classes",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Version",
        "Data.Void",
        "Data.Word",
        "Debug.Trace",
        "GHC.Exts",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.CPUTime",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Timeout",
        "Text.Show.Functions",
        "Unsafe.Coerce"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "boxes": [
        "Text.PrettyPrint.Boxes"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntMap.Strict",
        "Data.IntSet",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "data-hash": [
        "Data.Hash"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "edit-distance": [
        "Text.EditDistance"
      ],
      "equivalence": [
        "Data.Equivalence.Monad"
      ],
      "filemanip": [
        "System.FilePath.Find"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "geniplate-mirror": [
        "Data.Generics.Geniplate"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hashtables": [
        "Data.HashTable.IO"
      ],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts",
        "Language.Haskell.Exts.Extension",
        "Language.Haskell.Exts.Parser",
        "Language.Haskell.Exts.Pretty",
        "Language.Haskell.Exts.Syntax"
      ],
      "monadplus": [
        "Control.Monad.Plus"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Strict"
      ],
      "parallel": [],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "process": [
        "System.Process"
      ],
      "strict": [
        "Data.Strict.Maybe"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "xhtml": [
        "Text.XHtml.Strict"
      ]
    },
    "imports": [
      "Agda.Auto.Auto",
      "Agda.Auto.CaseSplit",
      "Agda.Auto.Convert",
      "Agda.Auto.NarrowingSearch",
      "Agda.Auto.SearchControl",
      "Agda.Auto.Syntax",
      "Agda.Auto.Typecheck",
      "Agda.Benchmarking",
      "Agda.Compiler.CallCompiler",
      "Agda.Compiler.Common",
      "Agda.Compiler.Epic.AuxAST",
      "Agda.Compiler.Epic.CaseOpts",
      "Agda.Compiler.Epic.Compiler",
      "Agda.Compiler.Epic.CompileState",
      "Agda.Compiler.Epic.Epic",
      "Agda.Compiler.Epic.Erasure",
      "Agda.Compiler.Epic.ForceConstrs",
      "Agda.Compiler.Epic.Forcing",
      "Agda.Compiler.Epic.FromAgda",
      "Agda.Compiler.Epic.Injection",
      "Agda.Compiler.Epic.Interface",
      "Agda.Compiler.Epic.NatDetection",
      "Agda.Compiler.Epic.Primitive",
      "Agda.Compiler.Epic.Smashing",
      "Agda.Compiler.Epic.Static",
      "Agda.Compiler.HaskellTypes",
      "Agda.Compiler.JS.Case",
      "Agda.Compiler.JS.Compiler",
      "Agda.Compiler.JS.Parser",
      "Agda.Compiler.JS.Pretty",
      "Agda.Compiler.JS.Substitution",
      "Agda.Compiler.JS.Syntax",
      "Agda.Compiler.MAlonzo.Compiler",
      "Agda.Compiler.MAlonzo.Encode",
      "Agda.Compiler.MAlonzo.Misc",
      "Agda.Compiler.MAlonzo.Pretty",
      "Agda.Compiler.MAlonzo.Primitives",
      "Agda.Compiler.ToTreeless",
      "Agda.Compiler.Treeless.Builtin",
      "Agda.Compiler.Treeless.Compare",
      "Agda.Compiler.Treeless.Erase",
      "Agda.Compiler.Treeless.GuardsToPrims",
      "Agda.Compiler.Treeless.NormalizeNames",
      "Agda.Compiler.Treeless.Pretty",
      "Agda.Compiler.Treeless.Simplify",
      "Agda.Compiler.Treeless.Subst",
      "Agda.Compiler.Treeless.Uncase",
      "Agda.Compiler.Treeless.Unused",
      "Agda.Compiler.UHC.Bridge",
      "Agda.Compiler.UHC.Compiler",
      "Agda.Compiler.UHC.CompileState",
      "Agda.Compiler.UHC.FromAgda",
      "Agda.Compiler.UHC.MagicTypes",
      "Agda.Compiler.UHC.Pragmas.Base",
      "Agda.Compiler.UHC.Pragmas.Parse",
      "Agda.Compiler.UHC.Primitives",
      "Agda.ImpossibleTest",
      "Agda.Interaction.BasicOps",
      "Agda.Interaction.CommandLine",
      "Agda.Interaction.EmacsCommand",
      "Agda.Interaction.EmacsTop",
      "Agda.Interaction.Exceptions",
      "Agda.Interaction.FindFile",
      "Agda.Interaction.Highlighting.Dot",
      "Agda.Interaction.Highlighting.Emacs",
      "Agda.Interaction.Highlighting.Generate",
      "Agda.Interaction.Highlighting.HTML",
      "Agda.Interaction.Highlighting.LaTeX",
      "Agda.Interaction.Highlighting.Precise",
      "Agda.Interaction.Highlighting.Range",
      "Agda.Interaction.Highlighting.Vim",
      "Agda.Interaction.Imports",
      "Agda.Interaction.InteractionTop",
      "Agda.Interaction.Library",
      "Agda.Interaction.Library.Base",
      "Agda.Interaction.Library.Parse",
      "Agda.Interaction.MakeCase",
      "Agda.Interaction.Monad",
      "Agda.Interaction.Options",
      "Agda.Interaction.Options.Lenses",
      "Agda.Interaction.Response",
      "Agda.Interaction.SearchAbout",
      "Agda.Main",
      "Agda.Syntax.Abstract",
      "Agda.Syntax.Abstract.Name",
      "Agda.Syntax.Abstract.Pretty",
      "Agda.Syntax.Abstract.Views",
      "Agda.Syntax.Common",
      "Agda.Syntax.Concrete",
      "Agda.Syntax.Concrete.Definitions",
      "Agda.Syntax.Concrete.Generic",
      "Agda.Syntax.Concrete.Name",
      "Agda.Syntax.Concrete.Operators",
      "Agda.Syntax.Concrete.Operators.Parser",
      "Agda.Syntax.Concrete.Pretty",
      "Agda.Syntax.Fixity",
      "Agda.Syntax.Info",
      "Agda.Syntax.Internal",
      "Agda.Syntax.Internal.Defs",
      "Agda.Syntax.Internal.Generic",
      "Agda.Syntax.Internal.Names",
      "Agda.Syntax.Internal.Pattern",
      "Agda.Syntax.Literal",
      "Agda.Syntax.Notation",
      "Agda.Syntax.Parser",
      "Agda.Syntax.Parser.Alex",
      "Agda.Syntax.Parser.Comments",
      "Agda.Syntax.Parser.LexActions",
      "Agda.Syntax.Parser.Lexer",
      "Agda.Syntax.Parser.LookAhead",
      "Agda.Syntax.Parser.Monad",
      "Agda.Syntax.Parser.Parser",
      "Agda.Syntax.Parser.StringLiterals",
      "Agda.Syntax.Parser.Tokens",
      "Agda.Syntax.Position",
      "Agda.Syntax.Reflected",
      "Agda.Syntax.Scope.Base",
      "Agda.Syntax.Scope.Monad",
      "Agda.Syntax.Translation.AbstractToConcrete",
      "Agda.Syntax.Translation.ConcreteToAbstract",
      "Agda.Syntax.Translation.InternalToAbstract",
      "Agda.Syntax.Translation.ReflectedToAbstract",
      "Agda.Syntax.Treeless",
      "Agda.Termination.CallGraph",
      "Agda.Termination.CallMatrix",
      "Agda.Termination.CutOff",
      "Agda.Termination.Inlining",
      "Agda.Termination.Monad",
      "Agda.Termination.Order",
      "Agda.Termination.RecCheck",
      "Agda.Termination.Semiring",
      "Agda.Termination.SparseMatrix",
      "Agda.Termination.TermCheck",
      "Agda.Termination.Termination",
      "Agda.Tests",
      "Agda.TheTypeChecker",
      "Agda.TypeChecking.Abstract",
      "Agda.TypeChecking.CheckInternal",
      "Agda.TypeChecking.CompiledClause",
      "Agda.TypeChecking.CompiledClause.Compile",
      "Agda.TypeChecking.Constraints",
      "Agda.TypeChecking.Conversion",
      "Agda.TypeChecking.Coverage",
      "Agda.TypeChecking.Coverage.Match",
      "Agda.TypeChecking.Coverage.SplitTree",
      "Agda.TypeChecking.Datatypes",
      "Agda.TypeChecking.DeadCode",
      "Agda.TypeChecking.DisplayForm",
      "Agda.TypeChecking.DropArgs",
      "Agda.TypeChecking.Errors",
      "Agda.TypeChecking.EtaContract",
      "Agda.TypeChecking.Forcing",
      "Agda.TypeChecking.Free",
      "Agda.TypeChecking.Free.Lazy",
      "Agda.TypeChecking.Free.Old",
      "Agda.TypeChecking.Free.Tests",
      "Agda.TypeChecking.Implicit",
      "Agda.TypeChecking.Injectivity",
      "Agda.TypeChecking.InstanceArguments",
      "Agda.TypeChecking.Irrelevance",
      "Agda.TypeChecking.Level",
      "Agda.TypeChecking.LevelConstraints",
      "Agda.TypeChecking.MetaVars",
      "Agda.TypeChecking.MetaVars.Occurs",
      "Agda.TypeChecking.Monad",
      "Agda.TypeChecking.Monad.Base",
      "Agda.TypeChecking.Monad.Benchmark",
      "Agda.TypeChecking.Monad.Builtin",
      "Agda.TypeChecking.Monad.Caching",
      "Agda.TypeChecking.Monad.Closure",
      "Agda.TypeChecking.Monad.Constraints",
      "Agda.TypeChecking.Monad.Context",
      "Agda.TypeChecking.Monad.Env",
      "Agda.TypeChecking.Monad.Exception",
      "Agda.TypeChecking.Monad.Imports",
      "Agda.TypeChecking.Monad.MetaVars",
      "Agda.TypeChecking.Monad.Mutual",
      "Agda.TypeChecking.Monad.Open",
      "Agda.TypeChecking.Monad.Options",
      "Agda.TypeChecking.Monad.Sharing",
      "Agda.TypeChecking.Monad.Signature",
      "Agda.TypeChecking.Monad.SizedTypes",
      "Agda.TypeChecking.Monad.State",
      "Agda.TypeChecking.Monad.Statistics",
      "Agda.TypeChecking.Monad.Trace",
      "Agda.TypeChecking.Patterns.Abstract",
      "Agda.TypeChecking.Polarity",
      "Agda.TypeChecking.Positivity",
      "Agda.TypeChecking.Positivity.Occurrence",
      "Agda.TypeChecking.Positivity.Tests",
      "Agda.TypeChecking.Pretty",
      "Agda.TypeChecking.Primitive",
      "Agda.TypeChecking.ProjectionLike",
      "Agda.TypeChecking.Quote",
      "Agda.TypeChecking.ReconstructParameters",
      "Agda.TypeChecking.RecordPatterns",
      "Agda.TypeChecking.Records",
      "Agda.TypeChecking.Reduce",
      "Agda.TypeChecking.Reduce.Monad",
      "Agda.TypeChecking.Rewriting",
      "Agda.TypeChecking.Rewriting.NonLinMatch",
      "Agda.TypeChecking.Rules.Builtin",
      "Agda.TypeChecking.Rules.Data",
      "Agda.TypeChecking.Rules.Decl",
      "Agda.TypeChecking.Rules.Def",
      "Agda.TypeChecking.Rules.Display",
      "Agda.TypeChecking.Rules.LHS",
      "Agda.TypeChecking.Rules.LHS.Implicit",
      "Agda.TypeChecking.Rules.LHS.Instantiate",
      "Agda.TypeChecking.Rules.LHS.Problem",
      "Agda.TypeChecking.Rules.LHS.ProblemRest",
      "Agda.TypeChecking.Rules.LHS.Split",
      "Agda.TypeChecking.Rules.LHS.Unify",
      "Agda.TypeChecking.Rules.Record",
      "Agda.TypeChecking.Rules.Term",
      "Agda.TypeChecking.Serialise",
      "Agda.TypeChecking.Serialise.Base",
      "Agda.TypeChecking.Serialise.Instances",
      "Agda.TypeChecking.Serialise.Instances.Abstract",
      "Agda.TypeChecking.Serialise.Instances.Common",
      "Agda.TypeChecking.Serialise.Instances.Compilers",
      "Agda.TypeChecking.Serialise.Instances.Highlighting",
      "Agda.TypeChecking.Serialise.Instances.Internal",
      "Agda.TypeChecking.SizedTypes",
      "Agda.TypeChecking.SizedTypes.Solve",
      "Agda.TypeChecking.SizedTypes.Syntax",
      "Agda.TypeChecking.SizedTypes.Tests",
      "Agda.TypeChecking.SizedTypes.Utils",
      "Agda.TypeChecking.SizedTypes.WarshallSolver",
      "Agda.TypeChecking.Substitute",
      "Agda.TypeChecking.Substitute.Pattern",
      "Agda.TypeChecking.SyntacticEquality",
      "Agda.TypeChecking.Telescope",
      "Agda.TypeChecking.Test.Generators",
      "Agda.TypeChecking.Tests",
      "Agda.TypeChecking.Unquote",
      "Agda.TypeChecking.With",
      "Agda.Utils.AssocList",
      "Agda.Utils.Bag",
      "Agda.Utils.Benchmark",
      "Agda.Utils.BiMap",
      "Agda.Utils.Char",
      "Agda.Utils.Cluster",
      "Agda.Utils.Either",
      "Agda.Utils.Empty",
      "Agda.Utils.Environment",
      "Agda.Utils.Except",
      "Agda.Utils.Favorites",
      "Agda.Utils.FileName",
      "Agda.Utils.Function",
      "Agda.Utils.Functor",
      "Agda.Utils.Geniplate",
      "Agda.Utils.Graph.AdjacencyMap.Unidirectional",
      "Agda.Utils.Graph.AdjacencyMap.Unidirectional.Tests",
      "Agda.Utils.Hash",
      "Agda.Utils.HashMap",
      "Agda.Utils.Impossible",
      "Agda.Utils.IO.Binary",
      "Agda.Utils.IO.Directory",
      "Agda.Utils.IORef",
      "Agda.Utils.IO.UTF8",
      "Agda.Utils.Lens",
      "Agda.Utils.List",
      "Agda.Utils.ListT",
      "Agda.Utils.ListT.Tests",
      "Agda.Utils.Map",
      "Agda.Utils.Maybe",
      "Agda.Utils.Maybe.Strict",
      "Agda.Utils.Memo",
      "Agda.Utils.Monad",
      "Agda.Utils.Null",
      "Agda.Utils.Parser.MemoisedCPS",
      "Agda.Utils.Parser.ReadP",
      "Agda.Utils.PartialOrd",
      "Agda.Utils.Permutation",
      "Agda.Utils.Permutation.Tests",
      "Agda.Utils.Pointer",
      "Agda.Utils.Pretty",
      "Agda.Utils.QuickCheck",
      "Agda.Utils.SemiRing",
      "Agda.Utils.Singleton",
      "Agda.Utils.Size",
      "Agda.Utils.String",
      "Agda.Utils.Suffix",
      "Agda.Utils.TestHelpers",
      "Agda.Utils.Time",
      "Agda.Utils.Trie",
      "Agda.Utils.Tuple",
      "Agda.Utils.Update",
      "Agda.Utils.VarSet",
      "Agda.Utils.Warshall",
      "Agda.Version",
      "Array",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Fix",
      "Control.Monad.Identity",
      "Control.Monad.Plus",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Strict",
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Edison.Seq.BankersQueue",
      "Data.Edison.Seq.SimpleQueue",
      "Data.Either",
      "Data.Equivalence.Monad",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Generics.Geniplate",
      "Data.Graph",
      "Data.Hash",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.HashTable.IO",
      "Data.Int",
      "Data.IntMap",
      "Data.IntMap.Strict",
      "Data.IntSet",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Sequence",
      "Data.Set",
      "Data.Strict.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Data.Tree",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Debug.Trace",
      "ExtractNames",
      "Find",
      "FixProf",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.Prim",
      "GlaExts",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.Extension",
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.Pretty",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.TH",
      "Numeric",
      "Paths",
      "Prelude",
      "ResolveHsNames",
      "System.Console.GetOpt",
      "System.Console.Haskeline",
      "System.CPUTime",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Find",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "System.Timeout",
      "System.Win32",
      "Test.QuickCheck",
      "Test.QuickCheck.All",
      "Test.QuickCheck.Function",
      "Text.EditDistance",
      "Text.PrettyPrint",
      "Text.PrettyPrint.Boxes",
      "Text.Show.Functions",
      "Text.XHtml.Strict",
      "UHC.Light.Compiler.Base.API",
      "UHC.Light.Compiler.Core.API",
      "UHC.OldException",
      "UHC.Util.ParseUtils",
      "UHC.Util.Pretty",
      "UHC.Util.ScanUtils",
      "UHC.Util.Serialize",
      "Unsafe.Coerce",
      "UU.Scanner.Position"
    ],
    "modules": [
      "Agda.Auto.Auto",
      "Agda.Auto.CaseSplit",
      "Agda.Auto.Convert",
      "Agda.Auto.NarrowingSearch",
      "Agda.Auto.SearchControl",
      "Agda.Auto.Syntax",
      "Agda.Auto.Typecheck",
      "Agda.Benchmarking",
      "Agda.Compiler.CallCompiler",
      "Agda.Compiler.Common",
      "Agda.Compiler.Epic.AuxAST",
      "Agda.Compiler.Epic.CaseOpts",
      "Agda.Compiler.Epic.Compiler",
      "Agda.Compiler.Epic.CompileState",
      "Agda.Compiler.Epic.Epic",
      "Agda.Compiler.Epic.Erasure",
      "Agda.Compiler.Epic.ForceConstrs",
      "Agda.Compiler.Epic.Forcing",
      "Agda.Compiler.Epic.FromAgda",
      "Agda.Compiler.Epic.Injection",
      "Agda.Compiler.Epic.Interface",
      "Agda.Compiler.Epic.NatDetection",
      "Agda.Compiler.Epic.Primitive",
      "Agda.Compiler.Epic.Smashing",
      "Agda.Compiler.Epic.Static",
      "Agda.Compiler.HaskellTypes",
      "Agda.Compiler.JS.Case",
      "Agda.Compiler.JS.Compiler",
      "Agda.Compiler.JS.Syntax",
      "Agda.Compiler.JS.Substitution",
      "Agda.Compiler.JS.Parser",
      "Agda.Compiler.JS.Pretty",
      "Agda.Compiler.MAlonzo.Compiler",
      "Agda.Compiler.MAlonzo.Encode",
      "Agda.Compiler.MAlonzo.Misc",
      "Agda.Compiler.MAlonzo.Pretty",
      "Agda.Compiler.MAlonzo.Primitives",
      "Agda.Compiler.ToTreeless",
      "Agda.Compiler.Treeless.Builtin",
      "Agda.Compiler.Treeless.Compare",
      "Agda.Compiler.Treeless.Erase",
      "Agda.Compiler.Treeless.GuardsToPrims",
      "Agda.Compiler.Treeless.NormalizeNames",
      "Agda.Compiler.Treeless.Pretty",
      "Agda.Compiler.Treeless.Simplify",
      "Agda.Compiler.Treeless.Subst",
      "Agda.Compiler.Treeless.Uncase",
      "Agda.Compiler.Treeless.Unused",
      "Agda.Compiler.UHC.Bridge",
      "Agda.Compiler.UHC.Compiler",
      "Agda.Compiler.UHC.CompileState",
      "Agda.Compiler.UHC.FromAgda",
      "Agda.Compiler.UHC.MagicTypes",
      "Agda.Compiler.UHC.Pragmas.Base",
      "Agda.Compiler.UHC.Pragmas.Parse",
      "Agda.Compiler.UHC.Primitives",
      "Agda.Compiler.UHC.Smashing",
      "Agda.ImpossibleTest",
      "Agda.Interaction.BasicOps",
      "Agda.Interaction.SearchAbout",
      "Agda.Interaction.CommandLine",
      "Agda.Interaction.EmacsCommand",
      "Agda.Interaction.EmacsTop",
      "Agda.Interaction.Exceptions",
      "Agda.Interaction.FindFile",
      "Agda.Interaction.Highlighting.Dot",
      "Agda.Interaction.Highlighting.Emacs",
      "Agda.Interaction.Highlighting.Generate",
      "Agda.Interaction.Highlighting.HTML",
      "Agda.Interaction.Highlighting.Precise",
      "Agda.Interaction.Highlighting.Range",
      "Agda.Interaction.Highlighting.Vim",
      "Agda.Interaction.Highlighting.LaTeX",
      "Agda.Interaction.Imports",
      "Agda.Interaction.InteractionTop",
      "Agda.Interaction.Response",
      "Agda.Interaction.MakeCase",
      "Agda.Interaction.Monad",
      "Agda.Interaction.Library",
      "Agda.Interaction.Library.Base",
      "Agda.Interaction.Library.Parse",
      "Agda.Interaction.Options",
      "Agda.Interaction.Options.Lenses",
      "Agda.Main",
      "Agda.Syntax.Abstract.Copatterns",
      "Agda.Syntax.Abstract.Name",
      "Agda.Syntax.Abstract.Pretty",
      "Agda.Syntax.Abstract.Views",
      "Agda.Syntax.Abstract",
      "Agda.Syntax.Common",
      "Agda.Syntax.Concrete.Definitions",
      "Agda.Syntax.Concrete.Generic",
      "Agda.Syntax.Concrete.Name",
      "Agda.Syntax.Concrete.Operators.Parser",
      "Agda.Syntax.Concrete.Operators",
      "Agda.Syntax.Concrete.Pretty",
      "Agda.Syntax.Concrete",
      "Agda.Syntax.Fixity",
      "Agda.Syntax.Info",
      "Agda.Syntax.Internal",
      "Agda.Syntax.Internal.Defs",
      "Agda.Syntax.Internal.Generic",
      "Agda.Syntax.Internal.Names",
      "Agda.Syntax.Internal.Pattern",
      "Agda.Syntax.Literal",
      "Agda.Syntax.Notation",
      "Agda.Syntax.Parser.Alex",
      "Agda.Syntax.Parser.Comments",
      "Agda.Syntax.Parser.Layout",
      "Agda.Syntax.Parser.LexActions",
      "Agda.Syntax.Parser.Lexer",
      "Agda.Syntax.Parser.LookAhead",
      "Agda.Syntax.Parser.Monad",
      "Agda.Syntax.Parser.Parser",
      "Agda.Syntax.Parser.StringLiterals",
      "Agda.Syntax.Parser.Tokens",
      "Agda.Syntax.Parser",
      "Agda.Syntax.Position",
      "Agda.Syntax.Reflected",
      "Agda.Syntax.Scope.Base",
      "Agda.Syntax.Scope.Monad",
      "Agda.Syntax.Translation.AbstractToConcrete",
      "Agda.Syntax.Translation.ConcreteToAbstract",
      "Agda.Syntax.Translation.InternalToAbstract",
      "Agda.Syntax.Translation.ReflectedToAbstract",
      "Agda.Syntax.Treeless",
      "Agda.Termination.CallGraph",
      "Agda.Termination.CallMatrix",
      "Agda.Termination.CutOff",
      "Agda.Termination.Inlining",
      "Agda.Termination.Monad",
      "Agda.Termination.Order",
      "Agda.Termination.RecCheck",
      "Agda.Termination.SparseMatrix",
      "Agda.Termination.Semiring",
      "Agda.Termination.TermCheck",
      "Agda.Termination.Termination",
      "Agda.Tests",
      "Agda.TheTypeChecker",
      "Agda.TypeChecking.Abstract",
      "Agda.TypeChecking.CheckInternal",
      "Agda.TypeChecking.CompiledClause",
      "Agda.TypeChecking.CompiledClause.Compile",
      "Agda.TypeChecking.CompiledClause.Match",
      "Agda.TypeChecking.Constraints",
      "Agda.TypeChecking.Conversion",
      "Agda.TypeChecking.Coverage",
      "Agda.TypeChecking.Coverage.Match",
      "Agda.TypeChecking.Coverage.SplitTree",
      "Agda.TypeChecking.Datatypes",
      "Agda.TypeChecking.DeadCode",
      "Agda.TypeChecking.DisplayForm",
      "Agda.TypeChecking.DropArgs",
      "Agda.TypeChecking.Empty",
      "Agda.TypeChecking.EtaContract",
      "Agda.TypeChecking.Errors",
      "Agda.TypeChecking.Free",
      "Agda.TypeChecking.Free.Lazy",
      "Agda.TypeChecking.Free.Old",
      "Agda.TypeChecking.Free.Tests",
      "Agda.TypeChecking.Forcing",
      "Agda.TypeChecking.Implicit",
      "Agda.TypeChecking.Injectivity",
      "Agda.TypeChecking.InstanceArguments",
      "Agda.TypeChecking.Irrelevance",
      "Agda.TypeChecking.Level",
      "Agda.TypeChecking.LevelConstraints",
      "Agda.TypeChecking.MetaVars",
      "Agda.TypeChecking.MetaVars.Mention",
      "Agda.TypeChecking.MetaVars.Occurs",
      "Agda.TypeChecking.Monad.Base",
      "Agda.TypeChecking.Monad.Benchmark",
      "Agda.TypeChecking.Monad.Builtin",
      "Agda.TypeChecking.Monad.Caching",
      "Agda.TypeChecking.Monad.Closure",
      "Agda.TypeChecking.Monad.Constraints",
      "Agda.TypeChecking.Monad.Context",
      "Agda.TypeChecking.Monad.Env",
      "Agda.TypeChecking.Monad.Exception",
      "Agda.TypeChecking.Monad.Imports",
      "Agda.TypeChecking.Monad.MetaVars",
      "Agda.TypeChecking.Monad.Mutual",
      "Agda.TypeChecking.Monad.Open",
      "Agda.TypeChecking.Monad.Options",
      "Agda.TypeChecking.Monad.Sharing",
      "Agda.TypeChecking.Monad.Signature",
      "Agda.TypeChecking.Monad.SizedTypes",
      "Agda.TypeChecking.Monad.State",
      "Agda.TypeChecking.Monad.Statistics",
      "Agda.TypeChecking.Monad.Trace",
      "Agda.TypeChecking.Monad",
      "Agda.TypeChecking.Patterns.Abstract",
      "Agda.TypeChecking.Patterns.Match",
      "Agda.TypeChecking.Polarity",
      "Agda.TypeChecking.Positivity",
      "Agda.TypeChecking.Positivity.Occurrence",
      "Agda.TypeChecking.Positivity.Tests",
      "Agda.TypeChecking.Pretty",
      "Agda.TypeChecking.Primitive",
      "Agda.TypeChecking.ProjectionLike",
      "Agda.TypeChecking.Quote",
      "Agda.TypeChecking.ReconstructParameters",
      "Agda.TypeChecking.RecordPatterns",
      "Agda.TypeChecking.Records",
      "Agda.TypeChecking.Reduce",
      "Agda.TypeChecking.Reduce.Monad",
      "Agda.TypeChecking.Rewriting",
      "Agda.TypeChecking.Rewriting.NonLinMatch",
      "Agda.TypeChecking.Rules.Builtin",
      "Agda.TypeChecking.Rules.Builtin.Coinduction",
      "Agda.TypeChecking.Rules.Data",
      "Agda.TypeChecking.Rules.Decl",
      "Agda.TypeChecking.Rules.Def",
      "Agda.TypeChecking.Rules.Display",
      "Agda.TypeChecking.Rules.LHS",
      "Agda.TypeChecking.Rules.LHS.Implicit",
      "Agda.TypeChecking.Rules.LHS.Instantiate",
      "Agda.TypeChecking.Rules.LHS.Problem",
      "Agda.TypeChecking.Rules.LHS.ProblemRest",
      "Agda.TypeChecking.Rules.LHS.Split",
      "Agda.TypeChecking.Rules.LHS.Unify",
      "Agda.TypeChecking.Rules.Record",
      "Agda.TypeChecking.Rules.Term",
      "Agda.TypeChecking.Serialise",
      "Agda.TypeChecking.Serialise.Base",
      "Agda.TypeChecking.Serialise.Instances",
      "Agda.TypeChecking.Serialise.Instances.Abstract",
      "Agda.TypeChecking.Serialise.Instances.Common",
      "Agda.TypeChecking.Serialise.Instances.Compilers",
      "Agda.TypeChecking.Serialise.Instances.Highlighting",
      "Agda.TypeChecking.Serialise.Instances.Internal",
      "Agda.TypeChecking.SizedTypes",
      "Agda.TypeChecking.SizedTypes.Solve",
      "Agda.TypeChecking.SizedTypes.Syntax",
      "Agda.TypeChecking.SizedTypes.Tests",
      "Agda.TypeChecking.SizedTypes.Utils",
      "Agda.TypeChecking.SizedTypes.WarshallSolver",
      "Agda.TypeChecking.Substitute",
      "Agda.TypeChecking.Substitute.Pattern",
      "Agda.TypeChecking.SyntacticEquality",
      "Agda.TypeChecking.Telescope",
      "Agda.TypeChecking.Test.Generators",
      "Agda.TypeChecking.Tests",
      "Agda.TypeChecking.Unquote",
      "Agda.TypeChecking.With",
      "Agda.Utils.AssocList",
      "Agda.Utils.Bag",
      "Agda.Utils.Benchmark",
      "Agda.Utils.BiMap",
      "Agda.Utils.Char",
      "Agda.Utils.Cluster",
      "Agda.Utils.Empty",
      "Agda.Utils.Environment",
      "Agda.Utils.Except",
      "Agda.Utils.Either",
      "Agda.Utils.Favorites",
      "Agda.Utils.FileName",
      "Agda.Utils.Functor",
      "Agda.Utils.Function",
      "Agda.Utils.Geniplate",
      "Agda.Utils.Graph.AdjacencyMap.Unidirectional",
      "Agda.Utils.Graph.AdjacencyMap.Unidirectional.Tests",
      "Agda.Utils.Hash",
      "Agda.Utils.HashMap",
      "Agda.Utils.Impossible",
      "Agda.Utils.IO.Binary",
      "Agda.Utils.IO.Directory",
      "Agda.Utils.IO.UTF8",
      "Agda.Utils.IORef",
      "Agda.Utils.Lens",
      "Agda.Utils.Lens.Examples",
      "Agda.Utils.List",
      "Agda.Utils.ListT",
      "Agda.Utils.ListT.Tests",
      "Agda.Utils.Map",
      "Agda.Utils.Maybe",
      "Agda.Utils.Maybe.Strict",
      "Agda.Utils.Memo",
      "Agda.Utils.Monad",
      "Agda.Utils.Null",
      "Agda.Utils.Parser.MemoisedCPS",
      "Agda.Utils.Parser.ReadP",
      "Agda.Utils.PartialOrd",
      "Agda.Utils.Permutation",
      "Agda.Utils.Permutation.Tests",
      "Agda.Utils.Pointer",
      "Agda.Utils.Pretty",
      "Agda.Utils.QuickCheck",
      "Agda.Utils.SemiRing",
      "Agda.Utils.Singleton",
      "Agda.Utils.Size",
      "Agda.Utils.String",
      "Agda.Utils.Suffix",
      "Agda.Utils.TestHelpers",
      "Agda.Utils.Time",
      "Agda.Utils.Trie",
      "Agda.Utils.Tuple",
      "Agda.Utils.Update",
      "Agda.Utils.VarSet",
      "Agda.Utils.Warshall",
      "Agda.Version"
    ],
    "name": "Agda",
    "version": "2.5.1.1"
  },
  {
    "dependencies": {
      "FontyFruity": [
        "Graphics.Text.TrueType"
      ],
      "JuicyPixels": [
        "Codec.Picture",
        "Codec.Picture.Types"
      ],
      "Rasterific": [
        "Graphics.Rasterific",
        "Graphics.Rasterific.Immediate",
        "Graphics.Rasterific.Linear",
        "Graphics.Rasterific.Outline",
        "Graphics.Rasterific.PathWalker",
        "Graphics.Rasterific.Texture",
        "Graphics.Rasterific.Transformations"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "System.Exit"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "lens": [
        "Control.Lens"
      ],
      "linear": [
        "Linear"
      ],
      "mtl": [
        "Control.Monad.Identity"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "rasterific-svg": [],
      "scientific": [],
      "svg-tree": [
        "Graphics.Svg",
        "Graphics.Svg.Types"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ],
      "vector": []
    },
    "imports": [
      "Codec.Picture",
      "Codec.Picture.Types",
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.State.Strict",
      "Data.Binary",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Word",
      "Graphics.Rasterific",
      "Graphics.Rasterific.Immediate",
      "Graphics.Rasterific.Linear",
      "Graphics.Rasterific.Outline",
      "Graphics.Rasterific.PathWalker",
      "Graphics.Rasterific.Svg",
      "Graphics.Rasterific.Svg.PathConverter",
      "Graphics.Rasterific.Svg.RasterificRender",
      "Graphics.Rasterific.Svg.RasterificTextRendering",
      "Graphics.Rasterific.Svg.RenderContext",
      "Graphics.Rasterific.Texture",
      "Graphics.Rasterific.Transformations",
      "Graphics.Svg",
      "Graphics.Svg.Types",
      "Graphics.Text.TrueType",
      "Linear",
      "Options.Applicative",
      "System.Directory",
      "System.Exit",
      "System.FilePath"
    ],
    "modules": [
      "Graphics.Rasterific.Svg"
    ],
    "name": "rasterific-svg",
    "version": "0.3.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Numeric",
        "Prelude",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec",
        "Text.Read"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "cryptohash": [
        "Crypto.Hash.MD5"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "mtl": [
        "Control.Monad.Identity"
      ],
      "network": [
        "Network.BSD"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX",
        "Data.Time.Format"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Identity",
      "Crypto.Hash.MD5",
      "Data.Binary.Get",
      "Data.Binary.IEEE754",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.Bson",
      "Data.Bson.Binary.Tests",
      "Data.Bson.Tests",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Typeable",
      "Data.Word",
      "Network.BSD",
      "Numeric",
      "Prelude",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.Read"
    ],
    "modules": [
      "Data.Bson",
      "Data.Bson.Binary"
    ],
    "name": "bson",
    "version": "0.3.2.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.Lazy"
      ],
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "hedis": [
        "Database.Redis"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "uuid": [
        "Data.UUID",
        "Data.UUID.V4"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Attoparsec.Lazy",
      "Database.Redis",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.UUID",
      "Data.UUID.V4"
    ],
    "modules": [
      "System.Hworker"
    ],
    "name": "hworker",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad.IO.Class",
        "Data.Typeable",
        "GHC.IO.Exception",
        "System.IO.Error"
      ],
      "base32string": [
        "Data.Base32String.Default"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "exceptions": [],
      "hexstring": [
        "Data.HexString"
      ],
      "network": [
        "Network",
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "network-anonymous-tor": [],
      "network-attoparsec": [
        "Network.Attoparsec"
      ],
      "network-simple": [
        "Network.Simple.TCP"
      ],
      "socks": [
        "Network.Socks5"
      ],
      "splice": [],
      "text": [
        "Data.Text.Encoding"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad.IO.Class",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Base32String.Default",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.HexString",
      "Data.Text.Encoding",
      "Data.Typeable",
      "GHC.IO.Exception",
      "Network",
      "Network.Anonymous.Tor.Error",
      "Network.Anonymous.Tor.Protocol",
      "Network.Anonymous.Tor.Protocol.Parser",
      "Network.Anonymous.Tor.Protocol.Parser.Ast",
      "Network.Anonymous.Tor.Protocol.Types",
      "Network.Attoparsec",
      "Network.Simple.TCP",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socks5",
      "Spec",
      "System.IO.Error",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Network.Anonymous.Tor",
      "Network.Anonymous.Tor.Error",
      "Network.Anonymous.Tor.Protocol",
      "Network.Anonymous.Tor.Protocol.Types",
      "Network.Anonymous.Tor.Protocol.Parser",
      "Network.Anonymous.Tor.Protocol.Parser.Ast"
    ],
    "name": "network-anonymous-tor",
    "version": "0.11.0"
  },
  {
    "dependencies": {
      "ListLike": [
        "Data.ListLike",
        "Data.ListLike.IO"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Monoid",
        "Data.Word",
        "GHC.IO.Exception",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "generic-deriving": [
        "Generics.Deriving.Instances"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ListLike",
      "Data.ListLike.IO",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Word",
      "Generics.Deriving.Instances",
      "GHC.IO.Exception",
      "Prelude",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "System.Process.ByteString",
      "System.Process.ByteString.Lazy",
      "System.Process.Common",
      "System.Process.Text",
      "System.Process.Text.Lazy",
      "Utils"
    ],
    "modules": [
      "System.Process.ByteString",
      "System.Process.ByteString.Lazy",
      "System.Process.Common",
      "System.Process.ListLike",
      "System.Process.Text",
      "System.Process.Text.Lazy"
    ],
    "name": "process-extras",
    "version": "0.4.1.4"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-markup": [
        "Text.Blaze"
      ],
      "reform": [
        "Text.Reform",
        "Text.Reform.Backend",
        "Text.Reform.Core",
        "Text.Reform.Generalized",
        "Text.Reform.Result"
      ],
      "shakespeare": [
        "Text.Hamlet"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.Text",
      "Data.Text.Lazy",
      "Text.Blaze",
      "Text.Hamlet",
      "Text.Reform",
      "Text.Reform.Backend",
      "Text.Reform.Core",
      "Text.Reform.Generalized",
      "Text.Reform.Hamlet.Common",
      "Text.Reform.Result"
    ],
    "modules": [
      "Text.Reform.Hamlet.Common",
      "Text.Reform.Hamlet.String",
      "Text.Reform.Hamlet.Text"
    ],
    "name": "reform-hamlet",
    "version": "0.0.5.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Bits",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.ForeignPtr.Safe",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "vector": [
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Bits",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Vector.Storable",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.ForeignPtr.Safe",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Alignment"
    ],
    "name": "seqalign",
    "version": "0.2.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.List"
      ],
      "syb": [
        "Data.Generics"
      ]
    },
    "imports": [
      "Bag",
      "Control.Monad",
      "Data.Generics",
      "Data.List",
      "DynFlags",
      "FastString",
      "GHC",
      "GHC.SYB.Instances",
      "NameSet",
      "OccName",
      "Outputable",
      "PprTyThing",
      "SrcLoc",
      "Var"
    ],
    "modules": [
      "GHC.SYB.Utils"
    ],
    "name": "ghc-syb-utils",
    "version": "0.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.Char",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Prelude"
      ],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal",
        "Text.Blaze.Renderer.Pretty",
        "Text.Blaze.Renderer.String",
        "Text.Blaze.Renderer.Text",
        "Text.Blaze.Renderer.Utf8"
      ],
      "mtl": [
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad.State",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "Text.Blaze",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.Pretty",
      "Text.Blaze.Renderer.String",
      "Text.Blaze.Renderer.Text",
      "Text.Blaze.Renderer.Utf8",
      "Text.Blaze.Svg",
      "Text.Blaze.Svg11",
      "Text.Blaze.Svg11.Attributes",
      "Text.Blaze.Svg.Internal",
      "Text.Blaze.Svg.Renderer.String",
      "Util.Sanitize"
    ],
    "modules": [
      "Text.Blaze.Svg",
      "Text.Blaze.Svg.Internal",
      "Text.Blaze.Svg11",
      "Text.Blaze.Svg11.Attributes",
      "Text.Blaze.Svg.Renderer.Pretty",
      "Text.Blaze.Svg.Renderer.String",
      "Text.Blaze.Svg.Renderer.Text",
      "Text.Blaze.Svg.Renderer.Utf8"
    ],
    "name": "blaze-svg",
    "version": "0.3.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid"
      ],
      "hsp": [
        "HSP"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "web-routes": [
        "Web.Routes.RouteT"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "HSP",
      "Web.Routes.RouteT"
    ],
    "modules": [
      "Web.Routes.XMLGenT"
    ],
    "name": "web-routes-hsp",
    "version": "0.24.6.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Int",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "GHC.Float",
        "Prelude",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Builder.Extras"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "double-conversion": [
        "Data.Double.Conversion.Text"
      ],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "unix-time": [
        "Data.UnixTime"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Criterion",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Builder.Extras",
      "Data.Double.Conversion.Text",
      "Data.Int",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.UnixTime",
      "Data.Word",
      "GHC.Float",
      "Prelude",
      "System.Environment",
      "System.Log.FastLogger",
      "System.Logger",
      "System.Logger.Message",
      "System.Logger.Settings"
    ],
    "modules": [
      "System.Logger",
      "System.Logger.Class",
      "System.Logger.Message"
    ],
    "name": "tinylog",
    "version": "0.14.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.BigQuery",
      "Network.Google.BigQuery.Types",
      "Network.Google.Resource.BigQuery.DataSets.Delete",
      "Network.Google.Resource.BigQuery.DataSets.Get",
      "Network.Google.Resource.BigQuery.DataSets.Insert",
      "Network.Google.Resource.BigQuery.DataSets.List",
      "Network.Google.Resource.BigQuery.DataSets.Patch",
      "Network.Google.Resource.BigQuery.DataSets.Update",
      "Network.Google.Resource.BigQuery.Jobs.Cancel",
      "Network.Google.Resource.BigQuery.Jobs.Get",
      "Network.Google.Resource.BigQuery.Jobs.GetQueryResults",
      "Network.Google.Resource.BigQuery.Jobs.Insert",
      "Network.Google.Resource.BigQuery.Jobs.List",
      "Network.Google.Resource.BigQuery.Jobs.Query",
      "Network.Google.Resource.BigQuery.Projects.List",
      "Network.Google.Resource.BigQuery.TableData.InsertAll",
      "Network.Google.Resource.BigQuery.TableData.List",
      "Network.Google.Resource.BigQuery.Tables.Delete",
      "Network.Google.Resource.BigQuery.Tables.Get",
      "Network.Google.Resource.BigQuery.Tables.Insert",
      "Network.Google.Resource.BigQuery.Tables.List",
      "Network.Google.Resource.BigQuery.Tables.Patch",
      "Network.Google.Resource.BigQuery.Tables.Update"
    ],
    "name": "gogol-bigquery",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Text",
      "Data.Text.Lazy"
    ],
    "modules": [
      "Data.Cased"
    ],
    "name": "cased",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "adjunctions": [
        "Data.Functor.Rep"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.Zip",
        "Data.Complex",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Classes",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Int",
        "Data.Ix",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Void",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Arr",
        "GHC.Generics",
        "GHC.TypeLits",
        "Prelude"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytes": [
        "Data.Bytes.Serial"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "distributive": [
        "Data.Distributive"
      ],
      "ghc-prim": [],
      "hashable": [
        "Data.Hashable"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.Internal.Context"
      ],
      "reflection": [
        "Data.Reflection"
      ],
      "semigroupoids": [
        "Data.Functor.Bind",
        "Data.Functor.Plus",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable"
      ],
      "semigroups": [],
      "tagged": [],
      "transformers": [],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Base"
      ],
      "void": []
    },
    "imports": [
      "Binary",
      "Build",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Lens",
      "Control.Lens.Internal.Context",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.Zip",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bytes.Serial",
      "Data.ByteString.Lazy",
      "Data.Complex",
      "Data.Data",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Functor.Bind",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Plus",
      "Data.Functor.Product",
      "Data.Functor.Rep",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IntMap",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Proxy",
      "Data.Reflection",
      "Data.Semigroup",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Traversable",
      "Data.Serialize",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Base",
      "Data.Void",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Arr",
      "GHC.Generics",
      "GHC.TypeLits",
      "Language.Haskell.TH",
      "Linear",
      "Linear.Algebra",
      "Linear.Binary",
      "Linear.Conjugate",
      "Linear.Covector",
      "Linear.Epsilon",
      "Linear.Instances",
      "Linear.Matrix",
      "Linear.Metric",
      "Linear.Plucker",
      "Linear.Plucker.Coincides",
      "Linear.Projection",
      "Linear.Quaternion",
      "Linear.Trace",
      "Linear.V",
      "Linear.V0",
      "Linear.V1",
      "Linear.V2",
      "Linear.V3",
      "Linear.V4",
      "Linear.Vector",
      "Plucker",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "Test.DocTest",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Linear",
      "Linear.Affine",
      "Linear.Algebra",
      "Linear.Binary",
      "Linear.Conjugate",
      "Linear.Covector",
      "Linear.Epsilon",
      "Linear.Instances",
      "Linear.Matrix",
      "Linear.Metric",
      "Linear.Plucker",
      "Linear.Plucker.Coincides",
      "Linear.Projection",
      "Linear.Quaternion",
      "Linear.Trace",
      "Linear.V",
      "Linear.V0",
      "Linear.V1",
      "Linear.V2",
      "Linear.V3",
      "Linear.V4",
      "Linear.Vector"
    ],
    "name": "linear",
    "version": "1.20.5"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bifunctor",
        "Data.Semigroup"
      ],
      "bifunctors": [],
      "lens": [
        "Control.Lens"
      ],
      "semigroups": []
    },
    "imports": [
      "Control.Lens",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bitraversable",
      "Data.Semigroup"
    ],
    "modules": [
      "Accuerr"
    ],
    "name": "accuerr",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.Instances",
        "Control.Monad.IO.Class",
        "Data.Functor.Identity",
        "Data.Monoid",
        "System.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Instances",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Control.Monad.Writer.Lazy",
      "Data.Functor.Identity",
      "Data.Monoid",
      "System.IO"
    ],
    "modules": [
      "Control.Monad.Cont",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error",
      "Control.Monad.Error.Class",
      "Control.Monad.Identity",
      "Control.Monad.List",
      "Control.Monad.RWS",
      "Control.Monad.RWS.Class",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Class",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict"
    ],
    "name": "monads-tf",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Ord"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "random": [
        "System.Random"
      ],
      "semigroups": []
    },
    "imports": [
      "Control.DeepSeq",
      "Data.Char",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Ord",
      "Data.Sequence",
      "Data.Set",
      "System.Random",
      "Test.DPOR.Internal",
      "Test.DPOR.Random",
      "Test.DPOR.Schedule"
    ],
    "modules": [
      "Test.DPOR",
      "Test.DPOR.Internal",
      "Test.DPOR.Random",
      "Test.DPOR.Schedule"
    ],
    "name": "dpor",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "GHC.IO.Handle",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "temporary": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.IO",
      "GHC.IO.Handle",
      "System.AtomicWrite.Internal",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "System.PosixCompat.Files"
    ],
    "modules": [
      "System.AtomicWrite.Writer.ByteString",
      "System.AtomicWrite.Writer.ByteStringBuilder",
      "System.AtomicWrite.Writer.LazyByteString",
      "System.AtomicWrite.Writer.String",
      "System.AtomicWrite.Writer.Text"
    ],
    "name": "atomic-write",
    "version": "0.2.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Foldable",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "mmorph": [],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "stm": [
        "Control.Monad.STM"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont"
      ],
      "transformers-base": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.STM",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Control",
      "Data.Bits",
      "Data.Foldable",
      "Data.IORef",
      "Data.Maybe",
      "Data.Monoid",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Control.Monad.Extra"
    ],
    "name": "monad-extras",
    "version": "0.5.11"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Word",
        "Numeric"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Foldable",
      "Data.List",
      "Data.Word",
      "Numeric"
    ],
    "modules": [
      "Data.Digest.Murmur32",
      "Data.Digest.Murmur64"
    ],
    "name": "murmur-hash",
    "version": "0.1.0.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "System.IO"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "old-time": [
        "System.Time"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "utf8-string": [
        "Codec.Binary.UTF8.String"
      ],
      "xml": [
        "Text.XML.Light",
        "Text.XML.Light.Lexer",
        "Text.XML.Light.Proc",
        "Text.XML.Light.Types"
      ]
    },
    "imports": [
      "Codec.Binary.UTF8.String",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Paths",
      "System.IO",
      "System.IO.UTF8",
      "System.Locale",
      "System.Time",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Atom.Feed",
      "Text.Atom.Feed.Export",
      "Text.Atom.Feed.Import",
      "Text.Atom.Pub",
      "Text.Atom.Tests",
      "Text.DublinCore.Types",
      "Text.Feed.Constructor",
      "Text.Feed.Export",
      "Text.Feed.Import",
      "Text.Feed.Query",
      "Text.Feed.Types",
      "Text.Feed.Util",
      "Text.Feed.Util.Tests",
      "Text.RSS1.Export",
      "Text.RSS1.Import",
      "Text.RSS1.Syntax",
      "Text.RSS1.Utils",
      "Text.RSS.Equals",
      "Text.RSS.Export",
      "Text.RSS.Export.Tests",
      "Text.RSS.Import",
      "Text.RSS.Import.Tests",
      "Text.RSS.Syntax",
      "Text.RSS.Tests",
      "Text.RSS.Utils",
      "Text.XML.Light",
      "Text.XML.Light.Lexer",
      "Text.XML.Light.Proc",
      "Text.XML.Light.Types"
    ],
    "modules": [
      "Paths_feed",
      "Text.Atom.Feed",
      "Text.Atom.Feed.Export",
      "Text.Atom.Feed.Import",
      "Text.Atom.Feed.Link",
      "Text.Atom.Feed.Validate",
      "Text.Atom.Pub",
      "Text.Atom.Pub.Export",
      "Text.DublinCore.Types",
      "Text.Feed.Constructor",
      "Text.Feed.Export",
      "Text.Feed.Import",
      "Text.Feed.Query",
      "Text.Feed.Translate",
      "Text.Feed.Types",
      "Text.Feed.Util",
      "Text.RSS.Export",
      "Text.RSS.Import",
      "Text.RSS.Syntax",
      "Text.RSS1.Export",
      "Text.RSS1.Import",
      "Text.RSS1.Syntax",
      "Text.RSS1.Utils"
    ],
    "name": "feed",
    "version": "0.3.11.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "GHC.Exts",
        "Prelude",
        "Text.Read",
        "Text.Show.Functions"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.DList",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.String",
      "GHC.Exts",
      "OverloadedStrings",
      "Prelude",
      "Test.QuickCheck",
      "Text.Read",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.DList"
    ],
    "name": "dlist",
    "version": "0.8.0.2"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CertificateManager",
      "Test.AWS.CertificateManager",
      "Test.AWS.CertificateManager.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CertificateManager",
      "Network.AWS.CertificateManager.AddTagsToCertificate",
      "Network.AWS.CertificateManager.DeleteCertificate",
      "Network.AWS.CertificateManager.DescribeCertificate",
      "Network.AWS.CertificateManager.GetCertificate",
      "Network.AWS.CertificateManager.ListCertificates",
      "Network.AWS.CertificateManager.ListTagsForCertificate",
      "Network.AWS.CertificateManager.RemoveTagsFromCertificate",
      "Network.AWS.CertificateManager.RequestCertificate",
      "Network.AWS.CertificateManager.ResendValidationEmail",
      "Network.AWS.CertificateManager.Types",
      "Network.AWS.CertificateManager.Waiters"
    ],
    "name": "amazonka-certificatemanager",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Either",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "happstack-server": [
        "Happstack.Server"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "random": [
        "System.Random"
      ],
      "reform": [
        "Control.Applicative.Indexed",
        "Text.Reform.Backend",
        "Text.Reform.Core",
        "Text.Reform.Result"
      ],
      "text": [
        "Data.Text.Lazy"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Indexed",
      "Control.Monad",
      "Control.Monad.Trans",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.UTF8",
      "Data.Either",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text.Lazy",
      "Happstack.Server",
      "System.Random",
      "Text.Reform.Backend",
      "Text.Reform.Core",
      "Text.Reform.Result"
    ],
    "modules": [
      "Text.Reform.Happstack"
    ],
    "name": "reform-happstack",
    "version": "0.2.5.1"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Data.List.NonEmpty",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Set"
      ],
      "file-embed": [],
      "filepath": [],
      "hjsonpointer": [
        "Data.Aeson.Pointer"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-types": [],
      "pcre-heavy": [
        "Text.Regex.PCRE.Heavy"
      ],
      "profunctors": [],
      "scientific": [
        "Data.Scientific"
      ],
      "semigroups": [],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "AlternateSchema",
      "Data.Aeson",
      "Data.Aeson.Pointer",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.JsonSchema.Draft4",
      "Data.JsonSchema.Draft4.Schema",
      "Data.JsonSchema.Draft4.Spec",
      "Data.JsonSchema.Fetch",
      "Data.JsonSchema.Types",
      "Data.List.NonEmpty",
      "Data.Scientific",
      "Data.Set",
      "Data.Text",
      "Data.Validator.Draft4",
      "Data.Validator.Draft4.Any",
      "Data.Validator.Draft4.Array",
      "Data.Validator.Draft4.Number",
      "Data.Validator.Draft4.Object",
      "Data.Validator.Draft4.String",
      "Data.Validator.Failure",
      "Data.Validator.Utils",
      "Data.Vector",
      "Full",
      "Network.HTTP.Client",
      "Simple",
      "System.Directory",
      "System.Timeout",
      "Test.Tasty.HUnit",
      "Text.Regex.PCRE.Heavy"
    ],
    "modules": [
      "Data.JsonSchema.Draft4",
      "Data.JsonSchema.Draft4.Failure",
      "Data.JsonSchema.Draft4.Schema",
      "Data.JsonSchema.Draft4.Spec",
      "Data.JsonSchema.Fetch",
      "Data.JsonSchema.Types",
      "Data.Validator.Draft4",
      "Data.Validator.Draft4.Any",
      "Data.Validator.Draft4.Array",
      "Data.Validator.Draft4.Number",
      "Data.Validator.Draft4.Object",
      "Data.Validator.Draft4.String",
      "Data.Validator.Failure",
      "Data.Validator.Reference",
      "Data.Validator.Types",
      "Data.Validator.Utils"
    ],
    "name": "hjsonschema",
    "version": "1.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Data.Char",
        "Numeric",
        "System.IO"
      ],
      "network": [
        "Network",
        "Network.BSD",
        "Network.Socket"
      ],
      "network-uri": [
        "Network.URI"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Data.Char",
      "Network",
      "Network.BSD",
      "Network.Shed.Httpd",
      "Network.Socket",
      "Network.URI",
      "Numeric",
      "System.IO"
    ],
    "modules": [
      "Network.Shed.Httpd"
    ],
    "name": "httpd-shed",
    "version": "0.4.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.Marshal",
        "GHC.Environment"
      ],
      "filepath": [
        "System.FilePath"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.Marshal",
      "GHC.Environment",
      "System.Directory",
      "System.Environment.Executable.BSD",
      "System.Environment.Executable.FreeBSD",
      "System.Environment.Executable.Linux",
      "System.Environment.Executable.MacOSX",
      "System.Environment.Executable.Solaris",
      "System.Environment.Executable.Win32",
      "System.FilePath",
      "System.Posix"
    ],
    "modules": [
      "System.Environment.Executable"
    ],
    "name": "executable-path",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "deepseq": [
        "Control.DeepSeq"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Exception.Asynchronous",
      "Control.Monad.Exception.Asynchronous.Lazy",
      "Control.Monad.Exception.Synchronous",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Label",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Writer",
      "Data.Bool",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Either",
      "Data.Eq",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Word",
      "Prelude",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Exception.File",
      "System.IO.Straight",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Control.Monad.Exception.Asynchronous",
      "Control.Monad.Exception.Asynchronous.Lazy",
      "Control.Monad.Exception.Asynchronous.Strict",
      "Control.Monad.Exception.Synchronous"
    ],
    "name": "explicit-exception",
    "version": "0.1.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Text.Appar.Input",
      "Text.Appar.Parser"
    ],
    "modules": [
      "Text.Appar.String",
      "Text.Appar.ByteString",
      "Text.Appar.LazyByteString"
    ],
    "name": "appar",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Functor.Identity",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Set"
      ],
      "megaparsec": [
        "Text.Megaparsec",
        "Text.Megaparsec.Lexer"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Data.Char",
      "Data.Data",
      "Data.Functor.Identity",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Scientific",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Typeable",
      "GHC.Generics",
      "Language.Thrift.Arbitrary",
      "Language.Thrift.AST",
      "Language.Thrift.Internal.AST",
      "Language.Thrift.Internal.Lens",
      "Language.Thrift.Internal.Reserved",
      "Language.Thrift.Parser",
      "Language.Thrift.Pretty",
      "Prelude",
      "Spec",
      "System.Exit",
      "System.IO",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.Hspec.Runner",
      "Test.QuickCheck",
      "TestUtils",
      "Text.Megaparsec",
      "Text.Megaparsec.Lexer",
      "Text.PrettyPrint.ANSI.Leijen"
    ],
    "modules": [
      "Language.Thrift.AST",
      "Language.Thrift.Parser",
      "Language.Thrift.Pretty",
      "Language.Thrift.Types"
    ],
    "name": "language-thrift",
    "version": "0.9.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Discovery",
      "Network.Google.Discovery.Types",
      "Network.Google.Resource.Discovery.APIs.GetRest",
      "Network.Google.Resource.Discovery.APIs.List"
    ],
    "name": "gogol-discovery",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Parser"
      ],
      "attoparsec": [
        "Data.Attoparsec.Types"
      ],
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "pipes": [],
      "pipes-attoparsec": [
        "Pipes.Attoparsec"
      ],
      "pipes-bytestring": [
        "Pipes.ByteString"
      ],
      "pipes-parse": [
        "Pipes.Parse"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Trans.State.Strict",
      "Data.Aeson",
      "Data.Aeson.Parser",
      "Data.Attoparsec.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Pipes.Aeson.Internal",
      "Pipes.Aeson.Unchecked",
      "Pipes.Attoparsec",
      "Pipes.ByteString",
      "Pipes.Parse"
    ],
    "modules": [
      "Pipes.Aeson",
      "Pipes.Aeson.Unchecked"
    ],
    "name": "pipes-aeson",
    "version": "0.4.1.7"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AppsReseller",
      "Network.Google.AppsReseller.Types",
      "Network.Google.Resource.Reseller.Customers.Get",
      "Network.Google.Resource.Reseller.Customers.Insert",
      "Network.Google.Resource.Reseller.Customers.Patch",
      "Network.Google.Resource.Reseller.Customers.Update",
      "Network.Google.Resource.Reseller.Subscriptions.Activate",
      "Network.Google.Resource.Reseller.Subscriptions.ChangePlan",
      "Network.Google.Resource.Reseller.Subscriptions.ChangeRenewalSettings",
      "Network.Google.Resource.Reseller.Subscriptions.ChangeSeats",
      "Network.Google.Resource.Reseller.Subscriptions.Delete",
      "Network.Google.Resource.Reseller.Subscriptions.Get",
      "Network.Google.Resource.Reseller.Subscriptions.Insert",
      "Network.Google.Resource.Reseller.Subscriptions.List",
      "Network.Google.Resource.Reseller.Subscriptions.StartPaidService",
      "Network.Google.Resource.Reseller.Subscriptions.Suspend"
    ],
    "name": "gogol-apps-reseller",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Char",
        "Data.Monoid",
        "Data.String",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Control.Exception",
      "Control.Monad.Reader",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Map",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Tree.NTree.TypeDefs",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Posix.Temp",
      "System.Process",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.XML.Generator",
      "Text.XML.HXT.Core",
      "Text.XML.HXT.DOM.ShowXml"
    ],
    "modules": [
      "Text.XML.Generator"
    ],
    "name": "xmlgen",
    "version": "0.6.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.ForeignPtr",
        "GHC.IO",
        "GHC.Word",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Buffer",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.FastSet",
      "Data.Attoparsec.ByteString.Internal",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Internal",
      "Data.Attoparsec.Internal.Fhthagn",
      "Data.Attoparsec.Internal.Types",
      "Data.Attoparsec.Number",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.Either.Compat",
      "Data.Foldable",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Documentation.Haddock.Parser",
      "Documentation.Haddock.Parser.Monad",
      "Documentation.Haddock.Parser.Util",
      "Documentation.Haddock.Types",
      "Documentation.Haddock.Utf8",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.ForeignPtr",
      "GHC.IO",
      "GHC.Word",
      "Prelude",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Documentation.Haddock.Parser",
      "Documentation.Haddock.Parser.Monad",
      "Documentation.Haddock.Types",
      "Documentation.Haddock.Doc"
    ],
    "name": "haddock-library",
    "version": "1.4.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.ProximityBeacon",
      "Network.Google.ProximityBeacon.Types",
      "Network.Google.Resource.ProximityBeacon.BeaconInfo.GetforObserved",
      "Network.Google.Resource.ProximityBeacon.Beacons.Activate",
      "Network.Google.Resource.ProximityBeacon.Beacons.Attachments.BatchDelete",
      "Network.Google.Resource.ProximityBeacon.Beacons.Attachments.Create",
      "Network.Google.Resource.ProximityBeacon.Beacons.Attachments.Delete",
      "Network.Google.Resource.ProximityBeacon.Beacons.Attachments.List",
      "Network.Google.Resource.ProximityBeacon.Beacons.Deactivate",
      "Network.Google.Resource.ProximityBeacon.Beacons.Decommission",
      "Network.Google.Resource.ProximityBeacon.Beacons.Diagnostics.List",
      "Network.Google.Resource.ProximityBeacon.Beacons.Get",
      "Network.Google.Resource.ProximityBeacon.Beacons.List",
      "Network.Google.Resource.ProximityBeacon.Beacons.Register",
      "Network.Google.Resource.ProximityBeacon.Beacons.Update",
      "Network.Google.Resource.ProximityBeacon.GetEidparams",
      "Network.Google.Resource.ProximityBeacon.Namespaces.List",
      "Network.Google.Resource.ProximityBeacon.Namespaces.Update"
    ],
    "name": "gogol-proximitybeacon",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.IO.Class",
        "Data.Monoid",
        "Data.Typeable"
      ],
      "errors": [],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "hashable": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "mmorph": [],
      "monad-logger": [],
      "mtl": [
        "Control.Monad.State"
      ],
      "resourcet": [],
      "text": [
        "Data.Text.Lazy"
      ],
      "transformers": [],
      "transformers-base": [],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "wai": [],
      "wai-middleware-content-type": [
        "Network.Wai.Middleware.ContentType"
      ],
      "wai-transformers": [
        "Network.Wai.Trans"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.State",
      "Data.HashMap.Lazy",
      "Data.Monoid",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Network.HTTP.Types",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Middleware.ContentType",
      "Network.Wai.Middleware.Verbs",
      "Network.Wai.Trans"
    ],
    "modules": [
      "Network.Wai.Middleware.Verbs"
    ],
    "name": "wai-middleware-verbs",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "System.IO",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "unix": [
        "System.Posix.IO"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "System.IO",
      "System.Posix.IO",
      "System.Posix.Types"
    ],
    "modules": [
      "System.Posix.Redirect"
    ],
    "name": "system-posix-redirect",
    "version": "1.1.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Data.List",
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-client": [
        "Network.HTTP.Client",
        "Network.HTTP.Client.Internal"
      ],
      "http-conduit": [
        "Network.HTTP.Simple"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.Trans"
      ],
      "safe": [
        "Safe"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Monad.Catch",
      "Control.Monad.Except",
      "Control.Monad.Http",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.List",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Text",
      "NBA.Stats",
      "NBA.Stats.Tests",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Internal",
      "Network.HTTP.Simple",
      "Network.HTTP.Types",
      "Safe",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.SmallCheck"
    ],
    "modules": [
      "Control.Monad.Http",
      "NBA.Stats"
    ],
    "name": "kawhi",
    "version": "0.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Data.List",
        "Data.Maybe",
        "System.Environment"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "ical": [],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Either",
      "Data.Aeson",
      "Data.Attoparsec.Text",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Data.Time",
      "ICal.Org",
      "ICal.Tokenizer",
      "ICal.Types",
      "System.Environment"
    ],
    "modules": [
      "ICal",
      "ICal.Types",
      "ICal.Org",
      "ICal.Tokenizer",
      "ICal.Parser"
    ],
    "name": "ical",
    "version": "0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Functor.Compose",
        "Data.Functor.Product"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader"
      ],
      "transformers": [
        "Control.Monad.Trans.Identity"
      ],
      "universe-base": [
        "Data.Universe.Helpers"
      ],
      "universe-instances-base": [
        "Data.Universe.Instances.Base"
      ]
    },
    "imports": [
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.Trans.Identity",
      "Data.Functor.Compose",
      "Data.Functor.Product",
      "Data.Universe.Helpers",
      "Data.Universe.Instances.Base"
    ],
    "modules": [
      "Data.Universe.Instances.Trans"
    ],
    "name": "universe-instances-trans",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Word",
        "Debug.Trace",
        "GHC.Base",
        "GHC.Conc",
        "GHC.IO",
        "GHC.IORef",
        "GHC.ST",
        "GHC.Stats",
        "GHC.STRef",
        "System.CPUTime",
        "System.Environment",
        "System.IO",
        "System.Mem",
        "System.Mem.StableName",
        "Text.Printf"
      ],
      "ghc-prim": [
        "GHC.PrimopWrappers"
      ],
      "primitive": [
        "Data.Primitive",
        "Data.Primitive.Array",
        "Data.Primitive.ByteArray"
      ]
    },
    "imports": [
      "CommonTesting",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Counter",
      "Data.Atomics",
      "Data.Atomics.Counter",
      "Data.Atomics.Internal",
      "Data.Bits",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Primitive",
      "Data.Primitive.Array",
      "Data.Primitive.ByteArray",
      "Data.Set",
      "Data.Time.Clock",
      "Data.Word",
      "Debug.Trace",
      "Fetch",
      "GHC.Base",
      "GHC.Conc",
      "GHC.IO",
      "GHC.IORef",
      "GHC.Prim",
      "GHC.PrimopWrappers",
      "GHC.ST",
      "GHC.Stats",
      "GHC.STRef",
      "Issue28",
      "Language.Haskell.TH",
      "System.CPUTime",
      "System.Environment",
      "System.IO",
      "System.Mem",
      "System.Mem.StableName",
      "System.Random",
      "TemplateHaskellSplices",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Printf"
    ],
    "modules": [
      "Data.Atomics",
      "Data.Atomics.Internal",
      "Data.Atomics.Counter"
    ],
    "name": "atomic-primops",
    "version": "0.8.0.4"
  },
  {
    "dependencies": {
      "filepath": [
        "System.FilePath"
      ]
    },
    "imports": [
      "Array",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Array",
      "Data.Array.Base",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Generics",
      "Data.IntMap",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Debug.Trace",
      "GHC.Exts",
      "GlaExts",
      "Language.C.Analysis.AstAnalysis",
      "Language.C.Analysis.Builtins",
      "Language.C.Analysis.ConstEval",
      "Language.C.Analysis.Debug",
      "Language.C.Analysis.DeclAnalysis",
      "Language.C.Analysis.DefTable",
      "Language.C.Analysis.Export",
      "Language.C.Analysis.NameSpaceMap",
      "Language.C.Analysis.SemError",
      "Language.C.Analysis.SemRep",
      "Language.C.Analysis.TravMonad",
      "Language.C.Analysis.TypeCheck",
      "Language.C.Analysis.TypeConversions",
      "Language.C.Analysis.TypeUtils",
      "Language.C.Data",
      "Language.C.Data.Error",
      "Language.C.Data.Ident",
      "Language.C.Data.InputStream",
      "Language.C.Data.Name",
      "Language.C.Data.Node",
      "Language.C.Data.Position",
      "Language.C.Data.RList",
      "Language.C.Parser",
      "Language.C.Parser.Builtin",
      "Language.C.Parser.Lexer",
      "Language.C.Parser.Parser",
      "Language.C.Parser.ParserMonad",
      "Language.C.Parser.Tokens",
      "Language.C.Pretty",
      "Language.C.Syntax",
      "Language.C.Syntax.AST",
      "Language.C.Syntax.Constants",
      "Language.C.Syntax.Ops",
      "Language.C.Syntax.Utils",
      "Language.C.System.Preprocess",
      "Numeric",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "Text.PrettyPrint.HughesPJ"
    ],
    "modules": [
      "Language.C",
      "Language.C.Data",
      "Language.C.Data.Position",
      "Language.C.Data.Ident",
      "Language.C.Data.Error",
      "Language.C.Data.Name",
      "Language.C.Data.Node",
      "Language.C.Data.InputStream",
      "Language.C.Syntax",
      "Language.C.Syntax.AST",
      "Language.C.Syntax.Constants",
      "Language.C.Syntax.Ops",
      "Language.C.Syntax.Utils",
      "Language.C.Parser",
      "Language.C.Pretty",
      "Language.C.System.Preprocess",
      "Language.C.System.GCC",
      "Language.C.Analysis",
      "Language.C.Analysis.ConstEval",
      "Language.C.Analysis.Builtins",
      "Language.C.Analysis.SemError",
      "Language.C.Analysis.SemRep",
      "Language.C.Analysis.DefTable",
      "Language.C.Analysis.TravMonad",
      "Language.C.Analysis.AstAnalysis",
      "Language.C.Analysis.DeclAnalysis",
      "Language.C.Analysis.Debug",
      "Language.C.Analysis.TypeCheck",
      "Language.C.Analysis.TypeConversions",
      "Language.C.Analysis.TypeUtils",
      "Language.C.Analysis.NameSpaceMap",
      "Language.C.Analysis.Export"
    ],
    "name": "language-c",
    "version": "0.5.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.IO.Device",
        "GHC.IO.Encoding",
        "GHC.IO.Exception",
        "GHC.IO.FD",
        "GHC.IO.Handle.FD",
        "GHC.IO.Handle.Internals",
        "GHC.IO.Handle.Types",
        "GHC.IO.IOMode",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Posix.Internals",
        "System.Posix.Types"
      ],
      "deepseq": [],
      "directory": [],
      "filepath": []
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.String",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.IO.Device",
      "GHC.IO.Encoding",
      "GHC.IO.Exception",
      "GHC.IO.FD",
      "GHC.IO.Handle.FD",
      "GHC.IO.Handle.Internals",
      "GHC.IO.Handle.Types",
      "GHC.IO.IOMode",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix.Internals",
      "System.Posix.IO",
      "System.Posix.Process",
      "System.Posix.Process.Internals",
      "System.Posix.Signals",
      "System.Posix.Types",
      "System.Process",
      "System.Process.Common",
      "System.Process.Posix",
      "System.Process.Windows",
      "System.Win32.DebugApi"
    ],
    "modules": [
      "System.Cmd",
      "System.Process",
      "System.Process.Internals"
    ],
    "name": "process",
    "version": "1.4.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Maybe",
        "Foreign.Ptr"
      ],
      "containers": [
        "Data.Map"
      ],
      "inline-c": [
        "Language.C.Inline",
        "Language.C.Types"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Monad",
      "Database.Ocilib",
      "Database.Ocilib.Bindings",
      "Database.Ocilib.Collections",
      "Database.Ocilib.Connection",
      "Database.Ocilib.Errors",
      "Database.Ocilib.Fetch",
      "Database.Ocilib.Pool",
      "Database.Ocilib.Statement",
      "Data.Bits",
      "Data.Map",
      "Data.Maybe",
      "Foreign.Ptr",
      "Language.C.Inline",
      "Language.C.Types",
      "Language.Haskell.TH",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Database.Ocilib",
      "Database.Ocilib.Bindings",
      "Database.Ocilib.Collections",
      "Database.Ocilib.Connection",
      "Database.Ocilib.Enums",
      "Database.Ocilib.Errors",
      "Database.Ocilib.Fetch",
      "Database.Ocilib.Oci",
      "Database.Ocilib.Pool",
      "Database.Ocilib.Statement"
    ],
    "name": "hocilib",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "base": [],
      "binary": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Text"
    ],
    "modules": [
      "Test.QuickCheck.Utf8",
      "Data.Text.Arbitrary"
    ],
    "name": "quickcheck-text",
    "version": "0.1.2.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "aeson-generic-compat": [
        "Data.Aeson.Generic.Compat"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Traversable",
        "GHC.Generics",
        "Prelude"
      ],
      "bytestring": [],
      "containers": [
        "Data.Set"
      ],
      "dlist": [
        "Data.DList"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.Aeson",
      "Data.Aeson.Generic.Compat",
      "Data.Aeson.Types",
      "Data.DList",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.JsonRpc",
      "Data.JsonRpc.Failure",
      "Data.JsonRpc.Generic",
      "Data.JsonRpc.Id",
      "Data.JsonRpc.Instances",
      "Data.JsonRpc.Integral",
      "Data.JsonRpc.Request",
      "Data.JsonRpc.Response",
      "Data.JsonRpc.Success",
      "Data.List",
      "Data.Maybe",
      "Data.Scientific",
      "Data.Set",
      "Data.Text",
      "Data.Traversable",
      "Data.Vector",
      "Eq",
      "GHC.Generics",
      "Instances",
      "Iso",
      "Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Simple"
    ],
    "modules": [
      "Data.JsonRpc.Id",
      "Data.JsonRpc.Request",
      "Data.JsonRpc.Success",
      "Data.JsonRpc.Failure",
      "Data.JsonRpc.Response",
      "Data.JsonRpc.Generic",
      "Data.JsonRpc.Instances",
      "Data.JsonRpc"
    ],
    "name": "json-rpc-generic",
    "version": "0.2.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "mcmc-types": [
        "Data.Sampling.Types"
      ],
      "monad-par": [
        "Control.Monad.Par",
        "Control.Monad.Par.Scheds.Direct"
      ],
      "monad-par-extras": [
        "Control.Monad.Par.Combinator"
      ],
      "mwc-probability": [
        "System.Random.MWC.Probability"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Par",
      "Control.Monad.Par.Combinator",
      "Control.Monad.Par.Scheds.Direct",
      "Control.Monad.Primitive",
      "Control.Monad.Trans.State.Strict",
      "Data.Sampling.Types",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "Numeric.MCMC.Flat",
      "Pipes",
      "Pipes.Prelude",
      "System.Random.MWC.Probability"
    ],
    "modules": [
      "Numeric.MCMC.Flat"
    ],
    "name": "flat-mcmc",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Data.Char",
        "Data.Foldable",
        "Data.Kind",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Type.Bool",
        "Data.Type.Coercion",
        "Data.Type.Equality",
        "Data.Version",
        "Data.Void",
        "GHC.Exts",
        "GHC.TypeLits",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.Writer"
      ],
      "syb": [
        "Data.Generics",
        "Data.Generics.Twins"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Ppr",
        "Language.Haskell.TH.Syntax"
      ],
      "th-desugar": [
        "Language.Haskell.TH.Desugar"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Fail",
      "Control.Monad.Reader",
      "Control.Monad.Writer",
      "Data.Char",
      "Data.Foldable",
      "Data.Generics",
      "Data.Generics.Twins",
      "Data.Kind",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Promotion.Prelude",
      "Data.Promotion.Prelude.Base",
      "Data.Promotion.Prelude.Bool",
      "Data.Promotion.Prelude.Either",
      "Data.Promotion.Prelude.Enum",
      "Data.Promotion.Prelude.Eq",
      "Data.Promotion.Prelude.List",
      "Data.Promotion.Prelude.Maybe",
      "Data.Promotion.Prelude.Num",
      "Data.Promotion.Prelude.Ord",
      "Data.Promotion.Prelude.Tuple",
      "Data.Promotion.TH",
      "Data.Proxy",
      "Data.Singletons",
      "Data.Singletons.CustomStar",
      "Data.Singletons.Decide",
      "Data.Singletons.Deriving.Bounded",
      "Data.Singletons.Deriving.Enum",
      "Data.Singletons.Deriving.Infer",
      "Data.Singletons.Deriving.Ord",
      "Data.Singletons.Names",
      "Data.Singletons.Partition",
      "Data.Singletons.Prelude",
      "Data.Singletons.Prelude.Base",
      "Data.Singletons.Prelude.Bool",
      "Data.Singletons.Prelude.Either",
      "Data.Singletons.Prelude.Enum",
      "Data.Singletons.Prelude.Eq",
      "Data.Singletons.Prelude.Instances",
      "Data.Singletons.Prelude.List",
      "Data.Singletons.Prelude.Maybe",
      "Data.Singletons.Prelude.Num",
      "Data.Singletons.Prelude.Ord",
      "Data.Singletons.Prelude.Tuple",
      "Data.Singletons.Promote",
      "Data.Singletons.Promote.Defun",
      "Data.Singletons.Promote.Eq",
      "Data.Singletons.Promote.Monad",
      "Data.Singletons.Promote.Type",
      "Data.Singletons.Single",
      "Data.Singletons.Single.Data",
      "Data.Singletons.Single.Eq",
      "Data.Singletons.Single.Monad",
      "Data.Singletons.Single.Type",
      "Data.Singletons.SuppressUnusedWarnings",
      "Data.Singletons.Syntax",
      "Data.Singletons.TH",
      "Data.Singletons.TypeLits",
      "Data.Singletons.TypeLits.Internal",
      "Data.Singletons.Util",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Type.Bool",
      "Data.Type.Coercion",
      "Data.Type.Equality",
      "Data.Version",
      "Data.Void",
      "Distribution.Package",
      "Distribution.Text",
      "GHC.Exts",
      "GHC.TypeLits",
      "GradingClient.Database",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Desugar",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Singletons.Classes",
      "Singletons.Empty",
      "Singletons.Nat",
      "Singletons.Operators",
      "SingletonsTestSuiteUtils",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "Test.Tasty",
      "Test.Tasty.Golden",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Singletons",
      "Data.Singletons.CustomStar",
      "Data.Singletons.TypeRepStar",
      "Data.Singletons.TH",
      "Data.Singletons.Prelude",
      "Data.Singletons.Prelude.Base",
      "Data.Singletons.Prelude.Bool",
      "Data.Singletons.Prelude.Either",
      "Data.Singletons.Prelude.Enum",
      "Data.Singletons.Prelude.Eq",
      "Data.Singletons.Prelude.Ord",
      "Data.Singletons.Prelude.List",
      "Data.Singletons.Prelude.Maybe",
      "Data.Singletons.Prelude.Num",
      "Data.Singletons.Prelude.Tuple",
      "Data.Promotion.Prelude",
      "Data.Promotion.TH",
      "Data.Promotion.Prelude.Base",
      "Data.Promotion.Prelude.Bool",
      "Data.Promotion.Prelude.Either",
      "Data.Promotion.Prelude.Eq",
      "Data.Promotion.Prelude.Ord",
      "Data.Promotion.Prelude.Enum",
      "Data.Promotion.Prelude.List",
      "Data.Promotion.Prelude.Maybe",
      "Data.Promotion.Prelude.Num",
      "Data.Promotion.Prelude.Tuple",
      "Data.Singletons.TypeLits",
      "Data.Singletons.Decide",
      "Data.Singletons.SuppressUnusedWarnings"
    ],
    "name": "singletons",
    "version": "2.2"
  },
  {
    "dependencies": {
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Data.Bits",
      "Data.Char",
      "Data.Complex",
      "Data.Dynamic",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Generics",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Ord",
      "Data.Ratio",
      "Data.Sequence",
      "Data.Set",
      "Data.Typeable",
      "Data.Word",
      "GHC.Generics",
      "Language.Haskell.TH",
      "Numeric.Natural",
      "Panic",
      "System.IO",
      "System.Process",
      "System.Random",
      "System.Random.TF",
      "System.Random.TF.Gen",
      "System.Timeout",
      "Test.QuickCheck",
      "Test.QuickCheck.All",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Exception",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Gen.Unsafe",
      "Test.QuickCheck.Modifiers",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Poly",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Random",
      "Test.QuickCheck.State",
      "Test.QuickCheck.Test",
      "Test.QuickCheck.Text"
    ],
    "modules": [
      "Test.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Gen.Unsafe",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Modifiers",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Test",
      "Test.QuickCheck.Text",
      "Test.QuickCheck.Poly",
      "Test.QuickCheck.State",
      "Test.QuickCheck.Random",
      "Test.QuickCheck.Exception"
    ],
    "name": "QuickCheck",
    "version": "2.8.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Word",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "entropy": [
        "System.Entropy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.ByteString",
      "Data.Word",
      "System.Entropy",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Crypto.Random.API"
    ],
    "name": "crypto-random-api",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "exception-transformers": [
        "Control.Monad.Exception"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Monad.Cont",
      "Control.Monad.Exception",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Writer.Class"
    ],
    "modules": [
      "Control.Monad.Exception.Instances"
    ],
    "name": "exception-mtl",
    "version": "0.4.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Arrow",
        "Control.Category",
        "Data.List",
        "Prelude"
      ],
      "base-unicode-symbols": [
        "Prelude.Unicode"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [],
      "groups": [
        "Data.Group"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Category",
      "Control.Lens",
      "Control.Monad.State",
      "Data.Aeson",
      "Data.ByteString.Lazy.Char8",
      "Data.Group",
      "Data.List",
      "Data.Text",
      "Data.Text.Region",
      "Data.Text.Region.Types",
      "Prelude",
      "Prelude.Unicode",
      "Test.Hspec"
    ],
    "modules": [
      "Data.Text.Region",
      "Data.Text.Region.Types"
    ],
    "name": "text-region",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "aeson-pretty": [],
      "aeson-qq": [],
      "attoparsec": [],
      "base": [
        "Data.Foldable"
      ],
      "base-compat": [],
      "blaze-html": [],
      "blaze-markup": [],
      "bytestring": [],
      "containers": [
        "Data.Map"
      ],
      "data-default": [],
      "either": [],
      "errors": [],
      "html-conduit": [],
      "lens-aeson": [],
      "microformats2-parser": [],
      "network": [
        "Network.Socket"
      ],
      "network-uri": [],
      "options": [
        "Options"
      ],
      "pcre-heavy": [],
      "safe": [],
      "scotty": [],
      "streaming-commons": [],
      "tagsoup": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Calendar.OrdinalDate"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "wai-extra": [
        "Network.Wai.Handler.CGI"
      ],
      "warp": [],
      "xml-lens": [],
      "xss-sanitize": []
    },
    "imports": [
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.Map",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time.Calendar",
      "Data.Time.Calendar.OrdinalDate",
      "Data.Vector",
      "Network.Socket",
      "Network.Wai.Handler.CGI",
      "Options"
    ],
    "modules": [
      "Data.Microformats2.Parser",
      "Data.Microformats2.Parser.Property",
      "Data.Microformats2.Parser.Date",
      "Data.Microformats2.Parser.HtmlUtil",
      "Data.Microformats2.Parser.Util"
    ],
    "name": "microformats2-parser",
    "version": "1.0.1.6"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.Version",
        "Data.Word",
        "GHC.Exts",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ]
    },
    "imports": [
      "AbsSyn",
      "Alex",
      "Array",
      "Char",
      "CharSet",
      "Codec.Binary.UTF8.Light",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.ST",
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.FiniteMap",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ranged",
      "Data.Ranged.Boundaries",
      "Data.Ranged.RangedSet",
      "Data.Ranged.Ranges",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.Set",
      "Data.Version",
      "Data.Word",
      "DFA",
      "DFAMin",
      "DFS",
      "GHC.Exts",
      "GlaExts",
      "Info",
      "Map",
      "NFA",
      "Output",
      "ParseMonad",
      "Parser",
      "Paths",
      "Prelude",
      "Scan",
      "Set",
      "Sort",
      "System.Cmd",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Test.QuickCheck",
      "Tokens",
      "UTF8",
      "Util"
    ],
    "modules": [],
    "name": "alex",
    "version": "3.1.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Debug.Trace",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "derive": [],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts"
      ],
      "pretty": [],
      "process": [
        "System.Process"
      ],
      "syb": [
        "Data.Generics"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "transformers": [
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data",
        "Data.Generics.Uniplate.DataOnly"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Derive.All",
      "Data.Derive.Arbitrary",
      "Data.Derive.ArbitraryOld",
      "Data.Derive.Arities",
      "Data.Derive.Binary",
      "Data.Derive.BinaryDefer",
      "Data.Derive.Bounded",
      "Data.Derive.Class.Arities",
      "Data.Derive.Data",
      "Data.Derive.DataAbstract",
      "Data.Derive.Default",
      "Data.DeriveDSL",
      "Data.Derive.DSL.Apply",
      "Data.Derive.DSL.Derive",
      "Data.Derive.DSL.DSL",
      "Data.Derive.DSL.HSE",
      "Data.Derive.DSL.SYB",
      "Data.Derive.Enum",
      "Data.Derive.EnumCyclic",
      "Data.Derive.Eq",
      "Data.Derive.Fold",
      "Data.Derive.Foldable",
      "Data.Derive.From",
      "Data.Derive.Functor",
      "Data.Derive.Has",
      "Data.Derive.Internal.Derivation",
      "Data.Derive.Internal.Instance",
      "Data.Derive.Internal.Traversal",
      "Data.Derive.Is",
      "Data.Derive.JSON",
      "Data.Derive.LazySet",
      "Data.Derive.Lens",
      "Data.DeriveMain",
      "Data.Derive.Monoid",
      "Data.Derive.NFData",
      "Data.Derive.Ord",
      "Data.Derive.Read",
      "Data.Derive.Ref",
      "Data.Derive.Serial",
      "Data.Derive.Serialize",
      "Data.Derive.Set",
      "Data.Derive.Show",
      "Data.Derive.Traversable",
      "Data.Derive.Typeable",
      "Data.Derive.UniplateDirect",
      "Data.Derive.UniplateTypeable",
      "Data.Derive.Update",
      "Data.Foldable",
      "Data.Function",
      "Data.Generics",
      "Data.Generics.Uniplate.Data",
      "Data.Generics.Uniplate.DataOnly",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Debug.Trace",
      "Derive.Derivation",
      "Derive.Flags",
      "Derive.Generate",
      "Derive.Main",
      "Derive.Test",
      "Derive.Utils",
      "Language.Haskell",
      "Language.Haskell.Convert",
      "Language.Haskell.Exts",
      "Language.Haskell.TH",
      "Language.Haskell.TH.All",
      "Language.Haskell.TH.Compat",
      "Language.Haskell.TH.Data",
      "Language.Haskell.TH.ExpandSynonym",
      "Language.Haskell.TH.Helper",
      "Language.Haskell.TH.Peephole",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "Text.JSON.Types"
    ],
    "modules": [
      "Data.DeriveMain",
      "Data.DeriveTH",
      "Data.DeriveDSL",
      "Data.Derive.All",
      "Data.Derive.DSL.Apply",
      "Data.Derive.DSL.Derive",
      "Data.Derive.DSL.DSL",
      "Data.Derive.DSL.HSE",
      "Data.Derive.DSL.SYB",
      "Data.Derive.Instance.Arities",
      "Data.Derive.Class.Arities",
      "Data.Derive.Class.Default",
      "Language.Haskell",
      "Language.Haskell.Convert",
      "Language.Haskell.TH.All",
      "Language.Haskell.TH.Compat",
      "Language.Haskell.TH.Data",
      "Language.Haskell.TH.ExpandSynonym",
      "Language.Haskell.TH.Helper",
      "Language.Haskell.TH.Peephole",
      "Data.Derive.Arbitrary",
      "Data.Derive.ArbitraryOld",
      "Data.Derive.Arities",
      "Data.Derive.Binary",
      "Data.Derive.BinaryDefer",
      "Data.Derive.Bounded",
      "Data.Derive.Data",
      "Data.Derive.DataAbstract",
      "Data.Derive.Default",
      "Data.Derive.Enum",
      "Data.Derive.EnumCyclic",
      "Data.Derive.Eq",
      "Data.Derive.Fold",
      "Data.Derive.Foldable",
      "Data.Derive.From",
      "Data.Derive.Functor",
      "Data.Derive.Has",
      "Data.Derive.Is",
      "Data.Derive.JSON",
      "Data.Derive.LazySet",
      "Data.Derive.Lens",
      "Data.Derive.Monoid",
      "Data.Derive.NFData",
      "Data.Derive.Ord",
      "Data.Derive.Read",
      "Data.Derive.Ref",
      "Data.Derive.Serial",
      "Data.Derive.Serialize",
      "Data.Derive.Set",
      "Data.Derive.Show",
      "Data.Derive.Traversable",
      "Data.Derive.Typeable",
      "Data.Derive.UniplateDirect",
      "Data.Derive.UniplateTypeable",
      "Data.Derive.Update",
      "Data.Derive.Internal.Derivation"
    ],
    "name": "derive",
    "version": "2.5.26"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Configuration",
        "Distribution.PackageDescription.Parse",
        "Distribution.Text",
        "Distribution.Verbosity",
        "Distribution.Version"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Version",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment"
      ],
      "containers": [
        "Data.Map"
      ],
      "fclabels": [
        "Data.Label"
      ],
      "process": [
        "System.Process"
      ],
      "regex-compat": [
        "Text.Regex"
      ],
      "split": [
        "Data.List.Split"
      ],
      "strict": [
        "System.IO.Strict"
      ]
    },
    "imports": [
      "Config",
      "Control.Applicative",
      "Control.Monad",
      "Data.Label",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Version",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Configuration",
      "Distribution.PackageDescription.Parse",
      "Distribution.Text",
      "Distribution.Verbosity",
      "Distribution.Version",
      "Package",
      "Paths",
      "Prelude",
      "System.Console.GetOpt",
      "System.Environment",
      "System.IO.Strict",
      "System.Process",
      "Text.Regex",
      "Version"
    ],
    "modules": [],
    "name": "bumper",
    "version": "0.6.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Maybe"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State.Strict"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.State.Strict",
      "Data.Generics.Geniplate",
      "Data.Maybe",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Data.Generics.Geniplate"
    ],
    "name": "geniplate-mirror",
    "version": "0.7.4"
  },
  {
    "dependencies": {
      "adjunctions": [
        "Data.Functor.Rep"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.IORef",
        "Data.List.NonEmpty",
        "Data.Semigroup",
        "Data.Traversable",
        "GHC.Exts",
        "GHC.IO",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "distributive": [
        "Data.Distributive"
      ],
      "semigroupoids": [
        "Data.Functor.Alt",
        "Data.Functor.Apply",
        "Data.Functor.Extend",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable"
      ],
      "semigroups": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Comonad",
      "Data.Char",
      "Data.Data",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Functor.Alt",
      "Data.Functor.Apply",
      "Data.Functor.Extend",
      "Data.Functor.Rep",
      "Data.IORef",
      "Data.List.NonEmpty",
      "Data.Semigroup",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Traversable",
      "Data.Stream.Infinite",
      "Data.Stream.Infinite.Skew",
      "Data.Traversable",
      "GHC.Exts",
      "GHC.IO",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.Stream.Future",
      "Data.Stream.Future.Skew",
      "Data.Stream.Infinite",
      "Data.Stream.Infinite.Skew",
      "Data.Stream.Infinite.Functional.Zipper",
      "Data.Stream.Supply"
    ],
    "name": "streams",
    "version": "3.3"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit.Base",
        "Test.HUnit.Lang"
      ],
      "extensible-exceptions": [],
      "test-framework": [
        "Test.Framework.Providers.API"
      ]
    },
    "imports": [
      "Data.Typeable",
      "Test.Framework.Providers.API",
      "Test.HUnit.Base",
      "Test.HUnit.Lang"
    ],
    "modules": [
      "Test.Framework.Providers.HUnit"
    ],
    "name": "test-framework-hunit",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.ByteString.Lazy",
        "Data.Attoparsec.Combinator"
      ],
      "base": [
        "Control.Applicative",
        "Data.Bits",
        "Data.List",
        "Data.String",
        "Data.Word"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ]
    },
    "imports": [
      "Codec.Encryption.OpenPGP.ASCIIArmor",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Decode",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Encode",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Multipart",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Types",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Utils",
      "Control.Applicative",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Combinator",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Digest.CRC24",
      "Data.List",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.String",
      "Data.Word",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Codec.Encryption.OpenPGP.ASCIIArmor",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Decode",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Encode",
      "Codec.Encryption.OpenPGP.ASCIIArmor.Types"
    ],
    "name": "openpgp-asciiarmor",
    "version": "0.1"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit.Base"
      ],
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Numeric"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "crypto-api": [
        "Crypto.Classes",
        "Crypto.HMAC",
        "Crypto.Modes",
        "Crypto.Padding",
        "Crypto.Types"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "test-framework": [
        "Test.Framework"
      ],
      "test-framework-hunit": [
        "Test.Framework.Providers.HUnit"
      ],
      "test-framework-quickcheck2": [
        "Test.Framework.Providers.QuickCheck2"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Crypto.Classes",
      "Crypto.HMAC",
      "Crypto.Modes",
      "Crypto.Padding",
      "Crypto.Types",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Serialize",
      "Numeric",
      "Paths",
      "System.Directory",
      "System.FilePath",
      "Test.Crypto",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit.Base",
      "Test.ParseNistKATs",
      "Test.QuickCheck"
    ],
    "modules": [
      "Test.Crypto",
      "Test.AES",
      "Test.SHA",
      "Test.HMAC",
      "Test.ParseNistKATs",
      "Test.TwoFish",
      "Test.MD5"
    ],
    "name": "crypto-api-tests",
    "version": "0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "System.Exit",
        "System.IO",
        "System.Posix.Types",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.Network",
      "Data.IORef",
      "Network.Sendfile",
      "Network.Sendfile.BSD",
      "Network.Sendfile.Fallback",
      "Network.Sendfile.Linux",
      "Network.Sendfile.Types",
      "Network.Socket",
      "Network.Socket.ByteString",
      "System.Directory",
      "System.Exit",
      "System.IO",
      "System.Posix.Files",
      "System.Posix.Types",
      "System.Process",
      "System.Timeout",
      "Test.Hspec"
    ],
    "modules": [
      "Network.Sendfile"
    ],
    "name": "simple-sendfile",
    "version": "0.2.25"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Functor",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Tuple",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "AFRPTests",
      "AFRPTestsAccum",
      "AFRPTestsArr",
      "AFRPTestsBasicSF",
      "AFRPTestsCOC",
      "AFRPTestsCommon",
      "AFRPTestsComp",
      "AFRPTestsDelay",
      "AFRPTestsDer",
      "AFRPTestsEmbed",
      "AFRPTestsEvSrc",
      "AFRPTestsFirstSecond",
      "AFRPTestsKSwitch",
      "AFRPTestsLaws",
      "AFRPTestsLoop",
      "AFRPTestsLoopIntegral",
      "AFRPTestsLoopLaws",
      "AFRPTestsLoopPre",
      "AFRPTestsPre",
      "AFRPTestsPSwitch",
      "AFRPTestsReact",
      "AFRPTestsRPSwitch",
      "AFRPTestsRSwitch",
      "AFRPTestsSscan",
      "AFRPTestsSwitch",
      "AFRPTestsTask",
      "AFRPTestsUtils",
      "AFRPTestsWFG",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Functor",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Tuple",
      "Elevator",
      "FRP.Yampa",
      "FRP.Yampa.AffineSpace",
      "FRP.Yampa.Basic",
      "FRP.Yampa.Conditional",
      "FRP.Yampa.Core",
      "FRP.Yampa.Delays",
      "FRP.Yampa.Diagnostics",
      "FRP.Yampa.Event",
      "FRP.Yampa.EventS",
      "FRP.Yampa.Forceable",
      "FRP.Yampa.Hybrid",
      "FRP.Yampa.Integration",
      "FRP.Yampa.InternalCore",
      "FRP.Yampa.Internals",
      "FRP.Yampa.Loop",
      "FRP.Yampa.Miscellany",
      "FRP.Yampa.Point2",
      "FRP.Yampa.Point3",
      "FRP.Yampa.Random",
      "FRP.Yampa.Scan",
      "FRP.Yampa.Simulation",
      "FRP.Yampa.Switches",
      "FRP.Yampa.Task",
      "FRP.Yampa.Time",
      "FRP.Yampa.Utilities",
      "FRP.Yampa.Vector2",
      "FRP.Yampa.Vector3",
      "FRP.Yampa.VectorSpace",
      "Language.Haskell.HLint",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "System.Random",
      "TailgatingDetector",
      "Text.Regex.Posix"
    ],
    "modules": [
      "FRP.Yampa",
      "FRP.Yampa.Event",
      "FRP.Yampa.Internals",
      "FRP.Yampa.Task",
      "FRP.Yampa.Core",
      "FRP.Yampa.AffineSpace",
      "FRP.Yampa.Geometry",
      "FRP.Yampa.Point2",
      "FRP.Yampa.Point3",
      "FRP.Yampa.Vector2",
      "FRP.Yampa.Vector3",
      "FRP.Yampa.VectorSpace",
      "FRP.Yampa.Forceable",
      "FRP.Yampa.MergeableRecord",
      "FRP.Yampa.Miscellany",
      "FRP.Yampa.Utilities",
      "FRP.Yampa.Basic",
      "FRP.Yampa.Conditional",
      "FRP.Yampa.Delays",
      "FRP.Yampa.Diagnostics",
      "FRP.Yampa.EventS",
      "FRP.Yampa.Hybrid",
      "FRP.Yampa.Integration",
      "FRP.Yampa.Loop",
      "FRP.Yampa.Random",
      "FRP.Yampa.Scan",
      "FRP.Yampa.Simulation",
      "FRP.Yampa.Switches",
      "FRP.Yampa.Time"
    ],
    "name": "Yampa",
    "version": "0.10.5"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "array": [
        "Data.Array.IArray",
        "Data.Array.IO",
        "Data.Array.Unboxed",
        "Data.Array.Unsafe"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Unsafe",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.STRef",
        "Data.Word",
        "Debug.Trace",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ],
      "random": []
    },
    "imports": [
      "Codec.ByteString.Builder",
      "Codec.ByteString.Parser",
      "Codec.Internal.Arbitrary",
      "Codec.Midi",
      "Codec.SoundFont",
      "Codec.Wav",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.ST.Unsafe",
      "Data.Array.IArray",
      "Data.Array.IO",
      "Data.Array.Unboxed",
      "Data.Array.Unsafe",
      "Data.Audio",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.STRef",
      "Data.Word",
      "Debug.Trace",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "Test.QuickCheck"
    ],
    "modules": [
      "Codec.Midi",
      "Codec.Wav",
      "Codec.SoundFont",
      "Codec.ByteString.Parser",
      "Codec.ByteString.Builder",
      "Data.Audio"
    ],
    "name": "HCodecs",
    "version": "0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Dynamic",
        "Data.Function",
        "Data.Functor",
        "Data.IORef",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.STRef"
      ],
      "concurrency": [
        "Control.Monad.Conc.Class",
        "Control.Monad.STM.Class"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "dpor": [
        "Test.DPOR",
        "Test.DPOR.Schedule"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "monad-loops": [],
      "mtl": [
        "Control.Monad.Cont"
      ],
      "ref-fd": [
        "Control.Monad.Ref"
      ],
      "semigroups": [],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Conc.Class",
      "Control.Monad.Cont",
      "Control.Monad.IO.Class",
      "Control.Monad.Ref",
      "Control.Monad.ST",
      "Control.Monad.STM.Class",
      "Data.Dynamic",
      "Data.Function",
      "Data.Functor",
      "Data.IORef",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Sequence",
      "Data.Set",
      "Data.STRef",
      "Test.DejaFu.Common",
      "Test.DejaFu.Conc",
      "Test.DejaFu.Conc.Internal",
      "Test.DejaFu.Conc.Internal.Common",
      "Test.DejaFu.Conc.Internal.Memory",
      "Test.DejaFu.Conc.Internal.Threading",
      "Test.DejaFu.SCT",
      "Test.DejaFu.STM",
      "Test.DejaFu.STM.Internal",
      "Test.DPOR",
      "Test.DPOR.Schedule"
    ],
    "modules": [
      "Test.DejaFu",
      "Test.DejaFu.Conc",
      "Test.DejaFu.Common",
      "Test.DejaFu.SCT",
      "Test.DejaFu.STM",
      "Test.DejaFu.Conc.Internal",
      "Test.DejaFu.Conc.Internal.Common",
      "Test.DejaFu.Conc.Internal.Memory",
      "Test.DejaFu.Conc.Internal.Threading",
      "Test.DejaFu.STM.Internal"
    ],
    "name": "dejafu",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.IArray",
        "Data.Array.MArray",
        "Data.Array.Storable.Internals"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Bits",
        "Data.Bool",
        "Data.Char",
        "Data.Complex",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "Foreign.C.Types",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Exts",
        "Numeric",
        "Prelude",
        "System.CPUTime",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem.StableName",
        "Text.Printf"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "fclabels": [
        "Data.Label"
      ],
      "ghc-prim": [],
      "hashable": [
        "Data.Hashable"
      ],
      "hashtables": [
        "Data.HashTable.IO"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.State",
      "Data.Array.Accelerate",
      "Data.Array.Accelerate.Analysis.Match",
      "Data.Array.Accelerate.Analysis.Shape",
      "Data.Array.Accelerate.Array.Data",
      "Data.Array.Accelerate.Array.Representation",
      "Data.Array.Accelerate.Array.Sugar",
      "Data.Array.Accelerate.AST",
      "Data.Array.Accelerate.Debug",
      "Data.Array.Accelerate.Error",
      "Data.Array.Accelerate.Language",
      "Data.Array.Accelerate.Prelude",
      "Data.Array.Accelerate.Pretty",
      "Data.Array.Accelerate.Pretty.Print",
      "Data.Array.Accelerate.Pretty.Traverse",
      "Data.Array.Accelerate.Smart",
      "Data.Array.Accelerate.Trafo",
      "Data.Array.Accelerate.Trafo.Algebra",
      "Data.Array.Accelerate.Trafo.Base",
      "Data.Array.Accelerate.Trafo.Fusion",
      "Data.Array.Accelerate.Trafo.Rewrite",
      "Data.Array.Accelerate.Trafo.Sharing",
      "Data.Array.Accelerate.Trafo.Shrink",
      "Data.Array.Accelerate.Trafo.Simplify",
      "Data.Array.Accelerate.Trafo.Substitution",
      "Data.Array.Accelerate.Tuple",
      "Data.Array.Accelerate.Type",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Array.MArray",
      "Data.Array.Storable.Internals",
      "Data.Bits",
      "Data.Bool",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Complex",
      "Data.Function",
      "Data.Functor",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.HashTable.IO",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.Label",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.String",
      "Data.Text",
      "Data.Typeable",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "Foreign.C.Types",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Exts",
      "Language.Haskell.TH",
      "Numeric",
      "Prelude",
      "System.CPUTime",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "System.Posix.Process",
      "Text.Blaze.Html4.Transitional",
      "Text.Blaze.Html4.Transitional.Attributes",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.PrettyPrint",
      "Text.Printf"
    ],
    "modules": [
      "Data.Array.Accelerate",
      "Data.Array.Accelerate.Interpreter",
      "Data.Array.Accelerate.Data.Complex",
      "Data.Array.Accelerate.AST",
      "Data.Array.Accelerate.Analysis.Match",
      "Data.Array.Accelerate.Analysis.Shape",
      "Data.Array.Accelerate.Analysis.Stencil",
      "Data.Array.Accelerate.Analysis.Type",
      "Data.Array.Accelerate.Array.Data",
      "Data.Array.Accelerate.Array.Representation",
      "Data.Array.Accelerate.Array.Sugar",
      "Data.Array.Accelerate.Debug",
      "Data.Array.Accelerate.Error",
      "Data.Array.Accelerate.Pretty",
      "Data.Array.Accelerate.Smart",
      "Data.Array.Accelerate.Trafo",
      "Data.Array.Accelerate.Tuple",
      "Data.Array.Accelerate.Type"
    ],
    "name": "accelerate",
    "version": "0.15.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Ratio",
        "Debug.Trace",
        "GHC.Generics",
        "Prelude",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [],
      "wl-pprint": [
        "Text.PrettyPrint.Leijen"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Matrix",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ratio",
      "Data.Set",
      "Debug.Trace",
      "Etalon",
      "GHC.Generics",
      "Instances",
      "Ivic",
      "Kratzel",
      "LinearForm",
      "Math.ExpPairs",
      "Math.ExpPairs.Ivic",
      "Math.ExpPairs.Kratzel",
      "Math.ExpPairs.LinearForm",
      "Math.ExpPairs.Matrix3",
      "Math.ExpPairs.MenzerNowak",
      "Math.ExpPairs.Pair",
      "Math.ExpPairs.PrettyProcess",
      "Math.ExpPairs.Process",
      "Math.ExpPairs.ProcessMatrix",
      "Math.ExpPairs.RatioInf",
      "Matrix3",
      "MenzerNowak",
      "Pair",
      "Prelude",
      "PrettyProcess",
      "Process",
      "RatioInf",
      "System.Random",
      "Test.QuickCheck",
      "Test.SmallCheck.Series",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.SmallCheck",
      "Text.PrettyPrint.Leijen",
      "Text.Printf"
    ],
    "modules": [
      "Math.ExpPairs",
      "Math.ExpPairs.Ivic",
      "Math.ExpPairs.Kratzel",
      "Math.ExpPairs.MenzerNowak",
      "Math.ExpPairs.LinearForm",
      "Math.ExpPairs.Matrix3",
      "Math.ExpPairs.Pair",
      "Math.ExpPairs.Process",
      "Math.ExpPairs.PrettyProcess",
      "Math.ExpPairs.ProcessMatrix",
      "Math.ExpPairs.RatioInf"
    ],
    "name": "exp-pairs",
    "version": "0.1.5.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Data.Foldable",
        "Data.Function",
        "Data.Maybe",
        "Debug.Trace",
        "GHC.Generics"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "clumpiness": [
        "Math.Clumpiness.Algorithms",
        "Math.Clumpiness.Types"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "find-clumpiness": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "text-show": [
        "TextShow"
      ],
      "tree-fun": [
        "Math.TreeFun.Tree",
        "Math.TreeFun.Types"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy.Char8",
      "Data.Foldable",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Tree",
      "Data.Vector",
      "Debug.Trace",
      "GHC.Generics",
      "LineageConvert",
      "Math.Clumpiness.Algorithms",
      "Math.Clumpiness.Types",
      "Math.TreeFun.Tree",
      "Math.TreeFun.Types",
      "Options.Applicative",
      "Print",
      "TextShow",
      "TreeTransform",
      "Types"
    ],
    "modules": [
      "Types",
      "LineageConvert",
      "TreeTransform",
      "Print"
    ],
    "name": "find-clumpiness",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Function",
        "Data.Functor",
        "Data.IORef",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Unique",
        "Data.Version",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "GHC.IO.Handle",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.Show.Functions"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Clock"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Extra",
      "Control.Exception",
      "Control.Exception.Extra",
      "Control.Monad",
      "Control.Monad.Extra",
      "Data.Char",
      "Data.Either",
      "Data.Either.Extra",
      "Data.Function",
      "Data.Functor",
      "Data.IORef",
      "Data.IORef.Extra",
      "Data.Ix",
      "Data.List",
      "Data.List.Extra",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Tuple",
      "Data.Tuple.Extra",
      "Data.Typeable",
      "Data.Typeable.Extra",
      "Data.Unique",
      "Data.Version",
      "Data.Version.Extra",
      "Extra",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "GHC.IO.Handle",
      "Numeric",
      "Numeric.Extra",
      "Prelude",
      "System.Directory",
      "System.Directory.Extra",
      "System.Environment",
      "System.Environment.Extra",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.Info.Extra",
      "System.IO",
      "System.IO.Error",
      "System.IO.Extra",
      "System.IO.Unsafe",
      "System.Posix",
      "System.Process",
      "System.Process.Extra",
      "System.Time.Extra",
      "TestCustom",
      "TestGen",
      "Test.QuickCheck",
      "Test.QuickCheck.Test",
      "TestUtil",
      "Text.ParserCombinators.ReadP",
      "Text.Show.Functions"
    ],
    "modules": [
      "Extra",
      "Control.Concurrent.Extra",
      "Control.Exception.Extra",
      "Control.Monad.Extra",
      "Data.Either.Extra",
      "Data.IORef.Extra",
      "Data.List.Extra",
      "Data.Tuple.Extra",
      "Data.Typeable.Extra",
      "Data.Version.Extra",
      "Numeric.Extra",
      "System.Directory.Extra",
      "System.Environment.Extra",
      "System.Info.Extra",
      "System.IO.Extra",
      "System.Process.Extra",
      "System.Time.Extra"
    ],
    "name": "extra",
    "version": "1.4.10"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Void",
        "GHC.Exts"
      ],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "type-aligned": [
        "Data.TASequence",
        "Data.TASequence.FastCatQueue"
      ],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Eff",
      "Control.Eff.Choose",
      "Control.Eff.Example",
      "Control.Eff.Exception",
      "Control.Eff.Lift",
      "Control.Eff.Operational",
      "Control.Eff.Operational.Example",
      "Control.Eff.Reader.Lazy",
      "Control.Eff.Reader.Strict",
      "Control.Eff.State.Lazy",
      "Control.Eff.State.Strict",
      "Control.Eff.Writer.Lazy",
      "Control.Eff.Writer.Strict",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Free.Reflection",
      "Control.Monad.IO.Class",
      "Data.Monoid",
      "Data.OpenUnion",
      "Data.OpenUnion.Imports",
      "Data.OpenUnion.Internal.Base",
      "Data.OpenUnion.Internal.OpenUnion1",
      "Data.OpenUnion.Internal.OpenUnion2",
      "Data.TASequence",
      "Data.TASequence.FastCatQueue",
      "Data.Typeable",
      "Data.Void",
      "GHC.Exts",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.Framework.TH",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Control.Eff",
      "Control.Eff.Choose",
      "Control.Eff.Coroutine",
      "Control.Eff.Cut",
      "Control.Eff.Example",
      "Control.Eff.Exception",
      "Control.Eff.Fresh",
      "Control.Eff.Lift",
      "Control.Eff.Reader.Lazy",
      "Control.Eff.Reader.Strict",
      "Control.Eff.State.Lazy",
      "Control.Eff.State.Strict",
      "Control.Eff.Writer.Lazy",
      "Control.Eff.Writer.Strict",
      "Control.Eff.Trace",
      "Control.Eff.Operational",
      "Control.Eff.Operational.Example",
      "Control.Monad.Free.Reflection",
      "Data.OpenUnion",
      "Data.OpenUnion.Imports"
    ],
    "name": "extensible-effects",
    "version": "1.11.0.4"
  },
  {
    "dependencies": {
      "async": [],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [
        "System.Process"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "tasty": [
        "Test.Tasty",
        "Test.Tasty.Options",
        "Test.Tasty.Providers",
        "Test.Tasty.Runners"
      ],
      "temporary": [
        "System.IO.Temp"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.List",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Set",
      "Data.Tagged",
      "Data.Typeable",
      "Options.Applicative",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.Process",
      "Test.Tasty",
      "Test.Tasty.Golden",
      "Test.Tasty.Golden.Advanced",
      "Test.Tasty.Golden.Internal",
      "Test.Tasty.HUnit",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Test.Tasty.Runners",
      "Text.Printf"
    ],
    "modules": [
      "Test.Tasty.Golden",
      "Test.Tasty.Golden.Advanced",
      "Test.Tasty.Golden.Manage"
    ],
    "name": "tasty-golden",
    "version": "2.3.1.1"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Arbitrary"
      ],
      "array": [
        "Data.Array",
        "Data.Array.MArray",
        "Data.Array.MArray.Safe",
        "Data.Array.ST",
        "Data.Array.ST.Safe"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Control.Monad.ST.Lazy.Unsafe",
        "Data.Bits",
        "Data.Char",
        "Data.Coerce",
        "Data.Data",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Typeable",
        "Data.Type.Bool",
        "Debug.Trace",
        "GHC.Base",
        "GHC.TypeLits",
        "GHC.Word",
        "Numeric",
        "Prelude",
        "System.IO.Unsafe",
        "Text.Read",
        "Unsafe.Coerce"
      ],
      "data-default": [
        "Data.Default"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [],
      "ghc-typelits-extra": [
        "GHC.TypeLits.Extra"
      ],
      "ghc-typelits-natnormalise": [],
      "integer-gmp": [
        "GHC.Integer"
      ],
      "lens": [
        "Control.Lens"
      ],
      "reflection": [
        "Data.Reflection"
      ],
      "singletons": [
        "Data.Singletons.Prelude"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "CLaSH.Annotations.TopEntity",
      "CLaSH.Class.BitPack",
      "CLaSH.Class.Num",
      "CLaSH.Class.Resize",
      "CLaSH.Prelude",
      "CLaSH.Prelude.BitIndex",
      "CLaSH.Prelude.BitReduction",
      "CLaSH.Prelude.BlockRam",
      "CLaSH.Prelude.BlockRam.File",
      "CLaSH.Prelude.DataFlow",
      "CLaSH.Prelude.Explicit",
      "CLaSH.Prelude.Explicit.Safe",
      "CLaSH.Prelude.Mealy",
      "CLaSH.Prelude.Moore",
      "CLaSH.Prelude.RAM",
      "CLaSH.Prelude.ROM",
      "CLaSH.Prelude.ROM.File",
      "CLaSH.Prelude.Safe",
      "CLaSH.Prelude.Synchronizer",
      "CLaSH.Prelude.Testbench",
      "CLaSH.Promoted.Nat",
      "CLaSH.Promoted.Nat.Literals",
      "CLaSH.Promoted.Nat.TH",
      "CLaSH.Promoted.Nat.Unsafe",
      "CLaSH.Promoted.Ord",
      "CLaSH.Promoted.Symbol",
      "CLaSH.Signal",
      "CLaSH.Signal.Bundle",
      "CLaSH.Signal.Delayed",
      "CLaSH.Signal.Delayed.Explicit",
      "CLaSH.Signal.Explicit",
      "CLaSH.Signal.Internal",
      "CLaSH.Sized.BitVector",
      "CLaSH.Sized.Fixed",
      "CLaSH.Sized.Index",
      "CLaSH.Sized.Internal.BitVector",
      "CLaSH.Sized.Internal.Index",
      "CLaSH.Sized.Internal.Signed",
      "CLaSH.Sized.Internal.Unsigned",
      "CLaSH.Sized.RTree",
      "CLaSH.Sized.Signed",
      "CLaSH.Sized.Unsigned",
      "CLaSH.Sized.Vector",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.ST.Lazy",
      "Control.Monad.ST.Lazy.Unsafe",
      "Control.Monad.Trans.State",
      "Data.Array",
      "Data.Array.MArray",
      "Data.Array.MArray.Safe",
      "Data.Array.ST",
      "Data.Array.ST.Safe",
      "Data.Bits",
      "Data.Char",
      "Data.Coerce",
      "Data.Data",
      "Data.Default",
      "Data.Foldable",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Reflection",
      "Data.Singletons.Prelude",
      "Data.Typeable",
      "Data.Type.Bool",
      "Debug.Trace",
      "GHC.Base",
      "GHC.Integer",
      "GHC.Prim",
      "GHC.TypeLits",
      "GHC.TypeLits.Extra",
      "GHC.Word",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lift",
      "Language.Haskell.TH.Syntax",
      "Numeric",
      "Prelude",
      "System.IO.Unsafe",
      "Test.DocTest",
      "Test.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Text.Read",
      "Unsafe.Coerce"
    ],
    "modules": [
      "CLaSH.Annotations.TopEntity",
      "CLaSH.Class.BitPack",
      "CLaSH.Class.Num",
      "CLaSH.Class.Resize",
      "CLaSH.Prelude",
      "CLaSH.Prelude.BitIndex",
      "CLaSH.Prelude.BitReduction",
      "CLaSH.Prelude.BlockRam",
      "CLaSH.Prelude.BlockRam.File",
      "CLaSH.Prelude.DataFlow",
      "CLaSH.Prelude.Explicit",
      "CLaSH.Prelude.Explicit.Safe",
      "CLaSH.Prelude.Mealy",
      "CLaSH.Prelude.Moore",
      "CLaSH.Prelude.RAM",
      "CLaSH.Prelude.ROM",
      "CLaSH.Prelude.ROM.File",
      "CLaSH.Prelude.Safe",
      "CLaSH.Prelude.Synchronizer",
      "CLaSH.Prelude.Testbench",
      "CLaSH.Promoted.Nat",
      "CLaSH.Promoted.Nat.Literals",
      "CLaSH.Promoted.Nat.TH",
      "CLaSH.Promoted.Nat.Unsafe",
      "CLaSH.Promoted.Ord",
      "CLaSH.Promoted.Symbol",
      "CLaSH.Signal",
      "CLaSH.Signal.Bundle",
      "CLaSH.Signal.Delayed",
      "CLaSH.Signal.Delayed.Explicit",
      "CLaSH.Signal.Explicit",
      "CLaSH.Signal.Internal",
      "CLaSH.Sized.BitVector",
      "CLaSH.Sized.Fixed",
      "CLaSH.Sized.Index",
      "CLaSH.Sized.RTree",
      "CLaSH.Sized.Signed",
      "CLaSH.Sized.Unsigned",
      "CLaSH.Sized.Vector",
      "CLaSH.Sized.Internal.BitVector",
      "CLaSH.Sized.Internal.Index",
      "CLaSH.Sized.Internal.Signed",
      "CLaSH.Sized.Internal.Unsigned",
      "CLaSH.Tutorial",
      "CLaSH.Examples"
    ],
    "name": "clash-prelude",
    "version": "0.10.14"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Typeable",
        "Foreign.Ptr",
        "Foreign.Storable"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Concurrent.STM",
      "Control.Monad.IO.Class",
      "Data.IORef",
      "Data.Typeable",
      "Foreign.Ptr",
      "Foreign.Storable"
    ],
    "modules": [
      "Data.StateVar"
    ],
    "name": "StateVar",
    "version": "1.1.0.4"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Property"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Data.Version",
        "Data.Word",
        "GHC.Exts",
        "Numeric",
        "System.IO.Unsafe",
        "Text.Read"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ],
      "conduit": [],
      "containers": [
        "Data.Map.Strict"
      ],
      "cryptohash": [
        "Crypto.Hash",
        "Crypto.Hash.SHA256",
        "Crypto.MAC.HMAC"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "entropy": [
        "System.Entropy"
      ],
      "largeword": [
        "Data.LargeWord"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "murmur3": [
        "Data.Hash.Murmur"
      ],
      "network": [
        "Network.Socket"
      ],
      "pbkdf": [
        "Crypto.PBKDF.ByteString"
      ],
      "secp256k1": [
        "Crypto.Secp256k1"
      ],
      "split": [
        "Data.List.Split"
      ],
      "string-conversions": [
        "Data.String.Conversions"
      ],
      "text": [],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Either",
      "Crypto.Hash",
      "Crypto.Hash.SHA256",
      "Crypto.MAC.HMAC",
      "Crypto.PBKDF.ByteString",
      "Crypto.Secp256k1",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.Hash.Murmur",
      "Data.Int",
      "Data.IORef",
      "Data.LargeWord",
      "Data.List",
      "Data.List.Split",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.String",
      "Data.String.Conversions",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Vector",
      "Data.Version",
      "Data.Word",
      "GHC.Exts",
      "Network.Haskoin.Block",
      "Network.Haskoin.Block.Merkle",
      "Network.Haskoin.Block.Tests",
      "Network.Haskoin.Block.Types",
      "Network.Haskoin.Block.Units",
      "Network.Haskoin.Cereal.Tests",
      "Network.Haskoin.Constants",
      "Network.Haskoin.Crypto",
      "Network.Haskoin.Crypto.Base58",
      "Network.Haskoin.Crypto.Base58.Tests",
      "Network.Haskoin.Crypto.Base58.Units",
      "Network.Haskoin.Crypto.ECDSA",
      "Network.Haskoin.Crypto.ECDSA.Tests",
      "Network.Haskoin.Crypto.ExtendedKeys",
      "Network.Haskoin.Crypto.ExtendedKeys.Tests",
      "Network.Haskoin.Crypto.ExtendedKeys.Units",
      "Network.Haskoin.Crypto.Hash",
      "Network.Haskoin.Crypto.Hash.Tests",
      "Network.Haskoin.Crypto.Hash.Units",
      "Network.Haskoin.Crypto.Keys",
      "Network.Haskoin.Crypto.Keys.Tests",
      "Network.Haskoin.Crypto.Mnemonic",
      "Network.Haskoin.Crypto.Mnemonic.Tests",
      "Network.Haskoin.Crypto.Mnemonic.Units",
      "Network.Haskoin.Crypto.Units",
      "Network.Haskoin.Internals",
      "Network.Haskoin.Json.Tests",
      "Network.Haskoin.Node",
      "Network.Haskoin.Node.Bloom",
      "Network.Haskoin.Node.Message",
      "Network.Haskoin.Node.Types",
      "Network.Haskoin.Node.Units",
      "Network.Haskoin.Script",
      "Network.Haskoin.Script.Evaluator",
      "Network.Haskoin.Script.Parser",
      "Network.Haskoin.Script.SigHash",
      "Network.Haskoin.Script.Tests",
      "Network.Haskoin.Script.Types",
      "Network.Haskoin.Script.Units",
      "Network.Haskoin.Test",
      "Network.Haskoin.Test.Block",
      "Network.Haskoin.Test.Crypto",
      "Network.Haskoin.Test.Message",
      "Network.Haskoin.Test.Node",
      "Network.Haskoin.Test.Script",
      "Network.Haskoin.Test.Transaction",
      "Network.Haskoin.Test.Util",
      "Network.Haskoin.Transaction",
      "Network.Haskoin.Transaction.Builder",
      "Network.Haskoin.Transaction.Tests",
      "Network.Haskoin.Transaction.Types",
      "Network.Haskoin.Transaction.Units",
      "Network.Haskoin.Util",
      "Network.Haskoin.Util.Tests",
      "Network.Socket",
      "Numeric",
      "Paths",
      "Safe",
      "System.Entropy",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.Framework.Runners.Console",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Text.Read"
    ],
    "modules": [
      "Network.Haskoin.Util",
      "Network.Haskoin.Crypto",
      "Network.Haskoin.Node",
      "Network.Haskoin.Script",
      "Network.Haskoin.Transaction",
      "Network.Haskoin.Block",
      "Network.Haskoin.Constants",
      "Network.Haskoin.Test",
      "Network.Haskoin.Internals"
    ],
    "name": "haskoin-core",
    "version": "0.4.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Data.Version",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "smallcaps": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Writer",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.Default",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Version",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "Tests",
      "Text.Parsec",
      "Text.SmallCaps",
      "Text.SmallCaps.Config",
      "Text.SmallCaps.ConfigParser",
      "Text.SmallCaps.DocumentParser",
      "Text.SmallCaps.LaTeX",
      "Text.SmallCaps.PrintableParser",
      "Text.SmallCaps.TeX",
      "Text.SmallCaps.TeXLaTeXParser",
      "Text.SmallCaps.TeXParser"
    ],
    "modules": [
      "Text.SmallCaps",
      "Text.SmallCaps.TeX",
      "Text.SmallCaps.LaTeX",
      "Text.SmallCaps.Config",
      "Text.SmallCaps.TeXParser",
      "Text.SmallCaps.LaTeXParser",
      "Text.SmallCaps.TeXLaTeXParser",
      "Text.SmallCaps.PrintableParser",
      "Text.SmallCaps.ConfigParser",
      "Text.SmallCaps.DocumentParser"
    ],
    "name": "smallcaps",
    "version": "0.6.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.Bits",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Type.Bool",
        "Data.Type.Equality",
        "GHC.TypeLits",
        "Unsafe.Coerce"
      ],
      "ghc": [],
      "ghc-tcplugins-extra": [
        "GHC.TcPluginM.Extra"
      ],
      "ghc-typelits-natnormalise": [
        "GHC.TypeLits.Normalise.SOP",
        "GHC.TypeLits.Normalise.Unify"
      ],
      "singletons": [
        "Data.Promotion.Prelude",
        "Data.Singletons",
        "Data.Singletons.TH"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Class",
      "Control.Arrow",
      "Control.Monad.Trans.Maybe",
      "Data.Bits",
      "Data.Maybe",
      "Data.Promotion.Prelude",
      "Data.Proxy",
      "Data.Singletons",
      "Data.Singletons.TH",
      "Data.Type.Bool",
      "Data.Type.Equality",
      "FamInst",
      "FastString",
      "GHC.TcPluginM.Extra",
      "GHC.TypeLits",
      "GHC.TypeLits.KnownNat",
      "GHC.TypeLits.KnownNat.TH",
      "GHC.TypeLits.Normalise.SOP",
      "GHC.TypeLits.Normalise.Unify",
      "Id",
      "InstEnv",
      "Language.Haskell.TH",
      "Module",
      "Name",
      "OccName",
      "Plugins",
      "PrelNames",
      "TcEvidence",
      "TcPluginM",
      "TcRnTypes",
      "TcTypeNats",
      "TestFunctions",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "TyCon",
      "TyCoRep",
      "Type",
      "Unsafe.Coerce",
      "Var"
    ],
    "modules": [
      "GHC.TypeLits.KnownNat",
      "GHC.TypeLits.KnownNat.Solver"
    ],
    "name": "ghc-typelits-knownnat",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH",
        "Data.Aeson.Types"
      ],
      "aeson-pretty": [
        "Data.Aeson.Encode.Pretty"
      ],
      "base": [
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "GHC.Exts",
        "GHC.Generics",
        "System.Exit",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.TH"
      ],
      "stratosphere": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Lens",
      "Control.Lens.TH",
      "Data.Aeson",
      "Data.Aeson.Encode.Pretty",
      "Data.Aeson.TH",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "GHC.Exts",
      "GHC.Generics",
      "Language.Haskell.HLint",
      "Language.Haskell.TH",
      "Stratosphere",
      "Stratosphere.Helpers",
      "Stratosphere.Outputs",
      "Stratosphere.Parameters",
      "Stratosphere.ResourceAttributes.AutoScalingReplacingUpdate",
      "Stratosphere.ResourceAttributes.AutoScalingRollingUpdate",
      "Stratosphere.ResourceAttributes.AutoScalingScheduledAction",
      "Stratosphere.ResourceAttributes.CreationPolicy",
      "Stratosphere.ResourceAttributes.ResourceSignal",
      "Stratosphere.ResourceAttributes.UpdatePolicy",
      "Stratosphere.ResourceProperties.AccessLoggingPolicy",
      "Stratosphere.ResourceProperties.AliasTarget",
      "Stratosphere.ResourceProperties.AppCookieStickinessPolicy",
      "Stratosphere.ResourceProperties.AutoScalingBlockDeviceMapping",
      "Stratosphere.ResourceProperties.AutoScalingEBSBlockDevice",
      "Stratosphere.ResourceProperties.AutoScalingMetricsCollection",
      "Stratosphere.ResourceProperties.AutoScalingNotificationConfigurations",
      "Stratosphere.ResourceProperties.AutoScalingTags",
      "Stratosphere.ResourceProperties.ConnectionDrainingPolicy",
      "Stratosphere.ResourceProperties.ConnectionSettings",
      "Stratosphere.ResourceProperties.EBSBlockDevice",
      "Stratosphere.ResourceProperties.EC2BlockDeviceMapping",
      "Stratosphere.ResourceProperties.EC2MountPoint",
      "Stratosphere.ResourceProperties.EC2SsmAssociationParameters",
      "Stratosphere.ResourceProperties.EC2SsmAssociations",
      "Stratosphere.ResourceProperties.ELBPolicy",
      "Stratosphere.ResourceProperties.HealthCheck",
      "Stratosphere.ResourceProperties.IAMPolicies",
      "Stratosphere.ResourceProperties.LBCookieStickinessPolicy",
      "Stratosphere.ResourceProperties.ListenerProperty",
      "Stratosphere.ResourceProperties.NameValuePair",
      "Stratosphere.ResourceProperties.NetworkInterface",
      "Stratosphere.ResourceProperties.PrivateIpAddressSpecification",
      "Stratosphere.ResourceProperties.RDSSecurityGroupRule",
      "Stratosphere.ResourceProperties.RecordSetGeoLocation",
      "Stratosphere.ResourceProperties.ResourceTag",
      "Stratosphere.ResourceProperties.S3CorsConfiguration",
      "Stratosphere.ResourceProperties.S3CorsConfigurationRule",
      "Stratosphere.ResourceProperties.S3LifecycleConfiguration",
      "Stratosphere.ResourceProperties.S3LifecycleRule",
      "Stratosphere.ResourceProperties.S3LifecycleRuleNoncurrentVersionTransition",
      "Stratosphere.ResourceProperties.S3LifecycleRuleTransition",
      "Stratosphere.ResourceProperties.S3LoggingConfiguration",
      "Stratosphere.ResourceProperties.S3NotificationConfiguration",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationConfigFilter",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationConfigFilterS3Key",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationConfigFilterS3KeyRules",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationLambdaConfiguration",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationQueueConfiguration",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationTopicConfiguration",
      "Stratosphere.ResourceProperties.S3ReplicationConfiguration",
      "Stratosphere.ResourceProperties.S3ReplicationConfigurationRule",
      "Stratosphere.ResourceProperties.S3ReplicationConfigurationRulesDestination",
      "Stratosphere.ResourceProperties.S3VersioningConfiguration",
      "Stratosphere.ResourceProperties.S3WebsiteConfiguration",
      "Stratosphere.ResourceProperties.S3WebsiteRedirectAllRequestsTo",
      "Stratosphere.ResourceProperties.S3WebsiteRedirectRule",
      "Stratosphere.ResourceProperties.S3WebsiteRoutingRuleCondition",
      "Stratosphere.ResourceProperties.S3WebsiteRoutingRules",
      "Stratosphere.ResourceProperties.SecurityGroupEgressRule",
      "Stratosphere.ResourceProperties.SecurityGroupIngressRule",
      "Stratosphere.ResourceProperties.StepAdjustments",
      "Stratosphere.ResourceProperties.UserLoginProfile",
      "Stratosphere.Resources",
      "Stratosphere.Resources.AccessKey",
      "Stratosphere.Resources.AutoScalingGroup",
      "Stratosphere.Resources.Bucket",
      "Stratosphere.Resources.DBInstance",
      "Stratosphere.Resources.DBParameterGroup",
      "Stratosphere.Resources.DBSecurityGroup",
      "Stratosphere.Resources.DBSecurityGroupIngress",
      "Stratosphere.Resources.DBSubnetGroup",
      "Stratosphere.Resources.EC2Instance",
      "Stratosphere.Resources.EIP",
      "Stratosphere.Resources.EIPAssociation",
      "Stratosphere.Resources.Group",
      "Stratosphere.Resources.IAMRole",
      "Stratosphere.Resources.InstanceProfile",
      "Stratosphere.Resources.InternetGateway",
      "Stratosphere.Resources.LaunchConfiguration",
      "Stratosphere.Resources.LifecycleHook",
      "Stratosphere.Resources.LoadBalancer",
      "Stratosphere.Resources.ManagedPolicy",
      "Stratosphere.Resources.NatGateway",
      "Stratosphere.Resources.Policy",
      "Stratosphere.Resources.RecordSet",
      "Stratosphere.Resources.RecordSetGroup",
      "Stratosphere.Resources.Route",
      "Stratosphere.Resources.RouteTable",
      "Stratosphere.Resources.S3BucketPolicy",
      "Stratosphere.Resources.ScalingPolicy",
      "Stratosphere.Resources.ScheduledAction",
      "Stratosphere.Resources.SecurityGroup",
      "Stratosphere.Resources.SecurityGroupEgress",
      "Stratosphere.Resources.SecurityGroupIngress",
      "Stratosphere.Resources.Stack",
      "Stratosphere.Resources.Subnet",
      "Stratosphere.Resources.SubnetRouteTableAssociation",
      "Stratosphere.Resources.Trail",
      "Stratosphere.Resources.User",
      "Stratosphere.Resources.UserToGroupAddition",
      "Stratosphere.Resources.Volume",
      "Stratosphere.Resources.VolumeAttachment",
      "Stratosphere.Resources.VPC",
      "Stratosphere.Resources.VPCEndpoint",
      "Stratosphere.Resources.VPCGatewayAttachment",
      "Stratosphere.Template",
      "Stratosphere.Types",
      "Stratosphere.Values",
      "System.Directory",
      "System.Exit",
      "Test.Tasty",
      "Test.Tasty.Hspec",
      "Text.Read"
    ],
    "modules": [
      "Stratosphere",
      "Stratosphere.Helpers",
      "Stratosphere.Outputs",
      "Stratosphere.Parameters",
      "Stratosphere.Template",
      "Stratosphere.Types",
      "Stratosphere.Values",
      "Stratosphere.ResourceAttributes.AutoScalingReplacingUpdate",
      "Stratosphere.ResourceAttributes.AutoScalingRollingUpdate",
      "Stratosphere.ResourceAttributes.AutoScalingScheduledAction",
      "Stratosphere.ResourceAttributes.CreationPolicy",
      "Stratosphere.ResourceAttributes.ResourceSignal",
      "Stratosphere.ResourceAttributes.UpdatePolicy",
      "Stratosphere.ResourceProperties.AccessLoggingPolicy",
      "Stratosphere.ResourceProperties.AliasTarget",
      "Stratosphere.ResourceProperties.AppCookieStickinessPolicy",
      "Stratosphere.ResourceProperties.AutoScalingBlockDeviceMapping",
      "Stratosphere.ResourceProperties.AutoScalingEBSBlockDevice",
      "Stratosphere.ResourceProperties.AutoScalingMetricsCollection",
      "Stratosphere.ResourceProperties.AutoScalingNotificationConfigurations",
      "Stratosphere.ResourceProperties.AutoScalingTags",
      "Stratosphere.ResourceProperties.ConnectionDrainingPolicy",
      "Stratosphere.ResourceProperties.ConnectionSettings",
      "Stratosphere.ResourceProperties.EBSBlockDevice",
      "Stratosphere.ResourceProperties.EC2BlockDeviceMapping",
      "Stratosphere.ResourceProperties.EC2MountPoint",
      "Stratosphere.ResourceProperties.EC2SsmAssociationParameters",
      "Stratosphere.ResourceProperties.EC2SsmAssociations",
      "Stratosphere.ResourceProperties.ELBPolicy",
      "Stratosphere.ResourceProperties.HealthCheck",
      "Stratosphere.ResourceProperties.IAMPolicies",
      "Stratosphere.ResourceProperties.LBCookieStickinessPolicy",
      "Stratosphere.ResourceProperties.ListenerProperty",
      "Stratosphere.ResourceProperties.NameValuePair",
      "Stratosphere.ResourceProperties.NetworkInterface",
      "Stratosphere.ResourceProperties.PrivateIpAddressSpecification",
      "Stratosphere.ResourceProperties.RDSSecurityGroupRule",
      "Stratosphere.ResourceProperties.RecordSetGeoLocation",
      "Stratosphere.ResourceProperties.ResourceTag",
      "Stratosphere.ResourceProperties.S3CorsConfiguration",
      "Stratosphere.ResourceProperties.S3CorsConfigurationRule",
      "Stratosphere.ResourceProperties.S3LifecycleConfiguration",
      "Stratosphere.ResourceProperties.S3LifecycleRule",
      "Stratosphere.ResourceProperties.S3LifecycleRuleNoncurrentVersionTransition",
      "Stratosphere.ResourceProperties.S3LifecycleRuleTransition",
      "Stratosphere.ResourceProperties.S3LoggingConfiguration",
      "Stratosphere.ResourceProperties.S3NotificationConfiguration",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationConfigFilter",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationConfigFilterS3Key",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationConfigFilterS3KeyRules",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationLambdaConfiguration",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationQueueConfiguration",
      "Stratosphere.ResourceProperties.S3NotificationConfigurationTopicConfiguration",
      "Stratosphere.ResourceProperties.S3ReplicationConfiguration",
      "Stratosphere.ResourceProperties.S3ReplicationConfigurationRule",
      "Stratosphere.ResourceProperties.S3ReplicationConfigurationRulesDestination",
      "Stratosphere.ResourceProperties.S3VersioningConfiguration",
      "Stratosphere.ResourceProperties.S3WebsiteConfiguration",
      "Stratosphere.ResourceProperties.S3WebsiteRedirectAllRequestsTo",
      "Stratosphere.ResourceProperties.S3WebsiteRedirectRule",
      "Stratosphere.ResourceProperties.S3WebsiteRoutingRuleCondition",
      "Stratosphere.ResourceProperties.S3WebsiteRoutingRules",
      "Stratosphere.ResourceProperties.SecurityGroupEgressRule",
      "Stratosphere.ResourceProperties.SecurityGroupIngressRule",
      "Stratosphere.ResourceProperties.StepAdjustments",
      "Stratosphere.ResourceProperties.UserLoginProfile",
      "Stratosphere.Resources",
      "Stratosphere.Resources.AccessKey",
      "Stratosphere.Resources.AutoScalingGroup",
      "Stratosphere.Resources.Bucket",
      "Stratosphere.Resources.DBInstance",
      "Stratosphere.Resources.DBParameterGroup",
      "Stratosphere.Resources.DBSecurityGroup",
      "Stratosphere.Resources.DBSecurityGroupIngress",
      "Stratosphere.Resources.DBSubnetGroup",
      "Stratosphere.Resources.EC2Instance",
      "Stratosphere.Resources.EIP",
      "Stratosphere.Resources.EIPAssociation",
      "Stratosphere.Resources.Group",
      "Stratosphere.Resources.IAMRole",
      "Stratosphere.Resources.InstanceProfile",
      "Stratosphere.Resources.InternetGateway",
      "Stratosphere.Resources.LaunchConfiguration",
      "Stratosphere.Resources.LifecycleHook",
      "Stratosphere.Resources.LoadBalancer",
      "Stratosphere.Resources.ManagedPolicy",
      "Stratosphere.Resources.NatGateway",
      "Stratosphere.Resources.Policy",
      "Stratosphere.Resources.RecordSet",
      "Stratosphere.Resources.RecordSetGroup",
      "Stratosphere.Resources.Route",
      "Stratosphere.Resources.RouteTable",
      "Stratosphere.Resources.S3BucketPolicy",
      "Stratosphere.Resources.ScalingPolicy",
      "Stratosphere.Resources.ScheduledAction",
      "Stratosphere.Resources.SecurityGroup",
      "Stratosphere.Resources.SecurityGroupEgress",
      "Stratosphere.Resources.SecurityGroupIngress",
      "Stratosphere.Resources.Stack",
      "Stratosphere.Resources.Subnet",
      "Stratosphere.Resources.SubnetRouteTableAssociation",
      "Stratosphere.Resources.Trail",
      "Stratosphere.Resources.User",
      "Stratosphere.Resources.UserToGroupAddition",
      "Stratosphere.Resources.Volume",
      "Stratosphere.Resources.VolumeAttachment",
      "Stratosphere.Resources.VPC",
      "Stratosphere.Resources.VPCEndpoint",
      "Stratosphere.Resources.VPCGatewayAttachment"
    ],
    "name": "stratosphere",
    "version": "0.1.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Either",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "GHC.Exts",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Types",
        "Text.Printf"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.ByteString"
      ],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Utf8"
      ],
      "blaze-markup": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "cryptonite": [
        "Crypto.Hash"
      ],
      "directory": [
        "System.Directory"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "http-date": [
        "Network.HTTP.Date"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "memory": [
        "Data.ByteArray.Encoding"
      ],
      "mime-types": [
        "Network.Mime"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [],
      "unix-compat": [
        "System.PosixCompat.Files"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-app-static": [],
      "wai-extra": [
        "Network.Wai.Middleware.Gzip",
        "Network.Wai.Middleware.RequestLogger",
        "Network.Wai.Test"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.ByteString",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Crypto.Hash",
      "Data.ByteArray.Encoding",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Either",
      "Data.FileEmbed",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "EmbeddedTestEntries",
      "GHC.Exts",
      "Language.Haskell.TH",
      "Network.HTTP.Date",
      "Network.HTTP.Types",
      "Network.Mime",
      "Network.Wai",
      "Network.Wai.Application.Static",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Middleware.Gzip",
      "Network.Wai.Middleware.RequestLogger",
      "Network.Wai.Test",
      "Options.Applicative",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Locale",
      "System.PosixCompat.Files",
      "System.Posix.Types",
      "Test.Hspec",
      "Test.Mockery.Directory",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Printf",
      "Util",
      "WaiAppEmbeddedTest",
      "WaiAppStatic.CmdLine",
      "WaiAppStatic.Listing",
      "WaiAppStatic.Storage.Embedded",
      "WaiAppStatic.Storage.Embedded.Runtime",
      "WaiAppStatic.Storage.Embedded.TH",
      "WaiAppStatic.Storage.Filesystem",
      "WaiAppStaticTest",
      "WaiAppStatic.Types"
    ],
    "modules": [
      "Network.Wai.Application.Static",
      "WaiAppStatic.Storage.Filesystem",
      "WaiAppStatic.Storage.Embedded",
      "WaiAppStatic.Listing",
      "WaiAppStatic.Types",
      "WaiAppStatic.CmdLine"
    ],
    "name": "wai-app-static",
    "version": "3.1.6.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "GHC.IO.Exception",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Types"
      ],
      "cmdargs": [
        "System.Console.CmdArgs.Implicit"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc": [],
      "ghc-paths": [
        "GHC.Paths"
      ],
      "network": [
        "Network"
      ],
      "process": [
        "System.Process"
      ],
      "syb": [
        "Data.Generics"
      ],
      "time": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ],
      "unix": [
        "System.Posix.Files",
        "System.Posix.IO",
        "System.Posix.Process"
      ]
    },
    "imports": [
      "Cabal",
      "Client",
      "CommandArgs",
      "CommandLoop",
      "Config",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "CoreUtils",
      "Daemonize",
      "Data.Char",
      "Data.Generics",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Desugar",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Simple.Command",
      "Distribution.Simple.Compiler",
      "Distribution.Simple.Configure",
      "Distribution.Simple.GHC",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.Program",
      "Distribution.Simple.Program.Db",
      "Distribution.Simple.Program.GHC",
      "Distribution.Simple.Program.Types",
      "Distribution.Simple.Setup",
      "Distribution.Utils.NubList",
      "Distribution.Verbosity",
      "Distribution.Version",
      "DynFlags",
      "ErrUtils",
      "Exception",
      "FindSymbol",
      "GHC",
      "GHC.IO.Exception",
      "GhcMonad",
      "GHC.PackageDb",
      "GHC.Paths",
      "HscTypes",
      "HsExpr",
      "Info",
      "MonadUtils",
      "Name",
      "NameSet",
      "Network",
      "Outputable",
      "Packages",
      "Paths",
      "PprTyThing",
      "Pretty",
      "Server",
      "Stack",
      "System.Console.CmdArgs.Implicit",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.Posix.Files",
      "System.Posix.IO",
      "System.Posix.Process",
      "System.Posix.Types",
      "System.Process",
      "TcHsSyn",
      "TcRnTypes",
      "Types",
      "UniqFM",
      "Util"
    ],
    "modules": [],
    "name": "hdevtools",
    "version": "0.1.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Functor.Identity",
        "Data.Monoid"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Data.Functor.Identity",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Monad.Trans.RWS.CPS",
      "Control.Monad.Trans.Writer.CPS"
    ],
    "name": "writer-cps-transformers",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Plus",
      "Network.Google.Plus.Types",
      "Network.Google.Resource.Plus.Activities.Get",
      "Network.Google.Resource.Plus.Activities.List",
      "Network.Google.Resource.Plus.Activities.Search",
      "Network.Google.Resource.Plus.Comments.Get",
      "Network.Google.Resource.Plus.Comments.List",
      "Network.Google.Resource.Plus.People.Get",
      "Network.Google.Resource.Plus.People.List",
      "Network.Google.Resource.Plus.People.ListByActivity",
      "Network.Google.Resource.Plus.People.Search"
    ],
    "name": "gogol-plus",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Books",
      "Network.Google.Books.Types",
      "Network.Google.Resource.Books.Bookshelves.Get",
      "Network.Google.Resource.Books.Bookshelves.List",
      "Network.Google.Resource.Books.Bookshelves.Volumes.List",
      "Network.Google.Resource.Books.CloudLoading.AddBook",
      "Network.Google.Resource.Books.CloudLoading.DeleteBook",
      "Network.Google.Resource.Books.CloudLoading.UpdateBook",
      "Network.Google.Resource.Books.Dictionary.ListOfflineMetadata",
      "Network.Google.Resource.Books.Layers.AnnotationData.Get",
      "Network.Google.Resource.Books.Layers.AnnotationData.List",
      "Network.Google.Resource.Books.Layers.Get",
      "Network.Google.Resource.Books.Layers.List",
      "Network.Google.Resource.Books.Layers.VolumeAnnotations.Get",
      "Network.Google.Resource.Books.Layers.VolumeAnnotations.List",
      "Network.Google.Resource.Books.MyConfig.GetUserSettings",
      "Network.Google.Resource.Books.MyConfig.ReleaseDownloadAccess",
      "Network.Google.Resource.Books.MyConfig.RequestAccess",
      "Network.Google.Resource.Books.MyConfig.SyncVolumeLicenses",
      "Network.Google.Resource.Books.MyConfig.UpdateUserSettings",
      "Network.Google.Resource.Books.MyLibrary.Annotations.Delete",
      "Network.Google.Resource.Books.MyLibrary.Annotations.Insert",
      "Network.Google.Resource.Books.MyLibrary.Annotations.List",
      "Network.Google.Resource.Books.MyLibrary.Annotations.Summary",
      "Network.Google.Resource.Books.MyLibrary.Annotations.Update",
      "Network.Google.Resource.Books.MyLibrary.Bookshelves.AddVolume",
      "Network.Google.Resource.Books.MyLibrary.Bookshelves.ClearVolumes",
      "Network.Google.Resource.Books.MyLibrary.Bookshelves.Get",
      "Network.Google.Resource.Books.MyLibrary.Bookshelves.List",
      "Network.Google.Resource.Books.MyLibrary.Bookshelves.MoveVolume",
      "Network.Google.Resource.Books.MyLibrary.Bookshelves.RemoveVolume",
      "Network.Google.Resource.Books.MyLibrary.Bookshelves.Volumes.List",
      "Network.Google.Resource.Books.MyLibrary.ReadingPositions.Get",
      "Network.Google.Resource.Books.MyLibrary.ReadingPositions.SetPosition",
      "Network.Google.Resource.Books.Notification.Get",
      "Network.Google.Resource.Books.Onboarding.ListCategories",
      "Network.Google.Resource.Books.Onboarding.ListCategoryVolumes",
      "Network.Google.Resource.Books.Personalizedstream.Get",
      "Network.Google.Resource.Books.PromoOffer.Accept",
      "Network.Google.Resource.Books.PromoOffer.Dismiss",
      "Network.Google.Resource.Books.PromoOffer.Get",
      "Network.Google.Resource.Books.Series.Get",
      "Network.Google.Resource.Books.Series.Membership.Get",
      "Network.Google.Resource.Books.Volumes.Associated.List",
      "Network.Google.Resource.Books.Volumes.Get",
      "Network.Google.Resource.Books.Volumes.List",
      "Network.Google.Resource.Books.Volumes.Mybooks.List",
      "Network.Google.Resource.Books.Volumes.Recommended.List",
      "Network.Google.Resource.Books.Volumes.Recommended.Rate",
      "Network.Google.Resource.Books.Volumes.UserUploaded.List"
    ],
    "name": "gogol-books",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.IO.Class"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Error.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "BasePrelude",
      "Control.Monad.Base",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Morph",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "ListT",
      "MTLPrelude",
      "Test.Framework"
    ],
    "modules": [
      "ListT"
    ],
    "name": "list-t",
    "version": "1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Foldable",
        "Data.Ix",
        "Data.Monoid",
        "Data.Traversable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Fix",
      "Data.Foldable",
      "Data.Ix",
      "Data.Monoid",
      "Data.Traversable"
    ],
    "modules": [
      "Data.Tuple.OneTuple"
    ],
    "name": "OneTuple",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit.Lang"
      ],
      "base": [
        "Control.Exception",
        "Data.List",
        "GHC.Generics"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "Data.List",
      "GHC.Generics",
      "Test.Hspec",
      "Test.Hspec.Expectations",
      "Test.HUnit.Lang",
      "Test.ShouldNotTypecheck"
    ],
    "modules": [
      "Test.ShouldNotTypecheck"
    ],
    "name": "should-not-typecheck",
    "version": "2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Char",
        "Data.Monoid"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Text"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [],
      "filepath": [],
      "mtl": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [
        "Control.Monad.Trans.Writer"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Writer",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Map",
      "Data.Monoid",
      "Data.Text",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.Arbitrary",
      "Text.ProjectTemplate"
    ],
    "modules": [
      "Text.ProjectTemplate"
    ],
    "name": "project-template",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Typeable",
        "System.Environment"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Algorithm.Patience",
      "Data.Array",
      "Data.Data",
      "Data.Foldable",
      "Data.IntMap",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Ord",
      "Data.Sequence",
      "Data.Typeable",
      "System.Environment",
      "System.Random"
    ],
    "modules": [
      "Data.Algorithm.Patience"
    ],
    "name": "patience",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "aeson-utils": [
        "Data.Aeson.Utils"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Typeable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "errors": [
        "Control.Error.Util"
      ],
      "fclabels": [
        "Data.Label",
        "Data.Label.Derive",
        "Data.Label.Total"
      ],
      "hxt": [
        "Text.XML.HXT.Arrow.Pickle"
      ],
      "hxt-pickle-utils": [
        "Text.Xml.Pickle"
      ],
      "json-schema": [
        "Data.JSON.Schema"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error.Class",
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "mtl-compat": [],
      "multipart": [
        "Network.Multipart"
      ],
      "random": [
        "System.Random"
      ],
      "rest-stringmap": [
        "Rest.StringMap.HashMap.Strict"
      ],
      "rest-types": [
        "Rest.Types.Container",
        "Rest.Types.Container.Resource",
        "Rest.Types.Error",
        "Rest.Types.Info",
        "Rest.Types.Method",
        "Rest.Types.Range",
        "Rest.Types.ShowUrl",
        "Rest.Types.Void"
      ],
      "safe": [
        "Safe"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "uri-encode": [
        "Network.URI.Encode"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ],
      "uuid": [
        "Data.UUID"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Error.Util",
      "Control.Monad",
      "Control.Monad.Cont",
      "Control.Monad.Error.Class",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Writer",
      "Data.Aeson",
      "Data.Aeson.Utils",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.UTF8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.JSON.Schema",
      "Data.Label",
      "Data.Label.Derive",
      "Data.Label.Total",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Typeable",
      "Data.UUID",
      "Network.Multipart",
      "Network.URI.Encode",
      "Prelude",
      "Prelude.Compat",
      "Rest.Api",
      "Rest.Container",
      "Rest.Dictionary",
      "Rest.Dictionary.Combinators",
      "Rest.Dictionary.Types",
      "Rest.Driver.Perform",
      "Rest.Driver.RestM",
      "Rest.Driver.Routing",
      "Rest.Driver.Routing.Internal",
      "Rest.Driver.Types",
      "Rest.Error",
      "Rest.Handler",
      "Rest.Info",
      "Rest.Resource",
      "Rest.Schema",
      "Rest.StringMap.HashMap.Strict",
      "Rest.Types.Container",
      "Rest.Types.Container.Resource",
      "Rest.Types.Error",
      "Rest.Types.Info",
      "Rest.Types.Method",
      "Rest.Types.Range",
      "Rest.Types.ShowUrl",
      "Rest.Types.Void",
      "Safe",
      "System.IO.Unsafe",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.XML.HXT.Arrow.Pickle",
      "Text.Xml.Pickle"
    ],
    "modules": [
      "Rest",
      "Rest.Api",
      "Rest.Container",
      "Rest.Dictionary",
      "Rest.Dictionary.Combinators",
      "Rest.Dictionary.Types",
      "Rest.Driver.Perform",
      "Rest.Driver.RestM",
      "Rest.Driver.Routing",
      "Rest.Driver.Routing.Internal",
      "Rest.Driver.Types",
      "Rest.Error",
      "Rest.Handler",
      "Rest.Info",
      "Rest.Resource",
      "Rest.Run",
      "Rest.Schema",
      "Rest.ShowUrl"
    ],
    "name": "rest-core",
    "version": "0.39"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.HashMap.Strict",
      "Data.List.NonEmpty",
      "Data.Text",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Data.Configurator.Export"
    ],
    "name": "configurator-export",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "aeson-pretty": [
        "Data.Aeson.Encode.Pretty"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Debug.Trace",
        "GHC.Generics",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "pandoc": [
        "Text.Pandoc",
        "Text.Pandoc.Options",
        "Text.Pandoc.Process",
        "Text.Pandoc.Shared",
        "Text.Pandoc.UTF8",
        "Text.Pandoc.XML"
      ],
      "pandoc-citeproc": [],
      "pandoc-types": [
        "Text.Pandoc.Builder",
        "Text.Pandoc.Definition",
        "Text.Pandoc.Generic",
        "Text.Pandoc.JSON",
        "Text.Pandoc.Walk"
      ],
      "process": [
        "System.Process"
      ],
      "setenv": [
        "System.SetEnv"
      ],
      "split": [
        "Data.List.Split"
      ],
      "syb": [
        "Data.Generics"
      ],
      "tagsoup": [
        "Text.HTML.TagSoup.Entity"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Cursor"
      ],
      "yaml": [
        "Data.Yaml",
        "Data.Yaml.Builder"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Aeson",
      "Data.Aeson.Encode.Pretty",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Default",
      "Data.Either",
      "Data.Generics",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.RFC5051",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.ICU",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Version",
      "Data.Yaml",
      "Data.Yaml.Builder",
      "Debug.Trace",
      "GHC.Generics",
      "JSON",
      "Paths",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.Process",
      "System.SetEnv",
      "Text.Bibutils",
      "Text.CSL",
      "Text.CSL.Data",
      "Text.CSL.Data.Embedded",
      "Text.CSL.Eval",
      "Text.CSL.Eval.Common",
      "Text.CSL.Eval.Date",
      "Text.CSL.Eval.Names",
      "Text.CSL.Eval.Output",
      "Text.CSL.Input.Bibtex",
      "Text.CSL.Input.Bibutils",
      "Text.CSL.Output.Pandoc",
      "Text.CSL.Output.Plain",
      "Text.CSL.Pandoc",
      "Text.CSL.Parser",
      "Text.CSL.Proc",
      "Text.CSL.Proc.Collapse",
      "Text.CSL.Proc.Disamb",
      "Text.CSL.Reference",
      "Text.CSL.Style",
      "Text.CSL.Util",
      "Text.HTML.TagSoup.Entity",
      "Text.Pandoc",
      "Text.Pandoc.Builder",
      "Text.Pandoc.Definition",
      "Text.Pandoc.Generic",
      "Text.Pandoc.JSON",
      "Text.Pandoc.Options",
      "Text.Pandoc.Process",
      "Text.Pandoc.Shared",
      "Text.Pandoc.UTF8",
      "Text.Pandoc.Walk",
      "Text.Pandoc.XML",
      "Text.Parsec",
      "Text.Parsec.String",
      "Text.Printf",
      "Text.Show.Pretty",
      "Text.XML",
      "Text.XML.Cursor"
    ],
    "modules": [
      "Text.CSL.Pandoc",
      "Text.CSL",
      "Text.CSL.Reference",
      "Text.CSL.Style",
      "Text.CSL.Eval",
      "Text.CSL.Eval.Common",
      "Text.CSL.Eval.Date",
      "Text.CSL.Eval.Names",
      "Text.CSL.Eval.Output",
      "Text.CSL.Parser",
      "Text.CSL.Proc",
      "Text.CSL.Proc.Collapse",
      "Text.CSL.Proc.Disamb",
      "Text.CSL.Input.Bibutils",
      "Text.CSL.Input.Bibtex",
      "Text.CSL.Output.Pandoc",
      "Text.CSL.Output.Plain",
      "Text.CSL.Data"
    ],
    "name": "pandoc-citeproc",
    "version": "0.10.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Int",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "stringable": [
        "Data.Stringable"
      ]
    },
    "imports": [
      "Bio.Core.Sequence",
      "Bio.Core.Strand",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Int",
      "Data.Monoid",
      "Data.String",
      "Data.Stringable",
      "Data.Typeable",
      "Data.Word"
    ],
    "modules": [
      "Bio.Core",
      "Bio.Core.Sequence",
      "Bio.Core.Strand"
    ],
    "name": "biocore",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Complex",
        "Data.List",
        "Foreign",
        "Foreign.C.Types",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Environment",
        "System.IO.Unsafe"
      ],
      "hmatrix": [],
      "hmatrix-gsl": []
    },
    "imports": [
      "Data.Char",
      "Data.Complex",
      "Data.List",
      "Foreign",
      "Foreign.C.Types",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Numeric.GSL.Special.Airy",
      "Numeric.GSL.Special.Bessel",
      "Numeric.GSL.Special.Clausen",
      "Numeric.GSL.Special.Coulomb",
      "Numeric.GSL.Special.Coupling",
      "Numeric.GSL.Special.Dawson",
      "Numeric.GSL.Special.Debye",
      "Numeric.GSL.Special.Dilog",
      "Numeric.GSL.Special.Elementary",
      "Numeric.GSL.Special.Ellint",
      "Numeric.GSL.Special.Elljac",
      "Numeric.GSL.Special.Erf",
      "Numeric.GSL.Special.Exp",
      "Numeric.GSL.Special.Expint",
      "Numeric.GSL.Special.Fermi",
      "Numeric.GSL.Special.Gamma",
      "Numeric.GSL.Special.Gegenbauer",
      "Numeric.GSL.Special.Hyperg",
      "Numeric.GSL.Special.Internal",
      "Numeric.GSL.Special.Laguerre",
      "Numeric.GSL.Special.Lambert",
      "Numeric.GSL.Special.Legendre",
      "Numeric.GSL.Special.Log",
      "Numeric.GSL.Special.Pow",
      "Numeric.GSL.Special.Psi",
      "Numeric.GSL.Special.Synchrotron",
      "Numeric.GSL.Special.Transport",
      "Numeric.GSL.Special.Trig",
      "Numeric.GSL.Special.Zeta",
      "System.Environment",
      "System.IO.Unsafe",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "Numeric.GSL.Special",
      "Numeric.GSL.Special.Gamma",
      "Numeric.GSL.Special.Erf",
      "Numeric.GSL.Special.Airy",
      "Numeric.GSL.Special.Exp",
      "Numeric.GSL.Special.Bessel",
      "Numeric.GSL.Special.Clausen",
      "Numeric.GSL.Special.Coulomb",
      "Numeric.GSL.Special.Coupling",
      "Numeric.GSL.Special.Dawson",
      "Numeric.GSL.Special.Debye",
      "Numeric.GSL.Special.Dilog",
      "Numeric.GSL.Special.Elementary",
      "Numeric.GSL.Special.Ellint",
      "Numeric.GSL.Special.Elljac",
      "Numeric.GSL.Special.Expint",
      "Numeric.GSL.Special.Fermi_dirac",
      "Numeric.GSL.Special.Gegenbauer",
      "Numeric.GSL.Special.Hyperg",
      "Numeric.GSL.Special.Laguerre",
      "Numeric.GSL.Special.Lambert",
      "Numeric.GSL.Special.Legendre",
      "Numeric.GSL.Special.Log",
      "Numeric.GSL.Special.Pow_int",
      "Numeric.GSL.Special.Psi",
      "Numeric.GSL.Special.Synchrotron",
      "Numeric.GSL.Special.Transport",
      "Numeric.GSL.Special.Trig",
      "Numeric.GSL.Special.Zeta"
    ],
    "name": "hmatrix-special",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "MonadRandom": [
        "Control.Monad.Random"
      ],
      "base": [
        "Control.Monad",
        "Data.Function"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Random",
      "Data.Function",
      "System.Random"
    ],
    "modules": [
      "System.Random.Shuffle"
    ],
    "name": "random-shuffle",
    "version": "0.0.4"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck.Test"
      ],
      "ShellCheck": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Function",
        "Data.Functor",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Version",
        "Debug.Trace",
        "GHC.Exts",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "json": [
        "Text.JSON"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Error",
        "Text.Parsec.Pos"
      ],
      "process": [],
      "regex-tdfa": [
        "Text.Regex.TDFA"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.Char",
      "Data.Either",
      "Data.Function",
      "Data.Functor",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Version",
      "Debug.Trace",
      "GHC.Exts",
      "Paths",
      "Prelude",
      "ShellCheck.Analytics",
      "ShellCheck.Analyzer",
      "ShellCheck.AnalyzerLib",
      "ShellCheck.AST",
      "ShellCheck.ASTLib",
      "ShellCheck.Checker",
      "ShellCheck.Checks.Commands",
      "ShellCheck.Data",
      "ShellCheck.Formatter.CheckStyle",
      "ShellCheck.Formatter.Format",
      "ShellCheck.Formatter.GCC",
      "ShellCheck.Formatter.JSON",
      "ShellCheck.Formatter.TTY",
      "ShellCheck.Interface",
      "ShellCheck.Parser",
      "ShellCheck.Regex",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.Info",
      "System.IO",
      "Test.QuickCheck.All",
      "Test.QuickCheck.Test",
      "Text.JSON",
      "Text.Parsec",
      "Text.Parsec.Error",
      "Text.Parsec.Pos",
      "Text.Regex.TDFA"
    ],
    "modules": [
      "ShellCheck.AST",
      "ShellCheck.ASTLib",
      "ShellCheck.Analytics",
      "ShellCheck.Analyzer",
      "ShellCheck.AnalyzerLib",
      "ShellCheck.Checker",
      "ShellCheck.Checks.Commands",
      "ShellCheck.Data",
      "ShellCheck.Formatter.Format",
      "ShellCheck.Formatter.CheckStyle",
      "ShellCheck.Formatter.GCC",
      "ShellCheck.Formatter.JSON",
      "ShellCheck.Formatter.TTY",
      "ShellCheck.Interface",
      "ShellCheck.Parser",
      "ShellCheck.Regex"
    ],
    "name": "ShellCheck",
    "version": "0.4.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fail",
        "Data.Char",
        "Data.Data",
        "Data.Int",
        "Data.IORef",
        "Data.Ratio",
        "Data.Word",
        "GHC.Generics",
        "GHC.Show",
        "Numeric.Natural",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "ghc-boot-th": [
        "GHC.LanguageExtensions.Type",
        "GHC.Lexeme"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Fail",
      "Data.Char",
      "Data.Data",
      "Data.Int",
      "Data.IORef",
      "Data.Ratio",
      "Data.Word",
      "GHC.Generics",
      "GHC.LanguageExtensions.Type",
      "GHC.Lexeme",
      "GHC.Show",
      "Language.Haskell.TH.LanguageExtensions",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Lib.Map",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.PprLib",
      "Language.Haskell.TH.Syntax",
      "Numeric.Natural",
      "System.IO",
      "System.IO.Unsafe",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.PprLib",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Language.Haskell.TH.LanguageExtensions"
    ],
    "name": "template-haskell",
    "version": "2.11.0.0"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "mtl": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.Encoding",
      "Text.Read"
    ],
    "modules": [
      "Web.Stripe.Account",
      "Web.Stripe.ApplicationFee",
      "Web.Stripe.ApplicationFeeRefund",
      "Web.Stripe.Balance",
      "Web.Stripe.Client",
      "Web.Stripe.Card",
      "Web.Stripe.Charge",
      "Web.Stripe.Coupon",
      "Web.Stripe.Customer",
      "Web.Stripe.Discount",
      "Web.Stripe.Dispute",
      "Web.Stripe.Error",
      "Web.Stripe.Event",
      "Web.Stripe.Invoice",
      "Web.Stripe.InvoiceItem",
      "Web.Stripe.Plan",
      "Web.Stripe.Recipient",
      "Web.Stripe.Refund",
      "Web.Stripe.StripeRequest",
      "Web.Stripe.Subscription",
      "Web.Stripe.Token",
      "Web.Stripe.Transfer",
      "Web.Stripe.Types",
      "Web.Stripe.Util"
    ],
    "name": "stripe-core",
    "version": "2.1.0"
  },
  {
    "dependencies": {
      "rts": []
    },
    "imports": [
      "GHC.CString",
      "GHC.IntWord64",
      "GHC.Magic",
      "GHC.Prim",
      "GHC.Tuple",
      "GHC.Types"
    ],
    "modules": [
      "GHC.CString",
      "GHC.Classes",
      "GHC.Debug",
      "GHC.IntWord64",
      "GHC.Magic",
      "GHC.PrimopWrappers",
      "GHC.Tuple",
      "GHC.Types"
    ],
    "name": "ghc-prim",
    "version": "0.5.0.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Monoid",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Internal",
        "Pipes.Prelude"
      ],
      "pipes-attoparsec": [
        "Pipes.Attoparsec"
      ],
      "pipes-bytestring": [
        "Pipes.ByteString"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Attoparsec.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Monoid",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Pipes",
      "Pipes.Attoparsec",
      "Pipes.ByteString",
      "Pipes.Internal",
      "Pipes.Prelude",
      "System.IO"
    ],
    "modules": [
      "Pipes.Fastx"
    ],
    "name": "pipes-fastx",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Char8",
        "Data.Attoparsec.Zepto"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Either",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Word",
        "Prelude"
      ],
      "biocore": [
        "Bio.Core.Sequence",
        "Bio.Core.Strand"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy.Char8"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Bio.Core.Sequence",
      "Bio.Core.Strand",
      "Bio.SeqLoc.Location",
      "Bio.SeqLoc.LocMap",
      "Bio.SeqLoc.LocRepr",
      "Bio.SeqLoc.OnSeq",
      "Bio.SeqLoc.Position",
      "Bio.SeqLoc.SeqLike",
      "Bio.SeqLoc.ShiftedVector",
      "Bio.SeqLoc.SpliceLocation",
      "Bio.SeqLoc.Strand",
      "Bio.SeqLoc.Transcript",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.Attoparsec.Char8",
      "Data.Attoparsec.Zepto",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Either",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Vector",
      "Data.Word",
      "Prelude",
      "System.Random",
      "Test.QuickCheck"
    ],
    "modules": [
      "Bio.SeqLoc.Strand",
      "Bio.SeqLoc.Position",
      "Bio.SeqLoc.SeqLike",
      "Bio.SeqLoc.Location",
      "Bio.SeqLoc.SpliceLocation",
      "Bio.SeqLoc.OnSeq",
      "Bio.SeqLoc.LocRepr",
      "Bio.SeqLoc.Transcript",
      "Bio.SeqLoc.ShiftedVector",
      "Bio.SeqLoc.LocMap"
    ],
    "name": "seqloc",
    "version": "0.6.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Text.Read"
      ],
      "containers": [],
      "directory": [],
      "filepath": [
        "System.FilePath"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Bits",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Data.Time",
      "Data.Tree",
      "Data.Word",
      "System.FilePath",
      "Text.Read",
      "Trace.Hpc.Tix",
      "Trace.Hpc.Util"
    ],
    "modules": [
      "Trace.Hpc.Util",
      "Trace.Hpc.Mix",
      "Trace.Hpc.Tix",
      "Trace.Hpc.Reflect"
    ],
    "name": "hpc",
    "version": "0.6.0.3"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "hsyslog": [
        "System.Posix.Syslog"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.Logger",
      "Control.Monad.Logger.Syslog",
      "Data.ByteString.Char8",
      "Data.Text",
      "System.Log.FastLogger",
      "System.Log.MonadLogger.Syslog",
      "System.Posix.Syslog"
    ],
    "modules": [
      "Control.Monad.Logger.Syslog",
      "System.Log.MonadLogger.Syslog"
    ],
    "name": "monad-logger-syslog",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.Language.Detections.List",
      "Network.Google.Resource.Language.Languages.List",
      "Network.Google.Resource.Language.Translations.List",
      "Network.Google.Translate",
      "Network.Google.Translate.Types"
    ],
    "name": "gogol-translate",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "Decimal": [
        "Data.Decimal"
      ],
      "HUnit": [
        "Test.HUnit"
      ],
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Typeable",
        "Debug.Trace",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "base-compat": [
        "Control.Monad.Compat",
        "Data.Functor.Compat",
        "Data.List.Compat",
        "Prelude.Compat"
      ],
      "blaze-markup": [
        "Text.Blaze"
      ],
      "bytestring": [],
      "cmdargs": [
        "System.Console.CmdArgs.Default"
      ],
      "containers": [
        "Data.Map"
      ],
      "csv": [
        "Text.CSV"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.Except"
      ],
      "mtl-compat": [],
      "old-time": [
        "System.Time"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Error",
        "Text.Parsec.Pos"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA"
      ],
      "safe": [
        "Safe"
      ],
      "split": [
        "Data.List.Split"
      ],
      "transformers": [],
      "uglymemo": [
        "Data.MemoUgly"
      ],
      "utf8-string": []
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Compat",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Data.Array",
      "Data.Char",
      "Data.Data",
      "Data.Decimal",
      "Data.Either",
      "Data.Function",
      "Data.Functor.Compat",
      "Data.List",
      "Data.List.Compat",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.MemoUgly",
      "Data.Ord",
      "Data.Time.Calendar",
      "Data.Time.Calendar.OrdinalDate",
      "Data.Time.Calendar.WeekDate",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Tree",
      "Data.Typeable",
      "Debug.Trace",
      "GHC.Generics",
      "Hledger",
      "Hledger.Data",
      "Hledger.Data.Account",
      "Hledger.Data.AccountName",
      "Hledger.Data.Amount",
      "Hledger.Data.Commodity",
      "Hledger.Data.Dates",
      "Hledger.Data.Journal",
      "Hledger.Data.Ledger",
      "Hledger.Data.Posting",
      "Hledger.Data.RawOptions",
      "Hledger.Data.StringFormat",
      "Hledger.Data.TimeLog",
      "Hledger.Data.Transaction",
      "Hledger.Data.Types",
      "Hledger.Query",
      "Hledger.Read",
      "Hledger.Read.CsvReader",
      "Hledger.Read.JournalReader",
      "Hledger.Read.TimelogReader",
      "Hledger.Reports",
      "Hledger.Reports.BalanceHistoryReport",
      "Hledger.Reports.BalanceReport",
      "Hledger.Reports.EntriesReport",
      "Hledger.Reports.MultiBalanceReports",
      "Hledger.Reports.PostingsReport",
      "Hledger.Reports.ReportOptions",
      "Hledger.Reports.TransactionsReports",
      "Hledger.Utils",
      "Hledger.Utils.Debug",
      "Hledger.Utils.Parse",
      "Hledger.Utils.Regex",
      "Hledger.Utils.String",
      "Hledger.Utils.Test",
      "Hledger.Utils.Tree",
      "Hledger.Utils.UTF8IOCompat",
      "Numeric",
      "Prelude",
      "Prelude.Compat",
      "Safe",
      "System.Console.CmdArgs.Default",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Time",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Runners.Console",
      "Test.HUnit",
      "Text.Blaze",
      "Text.CSV",
      "Text.Parsec",
      "Text.Parsec.Error",
      "Text.Parsec.Pos",
      "Text.Printf",
      "Text.Regex.TDFA",
      "Text.Show.Pretty"
    ],
    "modules": [
      "Hledger",
      "Hledger.Data",
      "Hledger.Data.Account",
      "Hledger.Data.AccountName",
      "Hledger.Data.Amount",
      "Hledger.Data.Commodity",
      "Hledger.Data.Dates",
      "Hledger.Data.Journal",
      "Hledger.Data.Ledger",
      "Hledger.Data.StringFormat",
      "Hledger.Data.Posting",
      "Hledger.Data.RawOptions",
      "Hledger.Data.TimeLog",
      "Hledger.Data.Transaction",
      "Hledger.Data.Types",
      "Hledger.Query",
      "Hledger.Read",
      "Hledger.Read.CsvReader",
      "Hledger.Read.JournalReader",
      "Hledger.Read.TimelogReader",
      "Hledger.Reports",
      "Hledger.Reports.ReportOptions",
      "Hledger.Reports.BalanceHistoryReport",
      "Hledger.Reports.BalanceReport",
      "Hledger.Reports.EntriesReport",
      "Hledger.Reports.MultiBalanceReports",
      "Hledger.Reports.PostingsReport",
      "Hledger.Reports.TransactionsReports",
      "Hledger.Utils",
      "Hledger.Utils.Debug",
      "Hledger.Utils.Parse",
      "Hledger.Utils.Regex",
      "Hledger.Utils.String",
      "Hledger.Utils.Test",
      "Hledger.Utils.Tree",
      "Hledger.Utils.UTF8IOCompat"
    ],
    "name": "hledger-lib",
    "version": "0.27.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Monad",
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.ST",
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Lazy.Search.Internal.BoyerMoore",
      "Data.ByteString.Search.Internal.BoyerMoore",
      "Data.ByteString.Search.Internal.KnuthMorrisPratt",
      "Data.ByteString.Search.Internal.Utils",
      "Data.ByteString.Search.Substitution",
      "Data.ByteString.Unsafe",
      "Data.Int",
      "Data.IntMap",
      "Data.List",
      "Data.Word"
    ],
    "modules": [
      "Data.ByteString.Search",
      "Data.ByteString.Search.BoyerMoore",
      "Data.ByteString.Search.DFA",
      "Data.ByteString.Search.KarpRabin",
      "Data.ByteString.Search.KMP",
      "Data.ByteString.Search.KnuthMorrisPratt",
      "Data.ByteString.Search.Substitution",
      "Data.ByteString.Lazy.Search",
      "Data.ByteString.Lazy.Search.DFA",
      "Data.ByteString.Lazy.Search.KarpRabin",
      "Data.ByteString.Lazy.Search.KMP"
    ],
    "name": "stringsearch",
    "version": "0.3.6.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "System.Exit",
        "System.IO",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "lens-simple": [
        "Lens.Simple"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Function",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "GHC.Generics",
      "Lens.Simple",
      "Rainbow",
      "Rainbow.QuickCheck",
      "Rainbow.Translate",
      "Rainbow.Types",
      "System.Exit",
      "System.IO",
      "System.Process",
      "Test.QuickCheck",
      "Text.Read"
    ],
    "modules": [
      "Rainbow",
      "Rainbow.Translate",
      "Rainbow.Types"
    ],
    "name": "rainbow",
    "version": "0.28.0.4"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Unboxed"
      ],
      "base": [
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.List",
        "Data.Semigroup",
        "Data.Word",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Word",
        "Prelude",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntSet"
      ],
      "semigroups": [],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ]
    },
    "imports": [
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.CharSet",
      "Data.CharSet.ByteSet",
      "Data.CharSet.Posix.Ascii",
      "Data.CharSet.Posix.Unicode",
      "Data.CharSet.Unicode.Block",
      "Data.CharSet.Unicode.Category",
      "Data.Data",
      "Data.Function",
      "Data.HashMap.Lazy",
      "Data.IntSet",
      "Data.List",
      "Data.Semigroup",
      "Data.Word",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Word",
      "Prelude",
      "Text.Read"
    ],
    "modules": [
      "Data.CharSet",
      "Data.CharSet.Common",
      "Data.CharSet.Posix",
      "Data.CharSet.Posix.Ascii",
      "Data.CharSet.Posix.Unicode",
      "Data.CharSet.Unicode",
      "Data.CharSet.Unicode.Block",
      "Data.CharSet.Unicode.Category",
      "Data.CharSet.ByteSet"
    ],
    "name": "charset",
    "version": "0.3.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Category",
        "Data.Foldable",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Category",
      "Control.Natural",
      "Data.Foldable",
      "Data.Monoid",
      "Data.Sequence",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Control.Natural",
      "Control.Natural.RULES",
      "Control.Object"
    ],
    "name": "natural-transformation",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.Proxy",
        "Data.String"
      ],
      "bimap": [
        "Data.Bimap"
      ],
      "binary": [
        "Data.Binary"
      ],
      "directory": [
        "System.Directory"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "unix": [
        "System.Posix.Signals"
      ],
      "wai": [
        "Network.Wai"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Data.Aeson",
      "Data.Bimap",
      "Data.Binary",
      "Data.Proxy",
      "Data.String",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "System.Directory",
      "System.Posix.Signals"
    ],
    "modules": [
      "Data.Bimap.Server"
    ],
    "name": "bimap-server",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Control.Monad",
      "Criterion.Main",
      "Crypto.Hash.BLAKE2.BLAKE2b",
      "Crypto.Hash.BLAKE2.BLAKE2bp",
      "Crypto.Hash.BLAKE2.BLAKE2s",
      "Crypto.Hash.BLAKE2.BLAKE2sp",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Imports",
      "Language.Haskell.HLint",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Crypto.Hash.BLAKE2.BLAKE2b",
      "Crypto.Hash.BLAKE2.BLAKE2bp",
      "Crypto.Hash.BLAKE2.BLAKE2s",
      "Crypto.Hash.BLAKE2.BLAKE2sp",
      "Crypto.Hash.BLAKE2.Internal"
    ],
    "name": "blake2",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Category",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Data.Accessor.Basic",
      "Data.Accessor.BinaryRead",
      "Data.Accessor.Container",
      "Data.Accessor.MonadStatePrivate",
      "Data.Accessor.Private",
      "Data.Accessor.Show",
      "Data.Accessor.Tuple",
      "Data.Array",
      "Data.Char",
      "Data.IntMap",
      "Data.Ix",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.Word",
      "Prelude"
    ],
    "modules": [
      "Data.Accessor",
      "Data.Accessor.Basic",
      "Data.Accessor.Container",
      "Data.Accessor.Show",
      "Data.Accessor.Tuple",
      "Data.Accessor.BinaryRead",
      "Data.Accessor.MonadState"
    ],
    "name": "data-accessor",
    "version": "0.2.2.7"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Debug.NoTrace"
    ],
    "modules": [
      "Debug.NoTrace"
    ],
    "name": "NoTrace",
    "version": "0.3.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "comonad": [],
      "haskell-src-meta": [],
      "parsec": [],
      "template-haskell": [],
      "uniplate": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Language.Haskell.Codo"
    ],
    "name": "codo-notation",
    "version": "0.5.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Data",
        "Data.Typeable"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Calendar.WeekDate"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Data",
      "Data.Time.Calendar",
      "Data.Time.Calendar.Hebrew",
      "Data.Time.Calendar.WeekDate",
      "Data.Typeable",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Time.Calendar.Hebrew"
    ],
    "name": "hebrew-time",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit",
        "Test.HUnit.Lang"
      ],
      "base": [
        "Control.Monad.ST",
        "Data.List",
        "Unsafe.Coerce"
      ],
      "dejafu": [
        "Test.DejaFu",
        "Test.DejaFu.Conc",
        "Test.DejaFu.SCT"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ]
    },
    "imports": [
      "Control.Monad.Catch",
      "Control.Monad.ST",
      "Data.List",
      "Test.DejaFu",
      "Test.DejaFu.Conc",
      "Test.DejaFu.Deterministic",
      "Test.DejaFu.SCT",
      "Test.HUnit",
      "Test.HUnit.Lang",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Test.HUnit.DejaFu"
    ],
    "name": "hunit-dejafu",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Functor.Sum",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.Generics"
      ],
      "random": [
        "System.Random"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Applicative.Lift",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer",
        "Data.Functor.Constant",
        "Data.Functor.Reverse"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Applicative.Lift",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Functor.Sum",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Unfoldable",
      "Data.Unfolder",
      "GHC.Generics",
      "System.Random",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Unfolder",
      "Data.Unfoldable",
      "Data.Biunfoldable"
    ],
    "name": "unfoldable",
    "version": "0.8.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Numeric",
        "Prelude"
      ],
      "mtl": [
        "Control.Monad.Error"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Read"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Monad",
      "Control.Monad.Error",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Function",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Read",
      "Language.Haskell.TH",
      "Numeric",
      "Prelude",
      "Text.Boomerang.Combinators",
      "Text.Boomerang.Error",
      "Text.Boomerang.HStack",
      "Text.Boomerang.Pos",
      "Text.Boomerang.Prim",
      "Text.Boomerang.TH"
    ],
    "modules": [
      "Text.Boomerang",
      "Text.Boomerang.Combinators",
      "Text.Boomerang.Error",
      "Text.Boomerang.HStack",
      "Text.Boomerang.Pos",
      "Text.Boomerang.Prim",
      "Text.Boomerang.String",
      "Text.Boomerang.Strings",
      "Text.Boomerang.Texts",
      "Text.Boomerang.TH"
    ],
    "name": "boomerang",
    "version": "1.4.5.2"
  },
  {
    "dependencies": {
      "HUnit": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "conduit": [],
      "conduit-combinators": [],
      "exceptions": [],
      "gitlib": [],
      "hspec": [],
      "hspec-expectations": [],
      "monad-control": [],
      "tagged": [],
      "text": [],
      "time": [],
      "transformers": []
    },
    "imports": [
      "Data.ByteString.Lazy"
    ],
    "modules": [
      "Git.Smoke"
    ],
    "name": "gitlib-test",
    "version": "3.1.0.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "base": [
        "Data.Char"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Monad.Trans.Except",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Text",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.Protocol.OpenSource.License",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Network.Protocol.OpenSource.License"
    ],
    "name": "opensource",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "aeson": [],
      "base": [
        "Data.String"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "base58string": [],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "bitcoin-payment-channel": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ],
      "errors": [],
      "haskoin-core": [
        "Network.Haskoin.Crypto",
        "Network.Haskoin.Script",
        "Network.Haskoin.Transaction",
        "Network.Haskoin.Util"
      ],
      "hexstring": [],
      "scientific": [],
      "text": [
        "Data.Text"
      ],
      "time": []
    },
    "imports": [
      "Data.Bitcoin.PaymentChannel",
      "Data.Bitcoin.PaymentChannel.Internal.Bitcoin.Amount",
      "Data.Bitcoin.PaymentChannel.Internal.Bitcoin.LockTime",
      "Data.Bitcoin.PaymentChannel.Internal.Bitcoin.Script",
      "Data.Bitcoin.PaymentChannel.Internal.Bitcoin.Util",
      "Data.Bitcoin.PaymentChannel.Internal.Error",
      "Data.Bitcoin.PaymentChannel.Internal.Payment",
      "Data.Bitcoin.PaymentChannel.Internal.Refund",
      "Data.Bitcoin.PaymentChannel.Internal.Serialization",
      "Data.Bitcoin.PaymentChannel.Internal.Settlement",
      "Data.Bitcoin.PaymentChannel.Internal.State",
      "Data.Bitcoin.PaymentChannel.Internal.Types",
      "Data.Bitcoin.PaymentChannel.Internal.Util",
      "Data.Bitcoin.PaymentChannel.Types",
      "Data.Bitcoin.PaymentChannel.Util",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Char8",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.String",
      "Data.Text",
      "Network.Haskoin.Crypto",
      "Network.Haskoin.Script",
      "Network.Haskoin.Transaction",
      "Network.Haskoin.Util",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Bitcoin.PaymentChannel",
      "Data.Bitcoin.PaymentChannel.Types",
      "Data.Bitcoin.PaymentChannel.Util",
      "Data.Bitcoin.PaymentChannel.Internal.State"
    ],
    "name": "bitcoin-payment-channel",
    "version": "0.3.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "Debug.Trace",
        "GHC.Generics",
        "System.Exit"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.Function",
      "Data.List",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.String",
      "Debug.Trace",
      "GHC.Generics",
      "PrettyTestVersion",
      "System.Exit",
      "TestGenerators",
      "Test.QuickCheck",
      "TestStructures",
      "TestUtils",
      "Text.PrettyPrint.Annotated.HughesPJ",
      "Text.PrettyPrint.HughesPJ",
      "UnitLargeDoc",
      "UnitPP1",
      "UnitT3911"
    ],
    "modules": [
      "Text.PrettyPrint",
      "Text.PrettyPrint.HughesPJ",
      "Text.PrettyPrint.HughesPJClass",
      "Text.PrettyPrint.Annotated",
      "Text.PrettyPrint.Annotated.HughesPJ",
      "Text.PrettyPrint.Annotated.HughesPJClass"
    ],
    "name": "pretty",
    "version": "1.1.3.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Complex",
        "Data.Fixed",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.IORef",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.STRef",
        "Data.Typeable",
        "Data.Unique",
        "Data.Version",
        "Data.Void",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "GHC.Fingerprint.Type",
        "GHC.Generics",
        "GHC.Stack",
        "GHC.Stack.Types",
        "Numeric.Natural",
        "System.Exit",
        "System.IO.Unsafe",
        "System.Mem.StableName"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.Array",
      "Data.Bits",
      "Data.Complex",
      "Data.Fixed",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.IORef",
      "Data.List.NonEmpty",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.STRef",
      "Data.Typeable",
      "Data.Unique",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "GHC.Fingerprint.Type",
      "GHC.Generics",
      "GHC.SrcLoc",
      "GHC.Stack",
      "GHC.Stack.Types",
      "Numeric.Natural",
      "System.Exit",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Control.DeepSeq"
    ],
    "name": "deepseq",
    "version": "1.4.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable"
      ],
      "primitive": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Mutable",
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.Foldable",
      "Data.Matrix.Dense.Generic",
      "Data.Matrix.Dense.Generic.Mutable",
      "Data.Matrix.Generic",
      "Data.Matrix.Generic.Mutable",
      "Data.Matrix.Sparse.Generic",
      "Data.Matrix.Unboxed",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Mutable",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Data.Matrix",
      "Data.Matrix.Mutable",
      "Data.Matrix.Storable",
      "Data.Matrix.Storable.Mutable",
      "Data.Matrix.Unboxed",
      "Data.Matrix.Unboxed.Mutable",
      "Data.Matrix.Generic",
      "Data.Matrix.Generic.Mutable",
      "Data.Matrix.Dense.Generic",
      "Data.Matrix.Dense.Generic.Mutable",
      "Data.Matrix.Sparse.Generic",
      "Data.Matrix.Symmetric",
      "Data.Matrix.Symmetric.Mutable"
    ],
    "name": "matrices",
    "version": "0.4.3"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compiler",
        "Distribution.License",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Configuration",
        "Distribution.PackageDescription.Parse",
        "Distribution.Simple.Compiler",
        "Distribution.Simple.Configure",
        "Distribution.Simple.Program",
        "Distribution.Simple.Program.Find",
        "Distribution.Simple.Utils",
        "Distribution.System",
        "Distribution.Verbosity"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Version",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ],
      "unix": [
        "System.Posix.Files",
        "System.Posix.User"
      ]
    },
    "imports": [
      "Commands.Depends",
      "Commands.Diff",
      "Commands.Install",
      "Commands.Refresh",
      "Commands.RpmBuild",
      "Commands.Spec",
      "Commands.Update",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.Functor",
      "Data.List",
      "Data.Maybe",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Version",
      "Dependencies",
      "Distribution.Compiler",
      "Distribution.License",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Configuration",
      "Distribution.PackageDescription.Parse",
      "Distribution.Simple.Compiler",
      "Distribution.Simple.Configure",
      "Distribution.Simple.Program",
      "Distribution.Simple.Program.Find",
      "Distribution.Simple.Utils",
      "Distribution.System",
      "Distribution.Verbosity",
      "Distro",
      "FileUtils",
      "PackageUtils",
      "Paths",
      "Setup",
      "SysCmd",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Locale",
      "System.Posix.Files",
      "System.Posix.User",
      "System.Process"
    ],
    "modules": [],
    "name": "cabal-rpm",
    "version": "0.10.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Debug.Trace",
        "Prelude",
        "System.IO"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "network": [
        "Network"
      ],
      "text": [
        "Data.Text"
      ],
      "text-icu": [
        "Data.Text.ICU.Convert"
      ],
      "xml": [
        "Text.XML.Light"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.IEEE754",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.ICU.Convert",
      "Debug.Trace",
      "Network",
      "Prelude",
      "System.IO",
      "Text.Search.Sphinx.Configuration",
      "Text.Search.Sphinx.ExcerptConfiguration",
      "Text.Search.Sphinx.Get",
      "Text.Search.Sphinx.Put",
      "Text.Search.Sphinx.Types",
      "Text.XML.Light"
    ],
    "modules": [
      "Text.Search.Sphinx",
      "Text.Search.Sphinx.Types",
      "Text.Search.Sphinx.Configuration",
      "Text.Search.Sphinx.ExcerptConfiguration",
      "Text.Search.Sphinx.Indexable"
    ],
    "name": "sphinx",
    "version": "0.6.0.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudWatchLogs",
      "Test.AWS.CloudWatchLogs",
      "Test.AWS.CloudWatchLogs.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudWatchLogs",
      "Network.AWS.CloudWatchLogs.CancelExportTask",
      "Network.AWS.CloudWatchLogs.CreateExportTask",
      "Network.AWS.CloudWatchLogs.CreateLogGroup",
      "Network.AWS.CloudWatchLogs.CreateLogStream",
      "Network.AWS.CloudWatchLogs.DeleteDestination",
      "Network.AWS.CloudWatchLogs.DeleteLogGroup",
      "Network.AWS.CloudWatchLogs.DeleteLogStream",
      "Network.AWS.CloudWatchLogs.DeleteMetricFilter",
      "Network.AWS.CloudWatchLogs.DeleteRetentionPolicy",
      "Network.AWS.CloudWatchLogs.DeleteSubscriptionFilter",
      "Network.AWS.CloudWatchLogs.DescribeDestinations",
      "Network.AWS.CloudWatchLogs.DescribeExportTasks",
      "Network.AWS.CloudWatchLogs.DescribeLogGroups",
      "Network.AWS.CloudWatchLogs.DescribeLogStreams",
      "Network.AWS.CloudWatchLogs.DescribeMetricFilters",
      "Network.AWS.CloudWatchLogs.DescribeSubscriptionFilters",
      "Network.AWS.CloudWatchLogs.FilterLogEvents",
      "Network.AWS.CloudWatchLogs.GetLogEvents",
      "Network.AWS.CloudWatchLogs.PutDestination",
      "Network.AWS.CloudWatchLogs.PutDestinationPolicy",
      "Network.AWS.CloudWatchLogs.PutLogEvents",
      "Network.AWS.CloudWatchLogs.PutMetricFilter",
      "Network.AWS.CloudWatchLogs.PutRetentionPolicy",
      "Network.AWS.CloudWatchLogs.PutSubscriptionFilter",
      "Network.AWS.CloudWatchLogs.TestMetricFilter",
      "Network.AWS.CloudWatchLogs.Types",
      "Network.AWS.CloudWatchLogs.Waiters"
    ],
    "name": "amazonka-cloudwatch-logs",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Version"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Char",
      "Data.Data",
      "Data.Version",
      "Language.Javascript.Flot",
      "Paths"
    ],
    "modules": [
      "Language.Javascript.Flot"
    ],
    "name": "js-flot",
    "version": "0.8.3"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Data.List",
        "Data.Maybe",
        "Text.Printf"
      ]
    },
    "imports": [
      "Data.Digits",
      "Data.List",
      "Data.Maybe",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Data.Digits"
    ],
    "name": "digits",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Data.Proxy",
        "Data.Typeable",
        "GHC.Generics"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hvect": [
        "Data.HVect"
      ],
      "reroute": [
        "Web.Routing.Combinators"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Data.Aeson",
      "Data.HVect",
      "Data.Proxy",
      "Data.Typeable",
      "GHC.Generics",
      "Web.Routing.Combinators"
    ],
    "modules": [
      "Web.Spock.Api"
    ],
    "name": "Spock-api",
    "version": "0.11.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Zip",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor",
        "Data.Functor.Classes",
        "Data.Ix",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Version",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Arr",
        "GHC.Generics"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Zip",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bitraversable",
      "Data.Bits",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor",
      "Data.Functor.Classes",
      "Data.Ix",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.String",
      "Data.Traversable",
      "Data.Version",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Arr",
      "GHC.Generics",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Paths"
    ],
    "modules": [
      "Data.Tagged"
    ],
    "name": "tagged",
    "version": "0.8.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "Prelude",
        "System.IO.Error"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "reducers": [
        "Data.Semigroup.Applicative"
      ],
      "split": [
        "Data.List.Split"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "tasty": [
        "Test.Tasty.Options",
        "Test.Tasty.Runners"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Control.Monad.State",
      "Control.Monad.Trans.Class",
      "Data.Char",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.IntMap",
      "Data.List.Split",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Semigroup.Applicative",
      "Data.Set",
      "Data.Tagged",
      "Data.Typeable",
      "Options.Applicative",
      "Prelude",
      "System.IO.Error",
      "Test.Tasty.Options",
      "Test.Tasty.Runners"
    ],
    "modules": [
      "Test.Tasty.Ingredients.Rerun"
    ],
    "name": "tasty-rerun",
    "version": "1.1.6"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-gio": [],
      "gi-glib": [],
      "gi-gobject": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-soup",
    "version": "2.4.3"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString"
      ],
      "auto-update": [
        "Control.Reaper"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Int",
        "Data.IORef",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Types",
        "Prelude",
        "System.Environment",
        "System.IO.Unsafe",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Set"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "iproute": [
        "Data.IP"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict"
      ],
      "network": [
        "Network",
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "operational": [
        "Control.Monad.Operational"
      ],
      "redis-resp": [
        "Data.Redis",
        "Data.Redis.Command"
      ],
      "resource-pool": [
        "Data.Pool"
      ],
      "semigroups": [],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "time": [
        "Data.Time"
      ],
      "tinylog": [
        "System.Logger",
        "System.Logger.Class",
        "System.Logger.Message"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "CommandTests",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Operational",
      "Control.Monad.Reader",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Except",
      "Control.Reaper",
      "Criterion",
      "Criterion.Main",
      "Data.Attoparsec.ByteString",
      "Database.Redis",
      "Database.Redis.IO",
      "Database.Redis.IO.Client",
      "Database.Redis.IO.Connection",
      "Database.Redis.IO.Settings",
      "Database.Redis.IO.Timeouts",
      "Database.Redis.IO.Types",
      "Data.ByteString",
      "Data.ByteString.Conversion",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Foldable",
      "Data.Int",
      "Data.IORef",
      "Data.IP",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Pool",
      "Data.Redis",
      "Data.Redis.Command",
      "Data.Sequence",
      "Data.Set",
      "Data.Time",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.Types",
      "Network",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Prelude",
      "System.Environment",
      "System.IO.Unsafe",
      "System.Logger",
      "System.Logger.Class",
      "System.Logger.Message",
      "System.Timeout",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Database.Redis.IO"
    ],
    "name": "redis-io",
    "version": "0.7.0"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.Function.Wrap"
    ],
    "name": "wrap",
    "version": "0.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8"
    ],
    "modules": [
      "Data.Hex"
    ],
    "name": "hex",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Function",
        "Data.Maybe",
        "Data.Semigroup",
        "Prelude"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [],
      "conduit-combinators": [
        "Conduit"
      ],
      "containers": [],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [],
      "lifted-async": [],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [],
      "resourcet": [],
      "semigroups": [],
      "tagged": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ]
    },
    "imports": [
      "Conduit",
      "Control.Applicative",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Maybe",
      "Data.Semigroup",
      "Data.Text",
      "Data.Text.Encoding",
      "Git.Blob",
      "Git.Commit",
      "Git.Commit.Push",
      "Git.Object",
      "Git.Reference",
      "Git.Repository",
      "Git.Tree",
      "Git.Tree.Builder",
      "Git.Types",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.Posix.Files"
    ],
    "modules": [
      "Git",
      "Git.Blob",
      "Git.Commit",
      "Git.Commit.Push",
      "Git.Object",
      "Git.Reference",
      "Git.Repository",
      "Git.Tree",
      "Git.Tree.Builder",
      "Git.Tree.Builder.Pure",
      "Git.Tree.Working",
      "Git.Tutorial",
      "Git.Types",
      "Git.Utils",
      "Git.Working"
    ],
    "name": "gitlib",
    "version": "3.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Bool"
    ],
    "name": "control-bool",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "email-validate": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Email.Check"
    ],
    "name": "check-email",
    "version": "1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "clientsession": [
        "Web.ClientSession"
      ],
      "happstack-server": [
        "Happstack.Server"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Cont",
      "Control.Monad.Error",
      "Control.Monad.Fix",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Control",
      "Control.Monad.Writer",
      "Data.ByteString.Char8",
      "Data.Monoid",
      "Data.SafeCopy",
      "Data.Serialize",
      "Happstack.Server",
      "Web.ClientSession"
    ],
    "modules": [
      "Happstack.Server.ClientSession"
    ],
    "name": "happstack-clientsession",
    "version": "7.3.1"
  },
  {
    "dependencies": {
      "JuicyPixels": [
        "Codec.Picture",
        "Codec.Picture.Types"
      ],
      "base": [
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Function"
      ]
    },
    "imports": [
      "Codec.Picture",
      "Codec.Picture.Extra",
      "Codec.Picture.Types",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Function",
      "Test.Hspec"
    ],
    "modules": [
      "Codec.Picture.Extra"
    ],
    "name": "JuicyPixels-extra",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Typeable"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "tasty": [
        "Test.Tasty.Options",
        "Test.Tasty.Providers",
        "Test.Tasty.Runners"
      ]
    },
    "imports": [
      "Data.Tagged",
      "Data.Typeable",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Test.Tasty.Runners"
    ],
    "modules": [
      "Test.Tasty.ExpectedFailure"
    ],
    "name": "tasty-expected-failure",
    "version": "0.11.0.4"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Method.OAuth2.GetCertForOpenIdConnect",
      "Network.Google.Method.OAuth2.TokenInfo",
      "Network.Google.OAuth2",
      "Network.Google.OAuth2.Types",
      "Network.Google.Resource.OAuth2.UserInfo.Get",
      "Network.Google.Resource.OAuth2.UserInfo.V2.Me.Get"
    ],
    "name": "gogol-oauth2",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.STRef",
        "Data.Word",
        "System.Posix.Types"
      ],
      "bytestring": [],
      "containers": [
        "Data.Map"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.TH"
      ],
      "mtl": [],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive.MutVar"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ],
      "unix": [
        "System.Posix.Time"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ],
      "vector-algorithms": [
        "Data.Vector.Algorithms.Intro"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.Lens",
      "Control.Lens.TH",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "CounterTest",
      "Data.HashMap.Strict",
      "Data.HealthCheck",
      "Data.Map",
      "Data.Metrics.Counter",
      "Data.Metrics.Gauge",
      "Data.Metrics.Histogram",
      "Data.Metrics.Histogram.Internal",
      "Data.Metrics.Internal",
      "Data.Metrics.Meter",
      "Data.Metrics.Meter.Internal",
      "Data.Metrics.MovingAverage",
      "Data.Metrics.MovingAverage.ExponentiallyWeighted",
      "Data.Metrics.Registry",
      "Data.Metrics.Reservoir",
      "Data.Metrics.Reservoir.ExponentiallyDecaying",
      "Data.Metrics.Reservoir.Uniform",
      "Data.Metrics.Snapshot",
      "Data.Metrics.Timer",
      "Data.Metrics.Timer.Internal",
      "Data.Metrics.Types",
      "Data.Primitive.MutVar",
      "Data.STRef",
      "Data.Text",
      "Data.Text.IO",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Vector.Algorithms.Intro",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Data.Word",
      "EDR",
      "EWMA",
      "GaugeTest",
      "System.Console.ANSI",
      "System.Posix.Time",
      "System.Posix.Types",
      "System.Random.MWC",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic"
    ],
    "modules": [
      "Data.HealthCheck",
      "Data.Metrics",
      "Data.Metrics.Counter",
      "Data.Metrics.Gauge",
      "Data.Metrics.Histogram",
      "Data.Metrics.Histogram.Internal",
      "Data.Metrics.Internal",
      "Data.Metrics.MovingAverage",
      "Data.Metrics.MovingAverage.ExponentiallyWeighted",
      "Data.Metrics.Meter",
      "Data.Metrics.Meter.Internal",
      "Data.Metrics.Timer",
      "Data.Metrics.Timer.Internal",
      "Data.Metrics.Reporter.StdOut",
      "Data.Metrics.Reservoir",
      "Data.Metrics.Reservoir.ExponentiallyDecaying",
      "Data.Metrics.Reservoir.Uniform",
      "Data.Metrics.Snapshot",
      "Data.Metrics.Registry",
      "Data.Metrics.Types"
    ],
    "name": "metrics",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Monad",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.Getter",
        "Control.Lens.Indexed",
        "Control.Lens.Internal.Context",
        "Control.Lens.Internal.Indexed",
        "Control.Lens.Lens",
        "Control.Lens.Setter",
        "Control.Lens.Traversal",
        "Control.Lens.Type"
      ],
      "profunctors": [
        "Data.Profunctor.Unsafe"
      ],
      "semigroupoids": [
        "Data.Functor.Apply"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Control.Lens",
      "Control.Lens.Getter",
      "Control.Lens.Indexed",
      "Control.Lens.Internal.Context",
      "Control.Lens.Internal.Indexed",
      "Control.Lens.Lens",
      "Control.Lens.Setter",
      "Control.Lens.Traversal",
      "Control.Lens.Type",
      "Control.Monad",
      "Control.Zipper",
      "Control.Zipper.Internal",
      "Criterion.Main",
      "Data.Foldable",
      "Data.Functor.Apply",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Profunctor.Unsafe"
    ],
    "modules": [
      "Control.Zipper",
      "Control.Zipper.Internal"
    ],
    "name": "zippers",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "ansi-terminal": [],
      "base": [],
      "data-default": [],
      "list-prompt": [],
      "stm": [],
      "terminal-size": [],
      "vty": [
        "Graphics.Vty"
      ]
    },
    "imports": [
      "Graphics.Vty"
    ],
    "modules": [
      "System.Console.ListPrompt",
      "System.Console.ListPrompt.Internal",
      "System.Console.ListPrompt.Types"
    ],
    "name": "list-prompt",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "acid-state": [
        "Data.Acid",
        "Data.Acid.Advanced",
        "Data.Acid.Local"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Text.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String"
      ],
      "clckwrks": [
        "Clckwrks",
        "Clckwrks.Acid",
        "Clckwrks.Admin.Template",
        "Clckwrks.Markup.HsColour",
        "Clckwrks.Markup.Markdown",
        "Clckwrks.Markup.Pandoc",
        "Clckwrks.Monad",
        "Clckwrks.Plugin",
        "Clckwrks.ProfileData.Acid",
        "Clckwrks.Types",
        "Clckwrks.Unauthorized",
        "Clckwrks.URL"
      ],
      "containers": [
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "happstack-hsp": [
        "HSP.Google.Analytics"
      ],
      "happstack-server": [
        "Happstack.Server"
      ],
      "hsp": [
        "HSP",
        "HSP.HTML4",
        "HSP.XML",
        "HSP.XMLGenerator"
      ],
      "hsx2hs": [
        "Language.Haskell.HSX.QQ"
      ],
      "ixset": [
        "Data.IxSet"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "old-locale": [],
      "random": [
        "System.Random"
      ],
      "reform": [
        "Text.Reform"
      ],
      "reform-happstack": [
        "Text.Reform.Happstack"
      ],
      "reform-hsp": [
        "Text.Reform.HSP.Text"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "tagsoup": [
        "Text.HTML.TagSoup"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX",
        "Data.Time.Format"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "uuid": [
        "Data.UUID",
        "Data.UUID.V5"
      ],
      "uuid-orphans": [],
      "web-plugins": [
        "Web.Plugins.Core"
      ],
      "web-routes": [
        "Web.Routes"
      ],
      "web-routes-happstack": [
        "Web.Routes.Happstack"
      ],
      "web-routes-th": [
        "Web.Routes.TH"
      ]
    },
    "imports": [
      "Clckwrks",
      "Clckwrks.Acid",
      "Clckwrks.Admin.Template",
      "Clckwrks.Markup.HsColour",
      "Clckwrks.Markup.Markdown",
      "Clckwrks.Markup.Pandoc",
      "Clckwrks.Monad",
      "Clckwrks.Page.Acid",
      "Clckwrks.Page.Admin.EditFeedConfig",
      "Clckwrks.Page.Admin.EditPage",
      "Clckwrks.Page.Admin.NewPage",
      "Clckwrks.Page.Admin.Pages",
      "Clckwrks.Page.Admin.PreviewPage",
      "Clckwrks.Page.API",
      "Clckwrks.Page.Atom",
      "Clckwrks.Page.BlogPage",
      "Clckwrks.Page.Monad",
      "Clckwrks.Page.NavBarCallback",
      "Clckwrks.Page.PreProcess",
      "Clckwrks.Page.Route",
      "Clckwrks.Page.Types",
      "Clckwrks.Page.URL",
      "Clckwrks.Page.Verbatim",
      "Clckwrks.Plugin",
      "Clckwrks.ProfileData.Acid",
      "Clckwrks.Types",
      "Clckwrks.Unauthorized",
      "Clckwrks.URL",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Acid",
      "Data.Acid.Advanced",
      "Data.Acid.Local",
      "Data.Aeson",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Text.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.IxSet",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.SafeCopy",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Format",
      "Data.Time.Locale.Compat",
      "Data.UUID",
      "Data.UUID.V5",
      "Happstack.Server",
      "HSP",
      "HSP.Google.Analytics",
      "HSP.HTML4",
      "HSP.XML",
      "HSP.XMLGenerator",
      "Language.Haskell.HSX.QQ",
      "Language.Haskell.TH.Quote",
      "System.Directory",
      "System.FilePath",
      "System.Random",
      "Text.HTML.TagSoup",
      "Text.Reform",
      "Text.Reform.Happstack",
      "Text.Reform.HSP.Text",
      "Web.Plugins.Core",
      "Web.Routes",
      "Web.Routes.Happstack",
      "Web.Routes.TH"
    ],
    "modules": [
      "Clckwrks.Page.Monad",
      "Clckwrks.Page.Route",
      "Clckwrks.Page.Types",
      "Clckwrks.Page.NavBarCallback",
      "Clckwrks.Page.Plugin",
      "Clckwrks.Page.PreProcess",
      "Clckwrks.Page.API",
      "Clckwrks.Page.Acid",
      "Clckwrks.Page.BlogPage",
      "Clckwrks.Page.Admin.EditFeedConfig",
      "Clckwrks.Page.Admin.EditPage",
      "Clckwrks.Page.Admin.NewPage",
      "Clckwrks.Page.Admin.Pages",
      "Clckwrks.Page.Admin.PreviewPage",
      "Clckwrks.Page.URL",
      "Clckwrks.Page.Atom"
    ],
    "name": "clckwrks-plugin-page",
    "version": "0.4.3.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Ptr",
        "GHC.Word",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "memory": [
        "Data.ByteArray",
        "Data.ByteArray.Encoding",
        "Data.ByteArray.Mapping",
        "Data.ByteArray.Pack",
        "Data.Memory.Endian",
        "Data.Memory.ExtendedWords"
      ]
    },
    "imports": [
      "BCrypt",
      "BlockCipher",
      "ChaCha",
      "ChaChaPoly1305",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Crypto.Cipher.AES",
      "Crypto.Cipher.AES.Primitive",
      "Crypto.Cipher.Blowfish",
      "Crypto.Cipher.Blowfish.Primitive",
      "Crypto.Cipher.Camellia",
      "Crypto.Cipher.Camellia.Primitive",
      "Crypto.Cipher.ChaCha",
      "Crypto.Cipher.ChaChaPoly1305",
      "Crypto.Cipher.DES",
      "Crypto.Cipher.RC4",
      "Crypto.Cipher.Salsa",
      "Crypto.Cipher.TripleDES",
      "Crypto.Cipher.Types",
      "Crypto.Cipher.Types.AEAD",
      "Crypto.Cipher.Types.Base",
      "Crypto.Cipher.Types.Block",
      "Crypto.Cipher.Types.Stream",
      "Crypto.Data.AFIS",
      "Crypto.Data.Padding",
      "Crypto.Error",
      "Crypto.Error.Types",
      "Crypto.Hash",
      "Crypto.Internal.ByteArray",
      "Crypto.Internal.Compat",
      "Crypto.Internal.CompatPrim",
      "Crypto.Internal.DeepSeq",
      "Crypto.Internal.Imports",
      "Crypto.Internal.WordArray",
      "Crypto.KDF.BCrypt",
      "Crypto.KDF.HKDF",
      "Crypto.KDF.PBKDF2",
      "Crypto.KDF.Scrypt",
      "Crypto.MAC.CMAC",
      "Crypto.MAC.HMAC",
      "Crypto.MAC.Poly1305",
      "Crypto.Number.Basic",
      "Crypto.Number.Compat",
      "Crypto.Number.F2m",
      "Crypto.Number.Generate",
      "Crypto.Number.ModArithmetic",
      "Crypto.Number.Prime",
      "Crypto.Number.Serialize",
      "Crypto.Number.Serialize.Internal",
      "Crypto.PubKey.Curve25519",
      "Crypto.PubKey.DH",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.ECC.ECDSA",
      "Crypto.PubKey.ECC.P256",
      "Crypto.PubKey.ECC.Prim",
      "Crypto.PubKey.ECC.Types",
      "Crypto.PubKey.Ed25519",
      "Crypto.PubKey.Ed448",
      "Crypto.PubKey.MaskGenFunction",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.OAEP",
      "Crypto.PubKey.RSA.PSS",
      "Crypto.PubKey.RSA.Types",
      "Crypto.Random",
      "Crypto.Random.ChaChaDRG",
      "Crypto.Random.Entropy",
      "Crypto.Random.Entropy.Backend",
      "Crypto.Random.Entropy.RDRand",
      "Crypto.Random.Entropy.Source",
      "Crypto.Random.Entropy.Unix",
      "Crypto.Random.Entropy.Windows",
      "Crypto.Random.Probabilistic",
      "Crypto.Random.SystemDRG",
      "Crypto.Random.Types",
      "Data.Bits",
      "Data.ByteArray",
      "Data.ByteArray.Encoding",
      "Data.ByteArray.Mapping",
      "Data.ByteArray.Pack",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Memory.Endian",
      "Data.Memory.ExtendedWords",
      "Data.Monoid",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Logarithms",
      "GHC.Prim",
      "GHC.Ptr",
      "GHC.Types",
      "GHC.Word",
      "Hash",
      "Imports",
      "KAT",
      "Number",
      "Number.F2m",
      "Padding",
      "Poly1305",
      "Prelude",
      "Salsa",
      "System.IO",
      "System.IO.Unsafe",
      "System.Win32.Types",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.KAT",
      "Test.Tasty.KAT.FileLoader",
      "Test.Tasty.QuickCheck",
      "Utils"
    ],
    "modules": [
      "Crypto.Cipher.AES",
      "Crypto.Cipher.Blowfish",
      "Crypto.Cipher.Camellia",
      "Crypto.Cipher.ChaCha",
      "Crypto.Cipher.ChaChaPoly1305",
      "Crypto.Cipher.DES",
      "Crypto.Cipher.RC4",
      "Crypto.Cipher.Salsa",
      "Crypto.Cipher.TripleDES",
      "Crypto.Cipher.Types",
      "Crypto.ConstructHash.MiyaguchiPreneel",
      "Crypto.Data.AFIS",
      "Crypto.Data.Padding",
      "Crypto.Error",
      "Crypto.MAC.CMAC",
      "Crypto.MAC.Poly1305",
      "Crypto.MAC.HMAC",
      "Crypto.Number.Basic",
      "Crypto.Number.F2m",
      "Crypto.Number.Generate",
      "Crypto.Number.ModArithmetic",
      "Crypto.Number.Prime",
      "Crypto.Number.Serialize",
      "Crypto.Number.Serialize.Internal",
      "Crypto.KDF.PBKDF2",
      "Crypto.KDF.Scrypt",
      "Crypto.KDF.BCrypt",
      "Crypto.KDF.HKDF",
      "Crypto.Hash",
      "Crypto.Hash.IO",
      "Crypto.Hash.Algorithms",
      "Crypto.PubKey.Curve25519",
      "Crypto.PubKey.MaskGenFunction",
      "Crypto.PubKey.DH",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.ECC.Generate",
      "Crypto.PubKey.ECC.Prim",
      "Crypto.PubKey.ECC.DH",
      "Crypto.PubKey.ECC.ECDSA",
      "Crypto.PubKey.ECC.P256",
      "Crypto.PubKey.ECC.Types",
      "Crypto.PubKey.Ed25519",
      "Crypto.PubKey.Ed448",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.PKCS15",
      "Crypto.PubKey.RSA.Prim",
      "Crypto.PubKey.RSA.PSS",
      "Crypto.PubKey.RSA.OAEP",
      "Crypto.PubKey.RSA.Types",
      "Crypto.Random",
      "Crypto.Random.Types",
      "Crypto.Random.Entropy",
      "Crypto.Random.EntropyPool",
      "Crypto.Random.Entropy.Unsafe",
      "Crypto.Tutorial"
    ],
    "name": "cryptonite",
    "version": "0.19"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C",
        "GHC.Base",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.ST",
        "Prelude",
        "Text.Read"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.DeepSeq.Generics",
      "Control.Monad",
      "Control.Monad.ST",
      "Criterion.Main",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.HashMap.Array",
      "Data.HashMap.Base",
      "Data.HashMap.Lazy",
      "Data.HashMap.PopCount",
      "Data.HashMap.Strict",
      "Data.HashMap.Unsafe",
      "Data.HashMap.UnsafeShift",
      "Data.HashSet",
      "Data.IntMap",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Semigroup",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.ST",
      "Prelude",
      "System.Random",
      "Test.ChasingBottoms.IsBottom",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Read",
      "Util.ByteString",
      "Util.Int",
      "Util.String"
    ],
    "modules": [
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.HashSet"
    ],
    "name": "unordered-containers",
    "version": "0.2.7.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Numeric",
        "Prelude",
        "System.IO"
      ],
      "base64-string": [
        "Codec.Binary.Base64.String"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "cryptohash": [
        "Crypto.Hash.MD5"
      ],
      "mime-mail": [
        "Network.Mail.Mime"
      ],
      "mtl": [],
      "network": [
        "Network",
        "Network.BSD"
      ],
      "old-time": [
        "System.Time"
      ],
      "pretty": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Codec.Binary.Base64.String",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Crypto.Hash.MD5",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Network",
      "Network.BSD",
      "Network.GnuTLS",
      "Network.HaskellNet.Auth",
      "Network.HaskellNet.BSStream",
      "Network.HaskellNet.IMAP",
      "Network.HaskellNet.IMAP.Connection",
      "Network.HaskellNet.IMAP.Parsers",
      "Network.HaskellNet.IMAP.Types",
      "Network.HaskellNet.POP3",
      "Network.HaskellNet.POP3.Connection",
      "Network.HaskellNet.POP3.Types",
      "Network.Mail.Mime",
      "Numeric",
      "Prelude",
      "System.IO",
      "System.Time",
      "Text.Packrat.Parse",
      "Text.Packrat.Pos"
    ],
    "modules": [
      "Network.HaskellNet.IMAP",
      "Network.HaskellNet.IMAP.Connection",
      "Network.HaskellNet.IMAP.Types",
      "Network.HaskellNet.IMAP.Parsers",
      "Network.HaskellNet.SMTP",
      "Network.HaskellNet.POP3",
      "Network.HaskellNet.POP3.Connection",
      "Network.HaskellNet.POP3.Types",
      "Network.HaskellNet.BSStream",
      "Network.HaskellNet.Auth",
      "Network.HaskellNet.Debug"
    ],
    "name": "HaskellNet",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Tuple",
        "Data.Version",
        "Debug.Trace",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Read",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filemanip": [
        "System.FilePath.Find"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc": [],
      "ghc-exactprint": [
        "Language.Haskell.GHC.ExactPrint",
        "Language.Haskell.GHC.ExactPrint.Annotate",
        "Language.Haskell.GHC.ExactPrint.Delta",
        "Language.Haskell.GHC.ExactPrint.Parsers",
        "Language.Haskell.GHC.ExactPrint.Print",
        "Language.Haskell.GHC.ExactPrint.Types",
        "Language.Haskell.GHC.ExactPrint.Utils"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "process": [
        "System.Process"
      ],
      "refact": [
        "Refact.Types"
      ],
      "syb": [
        "Data.Generics",
        "Data.Generics.Schemes"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ]
    },
    "imports": [
      "A",
      "ApiAnnotation",
      "Array",
      "B",
      "BasicTypes",
      "Char",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.State",
      "Control.Monad.Trans.Maybe",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Generics",
      "Data.Generics.Schemes",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Text.Lazy",
      "Data.Tuple",
      "Data.Version",
      "Debug.Trace",
      "FastString",
      "Foo",
      "GHC",
      "HsExpr",
      "HsImpExp",
      "HsSyn",
      "IO",
      "Language.Haskell.GHC.ExactPrint",
      "Language.Haskell.GHC.ExactPrint.Annotate",
      "Language.Haskell.GHC.ExactPrint.Delta",
      "Language.Haskell.GHC.ExactPrint.Parsers",
      "Language.Haskell.GHC.ExactPrint.Print",
      "Language.Haskell.GHC.ExactPrint.Types",
      "Language.Haskell.GHC.ExactPrint.Utils",
      "List",
      "Main",
      "OccName",
      "Options.Applicative",
      "Paths",
      "PlaceHolder",
      "Prelude",
      "RdrName",
      "Refact.Apply",
      "Refact.Fixity",
      "Refact.Types",
      "Refact.Utils",
      "SrcLoc",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Find",
      "System.IO",
      "System.IO.Silently",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.PosixCompat.Files",
      "System.Process",
      "Test.Tasty",
      "Test.Tasty.ExpectedFailure",
      "Test.Tasty.Golden",
      "Text.Blaze.Html5.Attributes",
      "Text.Read",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Refact.Utils",
      "Refact.Apply",
      "Refact.Fixity"
    ],
    "name": "apply-refact",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.Script.Scripts.Run",
      "Network.Google.Script",
      "Network.Google.Script.Types"
    ],
    "name": "gogol-script",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.Fix",
        "System.Exit",
        "System.Timeout"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.Identity",
      "Control.Monad.RevState",
      "Control.Monad.RevState.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.RevState",
      "System.Exit",
      "System.Timeout"
    ],
    "modules": [
      "Control.Monad.Trans.RevState",
      "Control.Monad.RevState.Class",
      "Control.Monad.RevState"
    ],
    "name": "rev-state",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "atomic-primops": [
        "Data.Atomics"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Functor",
        "Data.IORef",
        "Data.Ix",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Typeable"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TVar",
        "Control.Monad.STM"
      ],
      "transformers": [
        "Control.Monad.Trans.Identity"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Classy.Chan",
      "Control.Concurrent.Classy.CRef",
      "Control.Concurrent.Classy.MVar",
      "Control.Concurrent.Classy.QSem",
      "Control.Concurrent.Classy.QSemN",
      "Control.Concurrent.Classy.STM",
      "Control.Concurrent.Classy.STM.TArray",
      "Control.Concurrent.Classy.STM.TBQueue",
      "Control.Concurrent.Classy.STM.TChan",
      "Control.Concurrent.Classy.STM.TMVar",
      "Control.Concurrent.Classy.STM.TQueue",
      "Control.Concurrent.Classy.STM.TVar",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Conc.Class",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.STM",
      "Control.Monad.STM.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.Array",
      "Data.Array.Base",
      "Data.Atomics",
      "Data.Functor",
      "Data.IORef",
      "Data.Ix",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Typeable"
    ],
    "modules": [
      "Control.Monad.Conc.Class",
      "Control.Monad.STM.Class",
      "Control.Concurrent.Classy",
      "Control.Concurrent.Classy.Chan",
      "Control.Concurrent.Classy.CRef",
      "Control.Concurrent.Classy.MVar",
      "Control.Concurrent.Classy.QSem",
      "Control.Concurrent.Classy.QSemN",
      "Control.Concurrent.Classy.STM",
      "Control.Concurrent.Classy.STM.TVar",
      "Control.Concurrent.Classy.STM.TMVar",
      "Control.Concurrent.Classy.STM.TChan",
      "Control.Concurrent.Classy.STM.TQueue",
      "Control.Concurrent.Classy.STM.TBQueue",
      "Control.Concurrent.Classy.STM.TArray"
    ],
    "name": "concurrency",
    "version": "1.0.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.List.NonEmpty"
      ],
      "monoid-extras": [],
      "newtype": [],
      "semigroups": []
    },
    "imports": [
      "Data.List.NonEmpty",
      "Data.Tree.DUAL.Internal"
    ],
    "modules": [
      "Data.Tree.DUAL",
      "Data.Tree.DUAL.Internal"
    ],
    "name": "dual-tree",
    "version": "0.2.0.9"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.Encode"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad.IO.Class",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Word",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "ekg-core": [
        "System.Metrics",
        "System.Metrics.Counter",
        "System.Metrics.Distribution",
        "System.Metrics.Gauge",
        "System.Metrics.Label"
      ],
      "ekg-json": [
        "System.Metrics.Json"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "network": [
        "Network.Socket"
      ],
      "snap-core": [
        "Snap.Core",
        "Snap.Util.FileServe"
      ],
      "snap-server": [
        "Snap.Http.Server",
        "Snap.Http.Server.Config"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad.IO.Class",
      "Data.Aeson.Encode",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.List",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock.POSIX",
      "Data.Word",
      "Network.Socket",
      "Paths",
      "Prelude",
      "Snap.Core",
      "Snap.Http.Server",
      "Snap.Http.Server.Config",
      "Snap.Util.FileServe",
      "System.FilePath",
      "System.Metrics",
      "System.Metrics.Counter",
      "System.Metrics.Distribution",
      "System.Metrics.Gauge",
      "System.Metrics.Json",
      "System.Metrics.Label",
      "System.Remote.Json",
      "System.Remote.Monitoring",
      "System.Remote.Snap"
    ],
    "modules": [
      "System.Remote.Counter",
      "System.Remote.Gauge",
      "System.Remote.Label",
      "System.Remote.Monitoring"
    ],
    "name": "ekg",
    "version": "0.4.0.11"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "GHC.Exts",
        "GHC.Int",
        "GHC.Word",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.Word",
      "GHC.Exts",
      "GHC.Int",
      "GHC.Prim",
      "GHC.Word",
      "System.IO"
    ],
    "modules": [
      "Codec.Binary.UTF8.Light"
    ],
    "name": "utf8-light",
    "version": "0.4.2"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Data.Base32String",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Text.Encoding",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Data.Base32String",
      "Data.Base32String.Default"
    ],
    "name": "base32string",
    "version": "0.9.1"
  },
  {
    "dependencies": {
      "abstract-deque": [
        "Data.Concurrent.Deque.Class",
        "Data.Concurrent.Deque.Reference",
        "Data.Concurrent.Deque.Reference.DequeInstance"
      ],
      "abstract-par": [
        "Control.Monad.Par.Class"
      ],
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "GHC.Conc",
        "Prelude",
        "System.Environment",
        "System.IO.Unsafe",
        "System.Timeout",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "monad-par-extras": [
        "Control.Monad.Par.AList",
        "Control.Monad.Par.Combinator"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Reader",
        "Control.Monad.Trans"
      ],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "parallel": [
        "Control.Parallel"
      ]
    },
    "imports": [
      "AListTest",
      "AsyncTest",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Cont",
      "Control.Monad.IO.Class",
      "Control.Monad.Par.AList",
      "Control.Monad.Par.Class",
      "Control.Monad.Par.Combinator",
      "Control.Monad.Par.Meta.Dist",
      "Control.Monad.Par.Scheds.Direct",
      "Control.Monad.Par.Scheds.Trace",
      "Control.Monad.Par.Scheds.TraceInternal",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Control.Parallel",
      "Database.Cassandra",
      "Database.Cassandra.Thrift.Cassandra",
      "Database.Cassandra.Types",
      "Data.Binary",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Concurrent.Deque.ChaseLev",
      "Data.Concurrent.Deque.ChaseLev.DequeInstance",
      "Data.Concurrent.Deque.Class",
      "Data.Concurrent.Deque.Reference",
      "Data.Concurrent.Deque.Reference.DequeInstance",
      "Data.Either.Utils",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.Time.Clock",
      "Data.Typeable",
      "Data.Word",
      "Debug.Trace",
      "GHC.Conc",
      "ParTests1",
      "ParTests2",
      "Prelude",
      "Remote2.Call",
      "System.Environment",
      "System.IO.Unsafe",
      "System.Posix.Process",
      "System.Process",
      "System.Random.MWC",
      "System.Time",
      "System.Timeout",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.Framework.TH",
      "TestHelpers",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Control.Monad.Par",
      "Control.Monad.Par.IO",
      "Control.Monad.Par.Scheds.Trace",
      "Control.Monad.Par.Scheds.TraceInternal",
      "Control.Monad.Par.Scheds.Direct",
      "Control.Monad.Par.Scheds.Sparks"
    ],
    "name": "monad-par",
    "version": "0.3.4.8"
  },
  {
    "dependencies": {
      "base": [
        "Prelude"
      ]
    },
    "imports": [
      "Data.HVect",
      "Prelude",
      "Test.Framework"
    ],
    "modules": [
      "Data.HVect"
    ],
    "name": "hvect",
    "version": "0.3.1.0"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.PackageDescription",
        "Distribution.Simple",
        "Distribution.Simple.Configure",
        "Distribution.Simple.InstallDirs",
        "Distribution.Simple.LocalBuildInfo",
        "Distribution.Simple.PreProcess.Unlit",
        "Distribution.Simple.Setup",
        "Distribution.Simple.Utils",
        "Language.Haskell.Extension"
      ],
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Version",
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "System.Console.GetOpt",
        "System.Environment"
      ],
      "containers": [],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts"
      ],
      "process": [
        "System.Process"
      ],
      "setlocale": [
        "System.Locale.SetLocale"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Data.Char",
      "Data.Generics.Uniplate.Data",
      "Data.List",
      "Data.Maybe",
      "Data.Version",
      "Distribution.PackageDescription",
      "Distribution.Simple",
      "Distribution.Simple.Configure",
      "Distribution.Simple.InstallDirs",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.PreProcess.Unlit",
      "Distribution.Simple.Setup",
      "Distribution.Simple.Utils",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "Language.Haskell.Extension",
      "Language.Haskell.Exts",
      "Paths",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.Locale.SetLocale",
      "System.Process"
    ],
    "modules": [
      "Text.I18N.GetText",
      "Distribution.Simple.I18N.GetText"
    ],
    "name": "hgettext",
    "version": "0.1.30"
  },
  {
    "dependencies": {
      "base": [
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "directory": [],
      "editor-open": [],
      "process": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "temporary": [],
      "transformers": [],
      "unix": []
    },
    "imports": [
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Paths",
      "System.Exit",
      "System.IO",
      "Text.Editor"
    ],
    "modules": [
      "Text.Editor"
    ],
    "name": "editor-open",
    "version": "0.6.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Char",
        "Data.Maybe",
        "Data.Word",
        "System.Environment",
        "System.Posix.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Data.Char",
      "Data.Maybe",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Word",
      "System.Directory",
      "System.EasyFile.Directory",
      "System.EasyFile.FilePath",
      "System.EasyFile.Missing",
      "System.Environment",
      "System.Posix.Files",
      "System.Posix.Types",
      "System.Win32.File",
      "System.Win32.Time"
    ],
    "modules": [
      "System.EasyFile"
    ],
    "name": "easy-file",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Foreign.C.Error",
        "GHC.IO.Exception",
        "Prelude",
        "System.IO"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Common",
      "Control.Applicative",
      "Control.Category",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Morph",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer",
      "Criterion.Main",
      "Criterion.Main.Options",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Foreign.C.Error",
      "GHC.IO.Exception",
      "Options.Applicative",
      "Pipes",
      "Pipes.Core",
      "Pipes.Internal",
      "Pipes.Lift",
      "Pipes.Prelude",
      "Prelude",
      "System.IO",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck"
    ],
    "modules": [
      "Pipes",
      "Pipes.Core",
      "Pipes.Internal",
      "Pipes.Lift",
      "Pipes.Prelude",
      "Pipes.Tutorial"
    ],
    "name": "pipes",
    "version": "4.1.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Complex",
        "Data.Word",
        "Foreign",
        "Foreign.C.Types"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.AEq",
      "Data.Complex",
      "Data.Word",
      "Foreign",
      "Foreign.C.Types",
      "Numeric.IEEE",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Data.AEq",
      "Numeric.IEEE"
    ],
    "name": "ieee754",
    "version": "0.7.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Network"
      ],
      "connection": [
        "Network.Connection"
      ],
      "cprng-aes": [
        "Crypto.Random.AESCtr"
      ],
      "data-default": [
        "Data.Default"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "streaming-commons": [
        "Data.Streaming.Network",
        "Data.Streaming.Network.Internal"
      ],
      "tls": [
        "Network.TLS",
        "Network.TLS.Extra"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Crypto.Random.AESCtr",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Conduit.Network",
      "Data.Conduit.Network.TLS",
      "Data.Conduit.Network.TLS.Internal",
      "Data.Default",
      "Data.Streaming.Network",
      "Data.Streaming.Network.Internal",
      "Network.Connection",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.TLS",
      "Network.TLS.Extra",
      "Prelude",
      "Test.HUnit"
    ],
    "modules": [
      "Data.Conduit.Network.TLS",
      "Data.Conduit.Network.TLS.Internal"
    ],
    "name": "network-conduit-tls",
    "version": "1.2.2"
  },
  {
    "dependencies": {
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "safecopy": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Data.Generics.SYB.WithClass.Basics",
      "Data.IxSet.Ix",
      "Data.List",
      "Data.Map",
      "Data.Set",
      "Language.Haskell.TH",
      "Prelude"
    ],
    "modules": [
      "Data.IxSet",
      "Data.IxSet.Ix"
    ],
    "name": "ixset",
    "version": "1.0.7"
  },
  {
    "dependencies": {
      "base": [],
      "binary": [
        "Data.Binary"
      ],
      "byteable": [],
      "bytedump": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cryptohash": [
        "Crypto.Hash"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Crypto.Hash",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.UTF8"
    ],
    "modules": [
      "Crypto.PBKDF",
      "Crypto.PBKDF.ByteString",
      "Crypto.PBKDF.Core"
    ],
    "name": "pbkdf",
    "version": "1.1.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Exception",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "System.Exit",
        "System.IO"
      ],
      "containers": [],
      "cpphs": [
        "Language.Preprocessor.Cpphs"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts",
        "Language.Haskell.Exts.SrcLoc",
        "Language.Haskell.Exts.Syntax"
      ],
      "hflags": [
        "HFlags"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Generics.Uniplate.Data",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "HFlags",
      "Language.Haskell.Exts",
      "Language.Haskell.Exts.SrcLoc",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.Homplexity.Assessment",
      "Language.Haskell.Homplexity.CodeFragment",
      "Language.Haskell.Homplexity.Comments",
      "Language.Haskell.Homplexity.Cyclomatic",
      "Language.Haskell.Homplexity.Message",
      "Language.Haskell.Homplexity.Metric",
      "Language.Haskell.Homplexity.Parse",
      "Language.Haskell.Homplexity.SrcSlice",
      "Language.Haskell.Homplexity.TypeComplexity",
      "Language.Haskell.TH.Syntax",
      "Language.Preprocessor.Cpphs",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO"
    ],
    "modules": [],
    "name": "homplexity",
    "version": "0.4.3.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Complex",
        "Data.Foldable",
        "Data.IORef",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "Foreign.C",
        "Foreign.Storable",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "bytestring": [],
      "cairo": [
        "Graphics.Rendering.Cairo",
        "Graphics.Rendering.Cairo.Types"
      ],
      "containers": [],
      "glib": [
        "System.Glib.FFI",
        "System.Glib.GObject",
        "System.Glib.Signals"
      ],
      "gtk3": [],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "pango": [],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans",
      "Data.Array.Base",
      "Data.Bits",
      "Data.Char",
      "Data.Complex",
      "Data.Foldable",
      "Data.IORef",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Text",
      "Data.Time",
      "Data.Tree",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "Foreign.C",
      "Foreign.Storable",
      "Graphics.Rendering.Cairo",
      "Graphics.Rendering.Cairo.Types",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.Gdk.DrawWindow",
      "Graphics.UI.Gtk.Gdk.EventM",
      "Graphics.UI.Gtk.Gdk.GC",
      "Graphics.UI.Gtk.ModelView",
      "Graphics.UI.Gtk.ModelView.CustomStore",
      "Graphics.UI.Gtk.ModelView.Sequence",
      "Graphics.UI.Gtk.ModelView.TreeDrag",
      "Graphics.UI.Gtk.ModelView.TreeModel",
      "Graphics.UI.Gtk.ModelView.Types",
      "Graphics.UI.Gtk.Types",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Glib.FFI",
      "System.Glib.GObject",
      "System.Glib.Signals",
      "System.IO",
      "System.Locale",
      "System.Process",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Graphics.UI.Gtk",
      "Graphics.UI.GtkInternals",
      "Graphics.UI.Gtk.Abstract.Bin",
      "Graphics.UI.Gtk.Abstract.Box",
      "Graphics.UI.Gtk.Abstract.ButtonBox",
      "Graphics.UI.Gtk.Abstract.Container",
      "Graphics.UI.Gtk.Abstract.IMContext",
      "Graphics.UI.Gtk.Abstract.Misc",
      "Graphics.UI.Gtk.Abstract.Object",
      "Graphics.UI.Gtk.Abstract.Paned",
      "Graphics.UI.Gtk.Abstract.Range",
      "Graphics.UI.Gtk.Abstract.Scale",
      "Graphics.UI.Gtk.Abstract.Scrollbar",
      "Graphics.UI.Gtk.Abstract.Separator",
      "Graphics.UI.Gtk.Abstract.Widget",
      "Graphics.UI.Gtk.ActionMenuToolbar.Action",
      "Graphics.UI.Gtk.ActionMenuToolbar.ActionGroup",
      "Graphics.UI.Gtk.ActionMenuToolbar.RadioAction",
      "Graphics.UI.Gtk.ActionMenuToolbar.RecentAction",
      "Graphics.UI.Gtk.ActionMenuToolbar.ToggleAction",
      "Graphics.UI.Gtk.ActionMenuToolbar.UIManager",
      "Graphics.UI.Gtk.Builder",
      "Graphics.UI.Gtk.Buttons.Button",
      "Graphics.UI.Gtk.Buttons.CheckButton",
      "Graphics.UI.Gtk.Buttons.RadioButton",
      "Graphics.UI.Gtk.Buttons.ToggleButton",
      "Graphics.UI.Gtk.Buttons.LinkButton",
      "Graphics.UI.Gtk.Buttons.ScaleButton",
      "Graphics.UI.Gtk.Buttons.VolumeButton",
      "Graphics.UI.Gtk.Cairo",
      "Graphics.UI.Gtk.Display.AccelLabel",
      "Graphics.UI.Gtk.Display.Image",
      "Graphics.UI.Gtk.Display.Label",
      "Graphics.UI.Gtk.Display.ProgressBar",
      "Graphics.UI.Gtk.Display.LevelBar",
      "Graphics.UI.Gtk.Display.Spinner",
      "Graphics.UI.Gtk.Display.Statusbar",
      "Graphics.UI.Gtk.Display.StatusIcon",
      "Graphics.UI.Gtk.Display.InfoBar",
      "Graphics.UI.Gtk.Embedding.Plug",
      "Graphics.UI.Gtk.Embedding.Socket",
      "Graphics.UI.Gtk.Embedding.Types",
      "Graphics.UI.Gtk.Entry.Editable",
      "Graphics.UI.Gtk.Entry.Entry",
      "Graphics.UI.Gtk.Entry.EntryBuffer",
      "Graphics.UI.Gtk.Entry.EntryCompletion",
      "Graphics.UI.Gtk.Entry.HScale",
      "Graphics.UI.Gtk.Entry.SpinButton",
      "Graphics.UI.Gtk.Entry.VScale",
      "Graphics.UI.Gtk.Gdk.AppLaunchContext",
      "Graphics.UI.Gtk.Gdk.Cursor",
      "Graphics.UI.Gtk.Gdk.Keymap",
      "Graphics.UI.Gtk.Gdk.Display",
      "Graphics.UI.Gtk.Gdk.DisplayManager",
      "Graphics.UI.Gtk.Gdk.DrawWindow",
      "Graphics.UI.Gtk.Gdk.EventM",
      "Graphics.UI.Gtk.Gdk.Events",
      "Graphics.UI.Gtk.Gdk.Gdk",
      "Graphics.UI.Gtk.Gdk.GLContext",
      "Graphics.UI.Gtk.Gdk.Keys",
      "Graphics.UI.Gtk.Gdk.Pixbuf",
      "Graphics.UI.Gtk.Gdk.PixbufAnimation",
      "Graphics.UI.Gtk.Gdk.Screen",
      "Graphics.UI.Gtk.General.Clipboard",
      "Graphics.UI.Gtk.General.CssProvider",
      "Graphics.UI.Gtk.General.Drag",
      "Graphics.UI.Gtk.General.General",
      "Graphics.UI.Gtk.General.IconFactory",
      "Graphics.UI.Gtk.General.IconTheme",
      "Graphics.UI.Gtk.General.RcStyle",
      "Graphics.UI.Gtk.General.Selection",
      "Graphics.UI.Gtk.General.Settings",
      "Graphics.UI.Gtk.General.StockItems",
      "Graphics.UI.Gtk.General.Style",
      "Graphics.UI.Gtk.General.StyleContext",
      "Graphics.UI.Gtk.General.StyleProvider",
      "Graphics.UI.Gtk.Layout.Alignment",
      "Graphics.UI.Gtk.Layout.AspectFrame",
      "Graphics.UI.Gtk.Layout.Expander",
      "Graphics.UI.Gtk.Layout.Fixed",
      "Graphics.UI.Gtk.Layout.Grid",
      "Graphics.UI.Gtk.Layout.HBox",
      "Graphics.UI.Gtk.Layout.HButtonBox",
      "Graphics.UI.Gtk.Layout.HPaned",
      "Graphics.UI.Gtk.Layout.Layout",
      "Graphics.UI.Gtk.Layout.Notebook",
      "Graphics.UI.Gtk.Layout.Overlay",
      "Graphics.UI.Gtk.Layout.Table",
      "Graphics.UI.Gtk.Layout.VBox",
      "Graphics.UI.Gtk.Layout.VButtonBox",
      "Graphics.UI.Gtk.Layout.VPaned",
      "Graphics.UI.Gtk.Layout.Stack",
      "Graphics.UI.Gtk.Layout.StackSwitcher",
      "Graphics.UI.Gtk.MenuComboToolbar.CheckMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.ComboBox",
      "Graphics.UI.Gtk.MenuComboToolbar.ImageMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.Menu",
      "Graphics.UI.Gtk.MenuComboToolbar.MenuBar",
      "Graphics.UI.Gtk.MenuComboToolbar.MenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.MenuShell",
      "Graphics.UI.Gtk.MenuComboToolbar.MenuToolButton",
      "Graphics.UI.Gtk.MenuComboToolbar.RadioMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.RadioToolButton",
      "Graphics.UI.Gtk.MenuComboToolbar.SeparatorMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.SeparatorToolItem",
      "Graphics.UI.Gtk.MenuComboToolbar.TearoffMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.ToggleToolButton",
      "Graphics.UI.Gtk.MenuComboToolbar.Toolbar",
      "Graphics.UI.Gtk.MenuComboToolbar.ToolButton",
      "Graphics.UI.Gtk.MenuComboToolbar.ToolItem",
      "Graphics.UI.Gtk.MenuComboToolbar.ToolItemGroup",
      "Graphics.UI.Gtk.MenuComboToolbar.ToolPalette",
      "Graphics.UI.Gtk.Misc.Accessible",
      "Graphics.UI.Gtk.Misc.Adjustment",
      "Graphics.UI.Gtk.Misc.Arrow",
      "Graphics.UI.Gtk.Misc.Calendar",
      "Graphics.UI.Gtk.Misc.DrawingArea",
      "Graphics.UI.Gtk.Misc.GLArea",
      "Graphics.UI.Gtk.Misc.EventBox",
      "Graphics.UI.Gtk.Misc.HandleBox",
      "Graphics.UI.Gtk.Misc.IMMulticontext",
      "Graphics.UI.Gtk.Misc.IMContextSimple",
      "Graphics.UI.Gtk.Misc.SizeGroup",
      "Graphics.UI.Gtk.Misc.Tooltip",
      "Graphics.UI.Gtk.Misc.Viewport",
      "Graphics.UI.Gtk.ModelView",
      "Graphics.UI.Gtk.ModelView.CellEditable",
      "Graphics.UI.Gtk.ModelView.CellLayout",
      "Graphics.UI.Gtk.ModelView.CellRenderer",
      "Graphics.UI.Gtk.ModelView.CellRendererSpinner",
      "Graphics.UI.Gtk.ModelView.CellRendererCombo",
      "Graphics.UI.Gtk.ModelView.CellRendererPixbuf",
      "Graphics.UI.Gtk.ModelView.CellRendererProgress",
      "Graphics.UI.Gtk.ModelView.CellRendererText",
      "Graphics.UI.Gtk.ModelView.CellRendererAccel",
      "Graphics.UI.Gtk.ModelView.CellRendererSpin",
      "Graphics.UI.Gtk.ModelView.CellRendererToggle",
      "Graphics.UI.Gtk.ModelView.CellView",
      "Graphics.UI.Gtk.ModelView.CustomStore",
      "Graphics.UI.Gtk.ModelView.IconView",
      "Graphics.UI.Gtk.ModelView.ListStore",
      "Graphics.UI.Gtk.ModelView.TreeDrag",
      "Graphics.UI.Gtk.ModelView.TreeModel",
      "Graphics.UI.Gtk.ModelView.TreeModelFilter",
      "Graphics.UI.Gtk.ModelView.TreeModelSort",
      "Graphics.UI.Gtk.ModelView.TreeRowReference",
      "Graphics.UI.Gtk.ModelView.TreeSelection",
      "Graphics.UI.Gtk.ModelView.TreeSortable",
      "Graphics.UI.Gtk.ModelView.TreeStore",
      "Graphics.UI.Gtk.ModelView.TreeView",
      "Graphics.UI.Gtk.ModelView.TreeViewColumn",
      "Graphics.UI.Gtk.Multiline.TextBuffer",
      "Graphics.UI.Gtk.Multiline.TextIter",
      "Graphics.UI.Gtk.Multiline.TextMark",
      "Graphics.UI.Gtk.Multiline.TextTag",
      "Graphics.UI.Gtk.Multiline.TextTagTable",
      "Graphics.UI.Gtk.Multiline.TextView",
      "Graphics.UI.Gtk.Ornaments.Frame",
      "Graphics.UI.Gtk.Ornaments.HSeparator",
      "Graphics.UI.Gtk.Ornaments.VSeparator",
      "Graphics.UI.Gtk.Printing.PaperSize",
      "Graphics.UI.Gtk.Printing.PageSetup",
      "Graphics.UI.Gtk.Printing.PrintContext",
      "Graphics.UI.Gtk.Printing.PrintOperation",
      "Graphics.UI.Gtk.Printing.PrintSettings",
      "Graphics.UI.Gtk.Recent.RecentChooserMenu",
      "Graphics.UI.Gtk.Recent.RecentChooserWidget",
      "Graphics.UI.Gtk.Recent.RecentFilter",
      "Graphics.UI.Gtk.Recent.RecentManager",
      "Graphics.UI.Gtk.Recent.RecentInfo",
      "Graphics.UI.Gtk.Recent.RecentChooser",
      "Graphics.UI.Gtk.Scrolling.HScrollbar",
      "Graphics.UI.Gtk.Scrolling.ScrolledWindow",
      "Graphics.UI.Gtk.Scrolling.VScrollbar",
      "Graphics.UI.Gtk.Selectors.ColorButton",
      "Graphics.UI.Gtk.Selectors.ColorSelection",
      "Graphics.UI.Gtk.Selectors.ColorSelectionDialog",
      "Graphics.UI.Gtk.Selectors.FileChooser",
      "Graphics.UI.Gtk.Selectors.FileChooserButton",
      "Graphics.UI.Gtk.Selectors.FileChooserDialog",
      "Graphics.UI.Gtk.Selectors.FileChooserWidget",
      "Graphics.UI.Gtk.Selectors.FileFilter",
      "Graphics.UI.Gtk.Selectors.FontButton",
      "Graphics.UI.Gtk.Selectors.FontSelection",
      "Graphics.UI.Gtk.Selectors.FontSelectionDialog",
      "Graphics.UI.Gtk.Selectors.HSV",
      "Graphics.UI.Gtk.Windows.AboutDialog",
      "Graphics.UI.Gtk.Windows.Assistant",
      "Graphics.UI.Gtk.Windows.Dialog",
      "Graphics.UI.Gtk.Windows.Invisible",
      "Graphics.UI.Gtk.Windows.MessageDialog",
      "Graphics.UI.Gtk.Windows.Window",
      "Graphics.UI.Gtk.Windows.OffscreenWindow",
      "Graphics.UI.Gtk.Windows.WindowGroup",
      "Graphics.UI.Gtk.General.Enums"
    ],
    "name": "gtk3",
    "version": "0.14.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.Fixed",
        "Data.List",
        "Prelude"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Ppr",
        "Language.Haskell.TH.PprLib",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Data.Fixed",
      "Data.IntSet",
      "Data.List",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.PprLib",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Unsafe.TrueName"
    ],
    "modules": [
      "Unsafe.TrueName"
    ],
    "name": "true-name",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Int",
        "Data.Typeable",
        "Foreign",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.Int",
      "Data.Typeable",
      "Foreign",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "Sound.File.Sndfile.Buffer",
      "Sound.File.Sndfile.Buffer.Internal",
      "Sound.File.Sndfile.Buffer.Sample",
      "Sound.File.Sndfile.Buffer.StorableVector.Examples",
      "Sound.File.Sndfile.Buffer.Vector.Examples",
      "Sound.File.Sndfile.Exception",
      "Sound.File.Sndfile.Interface"
    ],
    "modules": [
      "Sound.File.Sndfile",
      "Sound.File.Sndfile.Buffer"
    ],
    "name": "hsndfile",
    "version": "0.8.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "containers": [
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Dependency",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.Trans",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Conduit.Require",
      "Data.Foldable",
      "Data.Set",
      "Test.Hspec"
    ],
    "modules": [
      "Control.Dependency",
      "Data.Conduit.Require"
    ],
    "name": "withdependencies",
    "version": "0.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.UTF8",
      "Data.Monoid",
      "Data.String.Conversions",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Prelude"
    ],
    "modules": [
      "Data.String.Conversions",
      "Data.String.Conversions.Monomorphic"
    ],
    "name": "string-conversions",
    "version": "0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable"
      ],
      "regex-applicative": [
        "Text.Regex.Applicative",
        "Text.Regex.Applicative.Common"
      ],
      "srcloc": [
        "Data.Loc"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Exception",
      "Data.Char",
      "Data.Function",
      "Data.List",
      "Data.Loc",
      "Data.Monoid",
      "Data.Typeable",
      "Language.Lexer.Applicative",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Text.Regex.Applicative",
      "Text.Regex.Applicative.Common"
    ],
    "modules": [
      "Language.Lexer.Applicative"
    ],
    "name": "lexer-applicative",
    "version": "2.1.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.DeploymentManager",
      "Network.Google.DeploymentManager.Types",
      "Network.Google.Resource.DeploymentManager.Deployments.CancelPreview",
      "Network.Google.Resource.DeploymentManager.Deployments.Delete",
      "Network.Google.Resource.DeploymentManager.Deployments.Get",
      "Network.Google.Resource.DeploymentManager.Deployments.Insert",
      "Network.Google.Resource.DeploymentManager.Deployments.List",
      "Network.Google.Resource.DeploymentManager.Deployments.Patch",
      "Network.Google.Resource.DeploymentManager.Deployments.Stop",
      "Network.Google.Resource.DeploymentManager.Deployments.Update",
      "Network.Google.Resource.DeploymentManager.Manifests.Get",
      "Network.Google.Resource.DeploymentManager.Manifests.List",
      "Network.Google.Resource.DeploymentManager.Operations.Get",
      "Network.Google.Resource.DeploymentManager.Operations.List",
      "Network.Google.Resource.DeploymentManager.Resources.Get",
      "Network.Google.Resource.DeploymentManager.Resources.List",
      "Network.Google.Resource.DeploymentManager.Types.List"
    ],
    "name": "gogol-deploymentmanager",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Monitoring",
      "Network.Google.Monitoring.Types",
      "Network.Google.Resource.Monitoring.Projects.CollectdTimeSeries.Create",
      "Network.Google.Resource.Monitoring.Projects.Groups.Create",
      "Network.Google.Resource.Monitoring.Projects.Groups.Delete",
      "Network.Google.Resource.Monitoring.Projects.Groups.Get",
      "Network.Google.Resource.Monitoring.Projects.Groups.List",
      "Network.Google.Resource.Monitoring.Projects.Groups.Members.List",
      "Network.Google.Resource.Monitoring.Projects.Groups.Update",
      "Network.Google.Resource.Monitoring.Projects.MetricDescriptors.Create",
      "Network.Google.Resource.Monitoring.Projects.MetricDescriptors.Delete",
      "Network.Google.Resource.Monitoring.Projects.MetricDescriptors.Get",
      "Network.Google.Resource.Monitoring.Projects.MetricDescriptors.List",
      "Network.Google.Resource.Monitoring.Projects.MonitoredResourceDescriptors.Get",
      "Network.Google.Resource.Monitoring.Projects.MonitoredResourceDescriptors.List",
      "Network.Google.Resource.Monitoring.Projects.TimeSeries.Create",
      "Network.Google.Resource.Monitoring.Projects.TimeSeries.List"
    ],
    "name": "gogol-monitoring",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.List",
        "System.IO",
        "Text.Printf"
      ],
      "biocore": [
        "Bio.Core.Sequence"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ]
    },
    "imports": [
      "Bio.Core.Sequence",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List",
      "System.IO",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Bio.Sequence.Fasta"
    ],
    "name": "biofasta",
    "version": "0.0.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Word",
        "Debug.Trace",
        "GHC.Exts",
        "System.Environment"
      ],
      "haskell-src": [
        "Language.Haskell.ParseMonad",
        "Language.Haskell.Syntax"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "syb": [
        "Data.Generics"
      ]
    },
    "imports": [
      "Array",
      "Char",
      "Control.Applicative",
      "Control.Monad",
      "Data.Array",
      "Data.Array.Base",
      "Data.Bits",
      "Data.Char",
      "Data.Generics",
      "Data.List",
      "Data.Word",
      "Debug.Trace",
      "GHC.Exts",
      "GlaExts",
      "Language.Fortran",
      "Language.Fortran.Lexer",
      "Language.Fortran.PreProcess",
      "Language.Haskell.ParseMonad",
      "Language.Haskell.Syntax",
      "System.Environment",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "Language.Fortran.Parser",
      "Language.Fortran.Lexer",
      "Language.Fortran.Pretty",
      "Language.Fortran.PreProcess",
      "Language.Fortran"
    ],
    "name": "language-fortran",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "accelerate": [
        "Data.Array.Accelerate",
        "Data.Array.Accelerate.Array.Sugar",
        "Data.Array.Accelerate.Data.Complex",
        "Data.Array.Accelerate.Smart",
        "Data.Array.Accelerate.Tuple"
      ],
      "base": [
        "Data.Foldable"
      ],
      "lens": [],
      "linear": [
        "Linear"
      ]
    },
    "imports": [
      "Data.Array.Accelerate",
      "Data.Array.Accelerate.Array.Sugar",
      "Data.Array.Accelerate.Data.Complex",
      "Data.Array.Accelerate.Smart",
      "Data.Array.Accelerate.Tuple",
      "Data.Foldable",
      "Linear"
    ],
    "modules": [
      "Linear.Accelerate"
    ],
    "name": "linear-accelerate",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Coerce",
        "Data.Foldable",
        "Data.Functor",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Traversable",
        "Data.Tuple",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "base-orphans": [
        "Data.Orphans"
      ],
      "bifunctors": [
        "Data.Bifunctor.Biff",
        "Data.Bifunctor.Clown",
        "Data.Bifunctor.Joker",
        "Data.Bifunctor.Product",
        "Data.Bifunctor.Sum",
        "Data.Bifunctor.Tannen"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "distributive": [
        "Data.Distributive"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Monad",
      "Control.Monad.Fix",
      "Data.Bifunctor.Biff",
      "Data.Bifunctor.Clown",
      "Data.Bifunctor.Joker",
      "Data.Bifunctor.Product",
      "Data.Bifunctor.Sum",
      "Data.Bifunctor.Tannen",
      "Data.Coerce",
      "Data.Distributive",
      "Data.Foldable",
      "Data.Functor",
      "Data.Functor.Compose",
      "Data.Functor.Contravariant",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Profunctor",
      "Data.Profunctor.Adjunction",
      "Data.Profunctor.Choice",
      "Data.Profunctor.Closed",
      "Data.Profunctor.Composition",
      "Data.Profunctor.Mapping",
      "Data.Profunctor.Monad",
      "Data.Profunctor.Rep",
      "Data.Profunctor.Sieve",
      "Data.Profunctor.Strong",
      "Data.Profunctor.Traversing",
      "Data.Profunctor.Types",
      "Data.Profunctor.Unsafe",
      "Data.Proxy",
      "Data.Tagged",
      "Data.Traversable",
      "Data.Tuple",
      "Prelude",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Profunctor",
      "Data.Profunctor.Adjunction",
      "Data.Profunctor.Cayley",
      "Data.Profunctor.Choice",
      "Data.Profunctor.Closed",
      "Data.Profunctor.Composition",
      "Data.Profunctor.Mapping",
      "Data.Profunctor.Monad",
      "Data.Profunctor.Ran",
      "Data.Profunctor.Rep",
      "Data.Profunctor.Sieve",
      "Data.Profunctor.Strong",
      "Data.Profunctor.Traversing",
      "Data.Profunctor.Types",
      "Data.Profunctor.Unsafe"
    ],
    "name": "profunctors",
    "version": "5.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Semigroup",
        "Foreign"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "BasePrelude",
      "ByteString.TreeBuilder",
      "ByteString.TreeBuilder.Poker",
      "ByteString.TreeBuilder.Prelude",
      "ByteString.TreeBuilder.Tree",
      "Control.DeepSeq",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.Semigroup",
      "Data.Text",
      "Data.Text.Lazy",
      "Foreign",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "ByteString.TreeBuilder"
    ],
    "name": "bytestring-tree-builder",
    "version": "0.2.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Data.Char",
        "Data.Functor.Identity"
      ],
      "foldl": [
        "Control.Foldl"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Core",
        "Pipes.Internal",
        "Pipes.Prelude"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Concurrent",
      "Control.Foldl",
      "Data.Char",
      "Data.Functor.Identity",
      "Pipes",
      "Pipes.Core",
      "Pipes.Extras",
      "Pipes.Internal",
      "Pipes.Prelude",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Pipes.Extras"
    ],
    "name": "pipes-extras",
    "version": "1.0.5"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Functor.Identity",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Version",
        "Prelude",
        "System.Environment",
        "System.Exit"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cmdargs": [
        "System.Console.CmdArgs"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "mime-types": [
        "Network.Mime"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "process": [
        "System.Process"
      ],
      "setenv": [
        "System.SetEnv"
      ],
      "simple-templates": [
        "Web.Simple.Templates.Language"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "transformers-base": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.State",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Functor.Identity",
      "Data.HashMap.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Vector",
      "Data.Version",
      "Network.HTTP.Types",
      "Network.Mime",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Paths",
      "Prelude",
      "System.Console.CmdArgs",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Posix.Env",
      "System.Process",
      "System.SetEnv",
      "Test.Hspec",
      "Test.Hspec.Contrib.HUnit",
      "Web.Simple",
      "Web.Simple.Controller",
      "Web.Simple.Controller.Exception",
      "Web.Simple.Controller.Trans",
      "Web.Simple.Responses",
      "Web.Simple.Static",
      "Web.Simple.Templates.Language"
    ],
    "modules": [
      "Web.Simple",
      "Web.Simple.Auth",
      "Web.Simple.Controller",
      "Web.Simple.Controller.Exception",
      "Web.Simple.Controller.Trans",
      "Web.Simple.Responses",
      "Web.Simple.Static",
      "Web.Simple.Templates",
      "Web.Frank",
      "Web.REST"
    ],
    "name": "simple",
    "version": "0.11.1"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "aeson": [
        "Data.Aeson"
      ],
      "aeson-pretty": [],
      "base": [
        "Control.Monad"
      ],
      "bytestring": [],
      "directory": [],
      "filepath": [],
      "hspec": [],
      "quickcheck-arbitrary-adt": [],
      "random": [],
      "transformers": []
    },
    "imports": [
      "Control.Monad",
      "Data.Aeson",
      "Test.Types",
      "Test.Types.AlteredSelector",
      "Test.Types.BrokenSerialization",
      "Test.Types.MismatchedToAndFromSerialization",
      "Test.Types.NewSelector"
    ],
    "modules": [
      "Test.Aeson.GenericSpecs",
      "Test.Aeson.Internal.ADT.GoldenSpecs",
      "Test.Aeson.Internal.ADT.RoundtripSpecs",
      "Test.Aeson.Internal.GoldenSpecs",
      "Test.Aeson.Internal.RoundtripSpecs",
      "Test.Aeson.Internal.RandomSamples",
      "Test.Aeson.Internal.Utils"
    ],
    "name": "hspec-golden-aeson",
    "version": "0.2.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Control.Monad.ST.Unsafe",
        "Data.Bits",
        "Data.List",
        "Data.Maybe",
        "Data.Ratio",
        "Data.STRef",
        "Foreign",
        "Foreign.C",
        "Foreign.ForeignPtr",
        "Foreign.Marshal",
        "Foreign.Marshal.Utils",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.Float",
        "Prelude",
        "System.IO.Unsafe"
      ]
    },
    "imports": [
      "Control.Monad.ST",
      "Control.Monad.ST.Unsafe",
      "Data.Bits",
      "Data.List",
      "Data.Maybe",
      "Data.Number.MPFR",
      "Data.Number.MPFR.Arithmetic",
      "Data.Number.MPFR.Assignment",
      "Data.Number.MPFR.Comparison",
      "Data.Number.MPFR.Conversion",
      "Data.Number.MPFR.FFIhelper",
      "Data.Number.MPFR.Instances.Up",
      "Data.Number.MPFR.Integer",
      "Data.Number.MPFR.Internal",
      "Data.Number.MPFR.Misc",
      "Data.Number.MPFR.Mutable",
      "Data.Number.MPFR.Mutable.Arithmetic",
      "Data.Number.MPFR.Mutable.Integer",
      "Data.Number.MPFR.Mutable.Internal",
      "Data.Number.MPFR.Mutable.Misc",
      "Data.Number.MPFR.Mutable.Special",
      "Data.Number.MPFR.Special",
      "Data.Ratio",
      "Data.STRef",
      "Foreign",
      "Foreign.C",
      "Foreign.ForeignPtr",
      "Foreign.Marshal",
      "Foreign.Marshal.Utils",
      "Foreign.Storable",
      "GHC.Exts",
      "GHC.Float",
      "GHC.Integer.Internals",
      "GHC.Integer.Simple.Internals",
      "Prelude",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.Number.MPFR.Instances.Near",
      "Data.Number.MPFR.Instances.Up",
      "Data.Number.MPFR.Instances.Down",
      "Data.Number.MPFR.Instances.Zero",
      "Data.Number.MPFR",
      "Data.Number.MPFR.Mutable"
    ],
    "name": "hmpfr",
    "version": "0.4.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe"
      ],
      "containers": [],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Maybe",
      "Numeric.Search.Bounded",
      "Numeric.Search.Integer",
      "Numeric.Search.Range",
      "System.Directory",
      "System.FilePath",
      "Test.DocTest",
      "Test.Hspec",
      "Test.Hspec.QuickCheck"
    ],
    "modules": [
      "Numeric.Search",
      "Numeric.Search.Bounded",
      "Numeric.Search.Integer",
      "Numeric.Search.Range"
    ],
    "name": "binary-search",
    "version": "1.0.0.3"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Read"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.IO",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "System.Process.Vado",
      "Test.QuickCheck",
      "Test.QuickCheck.All",
      "Text.Read"
    ],
    "modules": [
      "System.Process.Vado"
    ],
    "name": "vado",
    "version": "0.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "GHC.Conc",
        "System.Timeout"
      ],
      "lifted-base": [
        "Control.Concurrent.Lifted",
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Lifted",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Immortal",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.State",
      "Data.IORef",
      "GHC.Conc",
      "System.Timeout",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Control.Immortal"
    ],
    "name": "immortal",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "asn1-encoding": [],
      "asn1-parse": [],
      "asn1-types": [],
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cryptonite": [
        "Crypto.PubKey.DSA",
        "Crypto.PubKey.RSA",
        "Crypto.PubKey.RSA.PKCS15"
      ],
      "pem": [],
      "x509": []
    },
    "imports": [
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.PKCS15",
      "Data.ByteString",
      "Data.ByteString.Char8"
    ],
    "modules": [
      "Data.X509.PKCS10"
    ],
    "name": "pkcs10",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Maybe",
        "Prelude"
      ],
      "clock": [
        "System.Clock"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Maybe",
      "Data.Cache",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.Maybe",
      "Prelude",
      "System.Clock",
      "Test.Hspec"
    ],
    "modules": [
      "Data.Cache"
    ],
    "name": "cache",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Data.Traversable",
        "Prelude",
        "Text.Printf"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Data.Char",
      "Data.Foldable",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Maybe",
      "Data.String",
      "Data.Traversable",
      "Prelude",
      "StateQueue",
      "Test.SmallCheck",
      "Test.SmallCheck.Series",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.SmallCheck",
      "Text.Printf",
      "Text.Regex.Applicative",
      "Text.Regex.Applicative.Compile",
      "Text.Regex.Applicative.Interface",
      "Text.Regex.Applicative.Object",
      "Text.Regex.Applicative.Reference",
      "Text.Regex.Applicative.StateQueue",
      "Text.Regex.Applicative.Types"
    ],
    "modules": [
      "Text.Regex.Applicative",
      "Text.Regex.Applicative.Object",
      "Text.Regex.Applicative.Common",
      "Text.Regex.Applicative.Reference",
      "Text.Regex.Applicative.StateQueue"
    ],
    "name": "regex-applicative",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Type.Bool",
        "GHC.Exts",
        "GHC.TypeLits",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "hspec": [
        "Test.Hspec",
        "Test.Hspec.QuickCheck"
      ],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "insert-ordered-containers": [
        "Data.HashMap.Strict.InsOrd"
      ],
      "lens": [
        "Control.Lens"
      ],
      "servant": [
        "Servant.API"
      ],
      "swagger2": [
        "Data.Swagger",
        "Data.Swagger.Declare"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": []
    },
    "imports": [
      "Build",
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy.Char8",
      "Data.HashMap.Strict.InsOrd",
      "Data.List",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Swagger",
      "Data.Swagger.Declare",
      "Data.Text",
      "Data.Typeable",
      "Data.Type.Bool",
      "GHC.Exts",
      "GHC.TypeLits",
      "Network.HTTP.Media",
      "Network.Wai.Handler.Warp",
      "Prelude",
      "Prelude.Compat",
      "Servant",
      "Servant.API",
      "Servant.Swagger.Internal.Test",
      "Servant.Swagger.Internal.TypeLevel",
      "Servant.Swagger.Internal.TypeLevel.API",
      "Servant.Swagger.Internal.TypeLevel.Every",
      "Servant.Swagger.Internal.TypeLevel.TMap",
      "System.Directory",
      "System.FilePath",
      "Test.DocTest",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Todo"
    ],
    "modules": [
      "Servant.Swagger",
      "Servant.Swagger.Test",
      "Servant.Swagger.TypeLevel",
      "Servant.Swagger.Internal",
      "Servant.Swagger.Internal.Test",
      "Servant.Swagger.Internal.TypeLevel",
      "Servant.Swagger.Internal.TypeLevel.API",
      "Servant.Swagger.Internal.TypeLevel.Every",
      "Servant.Swagger.Internal.TypeLevel.TMap"
    ],
    "name": "servant-swagger",
    "version": "1.1.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Exception",
        "Data.Foldable",
        "GHC.IO.Exception",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "data-default-class": [],
      "filepath": [],
      "mtl": [],
      "network": [],
      "old-locale": [],
      "text": [
        "Data.Text.Encoding"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString.Char8",
      "Data.ByteString.UTF8",
      "Data.Foldable",
      "Data.Map",
      "Data.Text.Encoding",
      "GHC.IO.Exception",
      "Network.MPD.Applicative.ClientToClient",
      "Network.MPD.Applicative.Connection",
      "Network.MPD.Applicative.CurrentPlaylist",
      "Network.MPD.Applicative.Database",
      "Network.MPD.Applicative.Internal",
      "Network.MPD.Applicative.Output",
      "Network.MPD.Applicative.PlaybackControl",
      "Network.MPD.Applicative.PlaybackOptions",
      "Network.MPD.Applicative.Reflection",
      "Network.MPD.Applicative.Status",
      "Network.MPD.Applicative.Stickers",
      "Network.MPD.Applicative.StoredPlaylists",
      "Network.MPD.Commands.Arg",
      "Network.MPD.Core",
      "Prelude"
    ],
    "modules": [
      "Network.MPD",
      "Network.MPD.Applicative",
      "Network.MPD.Applicative.ClientToClient",
      "Network.MPD.Applicative.Connection",
      "Network.MPD.Applicative.CurrentPlaylist",
      "Network.MPD.Applicative.Database",
      "Network.MPD.Applicative.Output",
      "Network.MPD.Applicative.PlaybackControl",
      "Network.MPD.Applicative.PlaybackOptions",
      "Network.MPD.Applicative.Reflection",
      "Network.MPD.Applicative.Status",
      "Network.MPD.Applicative.Stickers",
      "Network.MPD.Applicative.StoredPlaylists",
      "Network.MPD.Commands.Extensions",
      "Network.MPD.Core"
    ],
    "name": "libmpd",
    "version": "0.9.0.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mongoDB": [
        "Database.MongoDB",
        "Database.MongoDB.Query"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Trans.Control",
      "Database.MongoDB",
      "Database.MongoDB.Query",
      "Data.Text",
      "Pipes",
      "Pipes.MongoDB",
      "Pipes.Prelude"
    ],
    "modules": [
      "Pipes.MongoDB"
    ],
    "name": "pipes-mongodb",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Exception",
        "Data.List",
        "Data.Typeable",
        "Data.Version",
        "GHC.Stack"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "text": [
        "Data.Text"
      ],
      "uuid": [
        "Data.UUID"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Char8",
      "Data.CaseInsensitive",
      "Data.List",
      "Data.Map",
      "Data.Text",
      "Data.Typeable",
      "Data.UUID",
      "Data.Version",
      "GHC.Stack",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Paths",
      "Ratel",
      "RatelSpec",
      "Test.Tasty",
      "Test.Tasty.Hspec"
    ],
    "modules": [
      "Ratel"
    ],
    "name": "ratel",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Char",
        "Data.Data",
        "Data.Dynamic",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Numeric"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TVar"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TVar",
      "Control.Exception",
      "Control.Monad.Trans",
      "Data.Char",
      "Data.Data",
      "Data.Dynamic",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Numeric"
    ],
    "modules": [
      "Web.Plugins.Core"
    ],
    "name": "web-plugins",
    "version": "0.2.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Int",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Word"
      ],
      "containers": [
        "Data.Map"
      ],
      "universe-base": [
        "Data.Universe.Class",
        "Data.Universe.Helpers"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Int",
      "Data.Map",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Universe.Class",
      "Data.Universe.Helpers",
      "Data.Word"
    ],
    "modules": [
      "Data.Universe.Instances.Base"
    ],
    "name": "universe-instances-base",
    "version": "1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AndroidEnterprise",
      "Network.Google.AndroidEnterprise.Types",
      "Network.Google.Resource.AndroidEnterprise.Collections.Delete",
      "Network.Google.Resource.AndroidEnterprise.Collections.Get",
      "Network.Google.Resource.AndroidEnterprise.Collections.Insert",
      "Network.Google.Resource.AndroidEnterprise.Collections.List",
      "Network.Google.Resource.AndroidEnterprise.Collections.Patch",
      "Network.Google.Resource.AndroidEnterprise.Collections.Update",
      "Network.Google.Resource.AndroidEnterprise.Collectionviewers.Delete",
      "Network.Google.Resource.AndroidEnterprise.Collectionviewers.Get",
      "Network.Google.Resource.AndroidEnterprise.Collectionviewers.List",
      "Network.Google.Resource.AndroidEnterprise.Collectionviewers.Patch",
      "Network.Google.Resource.AndroidEnterprise.Collectionviewers.Update",
      "Network.Google.Resource.AndroidEnterprise.Devices.Get",
      "Network.Google.Resource.AndroidEnterprise.Devices.GetState",
      "Network.Google.Resource.AndroidEnterprise.Devices.List",
      "Network.Google.Resource.AndroidEnterprise.Devices.SetState",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.Delete",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.Enroll",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.Get",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.GetStoreLayout",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.Insert",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.List",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.SendTestPushNotification",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.SetAccount",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.SetStoreLayout",
      "Network.Google.Resource.AndroidEnterprise.Enterprises.Unenroll",
      "Network.Google.Resource.AndroidEnterprise.Entitlements.Delete",
      "Network.Google.Resource.AndroidEnterprise.Entitlements.Get",
      "Network.Google.Resource.AndroidEnterprise.Entitlements.List",
      "Network.Google.Resource.AndroidEnterprise.Entitlements.Patch",
      "Network.Google.Resource.AndroidEnterprise.Entitlements.Update",
      "Network.Google.Resource.AndroidEnterprise.GrouplicenseUsers.List",
      "Network.Google.Resource.AndroidEnterprise.Grouplicenses.Get",
      "Network.Google.Resource.AndroidEnterprise.Grouplicenses.List",
      "Network.Google.Resource.AndroidEnterprise.Installs.Delete",
      "Network.Google.Resource.AndroidEnterprise.Installs.Get",
      "Network.Google.Resource.AndroidEnterprise.Installs.List",
      "Network.Google.Resource.AndroidEnterprise.Installs.Patch",
      "Network.Google.Resource.AndroidEnterprise.Installs.Update",
      "Network.Google.Resource.AndroidEnterprise.Permissions.Get",
      "Network.Google.Resource.AndroidEnterprise.Products.Approve",
      "Network.Google.Resource.AndroidEnterprise.Products.GenerateApprovalURL",
      "Network.Google.Resource.AndroidEnterprise.Products.Get",
      "Network.Google.Resource.AndroidEnterprise.Products.GetAppRestrictionsSchema",
      "Network.Google.Resource.AndroidEnterprise.Products.GetPermissions",
      "Network.Google.Resource.AndroidEnterprise.Products.List",
      "Network.Google.Resource.AndroidEnterprise.Products.UpdatePermissions",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutclusters.Delete",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutclusters.Get",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutclusters.Insert",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutclusters.List",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutclusters.Patch",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutclusters.Update",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutpages.Delete",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutpages.Get",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutpages.Insert",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutpages.List",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutpages.Patch",
      "Network.Google.Resource.AndroidEnterprise.Storelayoutpages.Update",
      "Network.Google.Resource.AndroidEnterprise.Users.GenerateToken",
      "Network.Google.Resource.AndroidEnterprise.Users.Get",
      "Network.Google.Resource.AndroidEnterprise.Users.GetAvailableProductSet",
      "Network.Google.Resource.AndroidEnterprise.Users.List",
      "Network.Google.Resource.AndroidEnterprise.Users.RevokeToken",
      "Network.Google.Resource.AndroidEnterprise.Users.SetAvailableProductSet"
    ],
    "name": "gogol-android-enterprise",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.IORef",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Exception.Synchronous",
      "Data.Cache.LRU",
      "Data.Cache.LRU.Internal",
      "Data.Cache.LRU.IO.Internal",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Contravariant",
      "Data.IORef",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Traversable",
      "Data.Typeable",
      "Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "Data.Cache.LRU",
      "Data.Cache.LRU.Internal",
      "Data.Cache.LRU.IO",
      "Data.Cache.LRU.IO.Internal"
    ],
    "name": "lrucache",
    "version": "1.2.0.0"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [],
      "email-validate": [
        "Text.Email.Validate"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [],
      "lens": [],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "old-locale": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy"
      ],
      "time": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Reader",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Network.API.Mandrill.Inbound",
      "Network.API.Mandrill.Messages",
      "Network.API.Mandrill.Types",
      "Network.API.Mandrill.Users",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Text.Blaze.Html",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Email.Validate"
    ],
    "modules": [
      "Network.API.Mandrill",
      "Network.API.Mandrill.Settings",
      "Network.API.Mandrill.Types",
      "Network.API.Mandrill.Trans",
      "Network.API.Mandrill.Users",
      "Network.API.Mandrill.Users.Types",
      "Network.API.Mandrill.Messages",
      "Network.API.Mandrill.Messages.Types",
      "Network.API.Mandrill.Inbound",
      "Network.API.Mandrill.Senders"
    ],
    "name": "mandrill",
    "version": "0.5.2.3"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad.IO.Class",
        "Data.Typeable",
        "Debug.Trace"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "exceptions": [],
      "mtl": [],
      "network": [
        "Network",
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "network-attoparsec": [
        "Network.Attoparsec"
      ],
      "network-simple": [
        "Network.Simple.TCP"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [],
      "uuid": [
        "Data.UUID",
        "Data.UUID.Util",
        "Data.UUID.V4"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad.IO.Class",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Typeable",
      "Data.UUID",
      "Data.UUID.Util",
      "Data.UUID.V4",
      "Debug.Trace",
      "Network",
      "Network.Anonymous.I2P.Error",
      "Network.Anonymous.I2P.Internal.Debug",
      "Network.Anonymous.I2P.Protocol",
      "Network.Anonymous.I2P.Protocol.Parser",
      "Network.Anonymous.I2P.Protocol.Parser.Ast",
      "Network.Anonymous.I2P.Types.Destination",
      "Network.Anonymous.I2P.Types.Sam",
      "Network.Anonymous.I2P.Types.Session",
      "Network.Anonymous.I2P.Types.Socket",
      "Network.Anonymous.I2P.Util",
      "Network.Attoparsec",
      "Network.Simple.TCP",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Network.Anonymous.I2P",
      "Network.Anonymous.I2P.Error",
      "Network.Anonymous.I2P.Types.Destination",
      "Network.Anonymous.I2P.Types.Sam",
      "Network.Anonymous.I2P.Types.Session",
      "Network.Anonymous.I2P.Types.Socket",
      "Network.Anonymous.I2P.Protocol",
      "Network.Anonymous.I2P.Protocol.Parser",
      "Network.Anonymous.I2P.Protocol.Parser.Ast",
      "Network.Anonymous.I2P.Internal.Debug"
    ],
    "name": "network-anonymous-i2p",
    "version": "0.10.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Int",
        "Data.Word",
        "Foreign.C.Error",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Int",
      "Data.Word",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "System.Directory",
      "System.IO",
      "System.IO.MMap",
      "System.IO.Unsafe",
      "System.Mem",
      "System.Win32.File",
      "Test.HUnit"
    ],
    "modules": [
      "System.IO.MMap"
    ],
    "name": "mmap",
    "version": "0.5.9"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "GHC.Generics",
        "GHC.TypeLits"
      ],
      "bifunctors": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "lens": [
        "Control.Lens"
      ],
      "servant-docs": [
        "Servant.Docs"
      ],
      "swagger2": [
        "Data.Swagger",
        "Data.Swagger.Internal.Schema"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Lens",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Unit",
      "Data.Aeson.WithField",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Scientific",
      "Data.Swagger",
      "Data.Swagger.Internal.Schema",
      "Data.Text",
      "Data.Text.Arbitrary",
      "Data.Typeable",
      "Data.Vector",
      "GHC.Generics",
      "GHC.TypeLits",
      "Servant.Docs",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Aeson.Unit",
      "Data.Aeson.WithField"
    ],
    "name": "aeson-injector",
    "version": "1.0.6.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Put"
      ],
      "cipher-aes128": [
        "Crypto.Cipher.AES128"
      ],
      "crypto-api": [
        "Crypto.Classes",
        "Crypto.HMAC",
        "Crypto.Random",
        "Crypto.Types",
        "Crypto.Util"
      ],
      "cryptohash-cryptoapi": [
        "Crypto.Hash.CryptoAPI"
      ],
      "entropy": [
        "System.Entropy"
      ],
      "mtl": [
        "Control.Monad.Error"
      ],
      "parallel": [
        "Control.Parallel"
      ],
      "prettyclass": [
        "Text.PrettyPrint.HughesPJClass"
      ],
      "tagged": [
        "Data.Tagged"
      ]
    },
    "imports": [
      "Control.Monad.Error",
      "Control.Parallel",
      "Crypto.Cipher.AES128",
      "Crypto.Classes",
      "Crypto.Hash.CryptoAPI",
      "Crypto.HMAC",
      "Crypto.Random",
      "Crypto.Random.DRBG",
      "Crypto.Random.DRBG.CTR",
      "Crypto.Random.DRBG.Hash",
      "Crypto.Random.DRBG.HashDF",
      "Crypto.Random.DRBG.HMAC",
      "Crypto.Random.DRBG.Types",
      "Crypto.Types",
      "Crypto.Util",
      "Data.Binary",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.List",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Serialize",
      "Data.Serialize.Put",
      "Data.Tagged",
      "Data.Word",
      "Paths",
      "System.Entropy",
      "Test.Crypto",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit.Base",
      "Test.ParseNistKATs",
      "Text.PrettyPrint.HughesPJClass"
    ],
    "modules": [
      "Crypto.Random.DRBG.Hash",
      "Crypto.Random.DRBG.HMAC",
      "Crypto.Random.DRBG.CTR",
      "Crypto.Random.DRBG",
      "Crypto.Random.DRBG.Types"
    ],
    "name": "DRBG",
    "version": "0.5.5"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.SDB",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.SDB",
      "Test.AWS.SDB.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.SDB",
      "Network.AWS.SDB.BatchDeleteAttributes",
      "Network.AWS.SDB.BatchPutAttributes",
      "Network.AWS.SDB.CreateDomain",
      "Network.AWS.SDB.DeleteAttributes",
      "Network.AWS.SDB.DeleteDomain",
      "Network.AWS.SDB.DomainMetadata",
      "Network.AWS.SDB.GetAttributes",
      "Network.AWS.SDB.ListDomains",
      "Network.AWS.SDB.PutAttributes",
      "Network.AWS.SDB.Select",
      "Network.AWS.SDB.Types",
      "Network.AWS.SDB.Waiters"
    ],
    "name": "amazonka-sdb",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST.Lazy",
        "Control.Monad.ST.Lazy.Safe",
        "Control.Monad.ST.Safe",
        "Control.Monad.ST.Strict",
        "Data.Functor.Identity",
        "Data.Monoid"
      ],
      "stm": [
        "Control.Monad.STM"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.ST.Lazy",
      "Control.Monad.ST.Lazy.Safe",
      "Control.Monad.STM",
      "Control.Monad.ST.Safe",
      "Control.Monad.ST.Strict",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Functor.Identity",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Monad.Base"
    ],
    "name": "transformers-base",
    "version": "0.4.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Applicative.Interleaved"
    ],
    "name": "uu-interleaved",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "aeson": [],
      "base": [
        "Data.String"
      ],
      "bytestring": [],
      "http-types": [],
      "servant": [],
      "servant-mock": [],
      "servant-server": [],
      "transformers": [],
      "wai": [],
      "warp": []
    },
    "imports": [
      "Data.ByteString.Conversion.To",
      "Data.String"
    ],
    "modules": [
      "Servant.Mock"
    ],
    "name": "servant-mock",
    "version": "0.8.1.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Int",
        "Data.Ratio",
        "Data.Word",
        "GHC.Exts",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.IO"
      ],
      "filepath": [],
      "ghc-prim": [],
      "haskell-lexer": [
        "Language.Haskell.Lexer"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "pretty-show": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Array",
      "Data.Int",
      "Data.Ratio",
      "Data.Word",
      "GHC.Exts",
      "GHC.Generics",
      "Language.Haskell.Lexer",
      "Paths",
      "Prelude",
      "System.Environment",
      "System.IO",
      "Text.PrettyPrint",
      "Text.Show.Html",
      "Text.Show.Parser",
      "Text.Show.Pretty",
      "Text.Show.PrettyVal",
      "Text.Show.Value"
    ],
    "modules": [
      "Text.Show.Pretty"
    ],
    "name": "pretty-show",
    "version": "1.6.12"
  },
  {
    "dependencies": {
      "MonadRandom": [
        "Control.Monad.Random"
      ],
      "base": [
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "System.IO"
      ],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "data-ordlist": [
        "Data.List.Ordered"
      ],
      "diversity": [],
      "fasta": [
        "Data.Fasta.String"
      ],
      "math-functions": [
        "Numeric.SpecFunctions"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "parsec": [],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "random-shuffle": [
        "System.Random.Shuffle"
      ],
      "scientific": [],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Random",
      "Data.Fasta.String",
      "Data.List",
      "Data.List.Ordered",
      "Data.List.Split",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Set",
      "Math.Diversity.Diversity",
      "Math.Diversity.GenerateDiversity",
      "Math.Diversity.Print",
      "Math.Diversity.RandomSampling",
      "Math.Diversity.Statistics",
      "Math.Diversity.Types",
      "Numeric.SpecFunctions",
      "Options.Applicative",
      "Pipes",
      "Pipes.Prelude",
      "System.IO",
      "System.Random.Shuffle"
    ],
    "modules": [
      "Math.Diversity.Types",
      "Math.Diversity.Diversity",
      "Math.Diversity.GenerateDiversity",
      "Math.Diversity.Print",
      "Math.Diversity.Statistics",
      "Math.Diversity.RandomSampling"
    ],
    "name": "diversity",
    "version": "0.8.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Fitness",
      "Network.Google.Fitness.Types",
      "Network.Google.Resource.Fitness.Users.DataSet.Aggregate",
      "Network.Google.Resource.Fitness.Users.DataSources.Create",
      "Network.Google.Resource.Fitness.Users.DataSources.DataSets.Delete",
      "Network.Google.Resource.Fitness.Users.DataSources.DataSets.Get",
      "Network.Google.Resource.Fitness.Users.DataSources.DataSets.Patch",
      "Network.Google.Resource.Fitness.Users.DataSources.Delete",
      "Network.Google.Resource.Fitness.Users.DataSources.Get",
      "Network.Google.Resource.Fitness.Users.DataSources.List",
      "Network.Google.Resource.Fitness.Users.DataSources.Patch",
      "Network.Google.Resource.Fitness.Users.DataSources.Update",
      "Network.Google.Resource.Fitness.Users.Sessions.Delete",
      "Network.Google.Resource.Fitness.Users.Sessions.List",
      "Network.Google.Resource.Fitness.Users.Sessions.Update"
    ],
    "name": "gogol-fitness",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Int",
        "Data.IORef",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.ST",
        "GHC.Stats",
        "Prelude"
      ],
      "containers": [
        "Data.IntMap.Strict"
      ],
      "ghc-prim": [],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Atomic",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IntMap.Strict",
      "Data.IORef",
      "Data.Text",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "GHC.ST",
      "GHC.Stats",
      "Prelude",
      "System.Metrics.Counter",
      "System.Metrics.Distribution",
      "System.Metrics.Gauge",
      "System.Metrics.Label"
    ],
    "modules": [
      "System.Metrics",
      "System.Metrics.Counter",
      "System.Metrics.Distribution",
      "System.Metrics.Distribution.Internal",
      "System.Metrics.Gauge",
      "System.Metrics.Label"
    ],
    "name": "ekg-core",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.MemoCombinators",
      "Data.RunMemo",
      "Data.Time.Clock",
      "System.Exit",
      "Text.Printf"
    ],
    "modules": [
      "Data.RunMemo"
    ],
    "name": "runmemo",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.SES",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.SES",
      "Test.AWS.SES.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.SES",
      "Network.AWS.SES.CloneReceiptRuleSet",
      "Network.AWS.SES.CreateReceiptFilter",
      "Network.AWS.SES.CreateReceiptRule",
      "Network.AWS.SES.CreateReceiptRuleSet",
      "Network.AWS.SES.DeleteIdentity",
      "Network.AWS.SES.DeleteIdentityPolicy",
      "Network.AWS.SES.DeleteReceiptFilter",
      "Network.AWS.SES.DeleteReceiptRule",
      "Network.AWS.SES.DeleteReceiptRuleSet",
      "Network.AWS.SES.DeleteVerifiedEmailAddress",
      "Network.AWS.SES.DescribeActiveReceiptRuleSet",
      "Network.AWS.SES.DescribeReceiptRule",
      "Network.AWS.SES.DescribeReceiptRuleSet",
      "Network.AWS.SES.GetIdentityDkimAttributes",
      "Network.AWS.SES.GetIdentityMailFromDomainAttributes",
      "Network.AWS.SES.GetIdentityNotificationAttributes",
      "Network.AWS.SES.GetIdentityPolicies",
      "Network.AWS.SES.GetIdentityVerificationAttributes",
      "Network.AWS.SES.GetSendQuota",
      "Network.AWS.SES.GetSendStatistics",
      "Network.AWS.SES.ListIdentities",
      "Network.AWS.SES.ListIdentityPolicies",
      "Network.AWS.SES.ListReceiptFilters",
      "Network.AWS.SES.ListReceiptRuleSets",
      "Network.AWS.SES.ListVerifiedEmailAddresses",
      "Network.AWS.SES.PutIdentityPolicy",
      "Network.AWS.SES.ReorderReceiptRuleSet",
      "Network.AWS.SES.SendBounce",
      "Network.AWS.SES.SendEmail",
      "Network.AWS.SES.SendRawEmail",
      "Network.AWS.SES.SetActiveReceiptRuleSet",
      "Network.AWS.SES.SetIdentityDkimEnabled",
      "Network.AWS.SES.SetIdentityFeedbackForwardingEnabled",
      "Network.AWS.SES.SetIdentityMailFromDomain",
      "Network.AWS.SES.SetIdentityNotificationTopic",
      "Network.AWS.SES.SetReceiptRulePosition",
      "Network.AWS.SES.Types",
      "Network.AWS.SES.UpdateReceiptRule",
      "Network.AWS.SES.VerifyDomainDkim",
      "Network.AWS.SES.VerifyDomainIdentity",
      "Network.AWS.SES.VerifyEmailAddress",
      "Network.AWS.SES.VerifyEmailIdentity",
      "Network.AWS.SES.Waiters"
    ],
    "name": "amazonka-ses",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Foldable",
        "Data.Monoid",
        "Data.STRef",
        "Data.Traversable",
        "Data.Word",
        "Prelude"
      ],
      "logict": [
        "Control.Monad.Logic"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Lazy",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.Logic",
      "Control.Monad.MaybeK",
      "Control.Monad.Reader",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.UnificationExtras",
      "Control.Monad.Trans",
      "Control.Unification",
      "Control.Unification.IntVar",
      "Control.Unification.Types",
      "Data.Foldable",
      "Data.Functor.Fixedpoint",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Monoid",
      "Data.STRef",
      "Data.Traversable",
      "Data.Word",
      "Prelude"
    ],
    "modules": [
      "Data.Functor.Fixedpoint",
      "Control.Monad.State.UnificationExtras",
      "Control.Monad.MaybeK",
      "Control.Monad.EitherK",
      "Control.Unification",
      "Control.Unification.Types",
      "Control.Unification.STVar",
      "Control.Unification.IntVar",
      "Control.Unification.Ranked",
      "Control.Unification.Ranked.STVar",
      "Control.Unification.Ranked.IntVar"
    ],
    "name": "unification-fd",
    "version": "0.10.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Dynamic",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "GHC.Exts",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc": [],
      "ghc-paths": [
        "GHC.Paths"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.Trans"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Annotations",
      "ConLike",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Ghc",
      "Control.Monad.Reader",
      "Control.Monad.Trans",
      "Data.Char",
      "Data.Data",
      "Data.Dynamic",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Typeable",
      "Data.Word",
      "DriverPhases",
      "DynFlags",
      "ErrUtils",
      "Exception",
      "FastString",
      "GHC",
      "GHC.Exts",
      "GhcMonad",
      "GHC.Paths",
      "Hint.Annotations",
      "Hint.Base",
      "Hint.Compat",
      "Hint.CompatPlatform",
      "Hint.Configuration",
      "Hint.Context",
      "Hint.Conversions",
      "Hint.Eval",
      "Hint.Extension",
      "Hint.GHC",
      "Hint.InterpreterT",
      "Hint.Parsers",
      "Hint.Reflection",
      "Hint.Typecheck",
      "Hint.Util",
      "HscTypes",
      "Language.Haskell.Interpreter",
      "Lexer",
      "MonadUtils",
      "Outputable",
      "Parser",
      "PprTyThing",
      "Prelude",
      "Serialized",
      "SrcLoc",
      "StringBuffer",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Posix.Process",
      "System.Random",
      "Test.HUnit"
    ],
    "modules": [
      "Language.Haskell.Interpreter",
      "Language.Haskell.Interpreter.Extension",
      "Language.Haskell.Interpreter.Unsafe"
    ],
    "name": "hint",
    "version": "0.6.0"
  },
  {
    "dependencies": {
      "authenticate": [],
      "base": [],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "binary": [],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [],
      "clientsession": [],
      "containers": [
        "Data.Map"
      ],
      "cookie": [],
      "gitrev": [],
      "http-client": [],
      "http-client-tls": [],
      "http-reverse-proxy": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "optparse-applicative": [],
      "resourcet": [],
      "template-haskell": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "transformers": [],
      "unix-compat": [],
      "vault": [
        "Data.Vault.Lazy"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-app-static": [],
      "wai-extra": [
        "Network.Wai.Request"
      ],
      "wai-middleware-crowd": [],
      "warp": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Lazy",
      "Data.Map",
      "Data.Text",
      "Data.Vault.Lazy",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Request",
      "Paths"
    ],
    "modules": [
      "Network.Wai.Middleware.Crowd"
    ],
    "name": "wai-middleware-crowd",
    "version": "0.1.4.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Data.IORef",
        "Data.STRef",
        "Data.STRef.Lazy"
      ],
      "lens": [
        "Control.Lens"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ]
    },
    "imports": [
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TVar.Zoom",
      "Control.Lens",
      "Control.Monad.ST",
      "Control.Monad.ST.Lazy",
      "Data.IORef",
      "Data.IORef.Zoom",
      "Data.STRef",
      "Data.STRef.Lazy",
      "Data.STRef.Lazy.Zoom",
      "Data.STRef.Zoom"
    ],
    "modules": [
      "Control.Concurrent.STM.TVar.Zoom",
      "Control.Concurrent.STM.MultiTVar",
      "Data.IORef.Zoom",
      "Data.MultiIORef",
      "Data.STRef.Zoom",
      "Data.STRef.Lazy.Zoom",
      "Data.MultiSTRef",
      "Data.MultiSTRef.Lazy"
    ],
    "name": "zoom-refs",
    "version": "0.0.0.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ELB",
      "Test.AWS.ELB",
      "Test.AWS.ELB.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ELB",
      "Network.AWS.ELB.AddTags",
      "Network.AWS.ELB.ApplySecurityGroupsToLoadBalancer",
      "Network.AWS.ELB.AttachLoadBalancerToSubnets",
      "Network.AWS.ELB.ConfigureHealthCheck",
      "Network.AWS.ELB.CreateAppCookieStickinessPolicy",
      "Network.AWS.ELB.CreateLBCookieStickinessPolicy",
      "Network.AWS.ELB.CreateLoadBalancer",
      "Network.AWS.ELB.CreateLoadBalancerListeners",
      "Network.AWS.ELB.CreateLoadBalancerPolicy",
      "Network.AWS.ELB.DeleteLoadBalancer",
      "Network.AWS.ELB.DeleteLoadBalancerListeners",
      "Network.AWS.ELB.DeleteLoadBalancerPolicy",
      "Network.AWS.ELB.DeregisterInstancesFromLoadBalancer",
      "Network.AWS.ELB.DescribeInstanceHealth",
      "Network.AWS.ELB.DescribeLoadBalancerAttributes",
      "Network.AWS.ELB.DescribeLoadBalancerPolicies",
      "Network.AWS.ELB.DescribeLoadBalancerPolicyTypes",
      "Network.AWS.ELB.DescribeLoadBalancers",
      "Network.AWS.ELB.DescribeTags",
      "Network.AWS.ELB.DetachLoadBalancerFromSubnets",
      "Network.AWS.ELB.DisableAvailabilityZonesForLoadBalancer",
      "Network.AWS.ELB.EnableAvailabilityZonesForLoadBalancer",
      "Network.AWS.ELB.ModifyLoadBalancerAttributes",
      "Network.AWS.ELB.RegisterInstancesWithLoadBalancer",
      "Network.AWS.ELB.RemoveTags",
      "Network.AWS.ELB.SetLoadBalancerListenerSSLCertificate",
      "Network.AWS.ELB.SetLoadBalancerPoliciesForBackendServer",
      "Network.AWS.ELB.SetLoadBalancerPoliciesOfListener",
      "Network.AWS.ELB.Types",
      "Network.AWS.ELB.Waiters"
    ],
    "name": "amazonka-elb",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.DiskSpace"
    ],
    "name": "disk-free-space",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "cmark": [
        "CMark"
      ],
      "lucid": [
        "Lucid.Base"
      ]
    },
    "imports": [
      "CMark",
      "Lucid.Base"
    ],
    "modules": [
      "CMark.Lucid"
    ],
    "name": "cmark-lucid",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Ptr",
        "GHC.Base",
        "GHC.Exts",
        "GHC.ForeignPtr",
        "GHC.IO",
        "GHC.IO.Buffer",
        "GHC.ST",
        "GHC.Word",
        "Prelude"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Data.ByteString",
      "Data.ByteString.Builder.Internal",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Prim.Binary",
      "Data.ByteString.Builder.Prim.Internal",
      "Data.ByteString.Builder.Prim.Internal.Base16",
      "Data.ByteString.Builder.Prim.Internal.Floating",
      "Data.ByteString.Builder.Prim.Internal.UncheckedShifts",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Short.Internal",
      "Data.Char",
      "Data.Data",
      "Data.List",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.String",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Ptr",
      "GHC.Base",
      "GHC.Exts",
      "GHC.ForeignPtr",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Internals",
      "GHC.IO",
      "GHC.IO.Buffer",
      "GHC.ST",
      "GHC.Word",
      "Prelude"
    ],
    "modules": [],
    "name": "bytestring-builder",
    "version": "0.10.8.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AndroidPublisher",
      "Network.Google.AndroidPublisher.Types",
      "Network.Google.Resource.AndroidPublisher.Edits.APKListings.Delete",
      "Network.Google.Resource.AndroidPublisher.Edits.APKListings.Deleteall",
      "Network.Google.Resource.AndroidPublisher.Edits.APKListings.Get",
      "Network.Google.Resource.AndroidPublisher.Edits.APKListings.List",
      "Network.Google.Resource.AndroidPublisher.Edits.APKListings.Patch",
      "Network.Google.Resource.AndroidPublisher.Edits.APKListings.Update",
      "Network.Google.Resource.AndroidPublisher.Edits.APKs.Addexternallyhosted",
      "Network.Google.Resource.AndroidPublisher.Edits.APKs.List",
      "Network.Google.Resource.AndroidPublisher.Edits.APKs.Upload",
      "Network.Google.Resource.AndroidPublisher.Edits.Commit",
      "Network.Google.Resource.AndroidPublisher.Edits.Delete",
      "Network.Google.Resource.AndroidPublisher.Edits.Details.Get",
      "Network.Google.Resource.AndroidPublisher.Edits.Details.Patch",
      "Network.Google.Resource.AndroidPublisher.Edits.Details.Update",
      "Network.Google.Resource.AndroidPublisher.Edits.ExpansionFiles.Get",
      "Network.Google.Resource.AndroidPublisher.Edits.ExpansionFiles.Patch",
      "Network.Google.Resource.AndroidPublisher.Edits.ExpansionFiles.Update",
      "Network.Google.Resource.AndroidPublisher.Edits.ExpansionFiles.Upload",
      "Network.Google.Resource.AndroidPublisher.Edits.Get",
      "Network.Google.Resource.AndroidPublisher.Edits.Images.Delete",
      "Network.Google.Resource.AndroidPublisher.Edits.Images.Deleteall",
      "Network.Google.Resource.AndroidPublisher.Edits.Images.List",
      "Network.Google.Resource.AndroidPublisher.Edits.Images.Upload",
      "Network.Google.Resource.AndroidPublisher.Edits.Insert",
      "Network.Google.Resource.AndroidPublisher.Edits.Listings.Delete",
      "Network.Google.Resource.AndroidPublisher.Edits.Listings.Deleteall",
      "Network.Google.Resource.AndroidPublisher.Edits.Listings.Get",
      "Network.Google.Resource.AndroidPublisher.Edits.Listings.List",
      "Network.Google.Resource.AndroidPublisher.Edits.Listings.Patch",
      "Network.Google.Resource.AndroidPublisher.Edits.Listings.Update",
      "Network.Google.Resource.AndroidPublisher.Edits.Testers.Get",
      "Network.Google.Resource.AndroidPublisher.Edits.Testers.Patch",
      "Network.Google.Resource.AndroidPublisher.Edits.Testers.Update",
      "Network.Google.Resource.AndroidPublisher.Edits.Tracks.Get",
      "Network.Google.Resource.AndroidPublisher.Edits.Tracks.List",
      "Network.Google.Resource.AndroidPublisher.Edits.Tracks.Patch",
      "Network.Google.Resource.AndroidPublisher.Edits.Tracks.Update",
      "Network.Google.Resource.AndroidPublisher.Edits.Validate",
      "Network.Google.Resource.AndroidPublisher.Entitlements.List",
      "Network.Google.Resource.AndroidPublisher.InAppProducts.Batch",
      "Network.Google.Resource.AndroidPublisher.InAppProducts.Delete",
      "Network.Google.Resource.AndroidPublisher.InAppProducts.Get",
      "Network.Google.Resource.AndroidPublisher.InAppProducts.Insert",
      "Network.Google.Resource.AndroidPublisher.InAppProducts.List",
      "Network.Google.Resource.AndroidPublisher.InAppProducts.Patch",
      "Network.Google.Resource.AndroidPublisher.InAppProducts.Update",
      "Network.Google.Resource.AndroidPublisher.Purchases.Products.Get",
      "Network.Google.Resource.AndroidPublisher.Purchases.Subscriptions.Cancel",
      "Network.Google.Resource.AndroidPublisher.Purchases.Subscriptions.Defer",
      "Network.Google.Resource.AndroidPublisher.Purchases.Subscriptions.Get",
      "Network.Google.Resource.AndroidPublisher.Purchases.Subscriptions.Refund",
      "Network.Google.Resource.AndroidPublisher.Purchases.Subscriptions.Revoke",
      "Network.Google.Resource.AndroidPublisher.Reviews.Get",
      "Network.Google.Resource.AndroidPublisher.Reviews.List",
      "Network.Google.Resource.AndroidPublisher.Reviews.Reply"
    ],
    "name": "gogol-android-publisher",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Prelude"
      ],
      "commutative": [
        "Data.Commutative",
        "Data.Mergeable"
      ],
      "composition": [
        "Data.Composition"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "keys": [
        "Data.Key"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "semigroupoids": [
        "Data.Semigroup.Foldable"
      ],
      "semigroups": [],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "witherable": [
        "Data.Witherable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Fix",
      "Control.Monad.State",
      "Criterion.Main",
      "Data.Commutative",
      "Data.Composition",
      "Data.Foldable",
      "Data.Functor.Contravariant",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IntMap.Data",
      "Data.IntSet",
      "Data.IntSet.Data",
      "Data.Key",
      "Data.List",
      "Data.Map",
      "Data.Map.Data",
      "Data.Maybe",
      "Data.Mergeable",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Semigroup.Foldable",
      "Data.Sequence",
      "Data.Set",
      "Data.Set.Class",
      "Data.Set.Data",
      "Data.Set.Ordered.Many",
      "Data.Set.Ordered.Many.Data",
      "Data.Set.Ordered.Many.With",
      "Data.Set.Ordered.Unique.Finite",
      "Data.Set.Ordered.Unique.With",
      "Data.SetSpec",
      "Data.Set.Unordered.Many",
      "Data.Set.Unordered.Many.Data",
      "Data.Set.Unordered.Unique",
      "Data.Set.Unordered.Unique.Data",
      "Data.Traversable",
      "Data.Witherable",
      "Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Set.Class",
      "Data.Set.Unordered.Unique",
      "Data.Set.Unordered.Many",
      "Data.Set.Ordered.Unique",
      "Data.Set.Ordered.Unique.With",
      "Data.Set.Ordered.Unique.Finite",
      "Data.Set.Ordered.Many",
      "Data.Set.Ordered.Many.With"
    ],
    "name": "sets",
    "version": "0.0.5.2"
  },
  {
    "dependencies": {
      "Earley": [],
      "ListLike": [
        "Data.ListLike"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.ST",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.STRef",
        "Data.String",
        "Data.Traversable",
        "System.Environment"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.ST",
      "Criterion.Main",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.HashSet",
      "Data.ListLike",
      "Data.Maybe",
      "Data.Monoid",
      "Data.STRef",
      "Data.String",
      "Data.Traversable",
      "Empty",
      "Expr",
      "InlineAlts",
      "Issue11",
      "Issue14",
      "Mixfix",
      "Optional",
      "ReversedWords",
      "System.Environment",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Text.Earley",
      "Text.Earley.Derived",
      "Text.Earley.Grammar",
      "Text.Earley.Internal",
      "Text.Earley.Mixfix",
      "Text.Earley.Parser",
      "Text.Parsec",
      "Text.Parsec.Pos",
      "VeryAmbiguous"
    ],
    "modules": [
      "Text.Earley",
      "Text.Earley.Derived",
      "Text.Earley.Grammar",
      "Text.Earley.Internal",
      "Text.Earley.Mixfix",
      "Text.Earley.Parser"
    ],
    "name": "Earley",
    "version": "0.11.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Data.Proxy",
        "Text.Read"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "http-api-data": [
        "Web.HttpApiData"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [],
      "microlens": [],
      "microlens-th": [
        "Lens.Micro.TH"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "network-uri": [
        "Network.URI"
      ],
      "servant": [
        "Servant.API"
      ],
      "servant-client": [
        "Servant.Client"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.Reader",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy",
      "Data.Map.Strict",
      "Data.Proxy",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Lens.Micro.TH",
      "Network.HTTP.Client",
      "Network.URI",
      "Options.Applicative",
      "Options.Applicative.Types",
      "Servant.API",
      "Servant.Client",
      "Text.Read",
      "Web.Giphy",
      "Web.HttpApiData"
    ],
    "modules": [
      "Web.Giphy"
    ],
    "name": "giphy-api",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Map",
      "Data.Text"
    ],
    "modules": [
      "Network.Mime"
    ],
    "name": "mime-types",
    "version": "0.1.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Type.Bool",
        "GHC.Base",
        "GHC.IO.Encoding",
        "GHC.TypeLits"
      ],
      "ghc": [],
      "ghc-tcplugins-extra": [
        "GHC.TcPluginM.Extra"
      ],
      "ghc-typelits-knownnat": [
        "GHC.TypeLits.KnownNat"
      ],
      "ghc-typelits-natnormalise": [
        "GHC.TypeLits.Normalise.Unify"
      ],
      "integer-gmp": [
        "GHC.Integer",
        "GHC.Integer.Logarithms"
      ],
      "singletons": [
        "Data.Singletons.TH"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Maybe",
      "Data.Function",
      "Data.List",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Singletons.TH",
      "Data.Type.Bool",
      "ErrorTests",
      "FastString",
      "GHC.Base",
      "GHC.Integer",
      "GHC.Integer.Logarithms",
      "GHC.IO.Encoding",
      "GHC.TcPluginM.Extra",
      "GHC.TypeLits",
      "GHC.TypeLits.Extra",
      "GHC.TypeLits.Extra.Solver.Operations",
      "GHC.TypeLits.Extra.Solver.Unify",
      "GHC.TypeLits.KnownNat",
      "GHC.TypeLits.Normalise.Unify",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Module",
      "OccName",
      "Outputable",
      "Plugins",
      "TcEvidence",
      "TcPluginM",
      "TcRnMonad",
      "TcRnTypes",
      "TcType",
      "TcTypeNats",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "TyCon",
      "TyCoRep",
      "Type",
      "TysWiredIn",
      "UniqSet"
    ],
    "modules": [
      "GHC.TypeLits.Extra",
      "GHC.TypeLits.Extra.Solver"
    ],
    "name": "ghc-typelits-extra",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Maybe",
        "System.Exit"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Maybe",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.Process"
    ],
    "modules": [
      "Development.GitRev"
    ],
    "name": "gitrev",
    "version": "1.2.0"
  },
  {
    "dependencies": {
      "QuickCheck": [],
      "aeson": [],
      "base": [
        "Data.Tuple",
        "Prelude"
      ],
      "bifunctors": [],
      "binary": [],
      "deepseq": [],
      "ghc-prim": [],
      "hashable": [],
      "lens": [],
      "strict": []
    },
    "imports": [
      "Data.Tuple",
      "Prelude"
    ],
    "modules": [
      "Data.Tuple.Strict",
      "Data.Maybe.Strict",
      "Data.Either.Strict"
    ],
    "name": "strict-base-types",
    "version": "0.5.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Numeric",
        "System.IO.Unsafe"
      ],
      "blaze-markup": [
        "Text.Blaze.Internal"
      ],
      "blaze-svg": [
        "Text.Blaze.Svg11",
        "Text.Blaze.Svg11.Attributes"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "diagrams-core": [],
      "diagrams-lib": [
        "Diagrams.Prelude"
      ],
      "directory": [],
      "parsec": [
        "Text.ParserCombinators.Parsec.Token"
      ],
      "split": [],
      "text": [
        "Data.Text"
      ],
      "tuple": [],
      "vector": [
        "Data.Vector"
      ],
      "xml": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.Char",
      "Data.Default.Class",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Vector",
      "Diagrams.Prelude",
      "Graphics.SVGFonts.CharReference",
      "Graphics.SVGFonts.Fonts",
      "Graphics.SVGFonts.ReadFont",
      "Graphics.SVGFonts.Text",
      "Numeric",
      "Paths",
      "System.IO.Unsafe",
      "Text.Blaze.Internal",
      "Text.Blaze.Svg11",
      "Text.Blaze.Svg11.Attributes",
      "Text.ParserCombinators.Parsec.Token"
    ],
    "modules": [
      "Graphics.SVGFonts",
      "Graphics.SVGFonts.Text",
      "Graphics.SVGFonts.ReadFont",
      "Graphics.SVGFonts.Fonts",
      "Graphics.SVGFonts.CharReference",
      "Graphics.SVGFonts.ReadPath",
      "Graphics.SVGFonts.WriteFont"
    ],
    "name": "SVGFonts",
    "version": "1.5.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Data",
        "Data.Monoid",
        "Prelude",
        "Text.Read"
      ],
      "deepseq": [],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "vector": [
        "Data.Vector.Fusion.Bundle",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Data.Data",
      "Data.Monoid",
      "Data.Vector.Fusion.Bundle",
      "Data.Vector.Fusion.Stream",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Hybrid.Internal",
      "Prelude",
      "Text.Read"
    ],
    "modules": [
      "Data.Vector.Hybrid",
      "Data.Vector.Hybrid.Internal",
      "Data.Vector.Hybrid.Mutable"
    ],
    "name": "hybrid-vectors",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Either",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Either",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Applicative.Alternative",
      "Control.Monad.Plus"
    ],
    "name": "monadplus",
    "version": "1.4.2"
  },
  {
    "dependencies": {
      "base": [],
      "binary": [],
      "containers": [
        "Data.Map.Strict"
      ],
      "data-default": [],
      "directory": [],
      "filepath": [],
      "mtl": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers-base": [],
      "vector": [
        "Data.Vector"
      ],
      "yi": [],
      "yi-language": [],
      "yi-rope": [
        "Yi.Rope"
      ]
    },
    "imports": [
      "Data.Map.Strict",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Vector",
      "Yi.Rope"
    ],
    "modules": [
      "Yi.Fuzzy"
    ],
    "name": "yi-fuzzy-open",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Gen",
        "Test.QuickCheck.Random"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Int",
        "Data.Ix",
        "Data.Monoid",
        "Data.Ratio",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.Exit",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec",
        "Text.Printf",
        "Text.Read",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State.Class",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "random": [
        "System.Random"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Calendar.MonthDay",
        "Data.Time.Calendar.OrdinalDate",
        "Data.Time.Calendar.WeekDate",
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX",
        "Data.Time.Clock.TAI",
        "Data.Time.LocalTime"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed"
      ],
      "vector-space": [
        "Data.AdditiveGroup",
        "Data.AffineSpace",
        "Data.Basis",
        "Data.VectorSpace"
      ],
      "vector-th-unbox": [
        "Data.Vector.Unboxed.Deriving"
      ]
    },
    "imports": [
      "Common",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.State.Class",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Criterion",
      "Criterion.Analysis",
      "Criterion.Config",
      "Criterion.Environment",
      "Criterion.Monad",
      "Data.AdditiveGroup",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.AffineSpace",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Basis",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Int",
      "Data.Ix",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Profunctor.Unsafe",
      "Data.Ratio",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Thyme",
      "Data.Thyme.Calendar",
      "Data.Thyme.Calendar.Internal",
      "Data.Thyme.Calendar.MonthDay",
      "Data.Thyme.Calendar.OrdinalDate",
      "Data.Thyme.Calendar.WeekDate",
      "Data.Thyme.Clock",
      "Data.Thyme.Clock.Internal",
      "Data.Thyme.Clock.POSIX",
      "Data.Thyme.Clock.TAI",
      "Data.Thyme.Format",
      "Data.Thyme.Format.Internal",
      "Data.Thyme.Internal.Micro",
      "Data.Thyme.LocalTime",
      "Data.Thyme.Time",
      "Data.Thyme.Time.Core",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Calendar.MonthDay",
      "Data.Time.Calendar.OrdinalDate",
      "Data.Time.Calendar.WeekDate",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Clock.TAI",
      "Data.Time.LocalTime",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.VectorSpace",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Deriving",
      "Distribution.PackageDescription",
      "Distribution.Simple",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.Setup",
      "GHC.Generics",
      "Language.Haskell.HLint",
      "Numeric",
      "Prelude",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.Locale",
      "System.Posix.Redirect",
      "System.Random",
      "Test.QuickCheck",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Random",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.Printf",
      "Text.Read",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Thyme",
      "Data.Thyme.Calendar",
      "Data.Thyme.Calendar.MonthDay",
      "Data.Thyme.Calendar.OrdinalDate",
      "Data.Thyme.Calendar.WeekDate",
      "Data.Thyme.Calendar.WeekdayOfMonth",
      "Data.Thyme.Clock",
      "Data.Thyme.Clock.POSIX",
      "Data.Thyme.Clock.TAI",
      "Data.Thyme.Format",
      "Data.Thyme.Format.Human",
      "Data.Thyme.Format.Aeson",
      "Data.Thyme.Internal.Micro",
      "Data.Thyme.LocalTime",
      "Data.Thyme.Time",
      "Data.Thyme.Time.Core"
    ],
    "name": "thyme",
    "version": "0.3.5.5"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.Content.Accounts.AuthInfo",
      "Network.Google.Resource.Content.Accounts.Custombatch",
      "Network.Google.Resource.Content.Accounts.Delete",
      "Network.Google.Resource.Content.Accounts.Get",
      "Network.Google.Resource.Content.Accounts.Insert",
      "Network.Google.Resource.Content.Accounts.List",
      "Network.Google.Resource.Content.Accounts.Patch",
      "Network.Google.Resource.Content.Accounts.Update",
      "Network.Google.Resource.Content.Accountshipping.Custombatch",
      "Network.Google.Resource.Content.Accountshipping.Get",
      "Network.Google.Resource.Content.Accountshipping.List",
      "Network.Google.Resource.Content.Accountshipping.Patch",
      "Network.Google.Resource.Content.Accountshipping.Update",
      "Network.Google.Resource.Content.Accountstatuses.Custombatch",
      "Network.Google.Resource.Content.Accountstatuses.Get",
      "Network.Google.Resource.Content.Accountstatuses.List",
      "Network.Google.Resource.Content.Accounttax.Custombatch",
      "Network.Google.Resource.Content.Accounttax.Get",
      "Network.Google.Resource.Content.Accounttax.List",
      "Network.Google.Resource.Content.Accounttax.Patch",
      "Network.Google.Resource.Content.Accounttax.Update",
      "Network.Google.Resource.Content.Datafeeds.Custombatch",
      "Network.Google.Resource.Content.Datafeeds.Delete",
      "Network.Google.Resource.Content.Datafeeds.Get",
      "Network.Google.Resource.Content.Datafeeds.Insert",
      "Network.Google.Resource.Content.Datafeeds.List",
      "Network.Google.Resource.Content.Datafeeds.Patch",
      "Network.Google.Resource.Content.Datafeeds.Update",
      "Network.Google.Resource.Content.Datafeedstatuses.Custombatch",
      "Network.Google.Resource.Content.Datafeedstatuses.Get",
      "Network.Google.Resource.Content.Datafeedstatuses.List",
      "Network.Google.Resource.Content.Inventory.Custombatch",
      "Network.Google.Resource.Content.Inventory.Set",
      "Network.Google.Resource.Content.Orders.Acknowledge",
      "Network.Google.Resource.Content.Orders.AdvancetestOrder",
      "Network.Google.Resource.Content.Orders.Cancel",
      "Network.Google.Resource.Content.Orders.Cancellineitem",
      "Network.Google.Resource.Content.Orders.CreatetestOrder",
      "Network.Google.Resource.Content.Orders.Custombatch",
      "Network.Google.Resource.Content.Orders.Get",
      "Network.Google.Resource.Content.Orders.GetbymerchantOrderid",
      "Network.Google.Resource.Content.Orders.GettestOrdertemplate",
      "Network.Google.Resource.Content.Orders.List",
      "Network.Google.Resource.Content.Orders.Refund",
      "Network.Google.Resource.Content.Orders.Returnlineitem",
      "Network.Google.Resource.Content.Orders.Shiplineitems",
      "Network.Google.Resource.Content.Orders.UpdatemerchantOrderid",
      "Network.Google.Resource.Content.Orders.Updateshipment",
      "Network.Google.Resource.Content.Products.Custombatch",
      "Network.Google.Resource.Content.Products.Delete",
      "Network.Google.Resource.Content.Products.Get",
      "Network.Google.Resource.Content.Products.Insert",
      "Network.Google.Resource.Content.Products.List",
      "Network.Google.Resource.Content.Productstatuses.Custombatch",
      "Network.Google.Resource.Content.Productstatuses.Get",
      "Network.Google.Resource.Content.Productstatuses.List",
      "Network.Google.ShoppingContent",
      "Network.Google.ShoppingContent.Types"
    ],
    "name": "gogol-shopping-content",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CodePipeline",
      "Test.AWS.CodePipeline",
      "Test.AWS.CodePipeline.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CodePipeline",
      "Network.AWS.CodePipeline.AcknowledgeJob",
      "Network.AWS.CodePipeline.AcknowledgeThirdPartyJob",
      "Network.AWS.CodePipeline.CreateCustomActionType",
      "Network.AWS.CodePipeline.CreatePipeline",
      "Network.AWS.CodePipeline.DeleteCustomActionType",
      "Network.AWS.CodePipeline.DeletePipeline",
      "Network.AWS.CodePipeline.DisableStageTransition",
      "Network.AWS.CodePipeline.EnableStageTransition",
      "Network.AWS.CodePipeline.GetJobDetails",
      "Network.AWS.CodePipeline.GetPipeline",
      "Network.AWS.CodePipeline.GetPipelineState",
      "Network.AWS.CodePipeline.GetThirdPartyJobDetails",
      "Network.AWS.CodePipeline.ListActionTypes",
      "Network.AWS.CodePipeline.ListPipelines",
      "Network.AWS.CodePipeline.PollForJobs",
      "Network.AWS.CodePipeline.PollForThirdPartyJobs",
      "Network.AWS.CodePipeline.PutActionRevision",
      "Network.AWS.CodePipeline.PutJobFailureResult",
      "Network.AWS.CodePipeline.PutJobSuccessResult",
      "Network.AWS.CodePipeline.PutThirdPartyJobFailureResult",
      "Network.AWS.CodePipeline.PutThirdPartyJobSuccessResult",
      "Network.AWS.CodePipeline.StartPipelineExecution",
      "Network.AWS.CodePipeline.Types",
      "Network.AWS.CodePipeline.UpdatePipeline",
      "Network.AWS.CodePipeline.Waiters"
    ],
    "name": "amazonka-codepipeline",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Route53Domains",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.Route53Domains",
      "Test.AWS.Route53Domains.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Route53Domains",
      "Network.AWS.Route53Domains.CheckDomainAvailability",
      "Network.AWS.Route53Domains.DeleteTagsForDomain",
      "Network.AWS.Route53Domains.DisableDomainAutoRenew",
      "Network.AWS.Route53Domains.DisableDomainTransferLock",
      "Network.AWS.Route53Domains.EnableDomainAutoRenew",
      "Network.AWS.Route53Domains.EnableDomainTransferLock",
      "Network.AWS.Route53Domains.GetContactReachabilityStatus",
      "Network.AWS.Route53Domains.GetDomainDetail",
      "Network.AWS.Route53Domains.GetOperationDetail",
      "Network.AWS.Route53Domains.ListDomains",
      "Network.AWS.Route53Domains.ListOperations",
      "Network.AWS.Route53Domains.ListTagsForDomain",
      "Network.AWS.Route53Domains.RegisterDomain",
      "Network.AWS.Route53Domains.ResendContactReachabilityEmail",
      "Network.AWS.Route53Domains.RetrieveDomainAuthCode",
      "Network.AWS.Route53Domains.TransferDomain",
      "Network.AWS.Route53Domains.Types",
      "Network.AWS.Route53Domains.UpdateDomainContact",
      "Network.AWS.Route53Domains.UpdateDomainContactPrivacy",
      "Network.AWS.Route53Domains.UpdateDomainNameservers",
      "Network.AWS.Route53Domains.UpdateTagsForDomain",
      "Network.AWS.Route53Domains.Waiters"
    ],
    "name": "amazonka-route53-domains",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe",
        "Data.String",
        "GHC.Generics",
        "GHC.TypeLits",
        "System.Environment",
        "Text.Read"
      ],
      "blaze-markup": [
        "Text.Blaze"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "directory": [],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "filepath": [],
      "http-media": [],
      "servant": [],
      "servant-blaze": [
        "Servant.HTML.Blaze"
      ],
      "servant-server": [
        "Servant"
      ],
      "servant-swagger": [
        "Servant.Swagger"
      ],
      "swagger2": [
        "Data.Swagger"
      ],
      "template-haskell": [],
      "text": [
        "Data.Text"
      ],
      "wai-app-static": [
        "Network.Wai.Application.Static"
      ]
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Trans.Either",
      "Control.Monad.Trans.Except",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.FileEmbed",
      "Data.Maybe",
      "Data.String",
      "Data.Swagger",
      "Data.Text",
      "GHC.Generics",
      "GHC.TypeLits",
      "Network.Wai",
      "Network.Wai.Application.Static",
      "Network.Wai.Handler.Warp",
      "Servant",
      "Servant.HTML.Blaze",
      "Servant.Swagger",
      "Servant.Swagger.UI",
      "Servant.Swagger.UI.Internal",
      "System.Environment",
      "Text.Blaze",
      "Text.Read"
    ],
    "modules": [
      "Servant.Swagger.UI",
      "Servant.Swagger.UI.Internal"
    ],
    "name": "servant-swagger-ui",
    "version": "0.2.0.2.1.5"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "GHC.Generics",
        "GHC.IO.Encoding",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cassava": [
        "Data.Csv"
      ],
      "concurrent-output": [
        "System.Console.Concurrent",
        "System.Console.Regions"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "extra": [
        "System.IO.Extra"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "gitlib": [
        "Git"
      ],
      "gitlib-libgit2": [
        "Git.Libgit2"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "shake": [
        "Development.Shake",
        "Development.Shake.Classes",
        "Development.Shake.Command",
        "Development.Shake.FilePath",
        "Development.Shake.Rule"
      ],
      "split": [
        "Data.List.Split"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "yaml": [
        "Data.Yaml"
      ]
    },
    "imports": [
      "BenchmarkSettings",
      "BenchmarksInCSV",
      "BenchNames",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Reader",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Csv",
      "Data.FileEmbed",
      "Data.Functor",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Tagged",
      "Data.Text",
      "Data.Text.Binary",
      "Data.Text.Encoding",
      "Data.Vector",
      "Data.Yaml",
      "Development.Shake",
      "Development.Shake.Classes",
      "Development.Shake.Command",
      "Development.Shake.Fancy",
      "Development.Shake.FilePath",
      "Development.Shake.Gitlib",
      "Development.Shake.Rule",
      "EmbeddedFiles",
      "GHC.Generics",
      "GHC.IO.Encoding",
      "Git",
      "Git.Libgit2",
      "GraphReport",
      "GraphSummaries",
      "JsonSettings",
      "JsonUtils",
      "ParentMap",
      "Paths",
      "ReadResult",
      "ReportTypes",
      "RevReport",
      "Shake",
      "Summary",
      "System.Console.Concurrent",
      "System.Console.Regions",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Extra",
      "Text.Printf",
      "Text.Read",
      "WithLatestLogs"
    ],
    "modules": [],
    "name": "gipeda",
    "version": "0.3.2.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode"
      ],
      "base": [],
      "bytestring": [
        "Data.ByteString.Builder",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "resourcet": [],
      "safe-exceptions": [],
      "text": [
        "Data.Text"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": [
        "Network.Wai.Parse"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.ByteString.Builder",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.Map.Strict",
      "Data.Scientific",
      "Data.Text",
      "Data.Vector",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Parse"
    ],
    "modules": [
      "Solga"
    ],
    "name": "solga",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "binary": [
        "Data.Binary"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Data.Binary",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding"
    ],
    "modules": [
      "Data.Text.Binary"
    ],
    "name": "text-binary",
    "version": "0.2.1.1"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html.Renderer.Utf8"
      ],
      "cheapskate": [
        "Cheapskate.Html"
      ],
      "lucid": [
        "Lucid.Base"
      ]
    },
    "imports": [
      "Cheapskate.Html",
      "Lucid.Base",
      "Text.Blaze.Html",
      "Text.Blaze.Html.Renderer.Utf8"
    ],
    "modules": [
      "Cheapskate.Lucid"
    ],
    "name": "cheapskate-lucid",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "network-simple": [],
      "pipes": [],
      "pipes-safe": [
        "Pipes.Safe"
      ],
      "transformers": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Pipes.Safe"
    ],
    "modules": [
      "Pipes.Network.TCP",
      "Pipes.Network.TCP.Safe"
    ],
    "name": "pipes-network",
    "version": "0.6.4.1"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Monad.IO.Class",
        "Data.Void"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "consul-haskell": [
        "Network.Consul"
      ],
      "enclosed-exceptions": [
        "Control.Exception.Enclosed"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "network": [
        "Network.Socket"
      ],
      "process": [
        "System.Process"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "void": [],
      "wai": [
        "Network.Wai"
      ],
      "wai-app-static": [
        "Network.Wai.Application.Static"
      ],
      "wai-conduit": [
        "Network.Wai.Conduit"
      ],
      "wai-extra": [
        "Network.Wai.Middleware.RequestLogger"
      ],
      "wai-middleware-consul": [],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "BasePrelude",
      "Control.Concurrent.Async",
      "Control.Exception.Enclosed",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Text",
      "Data.Void",
      "Network.Consul",
      "Network.HTTP.Client",
      "Network.HTTP.Types",
      "Network.Socket",
      "Network.Wai",
      "Network.Wai.Application.Static",
      "Network.Wai.Conduit",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Middleware.Consul",
      "Network.Wai.Middleware.Consul.GitHub",
      "Network.Wai.Middleware.RequestLogger",
      "System.Process"
    ],
    "modules": [
      "Network.Wai.Middleware.Consul",
      "Network.Wai.Middleware.Consul.GitHub"
    ],
    "name": "wai-middleware-consul",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.YouTubeReporting.Jobs.Create",
      "Network.Google.Resource.YouTubeReporting.Jobs.Delete",
      "Network.Google.Resource.YouTubeReporting.Jobs.Get",
      "Network.Google.Resource.YouTubeReporting.Jobs.List",
      "Network.Google.Resource.YouTubeReporting.Jobs.Reports.Get",
      "Network.Google.Resource.YouTubeReporting.Jobs.Reports.List",
      "Network.Google.Resource.YouTubeReporting.Media.Download",
      "Network.Google.Resource.YouTubeReporting.ReportTypes.List",
      "Network.Google.YouTubeReporting",
      "Network.Google.YouTubeReporting.Types"
    ],
    "name": "gogol-youtube-reporting",
    "version": "0.1.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.Int",
      "Data.IORef",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.String",
      "Foreign.C.Types",
      "System.CPUTime",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "System.Random.Mersenne",
      "System.Time",
      "Text.Printf"
    ],
    "modules": [
      "System.Random.Mersenne"
    ],
    "name": "mersenne-random",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Function",
        "Data.List",
        "Data.Maybe"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ]
    },
    "imports": [
      "Data.ByteString.Lazy.Char8",
      "Data.Function",
      "Data.List",
      "Data.Maybe"
    ],
    "modules": [
      "Text.CSV.Lazy.String",
      "Text.CSV.Lazy.ByteString"
    ],
    "name": "lazy-csv",
    "version": "0.5.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Monad"
      ],
      "bytestring": [
        "Data.ByteString"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.Makefile",
      "Data.Makefile.Parse",
      "Data.Makefile.Parse.Internal",
      "Test.DocTest"
    ],
    "modules": [
      "Data.Makefile",
      "Data.Makefile.Parse",
      "Data.Makefile.Parse.Internal"
    ],
    "name": "makefile",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Functor.Compose",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "GHC.Generics",
        "Text.Printf"
      ],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "generic-deriving": [
        "Generics.Deriving.Monoid"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "tasty": [
        "Test.Tasty.Options",
        "Test.Tasty.Providers",
        "Test.Tasty.Runners"
      ],
      "text": [
        "Data.Text.Lazy.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Control.Monad.State",
      "Control.Monad.Trans.Class",
      "Data.ByteString",
      "Data.Functor.Compose",
      "Data.IntMap",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Tagged",
      "Data.Text.Lazy.IO",
      "Data.Typeable",
      "Generics.Deriving.Monoid",
      "GHC.Generics",
      "Paths",
      "System.FilePath",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Test.Tasty.Runners",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Printf"
    ],
    "modules": [
      "Test.Tasty.Runners.Html"
    ],
    "name": "tasty-html",
    "version": "0.4.1.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Ratio",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "ghc-prim": [],
      "parsec": [
        "Text.Parsec.Prim",
        "Text.ParserCombinators.Parsec"
      ],
      "process": [
        "System.Process"
      ],
      "scientific": [
        "Data.Scientific",
        "Data.Text.Lazy.Builder.Scientific"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.Int",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Writer"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Writer",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Bits",
      "Data.ByteString",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ratio",
      "Data.Scientific",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Text.Lazy.Builder.Scientific",
      "Data.Text.Lazy.IO",
      "Data.Time",
      "Data.Typeable",
      "Data.Vector",
      "Data.Word",
      "GHC.Generics",
      "HamletTestTypes",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Language.Haskell.TH.Syntax.Internals",
      "Numeric",
      "Prelude",
      "Quoter",
      "System.Directory",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "Test.Hspec",
      "Test.HUnit",
      "Text.Blaze",
      "Text.Blaze.Html",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Blaze.Internal",
      "Text.Cassius",
      "Text.Coffee",
      "Text.Css",
      "Text.CssCommon",
      "Text.Hamlet",
      "Text.Hamlet.Parse",
      "Text.Hamlet.RT",
      "Text.IndentToBrace",
      "Text.Julius",
      "Text.Lucius",
      "Text.MkSizeType",
      "Text.Parsec.Prim",
      "Text.ParserCombinators.Parsec",
      "Text.Printf",
      "Text.Roy",
      "Text.Shakespeare",
      "Text.Shakespeare.Base",
      "Text.Shakespeare.Text"
    ],
    "modules": [
      "Text.Shakespeare.I18N",
      "Text.Shakespeare.Text",
      "Text.Roy",
      "Text.Julius",
      "Text.Coffee",
      "Text.Hamlet",
      "Text.Hamlet.RT",
      "Text.Hamlet.Runtime",
      "Text.Lucius",
      "Text.Cassius",
      "Text.Shakespeare.Base",
      "Text.Shakespeare",
      "Text.TypeScript"
    ],
    "name": "shakespeare",
    "version": "2.0.11.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.ST"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Coerce",
        "Data.Data",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Arr",
        "GHC.Exts",
        "Prelude",
        "Text.Read",
        "Text.Show.Functions"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.Trans",
      "Criterion.Config",
      "Criterion.Main",
      "Data.Array",
      "Data.Array.ST",
      "Data.Bits",
      "Data.Coerce",
      "Data.Data",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Identity",
      "Data.IntMap",
      "Data.IntMap.Base",
      "Data.IntMap.Lazy",
      "Data.IntMap.Strict",
      "Data.IntSet",
      "Data.IntSet.Base",
      "Data.List",
      "Data.Map",
      "Data.Map.Base",
      "Data.Map.Lazy",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Set",
      "Data.Set.Base",
      "Data.String",
      "Data.Traversable",
      "Data.Tree",
      "Data.Typeable",
      "Data.Utils.BitUtil",
      "Data.Utils.StrictFold",
      "Data.Utils.StrictPair",
      "Data.Word",
      "GHC.Arr",
      "GHC.Exts",
      "GHC.Prim",
      "LookupGE",
      "Prelude",
      "SetOperations",
      "System.Random",
      "Test.ChasingBottoms.IsBottom",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Function",
      "Test.QuickCheck.Poly",
      "Text.Read",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.IntMap",
      "Data.IntMap.Lazy",
      "Data.IntMap.Strict",
      "Data.IntSet",
      "Data.Map",
      "Data.Map.Lazy",
      "Data.Map.Strict",
      "Data.Set"
    ],
    "name": "containers",
    "version": "0.5.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Version",
        "System.Exit",
        "System.IO"
      ],
      "exceptions": [],
      "extra": [
        "System.Directory.Extra"
      ],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "monad-parallel": [
        "Control.Monad.Parallel"
      ],
      "mtl": [
        "Control.Monad.Except"
      ],
      "omnifmt": [
        "Omnifmt.Config",
        "Omnifmt.Directory",
        "Omnifmt.Exit",
        "Omnifmt.Pipes",
        "Omnifmt.Process"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Types"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "pipes-concurrency": [],
      "process": [],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "time": []
    },
    "imports": [
      "Control.Monad.Except",
      "Control.Monad.Logger",
      "Control.Monad.Parallel",
      "Data.Char",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Version",
      "Git.Fmt.Options",
      "Git.Fmt.Pipes",
      "Git.Fmt.Version",
      "Omnifmt.Config",
      "Omnifmt.Directory",
      "Omnifmt.Exit",
      "Omnifmt.Pipes",
      "Omnifmt.Process",
      "Options.Applicative",
      "Options.Applicative.Types",
      "Paths",
      "Pipes",
      "Pipes.Prelude",
      "System.Directory.Extra",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.Log.FastLogger"
    ],
    "modules": [],
    "name": "git-fmt",
    "version": "0.4.1.0"
  },
  {
    "dependencies": {
      "aeson-utils": [
        "Data.Aeson.Utils"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "data-default": [
        "Data.Default"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "http-client": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header"
      ],
      "hxt": [
        "Text.XML.HXT.Arrow.Pickle"
      ],
      "hxt-pickle-utils": [
        "Text.Xml.Pickle"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error",
        "Control.Monad.List",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "rest-types": [
        "Rest.Types.Error",
        "Rest.Types.ShowUrl"
      ],
      "tostring": [
        "Data.String.ToString"
      ],
      "transformers": [
        "Control.Monad.Trans.Except"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": [],
      "uri-encode": [
        "Network.URI.Encode"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Cont",
      "Control.Monad.Error",
      "Control.Monad.List",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.State",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Writer",
      "Data.Aeson.Utils",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.UTF8",
      "Data.CaseInsensitive",
      "Data.Default",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.String.ToString",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.URI.Encode",
      "Prelude",
      "Rest.Client.Base",
      "Rest.Types.Error",
      "Rest.Types.ShowUrl",
      "Text.XML.HXT.Arrow.Pickle",
      "Text.Xml.Pickle"
    ],
    "modules": [
      "Rest.Client.Base",
      "Rest.Client.Internal"
    ],
    "name": "rest-client",
    "version": "0.5.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.IORef",
        "Data.Semigroup"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "semigroups": [],
      "transformers": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Foldable",
      "Data.IntMap",
      "Data.IORef",
      "Data.Semigroup"
    ],
    "modules": [
      "Control.Concurrent.Event"
    ],
    "name": "event",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "GHC.Exts",
        "Numeric",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "exception-mtl": [],
      "exception-transformers": [
        "Control.Monad.Exception"
      ],
      "filepath": [],
      "mainland-pretty": [
        "Text.PrettyPrint.Mainland"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Identity",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "srcloc": [
        "Data.Loc"
      ],
      "syb": [
        "Data.Generics"
      ],
      "symbol": [
        "Data.Symbol"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Array",
      "Char",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Exception",
      "Control.Monad.Identity",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "CUDA",
      "Data.Array",
      "Data.Array.Base",
      "Data.Bits",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Char",
      "Data.Data",
      "Data.Generics",
      "Data.Int",
      "Data.List",
      "Data.Loc",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Set",
      "Data.String",
      "Data.Symbol",
      "Data.Typeable",
      "Data.Word",
      "GHC.Exts",
      "GlaExts",
      "Language.C.Parser",
      "Language.C.Parser.Lexer",
      "Language.C.Parser.Monad",
      "Language.C.Parser.Parser",
      "Language.C.Parser.Tokens",
      "Language.C.Pretty",
      "Language.C.Quote.Base",
      "Language.C.Quote.C",
      "Language.C.Quote.CUDA",
      "Language.C.Quote.ObjC",
      "Language.C.Syntax",
      "Language.Haskell.Meta",
      "Language.Haskell.ParseExp",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "MainCPP",
      "Numeric",
      "Objc",
      "System.Exit",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.PrettyPrint.Mainland"
    ],
    "modules": [
      "Language.C",
      "Language.C.Parser",
      "Language.C.Parser.Lexer",
      "Language.C.Parser.Monad",
      "Language.C.Parser.Parser",
      "Language.C.Parser.Tokens",
      "Language.C.Pretty",
      "Language.C.Quote",
      "Language.C.Quote.Base",
      "Language.C.Quote.C",
      "Language.C.Quote.CUDA",
      "Language.C.Quote.GCC",
      "Language.C.Quote.ObjC",
      "Language.C.Quote.OpenCL",
      "Language.C.Smart",
      "Language.C.Syntax"
    ],
    "name": "language-c-quote",
    "version": "0.11.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Applicative.Lift",
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Applicative.Lift",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Morph",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Monoid",
      "Data.Traversable",
      "Prelude"
    ],
    "modules": [
      "Control.Monad.Morph",
      "Control.Monad.Trans.Compose"
    ],
    "name": "mmorph",
    "version": "1.0.6"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.IORef",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Traversable",
        "Data.Typeable",
        "Foreign.Storable",
        "GHC.StaticPtr",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.Printf",
        "Unsafe.Coerce"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "cryptohash-sha256": [
        "Crypto.Hash.SHA256"
      ],
      "directory": [
        "System.Directory"
      ],
      "ed25519": [
        "Crypto.Sign.Ed25519"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "ghc-prim": [],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Except",
        "Control.Monad.Reader"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Entry",
        "Codec.Archive.Tar.Index"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Codec.Archive.Tar.Index",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Cont",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Crypto.Hash.SHA256",
      "Crypto.Sign.Ed25519",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.IORef",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.Time",
      "Data.Traversable",
      "Data.Typeable",
      "Distribution.Package",
      "Distribution.Text",
      "Foreign.Storable",
      "GHC.Prim",
      "GHC.StaticPtr",
      "Hackage.Security.Client",
      "Hackage.Security.Client.Formats",
      "Hackage.Security.Client.Repository",
      "Hackage.Security.Client.Repository.Cache",
      "Hackage.Security.Client.Repository.HttpLib",
      "Hackage.Security.Client.Repository.Remote",
      "Hackage.Security.Client.Verify",
      "Hackage.Security.JSON",
      "Hackage.Security.Key",
      "Hackage.Security.Key.Env",
      "Hackage.Security.Trusted",
      "Hackage.Security.Trusted.TCB",
      "Hackage.Security.TUF",
      "Hackage.Security.TUF.Common",
      "Hackage.Security.TUF.FileInfo",
      "Hackage.Security.TUF.FileMap",
      "Hackage.Security.TUF.Header",
      "Hackage.Security.TUF.Layout.Cache",
      "Hackage.Security.TUF.Layout.Index",
      "Hackage.Security.TUF.Layout.Repo",
      "Hackage.Security.TUF.Mirrors",
      "Hackage.Security.TUF.Paths",
      "Hackage.Security.TUF.Patterns",
      "Hackage.Security.TUF.Root",
      "Hackage.Security.TUF.Signed",
      "Hackage.Security.TUF.Snapshot",
      "Hackage.Security.TUF.Targets",
      "Hackage.Security.TUF.Timestamp",
      "Hackage.Security.Util.Base64",
      "Hackage.Security.Util.Checked",
      "Hackage.Security.Util.IO",
      "Hackage.Security.Util.JSON",
      "Hackage.Security.Util.Lens",
      "Hackage.Security.Util.Path",
      "Hackage.Security.Util.Pretty",
      "Hackage.Security.Util.Some",
      "Hackage.Security.Util.Stack",
      "Hackage.Security.Util.TypedEmbedded",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Network.URI",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Time",
      "Test.QuickCheck",
      "TestSuite.HttpMem",
      "TestSuite.InMemCache",
      "TestSuite.InMemRepo",
      "TestSuite.InMemRepository",
      "TestSuite.JSON",
      "TestSuite.PrivateKeys",
      "TestSuite.Util.StrictMVar",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Text.JSON.Canonical",
      "Text.ParserCombinators.Parsec",
      "Text.PrettyPrint",
      "Text.Printf",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Hackage.Security.Client",
      "Hackage.Security.Client.Formats",
      "Hackage.Security.Client.Repository",
      "Hackage.Security.Client.Repository.Cache",
      "Hackage.Security.Client.Repository.Local",
      "Hackage.Security.Client.Repository.Remote",
      "Hackage.Security.Client.Repository.HttpLib",
      "Hackage.Security.Client.Verify",
      "Hackage.Security.JSON",
      "Hackage.Security.Key.Env",
      "Hackage.Security.Server",
      "Hackage.Security.Trusted",
      "Hackage.Security.TUF.FileMap",
      "Hackage.Security.Util.Checked",
      "Hackage.Security.Util.IO",
      "Hackage.Security.Util.Lens",
      "Hackage.Security.Util.Path",
      "Hackage.Security.Util.Pretty",
      "Hackage.Security.Util.Some",
      "Text.JSON.Canonical"
    ],
    "name": "hackage-security",
    "version": "0.5.2.2"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.ReadE",
        "Distribution.Text",
        "Distribution.Verbosity"
      ],
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Set"
      ],
      "directory": [],
      "explicit-exception": [
        "Control.Monad.Exception.Synchronous"
      ],
      "fgl": [
        "Data.Graph.Inductive.Graph",
        "Data.Graph.Inductive.Query.DFS",
        "Data.Graph.Inductive.Tree"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ],
      "utility-ht": [
        "Data.List.HT"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Exception.Synchronous",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Graph.Inductive.Graph",
      "Data.Graph.Inductive.Query.DFS",
      "Data.Graph.Inductive.Tree",
      "Data.List",
      "Data.List.HT",
      "Data.Maybe",
      "Data.Set",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.ReadE",
      "Distribution.Text",
      "Distribution.Verbosity",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process"
    ],
    "modules": [],
    "name": "cabal-sort",
    "version": "0.0.5.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "GHC.Conc",
        "System.IO",
        "System.Mem.StableName",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "random": [
        "System.Random"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.State",
      "Data.Char",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Time.Clock",
      "Data.Typeable",
      "GHC.Conc",
      "System.Directory",
      "System.IO",
      "System.Mem.StableName",
      "System.Random",
      "Transient.Backtrack",
      "Transient.Base",
      "Transient.Indeterminism",
      "Transient.Internals",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Transient.Backtrack",
      "Transient.Base",
      "Transient.EVars",
      "Transient.Indeterminism",
      "Transient.Internals",
      "Transient.Logged",
      "Transient.Stream.Resource"
    ],
    "name": "transient",
    "version": "0.4.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable",
        "Data.List",
        "GHC.Exts",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [],
      "safecopy": [],
      "syb": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Data.Foldable",
      "Data.IxSet.Typed.Ix",
      "Data.IxSet.Typed.Tests",
      "Data.List",
      "Data.Map",
      "Data.Set",
      "GHC.Exts",
      "Language.Haskell.TH",
      "Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Data.IxSet.Typed",
      "Data.IxSet.Typed.Ix"
    ],
    "name": "ixset-typed",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.MarketplaceAnalytics",
      "Test.AWS.Fixture",
      "Test.AWS.MarketplaceAnalytics",
      "Test.AWS.MarketplaceAnalytics.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.MarketplaceAnalytics",
      "Network.AWS.MarketplaceAnalytics.GenerateDataSet",
      "Network.AWS.MarketplaceAnalytics.Types",
      "Network.AWS.MarketplaceAnalytics.Waiters"
    ],
    "name": "amazonka-marketplace-analytics",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "hw-diagnostics": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "HaskellWorks.Diagnostics",
      "HaskellWorks.Diagnostics.Time"
    ],
    "name": "hw-diagnostics",
    "version": "0.0.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Coerce",
        "Data.Complex",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor.Classes",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Functor.Sum",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Arr",
        "Unsafe.Coerce"
      ],
      "binary": [
        "Data.Binary"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.RWS.Class"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Applicative.Lift",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict",
        "Data.Functor.Reverse"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Applicative.Lift",
      "Control.Category",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Newtype",
      "Data.Binary",
      "Data.Coerce",
      "Data.Complex",
      "Data.Constraint",
      "Data.Data",
      "Data.Foldable",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Functor.Sum",
      "Data.Hashable",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Traversable",
      "Data.Typeable",
      "GHC.Arr",
      "GHC.Prim",
      "GHC.Types",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Constraint",
      "Data.Constraint.Deferrable",
      "Data.Constraint.Forall",
      "Data.Constraint.Lifting",
      "Data.Constraint.Unsafe"
    ],
    "name": "constraints",
    "version": "0.8"
  },
  {
    "dependencies": {
      "base": [
        "Data.Int",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr"
      ],
      "bytestring": [
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "network": [],
      "time": [
        "Data.Time.Clock"
      ]
    },
    "imports": [
      "Data.ByteString.Base",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Int",
      "Data.Time.Clock",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Network.Pcap.Base"
    ],
    "modules": [
      "Network.Pcap.Base",
      "Network.Pcap"
    ],
    "name": "pcap",
    "version": "0.4.5.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Tuple",
        "Data.Version",
        "System.Exit",
        "System.IO"
      ],
      "containers": [
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "dlist": [
        "Data.DList"
      ],
      "docvim": [],
      "filepath": [
        "System.FilePath"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.Fold",
        "Control.Lens.Getter",
        "Control.Lens.Plated",
        "Data.Data.Lens"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.String"
      ],
      "pretty-show": [
        "Text.Show.Pretty"
      ],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Lens",
      "Control.Lens.Fold",
      "Control.Lens.Getter",
      "Control.Lens.Plated",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Data.Lens",
      "Data.DList",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Tuple",
      "Data.Version",
      "Language.Haskell.HLint",
      "Options.Applicative",
      "Paths",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.Process",
      "Test.Tasty",
      "Test.Tasty.Golden",
      "Test.Tasty.Golden.Advanced",
      "Test.Tasty.HUnit",
      "Text.Docvim.AST",
      "Text.Docvim.CLI",
      "Text.Docvim.Compile",
      "Text.Docvim.Optimize",
      "Text.Docvim.Options",
      "Text.Docvim.Parse",
      "Text.Docvim.Printer.Markdown",
      "Text.Docvim.Printer.Vim",
      "Text.Docvim.ReadDir",
      "Text.Docvim.Util",
      "Text.Docvim.Visitor",
      "Text.Docvim.Visitor.Command",
      "Text.Docvim.Visitor.Commands",
      "Text.Docvim.Visitor.Footer",
      "Text.Docvim.Visitor.Function",
      "Text.Docvim.Visitor.Functions",
      "Text.Docvim.Visitor.Heading",
      "Text.Docvim.Visitor.Mapping",
      "Text.Docvim.Visitor.Mappings",
      "Text.Docvim.Visitor.Option",
      "Text.Docvim.Visitor.Options",
      "Text.Docvim.Visitor.Plugin",
      "Text.Docvim.Visitor.Section",
      "Text.Docvim.Visitor.Symbol",
      "Text.Parsec",
      "Text.Parsec.String",
      "Text.Show.Pretty"
    ],
    "modules": [
      "Text.Docvim.AST",
      "Text.Docvim.CLI",
      "Text.Docvim.Compile",
      "Text.Docvim.Optimize",
      "Text.Docvim.Options",
      "Text.Docvim.Parse",
      "Text.Docvim.Printer.Markdown",
      "Text.Docvim.Printer.Vim",
      "Text.Docvim.ReadDir",
      "Text.Docvim.Util",
      "Text.Docvim.Visitor",
      "Text.Docvim.Visitor.Command",
      "Text.Docvim.Visitor.Commands",
      "Text.Docvim.Visitor.Footer",
      "Text.Docvim.Visitor.Function",
      "Text.Docvim.Visitor.Functions",
      "Text.Docvim.Visitor.Heading",
      "Text.Docvim.Visitor.Mapping",
      "Text.Docvim.Visitor.Mappings",
      "Text.Docvim.Visitor.Option",
      "Text.Docvim.Visitor.Options",
      "Text.Docvim.Visitor.Plugin",
      "Text.Docvim.Visitor.Section",
      "Text.Docvim.Visitor.Symbol"
    ],
    "name": "docvim",
    "version": "0.3.2.1"
  },
  {
    "dependencies": {
      "HaTeX": [
        "Text.LaTeX",
        "Text.LaTeX.Base.Syntax"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.List",
        "Data.Typeable",
        "Data.Version",
        "Numeric",
        "System.Environment",
        "System.IO"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Parser",
        "Language.Haskell.Exts.Pretty",
        "Language.Haskell.Exts.Syntax"
      ],
      "haskintex": [],
      "hint": [
        "Language.Haskell.Interpreter",
        "Language.Haskell.Interpreter.Unsafe"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Text"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.List",
      "Data.Map",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Typeable",
      "Data.Version",
      "Haskintex",
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.Pretty",
      "Language.Haskell.Exts.Syntax",
      "Language.Haskell.Interpreter",
      "Language.Haskell.Interpreter.Unsafe",
      "Numeric",
      "Paths",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "Text.LaTeX",
      "Text.LaTeX.Base.Syntax",
      "Text.Parsec",
      "Text.Parsec.Text"
    ],
    "modules": [
      "Haskintex"
    ],
    "name": "haskintex",
    "version": "0.6.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Functor.Sum",
        "Data.Ix",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Prelude"
      ],
      "comonad": [
        "Control.Comonad.Trans.Traced"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "free": [
        "Control.Comonad.Cofree",
        "Control.Monad.Free"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "semigroupoids": [
        "Data.Functor.Bind",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Comonad.Cofree",
      "Control.Comonad.Trans.Traced",
      "Control.Monad.Free",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Reader",
      "Data.Array",
      "Data.Foldable",
      "Data.Functor.Bind",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Sum",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.IntMap",
      "Data.Ix",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Traversable",
      "Data.Sequence",
      "Data.Traversable",
      "Data.Tree",
      "Prelude"
    ],
    "modules": [
      "Data.Key"
    ],
    "name": "keys",
    "version": "3.11"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Bool",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Set"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.State",
      "Data.Binary.Get",
      "Data.Binary.IEEE754",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.Bool",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Int",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.ProtoBuf",
      "Data.ProtoBuf.Default",
      "Data.ProtoBuf.FieldNumber",
      "Data.ProtoBufInt",
      "Data.ProtoBuf.Mergeable",
      "Data.ProtoBuf.Required",
      "Data.ProtoBuf.WireEnum",
      "Data.ProtoBuf.WireFormat",
      "Data.ProtoBuf.WireMessage",
      "Data.ProtoBuf.WireTag",
      "Data.ProtoBuf.WireType",
      "Data.ProtoBuf.ZigZag",
      "Data.Sequence",
      "Data.Set",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Word",
      "Parser.CaseUtils",
      "Parser.CodeInfo",
      "Parser.EnumDesc",
      "Parser.EnumGenerator",
      "Parser.EnumValueDesc",
      "Parser.FieldDesc",
      "Parser.FileDesc",
      "Parser.FileWriter",
      "Parser.Generator",
      "Parser.GeneratorUtils",
      "Parser.Label",
      "Parser.MessageDesc",
      "Parser.MessageGenerator",
      "Parser.OptimizeMode",
      "Parser.ProtoParser",
      "Parser.Type",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "Test.Hspec",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Text.Parsec",
      "Types.BoolList",
      "Types.BoolListPacked",
      "Types.BoolMsg",
      "Types.BoolOptMsg",
      "Types.BytesList",
      "Types.BytesMsg",
      "Types.BytesOptMsg",
      "Types.DoubleList",
      "Types.DoubleListPacked",
      "Types.DoubleMsg",
      "Types.DoubleOptMsg",
      "Types.Enum",
      "Types.EnumList",
      "Types.EnumListPacked",
      "Types.EnumMsg",
      "Types.EnumOptMsg",
      "Types.Fixed32List",
      "Types.Fixed32ListPacked",
      "Types.Fixed32Msg",
      "Types.Fixed32OptMsg",
      "Types.Fixed64List",
      "Types.Fixed64ListPacked",
      "Types.Fixed64Msg",
      "Types.Fixed64OptMsg",
      "Types.FloatList",
      "Types.FloatListPacked",
      "Types.FloatMsg",
      "Types.FloatOptMsg",
      "Types.Int32List",
      "Types.Int32ListPacked",
      "Types.Int32Msg",
      "Types.Int32OptMsg",
      "Types.Int64List",
      "Types.Int64ListPacked",
      "Types.Int64Msg",
      "Types.Int64OptMsg",
      "Types.Message",
      "Types.MessageList",
      "Types.MessageMsg",
      "Types.MessageOptMsg",
      "Types.SFixed32List",
      "Types.SFixed32ListPacked",
      "Types.SFixed32Msg",
      "Types.SFixed32OptMsg",
      "Types.SFixed64List",
      "Types.SFixed64ListPacked",
      "Types.SFixed64Msg",
      "Types.SFixed64OptMsg",
      "Types.SInt32List",
      "Types.SInt32ListPacked",
      "Types.SInt32Msg",
      "Types.SInt32OptMsg",
      "Types.SInt64List",
      "Types.SInt64ListPacked",
      "Types.SInt64Msg",
      "Types.SInt64OptMsg",
      "Types.StringList",
      "Types.StringMsg",
      "Types.StringOptMsg",
      "Types.UInt32List",
      "Types.UInt32ListPacked",
      "Types.UInt32Msg",
      "Types.UInt32OptMsg",
      "Types.UInt64List",
      "Types.UInt64ListPacked",
      "Types.UInt64Msg",
      "Types.UInt64OptMsg"
    ],
    "modules": [
      "Data.ProtoBuf",
      "Data.ProtoBufInt"
    ],
    "name": "protobuf-simple",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Foreign.C.Types"
      ],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Foreign.C.Types"
    ],
    "modules": [
      "Algebra.Polynomials.Bernstein",
      "Algebra.Polynomials.Numerical"
    ],
    "name": "polynomials-bernstein",
    "version": "1.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.ST.Safe",
        "Data.Either",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Identity",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.IO"
      ],
      "stm": [
        "Control.Monad.STM"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.STM",
      "Control.Monad.ST.Safe",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Either",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Identity",
      "Data.Maybe",
      "Data.Monoid",
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Control.Monad.Trans.Control"
    ],
    "name": "monad-control",
    "version": "1.0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Foreign.C"
      ]
    },
    "imports": [
      "Foreign.C"
    ],
    "modules": [
      "Data.Number.Erf"
    ],
    "name": "erf",
    "version": "2.0.0.0"
  },
  {
    "dependencies": {
      "MissingH": [],
      "async": [],
      "base": [],
      "directory": [],
      "filepath": [],
      "haskell-src-exts": [],
      "regex-compat": [],
      "regex-pcre": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Development.FileModules"
    ],
    "name": "file-modules",
    "version": "0.1.2.4"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "classy-prelude": [],
      "classy-prelude-conduit": [
        "ClassyPrelude.Conduit"
      ],
      "data-default": [
        "Data.Default"
      ],
      "http-conduit": [
        "Network.HTTP.Client.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "persistent": [
        "Database.Persist.Sql"
      ],
      "yesod": [
        "Yesod"
      ],
      "yesod-newsfeed": [
        "Yesod.Feed"
      ],
      "yesod-static": [
        "Yesod.Static"
      ]
    },
    "imports": [
      "ClassyPrelude.Conduit",
      "Database.Persist.Sql",
      "Data.Default",
      "Network.HTTP.Client.Conduit",
      "Network.HTTP.Types",
      "Yesod",
      "Yesod.Feed",
      "Yesod.Static"
    ],
    "modules": [
      "ClassyPrelude.Yesod"
    ],
    "name": "classy-prelude-yesod",
    "version": "1.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.StorageTransfer.GetGoogleServiceAccount",
      "Network.Google.Resource.StorageTransfer.GoogleServiceAccounts.Get",
      "Network.Google.Resource.StorageTransfer.TransferJobs.Create",
      "Network.Google.Resource.StorageTransfer.TransferJobs.Get",
      "Network.Google.Resource.StorageTransfer.TransferJobs.List",
      "Network.Google.Resource.StorageTransfer.TransferJobs.Patch",
      "Network.Google.Resource.StorageTransfer.TransferOperations.Cancel",
      "Network.Google.Resource.StorageTransfer.TransferOperations.Delete",
      "Network.Google.Resource.StorageTransfer.TransferOperations.Get",
      "Network.Google.Resource.StorageTransfer.TransferOperations.List",
      "Network.Google.Resource.StorageTransfer.TransferOperations.Pause",
      "Network.Google.Resource.StorageTransfer.TransferOperations.Resume",
      "Network.Google.StorageTransfer",
      "Network.Google.StorageTransfer.Types"
    ],
    "name": "gogol-storage-transfer",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Fixed",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Ratio",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Types",
        "Foreign.Safe",
        "Text.ParserCombinators.ReadP",
        "Text.Read"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.Data",
      "Data.Fixed",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "Data.Ratio",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Calendar.Days",
      "Data.Time.Calendar.Easter",
      "Data.Time.Calendar.Gregorian",
      "Data.Time.Calendar.Julian",
      "Data.Time.Calendar.JulianYearDay",
      "Data.Time.Calendar.MonthDay",
      "Data.Time.Calendar.OrdinalDate",
      "Data.Time.Calendar.Private",
      "Data.Time.Calendar.WeekDate",
      "Data.Time.Clock",
      "Data.Time.Clock.CTimespec",
      "Data.Time.Clock.CTimeval",
      "Data.Time.Clock.POSIX",
      "Data.Time.Clock.Scale",
      "Data.Time.Clock.TAI",
      "Data.Time.Clock.UTC",
      "Data.Time.Clock.UTCDiff",
      "Data.Time.Format",
      "Data.Time.Format.Locale",
      "Data.Time.Format.Parse",
      "Data.Time.LocalTime",
      "Data.Time.LocalTime.LocalTime",
      "Data.Time.LocalTime.TimeOfDay",
      "Data.Time.LocalTime.TimeZone",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.Safe",
      "System.Posix.Env",
      "System.Win32.Time",
      "Test.AddDays",
      "Test.AddDaysRef",
      "Test.ClipDates",
      "Test.ClipDatesRef",
      "Test.ConvertBack",
      "Test.Framework",
      "Test.Framework.Providers.API",
      "Test.Framework.Providers.QuickCheck2",
      "Test.LongWeekYears",
      "Test.LongWeekYearsRef",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Test.TAI",
      "Test.TestCalendars",
      "Test.TestCalendarsRef",
      "Test.TestEaster",
      "Test.TestEasterRef",
      "Test.TestFormat",
      "Test.TestMonthDay",
      "Test.TestMonthDayRef",
      "Test.TestParseDAT",
      "Test.TestParseTime",
      "Test.Tests",
      "Test.TestTime",
      "Test.TestTimeRef",
      "Test.TestTimeZone",
      "Test.TestUtil",
      "Test.TestValid",
      "Text.ParserCombinators.ReadP",
      "Text.Read"
    ],
    "modules": [
      "Data.Time.Calendar",
      "Data.Time.Calendar.MonthDay",
      "Data.Time.Calendar.OrdinalDate",
      "Data.Time.Calendar.WeekDate",
      "Data.Time.Calendar.Julian",
      "Data.Time.Calendar.Easter",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Clock.TAI",
      "Data.Time.LocalTime",
      "Data.Time.Format",
      "Data.Time"
    ],
    "name": "time",
    "version": "1.6.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Data",
        "Data.Either",
        "Data.Eq",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude"
      ],
      "bifunctors": [],
      "lens": [
        "Control.Lens.Getter",
        "Control.Lens.Iso",
        "Control.Lens.Prism",
        "Control.Lens.Review"
      ],
      "mtl": [],
      "semigroupoids": [
        "Data.Functor.Alt",
        "Data.Functor.Apply",
        "Data.Functor.Bind"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Build",
      "Control.Applicative",
      "Control.Lens.Getter",
      "Control.Lens.Iso",
      "Control.Lens.Prism",
      "Control.Lens.Review",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bitraversable",
      "Data.Data",
      "Data.Either",
      "Data.Eq",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Alt",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Monoid",
      "Data.Ord",
      "Data.Semigroup",
      "Data.Traversable",
      "Data.Typeable",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "Test.DocTest"
    ],
    "modules": [
      "Data.Validation"
    ],
    "name": "validation",
    "version": "0.5.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Parser",
        "Data.Aeson.TH",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.ByteString.Lazy",
        "Data.Attoparsec.Number"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Int",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Prelude"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64.Lazy"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "directory": [
        "System.Directory"
      ],
      "directory-tree": [
        "System.Directory.Tree"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Header",
        "Network.HTTP.Types.Method",
        "Network.HTTP.Types.Status",
        "Network.HTTP.Types.URI"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time.Clock"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [],
      "zip-archive": [
        "Codec.Archive.Zip"
      ]
    },
    "imports": [
      "Codec.Archive.Zip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Aeson",
      "Data.Aeson.Parser",
      "Data.Aeson.TH",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Number",
      "Data.ByteString",
      "Data.ByteString.Base64.Lazy",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.Char",
      "Data.Default.Class",
      "Data.Fixed",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Scientific",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time.Clock",
      "Data.Typeable",
      "Data.Word",
      "Network.HTTP.Client",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.HTTP.Types.Method",
      "Network.HTTP.Types.Status",
      "Network.HTTP.Types.URI",
      "Network.URI",
      "Prelude",
      "System.Directory",
      "System.Directory.Tree",
      "System.FilePath",
      "System.IO.Temp",
      "Test.WebDriver.Capabilities",
      "Test.WebDriver.Chrome.Extension",
      "Test.WebDriver.Class",
      "Test.WebDriver.Commands",
      "Test.WebDriver.Commands.Internal",
      "Test.WebDriver.Common.Profile",
      "Test.WebDriver.Config",
      "Test.WebDriver.Exceptions",
      "Test.WebDriver.Exceptions.Internal",
      "Test.WebDriver.Firefox.Profile",
      "Test.WebDriver.Internal",
      "Test.WebDriver.JSON",
      "Test.WebDriver.Monad",
      "Test.WebDriver.Session",
      "Test.WebDriver.Session.History",
      "Test.WebDriver.Types",
      "Test.WebDriver.Utils"
    ],
    "modules": [
      "Test.WebDriver",
      "Test.WebDriver.Class",
      "Test.WebDriver.Monad",
      "Test.WebDriver.Session",
      "Test.WebDriver.Session.History",
      "Test.WebDriver.Config",
      "Test.WebDriver.Exceptions",
      "Test.WebDriver.Commands",
      "Test.WebDriver.Commands.Wait",
      "Test.WebDriver.Commands.Internal",
      "Test.WebDriver.Common.Profile",
      "Test.WebDriver.Common.Keys",
      "Test.WebDriver.Firefox.Profile",
      "Test.WebDriver.Chrome.Extension",
      "Test.WebDriver.Capabilities",
      "Test.WebDriver.Types",
      "Test.WebDriver.JSON",
      "Test.WebDriver.Utils"
    ],
    "name": "webdriver",
    "version": "0.8.4"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString"
      ],
      "base": [
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Monoid"
    ],
    "modules": [
      "Data.Conduit.JSON.NewlineDelimited"
    ],
    "name": "ndjson-conduit",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "aeson-pretty": [
        "Data.Aeson.Encode.Pretty"
      ],
      "base": [
        "Data.Proxy",
        "GHC.Generics"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "bytestring-conversion": [],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "control-monad-omega": [
        "Control.Monad.Omega"
      ],
      "hashable": [],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lens": [
        "Control.Lens"
      ],
      "servant": [
        "Servant.API"
      ],
      "servant-docs": [],
      "string-conversions": [
        "Data.String.Conversions"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Omega",
      "Data.Aeson",
      "Data.Aeson.Encode.Pretty",
      "Data.ByteString.Char8",
      "Data.CaseInsensitive",
      "Data.HashMap.Strict",
      "Data.Proxy",
      "Data.String.Conversions",
      "Data.Text",
      "GHC.Generics",
      "Network.HTTP.Media",
      "Network.HTTP.Types",
      "Servant.API",
      "Servant.Docs",
      "Servant.Docs.Internal",
      "Servant.Docs.Internal.Pretty"
    ],
    "modules": [
      "Servant.Docs",
      "Servant.Docs.Internal",
      "Servant.Docs.Internal.Pretty"
    ],
    "name": "servant-docs",
    "version": "0.8.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.Timeout"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "fold-debounce": [
        "Control.FoldDebounce"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-base": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.FoldDebounce",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Resource",
      "Data.Conduit",
      "Data.Conduit.FoldDebounce",
      "Data.Conduit.List",
      "Data.Maybe",
      "Data.Monoid",
      "Prelude",
      "System.Timeout",
      "Test.Hspec"
    ],
    "modules": [
      "Data.Conduit.FoldDebounce"
    ],
    "name": "fold-debounce-conduit",
    "version": "0.1.0.4"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.PackageDescription.PrettyPrint",
        "Distribution.Verbosity",
        "Distribution.Version"
      ],
      "base": [
        "System.Environment"
      ]
    },
    "imports": [
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.PackageDescription.PrettyPrint",
      "Distribution.Verbosity",
      "Distribution.Version",
      "System.Environment"
    ],
    "modules": [],
    "name": "jailbreak-cabal",
    "version": "1.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Kind",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Type.Bool",
        "GHC.TypeLits"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "show-type": [
        "Type.Showtype"
      ]
    },
    "imports": [
      "Data.Kind",
      "Data.Proxy",
      "Data.Typeable",
      "Data.Type.Bool",
      "GHC.TypeLits",
      "Test.TypeSpec",
      "Test.TypeSpec.Core",
      "Test.TypeSpecCrazy",
      "Test.TypeSpec.Group",
      "Test.TypeSpec.Internal.Apply",
      "Test.TypeSpec.Internal.Either",
      "Test.TypeSpec.Internal.Equality",
      "Test.TypeSpec.Internal.Result",
      "Test.TypeSpec.Label",
      "Test.TypeSpec.ShouldBe",
      "Text.PrettyPrint",
      "Type.Showtype"
    ],
    "modules": [
      "Test.TypeSpec",
      "Test.TypeSpecCrazy",
      "Test.TypeSpec.Core",
      "Test.TypeSpec.Group",
      "Test.TypeSpec.Label",
      "Test.TypeSpec.ShouldBe",
      "Test.TypeSpec.Internal.Apply",
      "Test.TypeSpec.Internal.Either",
      "Test.TypeSpec.Internal.Equality",
      "Test.TypeSpec.Internal.Result"
    ],
    "name": "type-spec",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Control.DeepSeq",
      "Criterion.Main",
      "Crypto.Sign.Ed25519",
      "Data.ByteString",
      "Data.Maybe"
    ],
    "modules": [
      "Crypto.Sign.Ed25519"
    ],
    "name": "ed25519",
    "version": "0.0.5.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AppsActivity",
      "Network.Google.AppsActivity.Types",
      "Network.Google.Resource.AppsActivity.Activities.List"
    ],
    "name": "gogol-apps-activity",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "base64-bytestring": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "exceptions": [],
      "text": [
        "Data.Text.Encoding"
      ],
      "wai": [],
      "word8": [],
      "yesod": []
    },
    "imports": [
      "Data.ByteString",
      "Data.Text.Encoding"
    ],
    "modules": [
      "Yesod.Auth.Http.Basic"
    ],
    "name": "yesod-auth-basic",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Void",
        "GHC.Exts",
        "Prelude"
      ],
      "exceptions": [
        "Control.Monad.Catch",
        "Control.Monad.Catch.Pure"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Catch.Pure",
      "Control.Monad.Error",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Morph",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.ST",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Criterion.Main",
      "Data.Conduit",
      "Data.Conduit.Extra.ZipConduitSpec",
      "Data.Conduit.Internal",
      "Data.Conduit.Internal.Conduit",
      "Data.Conduit.Internal.Fusion",
      "Data.Conduit.Internal.List.Stream",
      "Data.Conduit.Internal.Pipe",
      "Data.Conduit.Lift",
      "Data.Conduit.List",
      "Data.Conduit.StreamSpec",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Data.Void",
      "GHC.Exts",
      "Prelude",
      "Safe",
      "System.Random.MWC",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.Monadic"
    ],
    "modules": [
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Conduit.Internal",
      "Data.Conduit.Lift",
      "Data.Conduit.Internal.Fusion",
      "Data.Conduit.Internal.List.Stream"
    ],
    "name": "conduit",
    "version": "1.2.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.NumInstances.Function",
      "Data.NumInstances.PreRequisites",
      "Data.NumInstances.Tuple",
      "Data.NumInstances.Util"
    ],
    "modules": [
      "Data.NumInstances",
      "Data.NumInstances.Function",
      "Data.NumInstances.Tuple"
    ],
    "name": "NumInstances",
    "version": "1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.ST",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Bool",
        "Data.Char",
        "Data.Complex",
        "Data.Data",
        "Data.Dynamic",
        "Data.Either",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Ratio",
        "Data.STRef",
        "Data.String",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Unique",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "Foreign.Storable",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.IO.Exception",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem",
        "System.Mem.StableName",
        "System.Timeout",
        "Text.ParserCombinators.ReadP",
        "Text.ParserCombinators.ReadPrec",
        "Text.Printf",
        "Text.Read",
        "Unsafe.Coerce"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.ST",
      "Data.Bifunctor",
      "Data.Bits",
      "Data.Bool",
      "Data.Char",
      "Data.Complex",
      "Data.Data",
      "Data.Dynamic",
      "Data.Either",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Int",
      "Data.IORef",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ratio",
      "Data.STRef",
      "Data.String",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Unique",
      "Data.Version",
      "Data.Word",
      "Debug.Trace",
      "Foreign.Storable",
      "GHC.Conc",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.IO.Exception",
      "Numeric",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Mem",
      "System.Mem.StableName",
      "System.Timeout",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.Printf",
      "Text.Read",
      "Unsafe.Coerce"
    ],
    "modules": [
      "BasePrelude"
    ],
    "name": "base-prelude",
    "version": "1.0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Version",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "preprocessor-tools": [
        "Language.Haskell.Preprocessor"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.ByteString",
      "Data.Version",
      "Language.Haskell.Preprocessor",
      "Paths",
      "System.Directory",
      "System.Environment",
      "System.FilePath"
    ],
    "modules": [],
    "name": "hsb2hs",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "clock": [
        "System.Clock"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "multiset": [
        "Data.MultiSet"
      ],
      "tls": [],
      "transformers": [],
      "xml": [
        "Text.XML.Light"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.MultiSet",
      "Data.Set",
      "NationStates.Core",
      "NationStates.Nation",
      "NationStates.RateLimit",
      "NationStates.Types",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Prelude",
      "System.Clock",
      "Text.Read",
      "Text.XML.Light"
    ],
    "modules": [
      "NationStates",
      "NationStates.Core",
      "NationStates.RateLimit",
      "NationStates.Nation",
      "NationStates.Region",
      "NationStates.Types",
      "NationStates.Verify"
    ],
    "name": "nationstates",
    "version": "0.5.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "System.Environment",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "conduit": [
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "containers": [
        "Data.Set"
      ],
      "libnotify": [],
      "osdkeys": [],
      "process": [
        "System.Process"
      ],
      "resourcet": [],
      "time": [],
      "transformers": []
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "OSDKeys",
      "OSDKeys.Types",
      "System.Environment",
      "System.Process",
      "Text.Read"
    ],
    "modules": [
      "OSDKeys",
      "OSDKeys.Types",
      "OSDKeys.XInput"
    ],
    "name": "osdkeys",
    "version": "0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Int",
        "Data.IORef",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Foreign",
        "Foreign.C",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Database.SQLite3",
      "Database.SQLite3.Bindings",
      "Database.SQLite3.Bindings.Types",
      "Database.SQLite3.Direct",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.Int",
      "Data.IORef",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.IO",
      "Data.Typeable",
      "Foreign",
      "Foreign.C",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "StrictEq",
      "System.Directory",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Timeout",
      "Test.HUnit"
    ],
    "modules": [
      "Database.SQLite3",
      "Database.SQLite3.Direct",
      "Database.SQLite3.Bindings",
      "Database.SQLite3.Bindings.Types"
    ],
    "name": "direct-sqlite",
    "version": "2.3.17"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.List",
        "Data.String",
        "Prelude",
        "System.Exit"
      ],
      "split": [
        "Data.List.Split"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Data.List",
      "Data.List.Split",
      "Data.String",
      "Prelude",
      "System.Exit",
      "Test.QuickCheck",
      "Text.PrettyPrint.Boxes"
    ],
    "modules": [
      "Text.PrettyPrint.Boxes"
    ],
    "name": "boxes",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Traversable",
        "Data.Word"
      ],
      "monad-primitive": [
        "Control.Monad.Primitive.Class"
      ],
      "mwc-random": [
        "System.Random.MWC",
        "System.Random.MWC.CondensedTable",
        "System.Random.MWC.Distributions"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Primitive",
      "Control.Monad.Primitive.Class",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Data.Traversable",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Word",
      "System.Random.MWC",
      "System.Random.MWC.CondensedTable",
      "System.Random.MWC.Distributions",
      "System.Random.MWC.Monad"
    ],
    "modules": [
      "System.Random.MWC.Monad",
      "System.Random.MWC.Distributions.Monad",
      "System.Random.MWC.CondensedTable.Monad"
    ],
    "name": "mwc-random-monad",
    "version": "0.7.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Monoid",
        "Data.Proxy"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lens": [],
      "servant": [
        "Servant.API"
      ],
      "text": []
    },
    "imports": [
      "Data.Char",
      "Data.Monoid",
      "Data.Proxy",
      "Network.HTTP.Types",
      "Servant.API",
      "Servant.Foreign",
      "Servant.Foreign.Inflections",
      "Servant.Foreign.Internal",
      "Test.Hspec"
    ],
    "modules": [
      "Servant.Foreign",
      "Servant.Foreign.Internal",
      "Servant.Foreign.Inflections"
    ],
    "name": "servant-foreign",
    "version": "0.8.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Data.Bits",
        "Data.Char",
        "Data.Complex",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.Version",
        "Data.Void",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "GHC.Base",
        "GHC.Fingerprint",
        "GHC.Generics",
        "GHC.Ptr",
        "GHC.Word",
        "Numeric",
        "Numeric.Natural",
        "Prelude",
        "System.CPUTime",
        "System.Environment",
        "System.IO",
        "Text.ParserCombinators.ReadP",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Builder.Prim",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Short",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ]
    },
    "imports": [
      "Action",
      "BinaryDerive",
      "Codec.Archive.Tar",
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fail",
      "Criterion.Main",
      "Data.Array.Unboxed",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Binary",
      "Data.Binary.Builder",
      "Data.Binary.Class",
      "Data.Binary.Generic",
      "Data.Binary.Get",
      "Data.Binary.Get.Internal",
      "Data.Binary.Internal",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Short",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Complex",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Generics",
      "Data.HashMap.Lazy",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Serialize.Get",
      "Data.Set",
      "Data.Tree",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "GHC.Base",
      "GHC.Fingerprint",
      "GHC.Generics",
      "GHC.IOBase",
      "GHC.Prim",
      "GHC.Ptr",
      "GHC.Word",
      "MemBench",
      "Numeric",
      "Numeric.Natural",
      "Prelude",
      "System.CPUTime",
      "System.Environment",
      "System.IO",
      "Test.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Text.Printf"
    ],
    "modules": [
      "Data.Binary",
      "Data.Binary.Put",
      "Data.Binary.Get",
      "Data.Binary.Get.Internal",
      "Data.Binary.Builder"
    ],
    "name": "binary",
    "version": "0.8.3.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Datastore",
      "Network.Google.Datastore.Types",
      "Network.Google.Resource.Datastore.Projects.AllocateIds",
      "Network.Google.Resource.Datastore.Projects.BeginTransaction",
      "Network.Google.Resource.Datastore.Projects.Commit",
      "Network.Google.Resource.Datastore.Projects.Lookup",
      "Network.Google.Resource.Datastore.Projects.Rollback",
      "Network.Google.Resource.Datastore.Projects.RunQuery"
    ],
    "name": "gogol-datastore",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.ST",
        "Control.Monad.ST.Lazy",
        "Data.Char",
        "Data.Int",
        "Data.Ix",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "Foreign.StablePtr",
        "GHC.Arr",
        "GHC.Base",
        "GHC.Exts",
        "GHC.Int",
        "GHC.IO",
        "GHC.IOArray",
        "GHC.IO.Exception",
        "GHC.IO.Handle",
        "GHC.Ptr",
        "GHC.ST",
        "GHC.Stable",
        "GHC.Word",
        "System.IO.Error"
      ]
    },
    "imports": [
      "Control.Monad.ST",
      "Control.Monad.ST.Lazy",
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Array.IO",
      "Data.Array.IO.Internals",
      "Data.Array.MArray",
      "Data.Array.MArray.Safe",
      "Data.Array.ST",
      "Data.Array.Storable.Internals",
      "Data.Char",
      "Data.Int",
      "Data.Ix",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "GHC.Arr",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Int",
      "GHC.IO",
      "GHC.IOArray",
      "GHC.IO.Exception",
      "GHC.IO.Handle",
      "GHC.Ptr",
      "GHC.ST",
      "GHC.Stable",
      "GHC.Word",
      "System.IO.Error"
    ],
    "modules": [
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Array.IO",
      "Data.Array.IO.Safe",
      "Data.Array.IO.Internals",
      "Data.Array.MArray",
      "Data.Array.MArray.Safe",
      "Data.Array.ST",
      "Data.Array.ST.Safe",
      "Data.Array.Storable",
      "Data.Array.Storable.Safe",
      "Data.Array.Storable.Internals",
      "Data.Array.Unboxed",
      "Data.Array.Unsafe"
    ],
    "name": "array",
    "version": "0.5.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "pipes": [
        "Pipes"
      ],
      "transformers": [],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString",
      "Data.IORef",
      "Network.HTTP.Types",
      "Network.Wai",
      "Pipes"
    ],
    "modules": [
      "Pipes.Wai"
    ],
    "name": "pipes-wai",
    "version": "3.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Data.Monoid",
        "Data.String",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "deepseq": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Filesystem.Path",
      "Filesystem.Path.Rules",
      "Prelude"
    ],
    "modules": [
      "Filesystem.Path",
      "Filesystem.Path.CurrentOS",
      "Filesystem.Path.Rules"
    ],
    "name": "system-filepath",
    "version": "0.4.13.4"
  },
  {
    "dependencies": {
      "base": [],
      "hspec-core": [],
      "smallcheck": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Test.Hspec.SmallCheck"
    ],
    "name": "hspec-smallcheck",
    "version": "0.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Functor.Sum",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Exts",
        "GHC.IO",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder.Internal",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "deepseq": [],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "streaming": [
        "Streaming",
        "Streaming.Internal",
        "Streaming.Prelude"
      ],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Morph",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Resource",
      "Data.ByteString",
      "Data.ByteString.Builder.Internal",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Streaming",
      "Data.ByteString.Streaming.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Functor.Compose",
      "Data.Functor.Identity",
      "Data.Functor.Sum",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Exts",
      "GHC.IO",
      "Prelude",
      "Streaming",
      "Streaming.Internal",
      "Streaming.Prelude",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.ByteString.Streaming",
      "Data.ByteString.Streaming.Char8",
      "Data.ByteString.Streaming.Internal"
    ],
    "name": "streaming-bytestring",
    "version": "0.1.4.4"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Unboxed"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Ptr",
        "GHC.Base",
        "GHC.Exts",
        "GHC.Word",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Builder.Internal",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "process": [
        "System.Process.Internals"
      ],
      "random": [
        "System.Random"
      ],
      "stm": [],
      "text": [
        "Data.Text",
        "Data.Text.Array",
        "Data.Text.Encoding",
        "Data.Text.Internal.Encoding.Utf16",
        "Data.Text.Internal.Encoding.Utf32",
        "Data.Text.Internal.Encoding.Utf8",
        "Data.Text.Internal.Unsafe.Char",
        "Data.Text.Internal.Unsafe.Shift",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Data.Functor.Constant"
      ],
      "zlib": [
        "Codec.Compression.GZip",
        "Codec.Compression.Zlib",
        "Codec.Compression.Zlib.Raw"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Internal",
      "Blaze.ByteString.Builder.Internal.Buffer",
      "Blaze.ByteString.Builder.Internal.Types",
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib",
      "Codec.Compression.Zlib.Raw",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Criterion.Main",
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Builder.Internal",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Streaming.Blaze",
      "Data.Streaming.ByteString.Builder",
      "Data.Streaming.ByteString.Builder.Buffer",
      "Data.Streaming.ByteString.Builder.Class",
      "Data.Streaming.ByteString.BuilderSpec",
      "Data.Streaming.FileRead",
      "Data.Streaming.Filesystem",
      "Data.Streaming.Network.Internal",
      "Data.Streaming.Process",
      "Data.Streaming.Text",
      "Data.Streaming.Zlib",
      "Data.Streaming.Zlib.Lowlevel",
      "Data.String",
      "Data.Text",
      "Data.Text.Array",
      "Data.Text.Encoding",
      "Data.Text.Internal.Encoding.Utf16",
      "Data.Text.Internal.Encoding.Utf32",
      "Data.Text.Internal.Encoding.Utf8",
      "Data.Text.Internal.Unsafe.Char",
      "Data.Text.Internal.Unsafe.Shift",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Ptr",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Word",
      "Network.Socket",
      "Network.Socket.ByteString",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix.Directory",
      "System.Posix.Files",
      "System.Process.Internals",
      "System.Random",
      "System.Win32",
      "System.Win32File",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Streaming.Blaze",
      "Data.Streaming.ByteString.Builder",
      "Data.Streaming.ByteString.Builder.Buffer",
      "Data.Streaming.ByteString.Builder.Class",
      "Data.Streaming.FileRead",
      "Data.Streaming.Filesystem",
      "Data.Streaming.Network",
      "Data.Streaming.Network.Internal",
      "Data.Streaming.Process",
      "Data.Streaming.Process.Internal",
      "Data.Streaming.Text",
      "Data.Streaming.Zlib",
      "Data.Streaming.Zlib.Lowlevel"
    ],
    "name": "streaming-commons",
    "version": "0.1.16"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "GHC.Exts",
        "Numeric",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [],
      "text": [
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "utf8-string": [
        "Codec.Binary.UTF8.String"
      ]
    },
    "imports": [
      "Array",
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Codec.Binary.UTF8.String",
      "Control.Applicative",
      "Control.Monad",
      "Data.Array",
      "Data.Array.Base",
      "Data.Bits",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Word",
      "GHC.Exts",
      "GlaExts",
      "Language.JavaScript.Parser",
      "Language.JavaScript.Parser.AST",
      "Language.JavaScript.Parser.Grammar5",
      "Language.JavaScript.Parser.Lexer",
      "Language.JavaScript.Parser.LexerUtils",
      "Language.JavaScript.Parser.Parser",
      "Language.JavaScript.Parser.ParserMonad",
      "Language.JavaScript.Parser.SrcLocation",
      "Language.JavaScript.Parser.Token",
      "Language.JavaScript.Pretty.Printer",
      "Language.JavaScript.Process.Minify",
      "Numeric",
      "Prelude",
      "System.Exit",
      "System.IO",
      "Test.Hspec",
      "Test.Hspec.Runner",
      "Tests.ExpressionParser",
      "Tests.Lexer",
      "Tests.LiteralParser",
      "Tests.Minify",
      "Tests.ProgramParser",
      "Tests.RoundTrip",
      "Tests.StatementParser"
    ],
    "modules": [
      "Language.JavaScript.Parser",
      "Language.JavaScript.Parser.AST",
      "Language.JavaScript.Parser.Grammar5",
      "Language.JavaScript.Parser.Lexer",
      "Language.JavaScript.Parser.Parser",
      "Language.JavaScript.Parser.SrcLocation",
      "Language.JavaScript.Pretty.Printer",
      "Language.JavaScript.Process.Minify"
    ],
    "name": "language-javascript",
    "version": "0.6.0.8"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.GroupsMigration",
      "Network.Google.GroupsMigration.Types",
      "Network.Google.Resource.GroupsMigration.Archive.Insert"
    ],
    "name": "gogol-groups-migration",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "MonadRandom": [
        "Control.Monad.Random"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Bifunctor",
        "Data.Foldable",
        "Data.Function",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Prelude"
      ],
      "bifunctors": [],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "free": [
        "Control.Monad.Free.Class"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.State",
        "Control.Monad.Writer.Class"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "semigroupoids": [
        "Data.Functor.Alt",
        "Data.Functor.Bind",
        "Data.Functor.Plus"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Free.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Morph",
      "Control.Monad.Random",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Writer.Class",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bitraversable",
      "Data.Either.Combinators",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Alt",
      "Data.Functor.Bind",
      "Data.Functor.Plus",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Semigroup",
      "Data.Traversable",
      "Prelude"
    ],
    "modules": [
      "Control.Monad.Trans.Either",
      "Data.Either.Combinators",
      "Data.Either.Validation"
    ],
    "name": "either",
    "version": "4.4.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "containers": [
        "Data.Set"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "transformers": [],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Comonad",
      "Control.Foldl",
      "Control.Foldl.Internal",
      "Control.Monad",
      "Control.Monad.Primitive",
      "Data.ByteString",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Foldable",
      "Data.Functor.Contravariant",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Word",
      "Prelude",
      "System.Random.MWC"
    ],
    "modules": [
      "Control.Foldl",
      "Control.Foldl.ByteString",
      "Control.Foldl.Text"
    ],
    "name": "foldl",
    "version": "1.2.1"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Fixed",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "Foreign.StablePtr",
        "GHC.Conc",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "clock": [
        "System.Clock"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA",
        "Text.Regex.TDFA.String"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "unbounded-delays": [
        "Control.Concurrent.Timeout"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.STM",
      "Control.Concurrent.Timeout",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Data.Char",
      "Data.Fixed",
      "Data.Foldable",
      "Data.IntMap",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Sequence",
      "Data.Tagged",
      "Data.Typeable",
      "Foreign.StablePtr",
      "GHC.Conc",
      "GHC.Generics",
      "Options.Applicative",
      "Prelude",
      "System.Clock",
      "System.Console.ANSI",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Test.Tasty.CmdLine",
      "Test.Tasty.Core",
      "Test.Tasty.Ingredients",
      "Test.Tasty.Ingredients.Basic",
      "Test.Tasty.Ingredients.ConsoleReporter",
      "Test.Tasty.Ingredients.IncludingOptions",
      "Test.Tasty.Ingredients.ListTests",
      "Test.Tasty.Options",
      "Test.Tasty.Options.Core",
      "Test.Tasty.Options.Env",
      "Test.Tasty.Parallel",
      "Test.Tasty.Patterns",
      "Test.Tasty.Run",
      "Test.Tasty.Runners",
      "Test.Tasty.Runners.Reducers",
      "Test.Tasty.Runners.Utils",
      "Text.Printf",
      "Text.Regex.TDFA",
      "Text.Regex.TDFA.String"
    ],
    "modules": [
      "Test.Tasty",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Test.Tasty.Runners",
      "Test.Tasty.Ingredients",
      "Test.Tasty.Ingredients.Basic"
    ],
    "name": "tasty",
    "version": "0.11.0.4"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Prelude"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "haskell-src-meta": [],
      "parsec": [],
      "scientific": [],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Attoparsec.Text",
      "Data.JSON.QQ",
      "Data.Text",
      "Data.Vector",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Person",
      "Prelude",
      "Prelude.Compat"
    ],
    "modules": [
      "Data.Aeson.QQ"
    ],
    "name": "aeson-qq",
    "version": "0.8.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Category.Unicode",
      "Control.Monad",
      "Data.Bool",
      "Data.Bool.Unicode",
      "Data.Either",
      "Data.Eq",
      "Data.Eq.Unicode",
      "Data.Foldable",
      "Data.Function",
      "Data.Function.Unicode",
      "Data.List",
      "Data.List.Unicode",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ord.Unicode",
      "Data.Ratio",
      "Prelude"
    ],
    "modules": [
      "Control.Applicative.Unicode",
      "Control.Arrow.Unicode",
      "Control.Monad.Unicode",
      "Data.Bool.Unicode",
      "Data.Eq.Unicode",
      "Data.Foldable.Unicode",
      "Data.Function.Unicode",
      "Data.List.Unicode",
      "Data.Monoid.Unicode",
      "Data.Ord.Unicode",
      "Prelude.Unicode"
    ],
    "name": "base-unicode-symbols",
    "version": "0.2.2.4"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Loops",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Control.Monad.Loops"
    ],
    "name": "monad-loops",
    "version": "0.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Monoid",
        "Prelude",
        "System.IO.Error"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Catch",
      "Data.Foldable",
      "Data.Monoid",
      "Prelude",
      "System.IO.Error"
    ],
    "modules": [
      "Control.Exceptional"
    ],
    "name": "exceptional",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Language.Haskell.TH",
      "Language.Haskell.TH.Compat.Reify.Current",
      "Language.Haskell.TH.Compat.Reify.V210"
    ],
    "modules": [
      "Language.Haskell.TH.Compat.Reify"
    ],
    "name": "th-reify-compat",
    "version": "0.0.1.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.ModuleName",
        "Distribution.PackageDescription",
        "Distribution.Simple",
        "Distribution.Simple.LocalBuildInfo",
        "Distribution.Simple.Setup"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bool",
        "Data.Char",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Tuple",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.Posix.Types",
        "Text.Read"
      ],
      "bytestring": [],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "haskell-gi": [],
      "haskell-gi-base": [
        "Data.GI.Base.BasicConversions",
        "Data.GI.Base.BasicTypes",
        "Data.GI.Base.GError",
        "Data.GI.Base.ManagedPtr",
        "Data.GI.Base.Utils"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer"
      ],
      "pretty-show": [
        "Text.Show.Pretty"
      ],
      "process": [
        "System.Process"
      ],
      "safe": [
        "Safe"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Read"
      ],
      "transformers": [],
      "xdg-basedir": [
        "System.Environment.XDG.BaseDir"
      ],
      "xml-conduit": [
        "Text.XML"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer",
      "Data.Bool",
      "Data.Char",
      "Data.Foldable",
      "Data.GI.Base.BasicConversions",
      "Data.GI.Base.BasicTypes",
      "Data.GI.Base.GError",
      "Data.GI.Base.ManagedPtr",
      "Data.GI.Base.Utils",
      "Data.GI.CodeGen.API",
      "Data.GI.CodeGen.Cabal",
      "Data.GI.CodeGen.Callable",
      "Data.GI.CodeGen.Code",
      "Data.GI.CodeGen.CodeGen",
      "Data.GI.CodeGen.Config",
      "Data.GI.CodeGen.Constant",
      "Data.GI.CodeGen.Conversions",
      "Data.GI.CodeGen.Fixups",
      "Data.GI.CodeGen.GObject",
      "Data.GI.CodeGen.GType",
      "Data.GI.CodeGen.Inheritance",
      "Data.GI.CodeGen.LibGIRepository",
      "Data.GI.CodeGen.OverloadedLabels",
      "Data.GI.CodeGen.OverloadedMethods",
      "Data.GI.CodeGen.OverloadedSignals",
      "Data.GI.CodeGen.Overrides",
      "Data.GI.CodeGen.PkgConfig",
      "Data.GI.CodeGen.ProjectInfo",
      "Data.GI.CodeGen.Properties",
      "Data.GI.CodeGen.Signal",
      "Data.GI.CodeGen.Struct",
      "Data.GI.CodeGen.SymbolNaming",
      "Data.GI.CodeGen.Transfer",
      "Data.GI.CodeGen.Type",
      "Data.GI.CodeGen.Util",
      "Data.GI.GIR.Alias",
      "Data.GI.GIR.Allocation",
      "Data.GI.GIR.Arg",
      "Data.GI.GIR.BasicTypes",
      "Data.GI.GIR.Callable",
      "Data.GI.GIR.Callback",
      "Data.GI.GIR.Constant",
      "Data.GI.GIR.Deprecation",
      "Data.GI.GIR.Documentation",
      "Data.GI.GIR.Enum",
      "Data.GI.GIR.Field",
      "Data.GI.GIR.Flags",
      "Data.GI.GIR.Function",
      "Data.GI.GIR.Interface",
      "Data.GI.GIR.Method",
      "Data.GI.GIR.Object",
      "Data.GI.GIR.Parser",
      "Data.GI.GIR.Property",
      "Data.GI.GIR.Repository",
      "Data.GI.GIR.Signal",
      "Data.GI.GIR.Struct",
      "Data.GI.GIR.Type",
      "Data.GI.GIR.Union",
      "Data.GI.GIR.XMLUtils",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Read",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Distribution.ModuleName",
      "Distribution.PackageDescription",
      "Distribution.Simple",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.Setup",
      "Foreign",
      "Foreign.C",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "Paths",
      "Prelude",
      "Safe",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Environment.XDG.BaseDir",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.Posix.Types",
      "System.Process",
      "Text.Read",
      "Text.Show.Pretty",
      "Text.XML"
    ],
    "modules": [
      "Data.GI.GIR.Alias",
      "Data.GI.GIR.Allocation",
      "Data.GI.GIR.Arg",
      "Data.GI.GIR.BasicTypes",
      "Data.GI.GIR.Callable",
      "Data.GI.GIR.Callback",
      "Data.GI.GIR.Constant",
      "Data.GI.GIR.Deprecation",
      "Data.GI.GIR.Documentation",
      "Data.GI.GIR.Enum",
      "Data.GI.GIR.Field",
      "Data.GI.GIR.Flags",
      "Data.GI.GIR.Function",
      "Data.GI.GIR.Interface",
      "Data.GI.GIR.Method",
      "Data.GI.GIR.Object",
      "Data.GI.GIR.Parser",
      "Data.GI.GIR.Property",
      "Data.GI.GIR.Repository",
      "Data.GI.GIR.Signal",
      "Data.GI.GIR.Struct",
      "Data.GI.GIR.Type",
      "Data.GI.GIR.Union",
      "Data.GI.GIR.XMLUtils",
      "Data.GI.CodeGen.API",
      "Data.GI.CodeGen.Cabal",
      "Data.GI.CodeGen.CabalHooks",
      "Data.GI.CodeGen.Callable",
      "Data.GI.CodeGen.Code",
      "Data.GI.CodeGen.CodeGen",
      "Data.GI.CodeGen.Config",
      "Data.GI.CodeGen.Constant",
      "Data.GI.CodeGen.Conversions",
      "Data.GI.CodeGen.Fixups",
      "Data.GI.CodeGen.GObject",
      "Data.GI.CodeGen.GType",
      "Data.GI.CodeGen.Inheritance",
      "Data.GI.CodeGen.LibGIRepository",
      "Data.GI.CodeGen.OverloadedSignals",
      "Data.GI.CodeGen.OverloadedLabels",
      "Data.GI.CodeGen.OverloadedMethods",
      "Data.GI.CodeGen.Overrides",
      "Data.GI.CodeGen.PkgConfig",
      "Data.GI.CodeGen.ProjectInfo",
      "Data.GI.CodeGen.Properties",
      "Data.GI.CodeGen.Signal",
      "Data.GI.CodeGen.Struct",
      "Data.GI.CodeGen.SymbolNaming",
      "Data.GI.CodeGen.Transfer",
      "Data.GI.CodeGen.Type",
      "Data.GI.CodeGen.Util"
    ],
    "name": "haskell-gi",
    "version": "0.18"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Bifunctor",
        "Data.Bits",
        "Data.Char",
        "Data.Coerce",
        "Data.Complex",
        "Data.Data",
        "Data.Dynamic",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.IORef",
        "Data.Ix",
        "Data.Kind",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Type.Coercion",
        "Data.Type.Equality",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "Foreign.C",
        "Foreign.C.Error",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.StablePtr",
        "Foreign.Storable",
        "GHC.Arr",
        "GHC.Base",
        "GHC.Conc.Signal",
        "GHC.Exception",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.IO",
        "GHC.IOArray",
        "GHC.IO.Handle.Text",
        "GHC.Num",
        "GHC.OldList",
        "GHC.OverloadedLabels",
        "GHC.Real",
        "GHC.Show",
        "GHC.Stack",
        "GHC.StaticPtr",
        "GHC.TypeLits",
        "GHC.Word",
        "Numeric",
        "Prelude",
        "System.CPUTime",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem",
        "System.Posix.Internals",
        "System.Posix.Types",
        "Text.Read",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "free": [
        "Control.Monad.Free.TH",
        "Control.Monad.Trans.Free",
        "Control.Monad.Trans.Free.Church"
      ],
      "ghc": [],
      "ghc-paths": [
        "GHC.Paths"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "syb": [
        "Data.Generics"
      ]
    },
    "imports": [
      "A",
      "Air.TH",
      "Algebra.Additive",
      "Algebra.Field",
      "Algebra.Laws",
      "Algebra.RealRing",
      "Algebra.ToInteger",
      "Algebra.Transcendental",
      "ApiAnnotation",
      "Associated",
      "AssociatedInternal",
      "Aws.SSSP.App",
      "B",
      "Bag",
      "Bar",
      "Base",
      "BasicTypes",
      "BooleanFormula",
      "Bundle",
      "BundleInternal",
      "BundleInternal1",
      "C",
      "CheckUtils",
      "Class",
      "CoAxiom",
      "Compiler.Hoopl",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Arrow.Machine.ArrowUtil",
      "Control.Category",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.Fix",
      "Control.Monad.Free.TH",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.RWS",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Free",
      "Control.Monad.Trans.Free.Church",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Writer",
      "CPUTime",
      "Data.Algorithm.Diff",
      "Data.Algorithm.DiffOutput",
      "Data.Array.Base",
      "Data.Array.Unboxed",
      "Data.Bifunctor",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.ISO8583",
      "Data.Binary.ISO8583.TH",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Coerce",
      "Data.Complex",
      "Data.Convertible",
      "Data.Data",
      "Data.DoubleWord",
      "Data.Dynamic",
      "Data.EventList.Absolute.TimeBody",
      "Data.EventList.Relative.BodyTime",
      "Data.EventList.Relative.MixedTime",
      "Data.EventList.Relative.TimeBody",
      "Data.EventList.Relative.TimeMixed",
      "Data.EventList.Relative.TimeTime",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor.Identity",
      "Data.Generics",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.IORef",
      "Data.Ix",
      "Data.Kind",
      "Data.List",
      "Data.List.HT",
      "Data.List.Match",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Monoid.Null",
      "Data.Numbers.Primes",
      "Data.Ord",
      "Data.Profunctor",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Set",
      "Data.Singletons",
      "Data.Singletons.Prelude.Bool",
      "Data.Singletons.Prelude.Instances",
      "Data.Singletons.Promote",
      "Data.Singletons.Single",
      "Data.Singletons.Util",
      "Data.StorableVector",
      "Data.StorableVector.ST.Strict",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Traversable",
      "Data.Tree",
      "Data.Tuple.HT",
      "Data.Typeable",
      "Data.Type.Coercion",
      "Data.Type.Equality",
      "Data.Vector",
      "Data.Vector.Storable",
      "Data.Word",
      "Debug.Trace",
      "DeprM",
      "Digraph",
      "DriverPhases",
      "DriverPipeline",
      "DynFlags",
      "ErrUtils",
      "ExportSyntax",
      "Extends",
      "ExtraConstraintsWildcardInTypeSplice",
      "FastString",
      "File.Binary",
      "File.Binary.Instances",
      "File.Binary.Instances.BigEndian",
      "File.Binary.PNG",
      "Foo",
      "FooBarBaz",
      "Foreign",
      "Foreign.C",
      "ForeignCall",
      "Foreign.C.Error",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "Foreign.Storable",
      "GHC",
      "GHC.Arr",
      "GHC.Base",
      "GHC.Classes",
      "GHC.Conc.Signal",
      "GHC.Exception",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.IO",
      "GHC.IOArray",
      "GHC.IO.Handle.Text",
      "GHC.LanguageExtensions",
      "GHC.Magic",
      "GhcMonad",
      "GHC.Num",
      "GHC.OldList",
      "GHC.OverloadedLabels",
      "GHC.Paths",
      "GhcPlugins",
      "GHC.Prim",
      "GHC.Real",
      "GHC.Show",
      "GHC.Stack",
      "GHC.StaticPtr",
      "GHC.TypeLits",
      "GHC.Types",
      "GHC.Word",
      "HeaderInfo",
      "HscTypes",
      "HsDecls",
      "Language.Haskell.GHC.ExactPrint",
      "Language.Haskell.GHC.ExactPrint.Annotate",
      "Language.Haskell.GHC.ExactPrint.Delta",
      "Language.Haskell.GHC.ExactPrint.GhcInterim",
      "Language.Haskell.GHC.ExactPrint.Lookup",
      "Language.Haskell.GHC.ExactPrint.Parsers",
      "Language.Haskell.GHC.ExactPrint.Preprocess",
      "Language.Haskell.GHC.ExactPrint.Print",
      "Language.Haskell.GHC.ExactPrint.Transform",
      "Language.Haskell.GHC.ExactPrint.Types",
      "Language.Haskell.GHC.ExactPrint.Utils",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Ppr",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Lexer",
      "Llvm.Data.IrType",
      "Llvm.Data.Shared",
      "Map",
      "MonadUtils",
      "Name",
      "NameSet",
      "Network.TigHTTP.Token",
      "Numeric",
      "Numeric.Algebra",
      "Numeric.NonNegative.Class",
      "Numeric.NonNegative.Wrapper",
      "NumericPrelude.Base",
      "NumericPrelude.Elementwise",
      "NumericPrelude.Numeric",
      "OccName",
      "OrdList",
      "Outputable",
      "OverloadedLabelsRun04",
      "OverloadedRecFldsFail04",
      "OverloadedRecFldsFail06",
      "OverloadedRecFldsFail10",
      "OverloadedRecFldsFail11",
      "OverloadedRecFldsFail12",
      "OverloadedRecFldsRun02",
      "Parser",
      "Prelude",
      "Printf",
      "QQ",
      "RandomPGC",
      "RdrName",
      "RuleDefiningPlugin",
      "SayAnnNames",
      "Set",
      "SH",
      "Sound.MIDI.Message.Channel.Voice",
      "Sound.MIDI.Message.Class.Check",
      "Splices",
      "SrcLoc",
      "Stream",
      "StringBuffer",
      "Synthesizer.CausalIO.Gate",
      "Synthesizer.CausalIO.Process",
      "Synthesizer.Generic.Cut",
      "Synthesizer.MIDI.EventList",
      "Synthesizer.MIDI.Value",
      "Synthesizer.MIDI.Value.BendModulation",
      "Synthesizer.MIDI.Value.BendWheelPressure",
      "Synthesizer.PiecewiseConstant.Signal",
      "Synthesizer.Storable.Cut",
      "Synthesizer.Zip",
      "System.CPUTime",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.IO",
      "System.IO.Silently",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Mem",
      "System.Posix.Internals",
      "System.Posix.Types",
      "System.Random",
      "T10110A",
      "T10110B",
      "T10134a",
      "T10182a",
      "T10233a",
      "T10267a",
      "T10285a",
      "T10322A",
      "T10322B",
      "T10420a",
      "T10487",
      "T10534a",
      "T10602b",
      "T10704a",
      "T10819",
      "T10890",
      "T10897a",
      "T10971c",
      "T10997",
      "T10997a",
      "T11076A",
      "T11164a",
      "T11164b",
      "T11167",
      "T11173a",
      "T1830",
      "T2991LiterateModule",
      "T6018a",
      "T6018Afail",
      "T6018Bfail",
      "T6018Cfail",
      "T6018Dfail",
      "T7672a",
      "T7918A",
      "T9204b2",
      "T9233a",
      "T9840a",
      "Test.Common",
      "Test.CommonUtils",
      "Test.Consistency",
      "Test.HUnit",
      "Test.Transform",
      "Text.Markdown.Pap.Text",
      "Text.Papillon",
      "Text.PrettyPrint",
      "Text.Read",
      "TH",
      "Turtle",
      "UHC.Light.Compiler.Base.Common",
      "UHC.Light.Compiler.Core",
      "UHC.Light.Compiler.Error",
      "UHC.Light.Compiler.FinalEnv",
      "UHC.Light.Compiler.Opts.Base",
      "UHC.Light.Compiler.Ty",
      "UniqSet",
      "Unique",
      "Unsafe.Coerce",
      "Utilities",
      "Var",
      "Vision.Primitive"
    ],
    "modules": [
      "Language.Haskell.GHC.ExactPrint",
      "Language.Haskell.GHC.ExactPrint.Annotate",
      "Language.Haskell.GHC.ExactPrint.Delta",
      "Language.Haskell.GHC.ExactPrint.GhcInterim",
      "Language.Haskell.GHC.ExactPrint.Lookup",
      "Language.Haskell.GHC.ExactPrint.Preprocess",
      "Language.Haskell.GHC.ExactPrint.Print",
      "Language.Haskell.GHC.ExactPrint.Transform",
      "Language.Haskell.GHC.ExactPrint.Types",
      "Language.Haskell.GHC.ExactPrint.Utils",
      "Language.Haskell.GHC.ExactPrint.Parsers"
    ],
    "name": "ghc-exactprint",
    "version": "0.5.2.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode",
        "Data.Aeson.TH",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Typeable",
        "Foreign.C",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Internals"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Lift",
        "Data.Conduit.List"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "enclosed-exceptions": [
        "Control.Exception.Enclosed"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Read"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector"
      ],
      "yaml": []
    },
    "imports": [
      "Config",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Exception.Enclosed",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.TH",
      "Data.Aeson.Types",
      "Data.Attoparsec.Text",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Lift",
      "Data.Conduit.List",
      "Data.Data",
      "Data.Either.Compat",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Semigroup",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Read",
      "Data.Typeable",
      "Data.Vector",
      "Data.Yaml",
      "Data.Yaml.Builder",
      "Data.Yaml.Include",
      "Data.Yaml.Internal",
      "Data.Yaml.Pretty",
      "Foreign.C",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Prelude",
      "Simple",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Posix.Internals",
      "Test.Hspec",
      "Test.HUnit",
      "Test.Mockery.Directory",
      "Text.Libyaml",
      "Text.RawString.QQ"
    ],
    "modules": [
      "Text.Libyaml",
      "Data.Yaml",
      "Data.Yaml.Aeson",
      "Data.Yaml.Builder",
      "Data.Yaml.Config",
      "Data.Yaml.Pretty",
      "Data.Yaml.Parser",
      "Data.Yaml.Include"
    ],
    "name": "yaml",
    "version": "0.8.18.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Typeable",
        "Foreign.Marshal",
        "Prelude"
      ],
      "bytestring": [],
      "cairo": [],
      "glib": [
        "System.Glib.FFI",
        "System.Glib.GError",
        "System.Glib.UTFString"
      ],
      "gtk3": [
        "Graphics.UI.GtkInternals"
      ],
      "mtl": [],
      "pango": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.Typeable",
      "Foreign.Marshal",
      "Graphics.UI.GtkInternals",
      "Graphics.UI.Gtk.WebKit.DOM.Event",
      "Graphics.UI.Gtk.WebKit.DOM.EventTargetClosures",
      "Graphics.UI.Gtk.WebKit.DOM.MouseEvent",
      "Graphics.UI.Gtk.WebKit.DOM.UIEvent",
      "Prelude",
      "System.Glib.FFI",
      "System.Glib.GError",
      "System.Glib.UTFString"
    ],
    "modules": [
      "Graphics.UI.Gtk.WebKit.CacheModel",
      "Graphics.UI.Gtk.WebKit.Download",
      "Graphics.UI.Gtk.WebKit.GeolocationPolicyDecision",
      "Graphics.UI.Gtk.WebKit.GtkInternals",
      "Graphics.UI.Gtk.WebKit.HitTestResult",
      "Graphics.UI.Gtk.WebKit.NetworkRequest",
      "Graphics.UI.Gtk.WebKit.NetworkResponse",
      "Graphics.UI.Gtk.WebKit.SecurityOrigin",
      "Graphics.UI.Gtk.WebKit.SoupAuthDialog",
      "Graphics.UI.Gtk.WebKit.Types",
      "Graphics.UI.Gtk.WebKit.WebBackForwardList",
      "Graphics.UI.Gtk.WebKit.WebDatabase",
      "Graphics.UI.Gtk.WebKit.WebDataSource",
      "Graphics.UI.Gtk.WebKit.WebFrame",
      "Graphics.UI.Gtk.WebKit.WebHistoryItem",
      "Graphics.UI.Gtk.WebKit.WebInspector",
      "Graphics.UI.Gtk.WebKit.WebNavigationAction",
      "Graphics.UI.Gtk.WebKit.WebPolicyDecision",
      "Graphics.UI.Gtk.WebKit.WebResource",
      "Graphics.UI.Gtk.WebKit.WebSettings",
      "Graphics.UI.Gtk.WebKit.WebView",
      "Graphics.UI.Gtk.WebKit.WebWindowFeatures",
      "Graphics.UI.Gtk.WebKit.DOM.ApplicationCache",
      "Graphics.UI.Gtk.WebKit.DOM.Attr",
      "Graphics.UI.Gtk.WebKit.DOM.AudioTrack",
      "Graphics.UI.Gtk.WebKit.DOM.AudioTrackList",
      "Graphics.UI.Gtk.WebKit.DOM.BarProp",
      "Graphics.UI.Gtk.WebKit.DOM.BatteryManager",
      "Graphics.UI.Gtk.WebKit.DOM.Blob",
      "Graphics.UI.Gtk.WebKit.DOM.CharacterData",
      "Graphics.UI.Gtk.WebKit.DOM.CSS",
      "Graphics.UI.Gtk.WebKit.DOM.CSSRule",
      "Graphics.UI.Gtk.WebKit.DOM.CSSRuleList",
      "Graphics.UI.Gtk.WebKit.DOM.CSSStyleDeclaration",
      "Graphics.UI.Gtk.WebKit.DOM.CSSStyleSheet",
      "Graphics.UI.Gtk.WebKit.DOM.CSSValue",
      "Graphics.UI.Gtk.WebKit.DOM.Document",
      "Graphics.UI.Gtk.WebKit.DOM.DocumentType",
      "Graphics.UI.Gtk.WebKit.DOM.DOMImplementation",
      "Graphics.UI.Gtk.WebKit.DOM.DOMNamedFlowCollection",
      "Graphics.UI.Gtk.WebKit.DOM.DOMSettableTokenList",
      "Graphics.UI.Gtk.WebKit.DOM.DOMTokenList",
      "Graphics.UI.Gtk.WebKit.DOM.Element",
      "Graphics.UI.Gtk.WebKit.DOM.Enums",
      "Graphics.UI.Gtk.WebKit.DOM.Event",
      "Graphics.UI.Gtk.WebKit.DOM.EventM",
      "Graphics.UI.Gtk.WebKit.DOM.EventTarget",
      "Graphics.UI.Gtk.WebKit.DOM.EventTargetClosures",
      "Graphics.UI.Gtk.WebKit.DOM.File",
      "Graphics.UI.Gtk.WebKit.DOM.FileList",
      "Graphics.UI.Gtk.WebKit.DOM.History",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLAnchorElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLAppletElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLAreaElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLBaseElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLBaseFontElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLBodyElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLBRElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLButtonElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLCollection",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLDirectoryElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLDivElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLDListElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLDocument",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLFieldSetElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLFontElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLFormElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLFrameElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLFrameSetElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLHeadElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLHeadingElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLHRElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLHtmlElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLIFrameElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLImageElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLInputElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLLabelElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLLegendElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLLIElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLLinkElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLMapElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLMenuElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLMetaElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLModElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLObjectElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLOListElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLOptGroupElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLOptionElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLOptionsCollection",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLParagraphElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLParamElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLPreElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLQuoteElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLScriptElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLSelectElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLStyleElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLTableCaptionElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLTableCellElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLTableColElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLTableElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLTableRowElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLTableSectionElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLTextAreaElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLTitleElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLUListElement",
      "Graphics.UI.Gtk.WebKit.DOM.KeyboardEvent",
      "Graphics.UI.Gtk.WebKit.DOM.Location",
      "Graphics.UI.Gtk.WebKit.DOM.MediaList",
      "Graphics.UI.Gtk.WebKit.DOM.MediaQueryList",
      "Graphics.UI.Gtk.WebKit.DOM.MimeType",
      "Graphics.UI.Gtk.WebKit.DOM.MimeTypeArray",
      "Graphics.UI.Gtk.WebKit.DOM.MouseEvent",
      "Graphics.UI.Gtk.WebKit.DOM.NamedNodeMap",
      "Graphics.UI.Gtk.WebKit.DOM.Navigator",
      "Graphics.UI.Gtk.WebKit.DOM.Node",
      "Graphics.UI.Gtk.WebKit.DOM.NodeFilter",
      "Graphics.UI.Gtk.WebKit.DOM.NodeIterator",
      "Graphics.UI.Gtk.WebKit.DOM.NodeList",
      "Graphics.UI.Gtk.WebKit.DOM.Performance",
      "Graphics.UI.Gtk.WebKit.DOM.PerformanceNavigation",
      "Graphics.UI.Gtk.WebKit.DOM.PerformanceTiming",
      "Graphics.UI.Gtk.WebKit.DOM.Plugin",
      "Graphics.UI.Gtk.WebKit.DOM.PluginArray",
      "Graphics.UI.Gtk.WebKit.DOM.ProcessingInstruction",
      "Graphics.UI.Gtk.WebKit.DOM.Range",
      "Graphics.UI.Gtk.WebKit.DOM.Screen",
      "Graphics.UI.Gtk.WebKit.DOM.SecurityPolicy",
      "Graphics.UI.Gtk.WebKit.DOM.Selection",
      "Graphics.UI.Gtk.WebKit.DOM.StyleMedia",
      "Graphics.UI.Gtk.WebKit.DOM.StyleSheet",
      "Graphics.UI.Gtk.WebKit.DOM.StyleSheetList",
      "Graphics.UI.Gtk.WebKit.DOM.Storage",
      "Graphics.UI.Gtk.WebKit.DOM.Text",
      "Graphics.UI.Gtk.WebKit.DOM.TextTrack",
      "Graphics.UI.Gtk.WebKit.DOM.TextTrackCue",
      "Graphics.UI.Gtk.WebKit.DOM.TextTrackCueList",
      "Graphics.UI.Gtk.WebKit.DOM.TextTrackList",
      "Graphics.UI.Gtk.WebKit.DOM.TreeWalker",
      "Graphics.UI.Gtk.WebKit.DOM.Touch",
      "Graphics.UI.Gtk.WebKit.DOM.UIEvent",
      "Graphics.UI.Gtk.WebKit.DOM.ValidityState",
      "Graphics.UI.Gtk.WebKit.DOM.VideoTrack",
      "Graphics.UI.Gtk.WebKit.DOM.VideoTrackList",
      "Graphics.UI.Gtk.WebKit.DOM.WebKitNamedFlow",
      "Graphics.UI.Gtk.WebKit.DOM.WebKitPoint",
      "Graphics.UI.Gtk.WebKit.DOM.WheelEvent",
      "Graphics.UI.Gtk.WebKit.DOM.Window",
      "Graphics.UI.Gtk.WebKit.DOM.XPathExpression",
      "Graphics.UI.Gtk.WebKit.DOM.XPathNSResolver",
      "Graphics.UI.Gtk.WebKit.DOM.XPathResult",
      "Graphics.UI.Gtk.WebKit.DOM.DOMStringList",
      "Graphics.UI.Gtk.WebKit.DOM.Geolocation",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLCanvasElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLDetailsElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLEmbedElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLKeygenElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLMarqueeElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLMediaElement",
      "Graphics.UI.Gtk.WebKit.DOM.HTMLVideoElement",
      "Graphics.UI.Gtk.WebKit.DOM.MediaError",
      "Graphics.UI.Gtk.WebKit.DOM.StorageInfo",
      "Graphics.UI.Gtk.WebKit.DOM.TimeRanges"
    ],
    "name": "webkitgtk3",
    "version": "0.14.2.0"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Monad",
        "Data.Maybe",
        "Text.Printf"
      ],
      "bytestring": [],
      "containers": [],
      "glib": [
        "System.Glib.GDateTime",
        "System.Glib.GError"
      ],
      "mtl": []
    },
    "imports": [
      "Control.Monad",
      "Data.ByteString.UTF8",
      "Data.Maybe",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.General.IconTheme",
      "Graphics.UI.Gtk.ModelView",
      "System.GIO",
      "System.GIO.Async.AsyncResult",
      "System.GIO.Async.Cancellable",
      "System.GIO.File.AppInfo",
      "System.GIO.File.ContentType",
      "System.GIO.File.File",
      "System.GIO.File.FileEnumerator",
      "System.GIO.File.FileInfo",
      "System.GIO.File.FileMonitor",
      "System.GIO.File.IOError",
      "System.GIO.File.MountOperation",
      "System.GIO.Icons.Emblem",
      "System.GIO.Icons.EmblemedIcon",
      "System.GIO.Icons.FileIcon",
      "System.GIO.Icons.Icon",
      "System.GIO.Icons.ThemedIcon",
      "System.GIO.Volumes.Drive",
      "System.GIO.Volumes.Mount",
      "System.GIO.Volumes.Volume",
      "System.GIO.Volumes.VolumeMonitor",
      "System.Glib.GDateTime",
      "System.Glib.GError",
      "System.Locale",
      "System.Time",
      "Text.Printf"
    ],
    "modules": [
      "System.GIO",
      "System.GIO.Enums",
      "System.GIO.Types",
      "System.GIO.Async.AsyncResult",
      "System.GIO.Async.Cancellable",
      "System.GIO.File.AppInfo",
      "System.GIO.File.ContentType",
      "System.GIO.File.FileAttribute",
      "System.GIO.File.File",
      "System.GIO.File.FileEnumerator",
      "System.GIO.File.FileInfo",
      "System.GIO.File.FileMonitor",
      "System.GIO.File.IOError",
      "System.GIO.File.MountOperation",
      "System.GIO.Icons.Emblem",
      "System.GIO.Icons.EmblemedIcon",
      "System.GIO.Icons.FileIcon",
      "System.GIO.Icons.Icon",
      "System.GIO.Icons.ThemedIcon",
      "System.GIO.Volumes.Drive",
      "System.GIO.Volumes.Mount",
      "System.GIO.Volumes.Volume",
      "System.GIO.Volumes.VolumeMonitor"
    ],
    "name": "gio",
    "version": "0.13.3.0"
  },
  {
    "dependencies": {
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.Writer"
      ],
      "utility-ht": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Monoid",
      "Data.StorableVector",
      "Data.Traversable",
      "Data.Word",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Foreign.Storable.FixedArray",
      "Foreign.Storable.Newtype",
      "Foreign.Storable.Record",
      "System.TimeIt"
    ],
    "modules": [
      "Foreign.Storable.Record",
      "Foreign.Storable.Newtype",
      "Foreign.Storable.Traversable",
      "Foreign.Storable.FixedArray"
    ],
    "name": "storable-record",
    "version": "0.0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Complex",
        "Data.Int",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Word",
        "Foreign.C.Types",
        "GHC.Generics"
      ]
    },
    "imports": [
      "Data.Complex",
      "Data.Int",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Word",
      "Foreign.C.Types",
      "GHC.Generics"
    ],
    "modules": [
      "Data.Default.Class"
    ],
    "name": "data-default-class",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Maybe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "exceptions": [],
      "filepath": [
        "System.FilePath"
      ],
      "template-haskell": []
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy.Char8",
      "Data.Data",
      "Data.Maybe",
      "Path",
      "Path.Internal",
      "System.FilePath",
      "Test.Hspec"
    ],
    "modules": [
      "Path",
      "Path.Internal"
    ],
    "name": "path",
    "version": "0.5.9"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Data.Bits",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Ratio",
        "Data.Word",
        "Foreign",
        "GHC.Arr",
        "System.IO.Unsafe",
        "Text.Show.Functions"
      ],
      "containers": []
    },
    "imports": [
      "Control.Applicative",
      "Data.Array",
      "Data.Bits",
      "Data.Foldable",
      "Data.Hash",
      "Data.Hash.Base",
      "Data.Hash.Instances",
      "Data.Hash.Rolling",
      "Data.Int",
      "Data.List",
      "Data.Ratio",
      "Data.Sequence",
      "Data.Word",
      "Foreign",
      "GHC.Arr",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.Hash",
      "Data.Hash.Rolling"
    ],
    "name": "data-hash",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "base": [
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cryptohash": [],
      "directory": [],
      "executable-hash": [],
      "executable-path": [],
      "file-embed": [],
      "template-haskell": []
    },
    "imports": [
      "Data.ByteString",
      "System.Environment",
      "System.Executable.Hash",
      "System.Executable.Hash.Internal"
    ],
    "modules": [
      "System.Executable.Hash",
      "System.Executable.Hash.Internal"
    ],
    "name": "executable-hash",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "X11": [
        "Graphics.X11",
        "Graphics.X11.Xinerama",
        "Graphics.X11.Xlib",
        "Graphics.X11.Xlib.Extras",
        "Graphics.X11.Xlib.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Typeable",
        "Data.Version",
        "Debug.Trace",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Types",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State"
      ],
      "process": [
        "System.Process"
      ],
      "setlocale": [
        "System.Locale.SetLocale"
      ],
      "unix": [
        "System.Posix.IO",
        "System.Posix.Process",
        "System.Posix.Signals"
      ],
      "utf8-string": [],
      "xmonad": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Data.Bits",
      "Data.Char",
      "Data.Default",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Set",
      "Data.Typeable",
      "Data.Version",
      "Debug.Trace",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Text",
      "Distribution.Verbosity",
      "Graphics.X11",
      "Graphics.X11.Xinerama",
      "Graphics.X11.Xlib",
      "Graphics.X11.Xlib.Extras",
      "Graphics.X11.Xlib.Types",
      "Instances",
      "Paths",
      "Prelude",
      "Properties.Delete",
      "Properties.Failure",
      "Properties.Floating",
      "Properties.Focus",
      "Properties.GreedyView",
      "Properties.Insert",
      "Properties.Layout.Full",
      "Properties.Layout.Tall",
      "Properties.Screen",
      "Properties.Shift",
      "Properties.Stack",
      "Properties.StackSet",
      "Properties.Swap",
      "Properties.View",
      "Properties.Workspace",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.IO.Unsafe",
      "System.Locale.SetLocale",
      "System.Posix.IO",
      "System.Posix.Process",
      "System.Posix.Signals",
      "System.Posix.Types",
      "System.Process",
      "Test.QuickCheck",
      "Text.Pandoc",
      "Text.PrettyPrint.HughesPJ",
      "Text.Printf",
      "Text.Regex.Posix",
      "Utils",
      "XMonad",
      "XMonad.Config",
      "XMonad.Core",
      "XMonad.Layout",
      "XMonad.Main",
      "XMonad.ManageHook",
      "XMonad.Operations",
      "XMonad.StackSet"
    ],
    "modules": [
      "XMonad",
      "XMonad.Main",
      "XMonad.Core",
      "XMonad.Config",
      "XMonad.Layout",
      "XMonad.ManageHook",
      "XMonad.Operations",
      "XMonad.StackSet"
    ],
    "name": "xmonad",
    "version": "0.12"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Word"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16.Lazy"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "text": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Base16.Lazy",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Word",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Data.Bitcoin.Script"
    ],
    "name": "bitcoin-script",
    "version": "0.11.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Version",
        "Numeric",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "ieee754": [
        "Numeric.IEEE"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Binary.IEEE754",
      "Data.Bits",
      "Data.Char",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Numbers.CrackNum",
      "Data.Numbers.CrackNum.Data",
      "Data.Numbers.CrackNum.Utils",
      "Data.Version",
      "Numeric",
      "Numeric.IEEE",
      "Paths",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit"
    ],
    "modules": [
      "Data.Numbers.CrackNum"
    ],
    "name": "crackNum",
    "version": "1.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Functor.Identity",
        "Foreign.C.Error",
        "Foreign.Storable",
        "GHC.IO.Exception",
        "Prelude",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "pipes-bytestring": [],
      "pipes-group": [
        "Pipes.Group"
      ],
      "pipes-parse": [
        "Pipes.Parse"
      ],
      "pipes-safe": [
        "Pipes.Safe",
        "Pipes.Safe.Prelude"
      ],
      "streaming-commons": [
        "Data.Streaming.Text"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict",
        "Data.Functor.Constant"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.State.Strict",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Streaming.Text",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Foreign.C.Error",
      "Foreign.Storable",
      "GHC.IO.Exception",
      "Pipes",
      "Pipes.Group",
      "Pipes.Parse",
      "Pipes.Prelude",
      "Pipes.Safe",
      "Pipes.Safe.Prelude",
      "Pipes.Text",
      "Pipes.Text.Encoding",
      "Pipes.Text.IO",
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Pipes.Text",
      "Pipes.Text.Encoding"
    ],
    "name": "pipes-text",
    "version": "0.0.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "System.Exit",
        "System.IO"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Word",
      "Network.Mail.Mime",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "System.Random",
      "Test.Hspec",
      "Test.Hspec.QuickCheck"
    ],
    "modules": [
      "Network.Mail.Mime"
    ],
    "name": "mime-mail",
    "version": "0.4.11"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Data.Char"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "ratel": [
        "Ratel"
      ],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Data.ByteString.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Map",
      "Network.HTTP.Client",
      "Network.Wai",
      "Ratel"
    ],
    "modules": [
      "Ratel.Wai"
    ],
    "name": "ratel-wai",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Concurrent.QSem",
        "Control.Concurrent.QSemN",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bool",
        "Data.Either",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.Maybe",
        "Data.Typeable",
        "Foreign",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.Mem.Weak",
        "System.Posix.Types",
        "System.Timeout"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.Chan.Lifted",
      "Control.Concurrent.MVar",
      "Control.Concurrent.MVar.Lifted",
      "Control.Concurrent.QSem",
      "Control.Concurrent.QSem.Lifted",
      "Control.Concurrent.QSemN",
      "Control.Concurrent.QSemN.Lifted",
      "Control.Concurrent.SampleVar",
      "Control.Concurrent.SampleVar.Lifted",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Exception.Peel",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.IO.Peel",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.Writer",
      "Criterion.Main",
      "Data.Bool",
      "Data.Either",
      "Data.Function",
      "Data.Functor",
      "Data.Int",
      "Data.IORef",
      "Data.Maybe",
      "Data.Typeable",
      "Foreign",
      "Prelude",
      "System.IO",
      "System.IO.Error",
      "System.Mem.Weak",
      "System.Posix.Types",
      "System.Timeout",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Control.Exception.Lifted",
      "Control.Concurrent.MVar.Lifted",
      "Control.Concurrent.Chan.Lifted",
      "Control.Concurrent.QSem.Lifted",
      "Control.Concurrent.QSemN.Lifted",
      "Control.Concurrent.Lifted",
      "Data.IORef.Lifted",
      "Foreign.Marshal.Utils.Lifted",
      "System.Timeout.Lifted"
    ],
    "name": "lifted-base",
    "version": "0.2.3.8"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "unix": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.Posix.Realtime.MQueue",
      "System.Posix.Realtime.RTSched",
      "System.Posix.Realtime.LockedMem",
      "System.Posix.Realtime.RTDataTypes",
      "System.Posix.Realtime.RTTime",
      "System.Posix.Realtime.Aio"
    ],
    "name": "posix-realtime",
    "version": "0.0.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Monoid",
        "Data.Typeable",
        "GHC.Exts",
        "GHC.Generics"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "hset": [
        "Data.HSet"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.List",
        "Control.Monad.Reader",
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Cont",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.HReader",
      "Control.Monad.HReader.Class",
      "Control.Monad.List",
      "Control.Monad.Morph",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Control",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.HSet",
      "Data.Monoid",
      "Data.Tagged",
      "Data.Typeable",
      "GHC.Exts",
      "GHC.Generics"
    ],
    "modules": [
      "Control.Monad.HReader",
      "Control.Monad.HReader.Class"
    ],
    "name": "hreader",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.List",
        "Foreign",
        "System.Environment",
        "System.IO.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "network": [
        "Network",
        "Network.Socket"
      ]
    },
    "imports": [
      "ADNS",
      "ADNS.Base",
      "ADNS.Endian",
      "ADNS.Resolver",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Data.List",
      "Data.Map",
      "Foreign",
      "Network",
      "Network.Socket",
      "System.Environment",
      "System.IO.Unsafe"
    ],
    "modules": [
      "ADNS",
      "ADNS.Base",
      "ADNS.Endian",
      "ADNS.Resolver"
    ],
    "name": "hsdns",
    "version": "1.6.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad.IO.Class",
        "Data.Data",
        "Data.Either",
        "Data.Maybe",
        "Data.Monoid",
        "GHC.Generics",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Set"
      ],
      "either": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Status"
      ],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class"
      ],
      "network": [
        "Network"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "random": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.Format"
      ],
      "transformers": [
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Reader"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "ApproxEq",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad.Error.Class",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Reader",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Data",
      "Data.Either",
      "Data.HashMap.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Vector",
      "GHC.Generics",
      "Instances",
      "Network",
      "Network.HTTP.Client",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Status",
      "Pinboard",
      "Pinboard.Api",
      "Pinboard.ApiRequest",
      "Pinboard.ApiTypes",
      "Pinboard.ApiTypesLens",
      "Pinboard.Client",
      "Pinboard.Error",
      "Pinboard.Types",
      "Pinboard.Util",
      "Prelude",
      "PropJSON",
      "System.Locale"
    ],
    "modules": [
      "Pinboard",
      "Pinboard.Api",
      "Pinboard.ApiRequest",
      "Pinboard.ApiTypes",
      "Pinboard.ApiTypesLens",
      "Pinboard.Client",
      "Pinboard.Error",
      "Pinboard.Types",
      "Pinboard.Util"
    ],
    "name": "pinboard",
    "version": "0.9.6"
  },
  {
    "dependencies": {
      "StateVar": [
        "Data.StateVar"
      ],
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Ratio",
        "Data.String",
        "Data.Unique"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [
        "Data.Map"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "time": [
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [],
      "vault": [
        "Data.Vault.Lazy"
      ],
      "wai": [
        "Network.Wai",
        "Network.Wai.Internal"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Data.ByteString",
      "Data.IORef",
      "Data.Map",
      "Data.Ratio",
      "Data.StateVar",
      "Data.String",
      "Data.Time.Clock.POSIX",
      "Data.Unique",
      "Data.Vault",
      "Data.Vault.Lazy",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.Internal",
      "Network.Wai.Session",
      "Web.Cookie"
    ],
    "modules": [
      "Network.Wai.Session",
      "Network.Wai.Session.Map"
    ],
    "name": "wai-session",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Void",
        "GHC.Generics",
        "GHC.TypeLits",
        "Prelude",
        "Text.Read"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Types"
      ],
      "system-filepath": [
        "Filesystem.Path",
        "Filesystem.Path.CurrentOS"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.Format"
      ],
      "transformers": [],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.IO.Class",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Singletons.TypeLits",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time.Calendar",
      "Data.Time.Format",
      "Data.Typeable",
      "Data.Void",
      "Filesystem.Path",
      "Filesystem.Path.CurrentOS",
      "GHC.Generics",
      "GHC.TypeLits",
      "Options.Applicative",
      "Options.Applicative.Types",
      "Prelude",
      "Text.Read"
    ],
    "modules": [
      "Options.Generic"
    ],
    "name": "optparse-generic",
    "version": "1.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Foreign",
        "Foreign.C.Types",
        "System.IO.Unsafe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Foreign",
      "Foreign.C.Types",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Numeric.Extras"
    ],
    "name": "numeric-extras",
    "version": "0.1"
  },
  {
    "dependencies": {
      "base": [
        "System.Environment"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Data.Numbers.Primes",
      "System.Environment"
    ],
    "modules": [
      "Data.Numbers.Primes"
    ],
    "name": "primes",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable"
      ],
      "bytestring": [],
      "containers": [
        "Data.Map"
      ],
      "lens-simple": [],
      "rainbow": [
        "Rainbow",
        "Rainbow.Types"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Text",
      "Data.Traversable",
      "Rainbow",
      "Rainbow.Instances",
      "Rainbow.Types",
      "Rainbox",
      "Rainbox.Core",
      "Rainbox.Instances",
      "Rainbox.Tutorial",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Rainbox",
      "Rainbox.Core",
      "Rainbox.Tutorial"
    ],
    "name": "rainbox",
    "version": "0.18.0.10"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Test.Framework",
      "Web.DataUrl"
    ],
    "modules": [
      "Web.DataUrl"
    ],
    "name": "dataurl",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Data.Char",
        "Data.List",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "bytestring-builder": [],
      "case-insensitive": [
        "Data.CaseInsensitive",
        "Data.CaseInsensitive.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Set"
      ],
      "directory": [],
      "filepath": [],
      "io-streams": [
        "System.IO.Streams"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "random": [],
      "readable": [
        "Data.Readable"
      ],
      "regex-posix": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [],
      "transformers": [
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.Writer.Lazy"
      ],
      "transformers-base": [],
      "unix-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib",
      "Control.Exception.Lifted",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.Writer.Lazy",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.CaseInsensitive",
      "Data.CaseInsensitive.Unsafe",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.IntMap",
      "Data.List",
      "Data.Map",
      "Data.Readable",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Vector",
      "Prelude",
      "Snap.Core.Tests",
      "Snap.Internal.Http.Types",
      "Snap.Internal.Http.Types.Tests",
      "Snap.Internal.Parsing.Tests",
      "Snap.Internal.Routing.Tests",
      "Snap.Test",
      "Snap.Test.Tests",
      "Snap.Types.Headers",
      "Snap.Types.Headers.Tests",
      "Snap.Util.FileServe.Tests",
      "Snap.Util.FileUploads.Tests",
      "Snap.Util.GZip.Tests",
      "Snap.Util.Proxy.Tests",
      "System.IO.Streams",
      "Test.HUnit",
      "Test.QuickCheck.Monadic"
    ],
    "modules": [
      "Snap.Core",
      "Snap.Internal.Core",
      "Snap.Internal.Debug",
      "Snap.Internal.Http.Types",
      "Snap.Internal.Parsing",
      "Snap.Test",
      "Snap.Types.Headers",
      "Snap.Util.FileServe",
      "Snap.Util.FileUploads",
      "Snap.Util.GZip",
      "Snap.Util.Proxy"
    ],
    "name": "snap-core",
    "version": "1.0.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.IORef",
        "Data.STRef"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.State",
      "Data.IntMap",
      "Data.IORef",
      "Data.STRef",
      "Data.UnionFind.IntMap"
    ],
    "modules": [
      "Control.Monad.Trans.UnionFind",
      "Data.UnionFind.IO",
      "Data.UnionFind.ST",
      "Data.UnionFind.IntMap"
    ],
    "name": "union-find",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Functor.Identity",
        "Data.Semigroup",
        "Prelude"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "lens": [
        "Control.Lens",
        "Control.Lens.Internal.Fold",
        "Control.Lens.Internal.Getter",
        "Control.Lens.Internal.Indexed",
        "Control.Lens.Type"
      ],
      "mtl": [
        "Control.Monad.Reader.Class"
      ],
      "profunctors": [
        "Data.Profunctor",
        "Data.Profunctor.Rep",
        "Data.Profunctor.Sieve",
        "Data.Profunctor.Unsafe"
      ],
      "semigroupoids": [
        "Data.Functor.Apply",
        "Data.Functor.Bind",
        "Data.Functor.Plus"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Lens",
      "Control.Lens.Action",
      "Control.Lens.Action.Internal",
      "Control.Lens.Action.Type",
      "Control.Lens.Internal.Fold",
      "Control.Lens.Internal.Getter",
      "Control.Lens.Internal.Indexed",
      "Control.Lens.Type",
      "Control.Monad",
      "Control.Monad.Reader.Class",
      "Control.Monad.Trans.Class",
      "Data.Functor.Apply",
      "Data.Functor.Bind",
      "Data.Functor.Contravariant",
      "Data.Functor.Identity",
      "Data.Functor.Plus",
      "Data.Profunctor",
      "Data.Profunctor.Rep",
      "Data.Profunctor.Sieve",
      "Data.Profunctor.Unsafe",
      "Data.Semigroup",
      "Prelude"
    ],
    "modules": [
      "Control.Lens.Action",
      "Control.Lens.Action.Internal",
      "Control.Lens.Action.Reified",
      "Control.Lens.Action.Type"
    ],
    "name": "lens-action",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "MissingH": [
        "Data.Either.Utils",
        "Data.String.Utils",
        "System.IO.PlafCompat",
        "Text.ParserCombinators.Parsec.Utils"
      ],
      "base": [
        "Control.Exception",
        "Data.Char",
        "Data.List",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.Error"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Error"
      ]
    },
    "imports": [
      "ConfigParser.Maintest",
      "ConfigParser.Parsertest",
      "Control.Exception",
      "Control.Monad.Error",
      "Data.Char",
      "Data.ConfigFile",
      "Data.ConfigFile.Lexer",
      "Data.ConfigFile.Parser",
      "Data.ConfigFile.Types",
      "Data.Either.Utils",
      "Data.List",
      "Data.Map",
      "Data.String.Utils",
      "System.IO",
      "System.IO.PlafCompat",
      "Test.HUnit",
      "Test.HUnit.Tools",
      "Tests",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Error",
      "Text.ParserCombinators.Parsec.Utils"
    ],
    "modules": [
      "Data.ConfigFile",
      "Data.ConfigFile.Types",
      "Data.ConfigFile.Parser",
      "Data.ConfigFile.Monadic"
    ],
    "name": "ConfigFile",
    "version": "1.1.4"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.CloudMonitoring",
      "Network.Google.CloudMonitoring.Types",
      "Network.Google.Resource.CloudMonitoring.MetricDescriptors.Create",
      "Network.Google.Resource.CloudMonitoring.MetricDescriptors.Delete",
      "Network.Google.Resource.CloudMonitoring.MetricDescriptors.List",
      "Network.Google.Resource.CloudMonitoring.Timeseries.List",
      "Network.Google.Resource.CloudMonitoring.Timeseries.Write",
      "Network.Google.Resource.CloudMonitoring.TimeseriesDescriptors.List"
    ],
    "name": "gogol-cloudmonitoring",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Foreign.C",
        "Foreign.C.Error",
        "Foreign.C.String",
        "GHC.IO.Exception",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "process": [
        "System.Process"
      ],
      "process-extras": [
        "System.Process.ListLike"
      ],
      "pureMD5": [
        "Data.Digest.Pure.MD5"
      ],
      "regex-tdfa": [
        "Text.Regex.TDFA"
      ],
      "unix": [
        "System.Posix.Directory",
        "System.Posix.Env",
        "System.Posix.Files",
        "System.Posix.IO",
        "System.Posix.Signals",
        "System.Posix.User"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Trans",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Digest.Pure.MD5",
      "Data.List",
      "Data.Maybe",
      "Foreign.C",
      "Foreign.C.Error",
      "Foreign.C.String",
      "GHC.IO.Exception",
      "Prelude",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.Posix.Directory",
      "System.Posix.Env",
      "System.Posix.Files",
      "System.Posix.IO",
      "System.Posix.Signals",
      "System.Posix.Types",
      "System.Posix.User",
      "System.Process",
      "System.Process.ListLike",
      "Text.Regex.TDFA"
    ],
    "modules": [
      "System.Unix.Chroot",
      "System.Unix.Crypt",
      "System.Unix.Directory",
      "System.Unix.FilePath",
      "System.Unix.KillByCwd",
      "System.Unix.Misc",
      "System.Unix.Mount",
      "System.Unix.SpecialDevice",
      "System.Unix.Files"
    ],
    "name": "Unixutils",
    "version": "1.54.1"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "base-noprelude",
    "version": "4.9.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "GHC.Generics"
      ],
      "generic-deriving": [
        "Generics.Deriving.ConNames"
      ],
      "hxt": [
        "Text.XML.HXT.Arrow.Pickle",
        "Text.XML.HXT.Arrow.Pickle.Schema",
        "Text.XML.HXT.Arrow.Pickle.Xml"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Text",
      "Generics.Deriving.ConNames",
      "Generics.XmlPickler",
      "GHC.Generics",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.TH",
      "Text.XML.HXT.Arrow.Pickle",
      "Text.XML.HXT.Arrow.Pickle.Schema",
      "Text.XML.HXT.Arrow.Pickle.Xml",
      "Text.Xml.Pickle"
    ],
    "modules": [
      "Generics.XmlPickler"
    ],
    "name": "generic-xmlpickler",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Prelude"
      ]
    },
    "imports": [
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Language.SQL.Keyword",
      "Language.SQL.Keyword.Concat",
      "Language.SQL.Keyword.Internal.Type",
      "Language.SQL.Keyword.Type",
      "Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Simple"
    ],
    "modules": [
      "Language.SQL.Keyword.Type",
      "Language.SQL.Keyword.Concat",
      "Language.SQL.Keyword"
    ],
    "name": "sql-words",
    "version": "0.1.4.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bool",
        "Data.Eq",
        "Data.Function",
        "Data.Int",
        "Data.Maybe",
        "Data.Ord",
        "Data.Typeable",
        "Data.Unique",
        "Prelude",
        "System.IO",
        "System.Timeout",
        "Text.Show"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Thread.Delay",
      "Control.Exception",
      "Control.Monad",
      "Data.Bool",
      "Data.Eq",
      "Data.Function",
      "Data.Int",
      "Data.Maybe",
      "Data.Ord",
      "Data.Typeable",
      "Data.Unique",
      "Prelude",
      "System.IO",
      "System.Timeout",
      "Text.Show"
    ],
    "modules": [
      "Control.Concurrent.Thread.Delay",
      "Control.Concurrent.Timeout"
    ],
    "name": "unbounded-delays",
    "version": "0.1.0.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.IORef",
        "Data.List",
        "Data.Ratio",
        "Data.Typeable",
        "GHC.Generics",
        "Text.Printf"
      ],
      "ghc-prim": [],
      "logict": [
        "Control.Monad.Logic"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.Logic",
      "Control.Monad.Reader",
      "Data.IORef",
      "Data.List",
      "Data.Ratio",
      "Data.Typeable",
      "GHC.Generics",
      "Test.SmallCheck.Drivers",
      "Test.SmallCheck.Property",
      "Test.SmallCheck.Property.Result",
      "Test.SmallCheck.Series",
      "Test.SmallCheck.SeriesMonad",
      "Text.PrettyPrint",
      "Text.Printf"
    ],
    "modules": [
      "Test.SmallCheck",
      "Test.SmallCheck.Drivers",
      "Test.SmallCheck.Series"
    ],
    "name": "smallcheck",
    "version": "1.1.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CodeDeploy",
      "Test.AWS.CodeDeploy",
      "Test.AWS.CodeDeploy.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CodeDeploy",
      "Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances",
      "Network.AWS.CodeDeploy.BatchGetApplicationRevisions",
      "Network.AWS.CodeDeploy.BatchGetApplications",
      "Network.AWS.CodeDeploy.BatchGetDeploymentGroups",
      "Network.AWS.CodeDeploy.BatchGetDeploymentInstances",
      "Network.AWS.CodeDeploy.BatchGetDeployments",
      "Network.AWS.CodeDeploy.BatchGetOnPremisesInstances",
      "Network.AWS.CodeDeploy.CreateApplication",
      "Network.AWS.CodeDeploy.CreateDeployment",
      "Network.AWS.CodeDeploy.CreateDeploymentConfig",
      "Network.AWS.CodeDeploy.CreateDeploymentGroup",
      "Network.AWS.CodeDeploy.DeleteApplication",
      "Network.AWS.CodeDeploy.DeleteDeploymentConfig",
      "Network.AWS.CodeDeploy.DeleteDeploymentGroup",
      "Network.AWS.CodeDeploy.DeregisterOnPremisesInstance",
      "Network.AWS.CodeDeploy.GetApplication",
      "Network.AWS.CodeDeploy.GetApplicationRevision",
      "Network.AWS.CodeDeploy.GetDeployment",
      "Network.AWS.CodeDeploy.GetDeploymentConfig",
      "Network.AWS.CodeDeploy.GetDeploymentGroup",
      "Network.AWS.CodeDeploy.GetDeploymentInstance",
      "Network.AWS.CodeDeploy.GetOnPremisesInstance",
      "Network.AWS.CodeDeploy.ListApplicationRevisions",
      "Network.AWS.CodeDeploy.ListApplications",
      "Network.AWS.CodeDeploy.ListDeploymentConfigs",
      "Network.AWS.CodeDeploy.ListDeploymentGroups",
      "Network.AWS.CodeDeploy.ListDeploymentInstances",
      "Network.AWS.CodeDeploy.ListDeployments",
      "Network.AWS.CodeDeploy.ListOnPremisesInstances",
      "Network.AWS.CodeDeploy.RegisterApplicationRevision",
      "Network.AWS.CodeDeploy.RegisterOnPremisesInstance",
      "Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances",
      "Network.AWS.CodeDeploy.StopDeployment",
      "Network.AWS.CodeDeploy.Types",
      "Network.AWS.CodeDeploy.UpdateApplication",
      "Network.AWS.CodeDeploy.UpdateDeploymentGroup",
      "Network.AWS.CodeDeploy.Waiters"
    ],
    "name": "amazonka-codedeploy",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "directory": [],
      "filepath": [],
      "hspec-discover": []
    },
    "imports": [
      "Test.Hspec.Discover.Run"
    ],
    "modules": [
      "Test.Hspec.Discover.Config",
      "Test.Hspec.Discover.Run"
    ],
    "name": "hspec-discover",
    "version": "2.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "cryptonite": [],
      "ghc-prim": [],
      "memory": [
        "Data.ByteArray",
        "Data.ByteArray.Encoding"
      ]
    },
    "imports": [
      "Criterion.Main",
      "Crypto.Hash",
      "Crypto.Hash.Internal",
      "Crypto.Hash.MD2",
      "Crypto.Hash.MD4",
      "Crypto.Hash.MD5",
      "Crypto.Hash.RIPEMD160",
      "Crypto.Hash.SHA1",
      "Crypto.Hash.SHA224",
      "Crypto.Hash.SHA256",
      "Crypto.Hash.SHA3",
      "Crypto.Hash.SHA384",
      "Crypto.Hash.SHA512",
      "Crypto.Hash.SHA512t",
      "Crypto.Hash.Skein256",
      "Crypto.Hash.Skein512",
      "Crypto.Hash.Tiger",
      "Crypto.Hash.Types",
      "Crypto.Hash.Whirlpool",
      "Crypto.MAC",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteArray",
      "Data.ByteArray.Encoding",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Foldable",
      "Data.List",
      "Data.Monoid",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Crypto.Hash",
      "Crypto.Hash.Types",
      "Crypto.MAC",
      "Crypto.Hash.SHA1",
      "Crypto.Hash.SHA224",
      "Crypto.Hash.SHA256",
      "Crypto.Hash.SHA384",
      "Crypto.Hash.SHA512",
      "Crypto.Hash.SHA512t",
      "Crypto.Hash.SHA3",
      "Crypto.Hash.MD2",
      "Crypto.Hash.MD4",
      "Crypto.Hash.MD5",
      "Crypto.Hash.RIPEMD160",
      "Crypto.Hash.Skein256",
      "Crypto.Hash.Skein512",
      "Crypto.Hash.Tiger",
      "Crypto.Hash.Whirlpool",
      "Crypto.MAC.HMAC",
      "Crypto.MAC.SHA3"
    ],
    "name": "cryptohash",
    "version": "0.11.9"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Data.Ix",
        "Data.List",
        "Foreign.Storable",
        "GHC.Exts",
        "Prelude",
        "Unsafe.Coerce"
      ]
    },
    "imports": [
      "Data.Array.Base",
      "Data.Array.Unboxed",
      "Data.Ix",
      "Data.List",
      "Data.Number.PartialOrd",
      "Data.Number.Transfinite",
      "Foreign.Storable",
      "GHC.Exts",
      "Hugs.IOExts",
      "Hugs.RealFloat",
      "NonStdUnsafeCoerce",
      "Prelude",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Number.LogFloat",
      "Data.Number.RealToFrac",
      "Data.Number.Transfinite",
      "Data.Number.PartialOrd",
      "Hugs.RealFloat"
    ],
    "name": "logfloat",
    "version": "0.13.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.List",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cereal": [
        "Data.Serialize.Get"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.Hash.Murmur",
      "Data.Hash.Murmur.Units",
      "Data.List",
      "Data.Serialize.Get",
      "Data.Word",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Data.Hash.Murmur"
    ],
    "name": "murmur3",
    "version": "1.0.3"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [
        "Data.Version"
      ],
      "deepseq": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.Int"
      ]
    },
    "imports": [
      "Data.SemVer.Delimited",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Version"
    ],
    "modules": [
      "Data.SemVer",
      "Data.SemVer.Delimited"
    ],
    "name": "semver",
    "version": "0.3.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Int",
        "Data.String",
        "Numeric"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "data-default": [
        "Data.Default"
      ],
      "entropy": [
        "System.Entropy"
      ],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple"
      ],
      "resource-pool": [
        "Data.Pool"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [],
      "wai": [
        "Network.Wai"
      ],
      "wai-session": [
        "Network.Wai.Session"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Database.PostgreSQL.Simple",
      "Data.ByteString",
      "Data.Default",
      "Data.Int",
      "Data.Pool",
      "Data.Serialize",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock.POSIX",
      "Network.Wai",
      "Network.Wai.Session",
      "Network.Wai.Session.PostgreSQL",
      "Numeric",
      "System.Entropy",
      "Web.Cookie"
    ],
    "modules": [
      "Network.Wai.Session.PostgreSQL"
    ],
    "name": "wai-session-postgresql",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Functor.Product",
        "Data.Int",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Version",
        "Data.Void",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.Generics",
        "Numeric.Natural",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "cereal": [
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.TAI"
      ],
      "transformers": [
        "Control.Monad.Trans.Except",
        "Data.Functor.Constant",
        "Data.Functor.Reverse"
      ],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Except",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.Bytes.Get",
      "Data.Bytes.Put",
      "Data.Bytes.Signed",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Bytes.VarInt",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Reverse",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Map",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Scientific",
      "Data.Sequence",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Clock.TAI",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "GHC.Generics",
      "Numeric.Natural",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.Bytes.Get",
      "Data.Bytes.Put",
      "Data.Bytes.Serial",
      "Data.Bytes.Signed",
      "Data.Bytes.VarInt"
    ],
    "name": "bytes",
    "version": "0.15.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.IORef",
        "Data.Ratio",
        "Data.Word",
        "Foreign.C",
        "Foreign.C.Types",
        "Foreign.Ptr",
        "GHC.Exts",
        "Numeric",
        "Prelude",
        "System.CPUTime",
        "System.IO.Unsafe"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Monad",
      "CPUTime",
      "Data.Bits",
      "Data.Char",
      "Data.Int",
      "Data.IORef",
      "Data.Ratio",
      "Data.Time",
      "Data.Word",
      "Foreign.C",
      "Foreign.C.Types",
      "Foreign.Ptr",
      "GHC.Exts",
      "Numeric",
      "Prelude",
      "System.CPUTime",
      "System.IO.Unsafe",
      "System.Random"
    ],
    "modules": [
      "System.Random"
    ],
    "name": "random",
    "version": "1.1"
  },
  {
    "dependencies": {
      "base": [],
      "containers": [
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "directory": [],
      "filepath": [],
      "generic-deriving": [],
      "lens": [],
      "mtl": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "transformers": []
    },
    "imports": [
      "Data.Map",
      "Data.Map.Strict",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO"
    ],
    "modules": [
      "Language.PureScript.Bridge",
      "Language.PureScript.Bridge.Builder",
      "Language.PureScript.Bridge.Primitives",
      "Language.PureScript.Bridge.Printer",
      "Language.PureScript.Bridge.PSTypes",
      "Language.PureScript.Bridge.SumType",
      "Language.PureScript.Bridge.Tuple",
      "Language.PureScript.Bridge.TypeInfo",
      "Language.PureScript.Bridge.TypeParameters"
    ],
    "name": "purescript-bridge",
    "version": "0.8.0.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ElastiCache",
      "Test.AWS.ElastiCache",
      "Test.AWS.ElastiCache.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ElastiCache",
      "Network.AWS.ElastiCache.AddTagsToResource",
      "Network.AWS.ElastiCache.AuthorizeCacheSecurityGroupIngress",
      "Network.AWS.ElastiCache.CopySnapshot",
      "Network.AWS.ElastiCache.CreateCacheCluster",
      "Network.AWS.ElastiCache.CreateCacheParameterGroup",
      "Network.AWS.ElastiCache.CreateCacheSecurityGroup",
      "Network.AWS.ElastiCache.CreateCacheSubnetGroup",
      "Network.AWS.ElastiCache.CreateReplicationGroup",
      "Network.AWS.ElastiCache.CreateSnapshot",
      "Network.AWS.ElastiCache.DeleteCacheCluster",
      "Network.AWS.ElastiCache.DeleteCacheParameterGroup",
      "Network.AWS.ElastiCache.DeleteCacheSecurityGroup",
      "Network.AWS.ElastiCache.DeleteCacheSubnetGroup",
      "Network.AWS.ElastiCache.DeleteReplicationGroup",
      "Network.AWS.ElastiCache.DeleteSnapshot",
      "Network.AWS.ElastiCache.DescribeCacheClusters",
      "Network.AWS.ElastiCache.DescribeCacheEngineVersions",
      "Network.AWS.ElastiCache.DescribeCacheParameterGroups",
      "Network.AWS.ElastiCache.DescribeCacheParameters",
      "Network.AWS.ElastiCache.DescribeCacheSecurityGroups",
      "Network.AWS.ElastiCache.DescribeCacheSubnetGroups",
      "Network.AWS.ElastiCache.DescribeEngineDefaultParameters",
      "Network.AWS.ElastiCache.DescribeEvents",
      "Network.AWS.ElastiCache.DescribeReplicationGroups",
      "Network.AWS.ElastiCache.DescribeReservedCacheNodes",
      "Network.AWS.ElastiCache.DescribeReservedCacheNodesOfferings",
      "Network.AWS.ElastiCache.DescribeSnapshots",
      "Network.AWS.ElastiCache.ListAllowedNodeTypeModifications",
      "Network.AWS.ElastiCache.ListTagsForResource",
      "Network.AWS.ElastiCache.ModifyCacheCluster",
      "Network.AWS.ElastiCache.ModifyCacheParameterGroup",
      "Network.AWS.ElastiCache.ModifyCacheSubnetGroup",
      "Network.AWS.ElastiCache.ModifyReplicationGroup",
      "Network.AWS.ElastiCache.PurchaseReservedCacheNodesOffering",
      "Network.AWS.ElastiCache.RebootCacheCluster",
      "Network.AWS.ElastiCache.RemoveTagsFromResource",
      "Network.AWS.ElastiCache.ResetCacheParameterGroup",
      "Network.AWS.ElastiCache.RevokeCacheSecurityGroupIngress",
      "Network.AWS.ElastiCache.Types",
      "Network.AWS.ElastiCache.Waiters"
    ],
    "name": "amazonka-elasticache",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Reports",
      "Network.Google.Reports.Types",
      "Network.Google.Resource.Admin.Channels.Stop",
      "Network.Google.Resource.Reports.Activities.List",
      "Network.Google.Resource.Reports.Activities.Watch",
      "Network.Google.Resource.Reports.CustomerUsageReports.Get",
      "Network.Google.Resource.Reports.UserUsageReport.Get"
    ],
    "name": "gogol-admin-reports",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Prelude",
        "System.Environment",
        "Text.Printf"
      ],
      "language-glsl": [],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Expr"
      ],
      "prettyclass": [
        "Text.PrettyPrint.HughesPJClass"
      ]
    },
    "imports": [
      "Language.GLSL",
      "Language.GLSL.Parser",
      "Language.GLSL.Pretty",
      "Language.GLSL.Syntax",
      "Prelude",
      "System.Environment",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Expr",
      "Text.PrettyPrint.HughesPJClass",
      "Text.Printf"
    ],
    "modules": [
      "Language.GLSL",
      "Language.GLSL.Parser",
      "Language.GLSL.Pretty",
      "Language.GLSL.Syntax"
    ],
    "name": "language-glsl",
    "version": "0.2.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Prelude",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec"
    ],
    "modules": [],
    "name": "fail",
    "version": "4.9.0.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Data",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "containers": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "tagstream-conduit": [
        "Text.HTML.TagStream.Text",
        "Text.HTML.TagStream.Types"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Read"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Cursor"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Attoparsec.Lazy",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Data",
      "Data.HashMap.Lazy",
      "Data.List",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Read",
      "Data.Typeable",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.URI",
      "OpenId2.Discovery",
      "OpenId2.Normalization",
      "OpenId2.Types",
      "OpenId2.XRDS",
      "Text.HTML.TagStream.Text",
      "Text.HTML.TagStream.Types",
      "Text.XML",
      "Text.XML.Cursor",
      "Web.Authenticate.Internal"
    ],
    "modules": [
      "Web.Authenticate.Rpxnow",
      "Web.Authenticate.OpenId",
      "Web.Authenticate.BrowserId",
      "Web.Authenticate.OpenId.Providers"
    ],
    "name": "authenticate",
    "version": "1.3.3.2"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Word",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.ST",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "blaze-builder": [],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes"
      ],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "charset": [
        "Data.CharSet.ByteSet"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "containers": [
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "fingertree": [
        "Data.FingerTree"
      ],
      "ghc-prim": [],
      "hashable": [
        "Data.Hashable"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [],
      "parsers": [
        "Text.Parser.Char",
        "Text.Parser.Combinators",
        "Text.Parser.LookAhead",
        "Text.Parser.Token",
        "Text.Parser.Token.Highlight",
        "Text.Parser.Token.Style"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "reducers": [
        "Data.Semigroup.Reducer",
        "Data.Semigroup.Union"
      ],
      "semigroups": [],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "unordered-containers": [],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Build",
      "Control.Applicative",
      "Control.Comonad",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Array",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.UTF8",
      "Data.CharSet.ByteSet",
      "Data.Data",
      "Data.Either",
      "Data.FingerTree",
      "Data.Foldable",
      "Data.Function",
      "Data.Hashable",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Semigroup",
      "Data.Semigroup.Reducer",
      "Data.Semigroup.Union",
      "Data.Set",
      "Data.Traversable",
      "Data.Word",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.ST",
      "Prelude",
      "System.Console.ANSI",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "Test.DocTest",
      "Test.QuickCheck",
      "Text.Blaze",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Internal",
      "Text.Parser.Char",
      "Text.Parser.Combinators",
      "Text.Parser.LookAhead",
      "Text.Parser.Token",
      "Text.Parser.Token.Highlight",
      "Text.Parser.Token.Style",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.Trifecta",
      "Text.Trifecta.Combinators",
      "Text.Trifecta.Delta",
      "Text.Trifecta.Highlight",
      "Text.Trifecta.Instances",
      "Text.Trifecta.Parser",
      "Text.Trifecta.Rendering",
      "Text.Trifecta.Result",
      "Text.Trifecta.Rope",
      "Text.Trifecta.Util.Combinators",
      "Text.Trifecta.Util.IntervalMap",
      "Text.Trifecta.Util.It"
    ],
    "modules": [
      "Text.Trifecta",
      "Text.Trifecta.Combinators",
      "Text.Trifecta.Delta",
      "Text.Trifecta.Highlight",
      "Text.Trifecta.Parser",
      "Text.Trifecta.Rendering",
      "Text.Trifecta.Result",
      "Text.Trifecta.Rope",
      "Text.Trifecta.Util.Array",
      "Text.Trifecta.Util.IntervalMap",
      "Text.Trifecta.Util.It"
    ],
    "name": "trifecta",
    "version": "1.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.String",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Unsafe",
      "Data.FileEmbed",
      "Data.String",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.FileEmbed"
    ],
    "name": "file-embed",
    "version": "0.0.10"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.ModuleName",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.PackageDescription.PrettyPrint",
        "Distribution.Simple.Utils",
        "Distribution.Verbosity",
        "Distribution.Version"
      ],
      "HStringTemplate": [
        "Text.StringTemplate"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Ord",
        "Data.Proxy",
        "Data.String",
        "Data.Typeable",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.String"
      ],
      "code-builder": [
        "Code.Build",
        "Code.Build.JavaScript",
        "Code.Build.Ruby"
      ],
      "directory": [
        "System.Directory"
      ],
      "fclabels": [
        "Data.Label",
        "Data.Label.Derive",
        "Data.Label.Total"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "haskell-src-exts": [
        "Language.Haskell.Exts.Parser",
        "Language.Haskell.Exts.Pretty",
        "Language.Haskell.Exts.SrcLoc",
        "Language.Haskell.Exts.Syntax"
      ],
      "hxt": [
        "Text.XML.HXT.Arrow.Pickle",
        "Text.XML.HXT.Arrow.Pickle.Schema"
      ],
      "json-schema": [
        "Data.JSON.Schema"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ],
      "process": [
        "System.Process"
      ],
      "rest-core": [
        "Rest.Api",
        "Rest.Dictionary",
        "Rest.Driver.Routing",
        "Rest.Handler",
        "Rest.Info",
        "Rest.Resource",
        "Rest.Schema"
      ],
      "safe": [
        "Safe"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "semigroups": [],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text"
      ],
      "uniplate": [
        "Data.Generics.Uniplate.Data"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Code.Build",
      "Code.Build.JavaScript",
      "Code.Build.Ruby",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.Generics.Uniplate.Data",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.JSON.Schema",
      "Data.Label",
      "Data.Label.Derive",
      "Data.Label.Total",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Ord",
      "Data.Proxy",
      "Data.Scientific",
      "Data.String",
      "Data.Text",
      "Data.Typeable",
      "Data.Vector",
      "Distribution.ModuleName",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.PackageDescription.PrettyPrint",
      "Distribution.Simple.Utils",
      "Distribution.Verbosity",
      "Distribution.Version",
      "Language.Haskell.Exts.Parser",
      "Language.Haskell.Exts.Pretty",
      "Language.Haskell.Exts.SrcLoc",
      "Language.Haskell.Exts.Syntax",
      "Numeric",
      "Paths",
      "Prelude",
      "Prelude.Compat",
      "Rest.Api",
      "Rest.Dictionary",
      "Rest.Driver.Routing",
      "Rest.Gen.Base",
      "Rest.Gen.Base.ActionInfo",
      "Rest.Gen.Base.ActionInfo.Ident",
      "Rest.Gen.Base.ApiTree",
      "Rest.Gen.Base.JSON",
      "Rest.Gen.Base.JSON.Pretty",
      "Rest.Gen.Base.Link",
      "Rest.Gen.Base.XML",
      "Rest.Gen.Config",
      "Rest.Gen.Docs",
      "Rest.Gen.Haskell",
      "Rest.Gen.JavaScript",
      "Rest.Gen.Ruby",
      "Rest.Gen.Types",
      "Rest.Gen.Utils",
      "Rest.Handler",
      "Rest.Info",
      "Rest.Resource",
      "Rest.Schema",
      "Safe",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Process",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.String",
      "Text.PrettyPrint.HughesPJ",
      "Text.StringTemplate",
      "Text.XML.HXT.Arrow.Pickle",
      "Text.XML.HXT.Arrow.Pickle.Schema"
    ],
    "modules": [
      "Rest.Gen",
      "Rest.Gen.Base",
      "Rest.Gen.Base.ActionInfo",
      "Rest.Gen.Base.ActionInfo.Ident",
      "Rest.Gen.Base.ApiTree",
      "Rest.Gen.Config",
      "Rest.Gen.Docs",
      "Rest.Gen.Haskell",
      "Rest.Gen.JavaScript",
      "Rest.Gen.Ruby",
      "Rest.Gen.Types"
    ],
    "name": "rest-gen",
    "version": "0.19.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Functor",
        "Data.IORef",
        "Data.Monoid",
        "GHC.IO",
        "System.Exit"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "hashable": [
        "Data.Hashable"
      ]
    },
    "imports": [
      "Control.Concurrent.Supply",
      "Control.Monad",
      "Data.Functor",
      "Data.Hashable",
      "Data.IORef",
      "Data.Monoid",
      "Data.Set",
      "GHC.IO",
      "GHC.Prim",
      "GHC.Types",
      "System.Exit"
    ],
    "modules": [
      "Control.Concurrent.Supply"
    ],
    "name": "concurrent-supply",
    "version": "0.1.8"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-cairo": [],
      "gi-gdkpixbuf": [],
      "gi-gio": [],
      "gi-glib": [],
      "gi-gobject": [],
      "gi-pango": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-gdk",
    "version": "3.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Codec.Compression.GZip",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.FileEmbed",
      "Data.Functor",
      "Data.HashMap.Strict",
      "Data.IntMap",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO.Unsafe",
      "Test.DocTest",
      "Text.Hyphenation.Exception",
      "Text.Hyphenation.Hyphenator",
      "Text.Hyphenation.Language",
      "Text.Hyphenation.Pattern"
    ],
    "modules": [
      "Text.Hyphenation",
      "Text.Hyphenation.Hyphenator",
      "Text.Hyphenation.Language",
      "Text.Hyphenation.Exception",
      "Text.Hyphenation.Pattern"
    ],
    "name": "hyphenation",
    "version": "0.6"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "containers": [],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "template-haskell": []
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.FileEmbed"
    ],
    "modules": [
      "Language.Elm.CoreSources"
    ],
    "name": "elm-core-sources",
    "version": "1.0.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Lazy",
        "Data.Attoparsec.Text",
        "Data.Attoparsec.Text.Lazy",
        "Data.Attoparsec.Types"
      ],
      "base": [
        "Control.Monad",
        "Data.String"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "hspec-expectations": [
        "Test.Hspec.Expectations"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Text.Lazy",
      "Data.Attoparsec.Types",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Test.Hspec.Attoparsec.Source",
      "Test.Hspec.Expectations"
    ],
    "modules": [
      "Test.Hspec.Attoparsec",
      "Test.Hspec.Attoparsec.Source"
    ],
    "name": "hspec-attoparsec",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Data.Char",
        "Data.Foldable",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "comonad": [
        "Control.Comonad"
      ],
      "directory": [],
      "filepath": [],
      "free": [
        "Control.Comonad.Cofree"
      ],
      "lens": [],
      "mtl": [],
      "parsers": [],
      "scientific": [],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Unsafe"
      ],
      "text-format": [
        "Data.Text.Buildable"
      ],
      "text-manipulate": [],
      "trifecta": [
        "Text.Trifecta"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Comonad",
      "Control.Comonad.Cofree",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Buildable",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Unsafe",
      "Data.Vector",
      "Paths",
      "Text.EDE.Internal.Eval",
      "Text.EDE.Internal.Filters",
      "Text.EDE.Internal.Parser",
      "Text.EDE.Internal.Quoting",
      "Text.EDE.Internal.Types",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.Trifecta"
    ],
    "modules": [
      "Text.EDE",
      "Text.EDE.Filters"
    ],
    "name": "ede",
    "version": "0.2.8.5"
  },
  {
    "dependencies": {
      "asn1-encoding": [
        "Data.ASN1.BinaryEncoding",
        "Data.ASN1.BinaryEncoding.Raw",
        "Data.ASN1.Encoding",
        "Data.ASN1.Stream"
      ],
      "asn1-parse": [
        "Data.ASN1.Parse"
      ],
      "asn1-types": [
        "Data.ASN1.BitArray",
        "Data.ASN1.OID",
        "Data.ASN1.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Bits",
        "Data.List",
        "Data.Monoid",
        "Data.Word"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [],
      "cryptonite": [
        "Crypto.Hash",
        "Crypto.PubKey.DSA",
        "Crypto.PubKey.ECC.Types",
        "Crypto.PubKey.RSA",
        "Crypto.PubKey.RSA.Types"
      ],
      "hourglass": [
        "Data.Hourglass"
      ],
      "memory": [
        "Data.ByteArray"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except"
      ],
      "pem": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Crypto.Hash",
      "Crypto.PubKey.DSA",
      "Crypto.PubKey.ECC.Types",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.Types",
      "Data.ASN1.BinaryEncoding",
      "Data.ASN1.BinaryEncoding.Raw",
      "Data.ASN1.BitArray",
      "Data.ASN1.Encoding",
      "Data.ASN1.OID",
      "Data.ASN1.Parse",
      "Data.ASN1.Stream",
      "Data.ASN1.Types",
      "Data.Bits",
      "Data.ByteArray",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Hourglass",
      "Data.List",
      "Data.Monoid",
      "Data.Word",
      "Data.X509",
      "Data.X509.AlgorithmIdentifier",
      "Data.X509.Cert",
      "Data.X509.CertificateChain",
      "Data.X509.CRL",
      "Data.X509.DistinguishedName",
      "Data.X509.Ext",
      "Data.X509.ExtensionRaw",
      "Data.X509.Internal",
      "Data.X509.OID",
      "Data.X509.PrivateKey",
      "Data.X509.PublicKey",
      "Data.X509.Signed",
      "Test.Tasty",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.X509"
    ],
    "name": "x509",
    "version": "1.6.4"
  },
  {
    "dependencies": {
      "base": [],
      "monad-control": [],
      "mtl": [],
      "postgresql-simple": [
        "Database.PostgreSQL.Simple",
        "Database.PostgreSQL.Simple.Transaction",
        "Database.PostgreSQL.Simple.Types"
      ]
    },
    "imports": [
      "Database.PostgreSQL.Simple",
      "Database.PostgreSQL.Simple.Transaction",
      "Database.PostgreSQL.Simple.Types"
    ],
    "modules": [
      "Database.PostgreSQL.Transaction"
    ],
    "name": "postgresql-transactional",
    "version": "1.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Dynamic",
        "Data.Typeable"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Monad.State",
      "Data.Dynamic",
      "Data.Map",
      "Data.Typeable"
    ],
    "modules": [
      "Control.Monad.TagShare"
    ],
    "name": "tagshare",
    "version": "0.0"
  },
  {
    "dependencies": {
      "HUnit": [],
      "QuickCheck": [],
      "base": [],
      "hspec-core": [
        "Test.Hspec.Core.Spec"
      ],
      "hspec-discover": [],
      "hspec-expectations": [],
      "transformers": []
    },
    "imports": [
      "Test.Hspec.Core.Spec",
      "Test.Hspec.Discover"
    ],
    "modules": [
      "Test.Hspec",
      "Test.Hspec.Runner",
      "Test.Hspec.Formatters",
      "Test.Hspec.QuickCheck",
      "Test.Hspec.Discover",
      "Test.Hspec.Core",
      "Test.Hspec.HUnit"
    ],
    "name": "hspec",
    "version": "2.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad.IO.Class"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "transformers": [],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Exception.IOChoice.THUtil",
      "Control.Exception.Lifted",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Language.Haskell.TH"
    ],
    "modules": [
      "Control.Exception.IOChoice",
      "Control.Exception.IOChoice.TH",
      "Control.Exception.IOChoice.Lifted",
      "Control.Exception.IOChoice.Lifted.TH"
    ],
    "name": "io-choice",
    "version": "0.0.6"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudFront",
      "Test.AWS.CloudFront",
      "Test.AWS.CloudFront.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudFront",
      "Network.AWS.CloudFront.CreateCloudFrontOriginAccessIdentity",
      "Network.AWS.CloudFront.CreateDistribution",
      "Network.AWS.CloudFront.CreateInvalidation",
      "Network.AWS.CloudFront.CreateStreamingDistribution",
      "Network.AWS.CloudFront.DeleteCloudFrontOriginAccessIdentity",
      "Network.AWS.CloudFront.DeleteDistribution",
      "Network.AWS.CloudFront.DeleteStreamingDistribution",
      "Network.AWS.CloudFront.GetCloudFrontOriginAccessIdentity",
      "Network.AWS.CloudFront.GetCloudFrontOriginAccessIdentityConfig",
      "Network.AWS.CloudFront.GetDistribution",
      "Network.AWS.CloudFront.GetDistributionConfig",
      "Network.AWS.CloudFront.GetInvalidation",
      "Network.AWS.CloudFront.GetStreamingDistribution",
      "Network.AWS.CloudFront.GetStreamingDistributionConfig",
      "Network.AWS.CloudFront.ListCloudFrontOriginAccessIdentities",
      "Network.AWS.CloudFront.ListDistributions",
      "Network.AWS.CloudFront.ListDistributionsByWebACLId",
      "Network.AWS.CloudFront.ListInvalidations",
      "Network.AWS.CloudFront.ListStreamingDistributions",
      "Network.AWS.CloudFront.Types",
      "Network.AWS.CloudFront.UpdateCloudFrontOriginAccessIdentity",
      "Network.AWS.CloudFront.UpdateDistribution",
      "Network.AWS.CloudFront.UpdateStreamingDistribution",
      "Network.AWS.CloudFront.Waiters"
    ],
    "name": "amazonka-cloudfront",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "containers": [],
      "ghc-prim": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Monad",
      "Control.Monad.Skeleton.Internal",
      "Prelude",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Monad.Skeleton",
      "Control.Monad.Skeleton.Internal"
    ],
    "name": "monad-skeleton",
    "version": "0.1.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.IORef",
        "Data.List",
        "Data.Typeable",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.StablePtr",
        "Foreign.Storable",
        "GHC.Generics",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "bindings-GLFW": [
        "Bindings.GLFW"
      ]
    },
    "imports": [
      "Bindings.GLFW",
      "Control.Concurrent",
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.Data",
      "Data.IORef",
      "Data.List",
      "Data.Typeable",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "Foreign.Storable",
      "GHC.Generics",
      "Graphics.UI.GLFW",
      "Graphics.UI.GLFW.C",
      "Graphics.UI.GLFW.Types",
      "Prelude",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Graphics.UI.GLFW"
    ],
    "name": "GLFW-b",
    "version": "1.4.8.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.String",
        "Prelude",
        "System.IO"
      ],
      "text": [
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.String",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Prelude",
      "System.IO",
      "Text.PrettyPrint.Leijen.Text"
    ],
    "modules": [
      "Text.PrettyPrint.Leijen.Text",
      "Text.PrettyPrint.Leijen.Text.Monadic"
    ],
    "name": "wl-pprint-text",
    "version": "1.1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Bits",
        "Data.Monoid",
        "Data.Word",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Word",
        "Prelude"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Builder",
        "Data.Binary.Get",
        "Data.Binary.Get.Internal",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Binary",
      "Data.Binary.Bits",
      "Data.Binary.Bits.Get",
      "Data.Binary.Bits.Put",
      "Data.Binary.Builder",
      "Data.Binary.Get",
      "Data.Binary.Get.Internal",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Monoid",
      "Data.Word",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Word",
      "Prelude",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.Framework.Runners.Console",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Binary.Bits",
      "Data.Binary.Bits.Put",
      "Data.Binary.Bits.Get"
    ],
    "name": "binary-bits",
    "version": "0.5"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.Maybe",
        "Data.Tuple",
        "Data.Word",
        "GHC.Generics"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "containers": [],
      "cryptonite": [
        "Crypto.Cipher.Types",
        "Crypto.Hash",
        "Crypto.Hash.Algorithms",
        "Crypto.MAC.HMAC",
        "Crypto.PubKey.ECC.ECDSA",
        "Crypto.PubKey.ECC.Types",
        "Crypto.PubKey.MaskGenFunction",
        "Crypto.PubKey.RSA",
        "Crypto.PubKey.RSA.OAEP",
        "Crypto.PubKey.RSA.PKCS15",
        "Crypto.PubKey.RSA.Prim",
        "Crypto.Random"
      ],
      "either": [
        "Control.Monad.Trans.Either"
      ],
      "memory": [
        "Data.ByteArray",
        "Data.ByteArray.Encoding"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Trans"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Either",
      "Criterion.Main",
      "Crypto.Cipher.Types",
      "Crypto.Hash",
      "Crypto.Hash.Algorithms",
      "Crypto.MAC.HMAC",
      "Crypto.PubKey.ECC.ECDSA",
      "Crypto.PubKey.ECC.Types",
      "Crypto.PubKey.MaskGenFunction",
      "Crypto.PubKey.RSA",
      "Crypto.PubKey.RSA.OAEP",
      "Crypto.PubKey.RSA.PKCS15",
      "Crypto.PubKey.RSA.Prim",
      "Crypto.Random",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Bits",
      "Data.ByteArray",
      "Data.ByteArray.Encoding",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.Maybe",
      "Data.Serialize",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Tuple",
      "Data.Vector",
      "Data.Word",
      "GHC.Generics",
      "Jose.Internal.Base64",
      "Jose.Internal.Crypto",
      "Jose.Jwa",
      "Jose.Jwe",
      "Jose.Jwk",
      "Jose.Jws",
      "Jose.Jwt",
      "Jose.Types",
      "Keys",
      "Test.DocTest",
      "Test.Hspec",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Jose.Jwt",
      "Jose.Jws",
      "Jose.Jwe",
      "Jose.Jwa",
      "Jose.Jwk",
      "Jose.Internal.Base64",
      "Jose.Internal.Crypto"
    ],
    "name": "jose-jwt",
    "version": "0.7.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Type.Bool",
        "Data.Type.Equality",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Trans.State.Strict",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy.Char8",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Swagger.Build.Api",
      "Data.Swagger.Build.Util",
      "Data.Swagger.Model.Api",
      "Data.Swagger.Model.Authorisation",
      "Data.Swagger.Model.Resource",
      "Data.Swagger.Model.Util",
      "Data.Text",
      "Data.Time",
      "Data.Type.Bool",
      "Data.Type.Equality",
      "Prelude",
      "Test.Api",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Data.Swagger.Build.Api",
      "Data.Swagger.Build.Authorisation",
      "Data.Swagger.Build.Resource",
      "Data.Swagger.Model.Api",
      "Data.Swagger.Model.Authorisation",
      "Data.Swagger.Model.Resource"
    ],
    "name": "swagger",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Ratio",
        "Numeric",
        "Prelude",
        "System.Exit",
        "System.IO",
        "Text.Read"
      ],
      "process": [
        "System.Process"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.Char",
      "Data.IORef",
      "Data.List",
      "Data.Ratio",
      "Numeric",
      "Prelude",
      "System.Exit",
      "System.IO",
      "System.Process",
      "Text.Read"
    ],
    "modules": [
      "SimpleSMT"
    ],
    "name": "simple-smt",
    "version": "0.6.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec",
        "Data.Attoparsec.Char8",
        "Data.Attoparsec.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Storable",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "cryptohash": [
        "Crypto.Hash.SHA1"
      ],
      "hourglass": [
        "Data.Hourglass"
      ],
      "mtl": [],
      "parsec": [
        "Text.Parsec"
      ],
      "patience": [
        "Data.Algorithm.Patience"
      ],
      "random": [
        "System.Random"
      ],
      "system-fileio": [
        "Filesystem"
      ],
      "system-filepath": [
        "Filesystem.Path",
        "Filesystem.Path.CurrentOS",
        "Filesystem.Path.Rules"
      ],
      "unix-compat": [
        "System.PosixCompat.Files",
        "System.PosixCompat.Types"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ],
      "vector": [
        "Data.Vector"
      ],
      "zlib": [
        "Codec.Compression.Zlib"
      ],
      "zlib-bindings": [
        "Codec.Zlib",
        "Codec.Zlib.Lowlevel"
      ]
    },
    "imports": [
      "Codec.Compression.Zlib",
      "Codec.Zlib",
      "Codec.Zlib.Lowlevel",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Crypto.Hash.SHA1",
      "Data.Algorithm.Patience",
      "Data.Attoparsec",
      "Data.Attoparsec.Char8",
      "Data.Attoparsec.Lazy",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Git",
      "Data.Git.Config",
      "Data.Git.Delta",
      "Data.Git.Diff",
      "Data.Git.Internal",
      "Data.Git.Named",
      "Data.Git.Path",
      "Data.Git.Ref",
      "Data.Git.Repository",
      "Data.Git.Revision",
      "Data.Git.Storage",
      "Data.Git.Storage.CacheFile",
      "Data.Git.Storage.FileReader",
      "Data.Git.Storage.FileWriter",
      "Data.Git.Storage.Loose",
      "Data.Git.Storage.Object",
      "Data.Git.Storage.Pack",
      "Data.Git.Storage.PackIndex",
      "Data.Git.Types",
      "Data.Git.WorkTree",
      "Data.Hashable",
      "Data.HashTable.IO",
      "Data.Hourglass",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Vector",
      "Data.Word",
      "Filesystem",
      "Filesystem.Path",
      "Filesystem.Path.CurrentOS",
      "Filesystem.Path.Rules",
      "Foreign.ForeignPtr",
      "Foreign.Storable",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.PosixCompat.Files",
      "System.PosixCompat.Types",
      "System.Random",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Text.Bytedump",
      "Text.Parsec",
      "Text.Printf"
    ],
    "modules": [
      "Data.Git",
      "Data.Git.Types",
      "Data.Git.Storage",
      "Data.Git.Storage.PackIndex",
      "Data.Git.Storage.Pack",
      "Data.Git.Storage.Object",
      "Data.Git.Storage.Loose",
      "Data.Git.Named",
      "Data.Git.Delta",
      "Data.Git.Ref",
      "Data.Git.Revision",
      "Data.Git.Repository",
      "Data.Git.Diff"
    ],
    "name": "hit",
    "version": "0.6.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Either",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Read"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Types"
      ],
      "pretty-show": [
        "Text.Show.Pretty"
      ],
      "process": [
        "System.Process"
      ],
      "split": [
        "Data.List.Split"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Cartel",
      "Cartel.Ast",
      "Cartel.Betsy",
      "Cartel.Betsy.Internal",
      "Cartel.Generators",
      "Cartel.Init",
      "Cartel.Render",
      "Cartel.Types",
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "Data.Char",
      "Data.Either",
      "Data.List",
      "Data.List.Split",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Time",
      "Multiarg",
      "Options.Applicative",
      "Options.Applicative.Types",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Process",
      "System.Random",
      "Test.QuickCheck",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.TH",
      "Text.Read",
      "Text.Show.Pretty"
    ],
    "modules": [
      "Cartel",
      "Cartel.Ast",
      "Cartel.Betsy",
      "Cartel.Betsy.Internal",
      "Cartel.Init",
      "Cartel.Render",
      "Cartel.Types"
    ],
    "name": "cartel",
    "version": "0.18.0.2"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Typeable",
        "Data.Unique",
        "Data.Word",
        "Prelude",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX"
      ],
      "unix-compat": [
        "System.PosixCompat.Files",
        "System.PosixCompat.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.Bits",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Ord",
      "Data.Text",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Unique",
      "Data.Word",
      "EventUtils",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.FSNotify",
      "System.FSNotify.Linux",
      "System.FSNotify.Listener",
      "System.FSNotify.OSX",
      "System.FSNotify.Path",
      "System.FSNotify.Polling",
      "System.FSNotify.Types",
      "System.FSNotify.Win32",
      "System.INotify",
      "System.IO.Error",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.OSX.FSEvents",
      "System.PosixCompat.Files",
      "System.PosixCompat.Types",
      "System.Win32.Notify",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Text.Printf"
    ],
    "modules": [
      "System.FSNotify",
      "System.FSNotify.Devel"
    ],
    "name": "fsnotify",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Control.Foldl",
      "Data.Vector",
      "Data.Vector.Unboxed"
    ],
    "modules": [
      "Control.Loop",
      "Control.Loop.Internal"
    ],
    "name": "loop",
    "version": "0.3.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode",
        "Data.Aeson.Parser"
      ],
      "auto-update": [
        "Control.AutoUpdate"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html.Renderer.Utf8"
      ],
      "blaze-markup": [],
      "byteable": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "clientsession": [
        "Web.ClientSession"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.Internal",
        "Data.Conduit.Lift",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Attoparsec",
        "Data.Conduit.Binary",
        "Data.Conduit.Lazy",
        "Data.Conduit.Network"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "cookie": [
        "Web.Cookie"
      ],
      "data-default": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "deepseq-generics": [
        "Control.DeepSeq.Generics"
      ],
      "directory": [],
      "exceptions": [],
      "fast-logger": [
        "System.Log.FastLogger"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [
        "Control.Exception.Lifted",
        "Data.IORef.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "mtl": [],
      "mwc-random": [
        "System.Random.MWC"
      ],
      "old-locale": [],
      "parsec": [],
      "path-pieces": [
        "Web.PathPieces"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "random": [
        "System.Random"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "safe": [
        "Safe"
      ],
      "semigroups": [],
      "shakespeare": [
        "Text.Cassius",
        "Text.Hamlet",
        "Text.Julius",
        "Text.Lucius",
        "Text.Shakespeare.I18N"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Storable"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-extra": [
        "Network.Wai.Middleware.AcceptOverride",
        "Network.Wai.Middleware.Autohead",
        "Network.Wai.Middleware.Gzip",
        "Network.Wai.Middleware.MethodOverride",
        "Network.Wai.Middleware.RequestLogger",
        "Network.Wai.Parse",
        "Network.Wai.Request",
        "Network.Wai.Test"
      ],
      "wai-logger": [],
      "warp": [
        "Network.Wai.Handler.Warp"
      ],
      "word8": [
        "Data.Word8"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Control.Applicative",
      "Control.Arrow",
      "Control.AutoUpdate",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.DeepSeq",
      "Control.DeepSeq.Generics",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Primitive",
      "Control.Monad.ST",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.RWS",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer",
      "Control.Monad.Trans.Writer.Strict",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Parser",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Attoparsec",
      "Data.Conduit.Binary",
      "Data.Conduit.Internal",
      "Data.Conduit.Lazy",
      "Data.Conduit.Lift",
      "Data.Conduit.List",
      "Data.Conduit.Network",
      "Data.Either",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.IORef.Lifted",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Serialize",
      "Data.Set",
      "Data.Streaming.Network",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Time",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Storable",
      "Data.Version",
      "Data.Word",
      "Data.Word8",
      "Hierarchy",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Network.HTTP.Types",
      "Network.Socket",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Middleware.AcceptOverride",
      "Network.Wai.Middleware.Autohead",
      "Network.Wai.Middleware.Gzip",
      "Network.Wai.Middleware.MethodOverride",
      "Network.Wai.Middleware.RequestLogger",
      "Network.Wai.Parse",
      "Network.Wai.Request",
      "Network.Wai.Test",
      "Numeric",
      "Paths",
      "Prelude",
      "Safe",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "System.Log.FastLogger",
      "System.PosixCompat.Files",
      "System.Random",
      "System.Random.MWC",
      "Test.Hspec",
      "Test.HUnit",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Cassius",
      "Text.Hamlet",
      "Text.Julius",
      "Text.Lucius",
      "Text.Shakespeare.I18N",
      "Web.ClientSession",
      "Web.Cookie",
      "Web.PathPieces",
      "Yesod.Core",
      "Yesod.Core.Class.Breadcrumbs",
      "Yesod.Core.Class.Dispatch",
      "Yesod.Core.Class.Handler",
      "Yesod.Core.Class.Yesod",
      "Yesod.Core.Content",
      "Yesod.Core.Dispatch",
      "Yesod.Core.Handler",
      "Yesod.Core.Internal",
      "Yesod.Core.Internal.LiteApp",
      "Yesod.Core.Internal.Request",
      "Yesod.Core.Internal.Response",
      "Yesod.Core.Internal.Run",
      "Yesod.Core.Internal.Session",
      "Yesod.Core.Internal.TH",
      "Yesod.Core.Internal.Util",
      "Yesod.Core.Json",
      "YesodCoreTest",
      "YesodCoreTest.Auth",
      "YesodCoreTest.Cache",
      "YesodCoreTest.CleanPath",
      "YesodCoreTest.Csrf",
      "YesodCoreTest.ErrorHandling",
      "YesodCoreTest.Exceptions",
      "YesodCoreTest.InternalRequest",
      "YesodCoreTest.JsLoader",
      "YesodCoreTest.JsLoaderSites.Bottom",
      "YesodCoreTest.Json",
      "YesodCoreTest.Links",
      "YesodCoreTest.LiteApp",
      "YesodCoreTest.Media",
      "YesodCoreTest.MediaData",
      "YesodCoreTest.NoOverloadedStrings",
      "YesodCoreTest.NoOverloadedStringsSub",
      "YesodCoreTest.RawResponse",
      "YesodCoreTest.Redirect",
      "YesodCoreTest.Reps",
      "YesodCoreTest.RequestBodySize",
      "YesodCoreTest.Ssl",
      "YesodCoreTest.Streaming",
      "YesodCoreTest.StubLaxSameSite",
      "YesodCoreTest.StubSslOnly",
      "YesodCoreTest.StubStrictSameSite",
      "YesodCoreTest.StubUnsecured",
      "YesodCoreTest.WaiSubsite",
      "YesodCoreTest.Widget",
      "YesodCoreTest.YesodTest",
      "Yesod.Core.TypeCache",
      "Yesod.Core.Types",
      "Yesod.Core.Widget",
      "Yesod.Routes.Class",
      "Yesod.Routes.Overlap",
      "Yesod.Routes.Parse",
      "Yesod.Routes.TH",
      "Yesod.Routes.TH.Dispatch",
      "Yesod.Routes.TH.ParseRoute",
      "Yesod.Routes.TH.RenderRoute",
      "Yesod.Routes.TH.RouteAttrs",
      "Yesod.Routes.TH.Types"
    ],
    "modules": [
      "Yesod.Core",
      "Yesod.Core.Content",
      "Yesod.Core.Dispatch",
      "Yesod.Core.Handler",
      "Yesod.Core.Json",
      "Yesod.Core.Widget",
      "Yesod.Core.Internal",
      "Yesod.Core.Types",
      "Yesod.Core.Unsafe",
      "Yesod.Routes.TH.Types"
    ],
    "name": "yesod-core",
    "version": "1.4.25"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mcmc-types": [
        "Data.Sampling.Types"
      ],
      "mwc-probability": [
        "System.Random.MWC.Probability"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": [
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Primitive",
      "Control.Monad.Trans.State.Strict",
      "Data.Maybe",
      "Data.Sampling.Types",
      "Data.Sequence",
      "Numeric.MCMC.Slice",
      "Pipes",
      "Pipes.Prelude",
      "System.Random.MWC.Probability"
    ],
    "modules": [
      "Numeric.MCMC.Slice"
    ],
    "name": "speedy-slice",
    "version": "0.1.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Analytics",
      "Network.Google.Analytics.Types",
      "Network.Google.Resource.Analytics.Data.Ga.Get",
      "Network.Google.Resource.Analytics.Data.Mcf.Get",
      "Network.Google.Resource.Analytics.Data.Realtime.Get",
      "Network.Google.Resource.Analytics.Management.AccountSummaries.List",
      "Network.Google.Resource.Analytics.Management.AccountUserLinks.Delete",
      "Network.Google.Resource.Analytics.Management.AccountUserLinks.Insert",
      "Network.Google.Resource.Analytics.Management.AccountUserLinks.List",
      "Network.Google.Resource.Analytics.Management.AccountUserLinks.Update",
      "Network.Google.Resource.Analytics.Management.Accounts.List",
      "Network.Google.Resource.Analytics.Management.CustomDataSources.List",
      "Network.Google.Resource.Analytics.Management.CustomDimensions.Get",
      "Network.Google.Resource.Analytics.Management.CustomDimensions.Insert",
      "Network.Google.Resource.Analytics.Management.CustomDimensions.List",
      "Network.Google.Resource.Analytics.Management.CustomDimensions.Patch",
      "Network.Google.Resource.Analytics.Management.CustomDimensions.Update",
      "Network.Google.Resource.Analytics.Management.CustomMetrics.Get",
      "Network.Google.Resource.Analytics.Management.CustomMetrics.Insert",
      "Network.Google.Resource.Analytics.Management.CustomMetrics.List",
      "Network.Google.Resource.Analytics.Management.CustomMetrics.Patch",
      "Network.Google.Resource.Analytics.Management.CustomMetrics.Update",
      "Network.Google.Resource.Analytics.Management.Experiments.Delete",
      "Network.Google.Resource.Analytics.Management.Experiments.Get",
      "Network.Google.Resource.Analytics.Management.Experiments.Insert",
      "Network.Google.Resource.Analytics.Management.Experiments.List",
      "Network.Google.Resource.Analytics.Management.Experiments.Patch",
      "Network.Google.Resource.Analytics.Management.Experiments.Update",
      "Network.Google.Resource.Analytics.Management.Filters.Delete",
      "Network.Google.Resource.Analytics.Management.Filters.Get",
      "Network.Google.Resource.Analytics.Management.Filters.Insert",
      "Network.Google.Resource.Analytics.Management.Filters.List",
      "Network.Google.Resource.Analytics.Management.Filters.Patch",
      "Network.Google.Resource.Analytics.Management.Filters.Update",
      "Network.Google.Resource.Analytics.Management.Goals.Get",
      "Network.Google.Resource.Analytics.Management.Goals.Insert",
      "Network.Google.Resource.Analytics.Management.Goals.List",
      "Network.Google.Resource.Analytics.Management.Goals.Patch",
      "Network.Google.Resource.Analytics.Management.Goals.Update",
      "Network.Google.Resource.Analytics.Management.ProFileFilterLinks.Delete",
      "Network.Google.Resource.Analytics.Management.ProFileFilterLinks.Get",
      "Network.Google.Resource.Analytics.Management.ProFileFilterLinks.Insert",
      "Network.Google.Resource.Analytics.Management.ProFileFilterLinks.List",
      "Network.Google.Resource.Analytics.Management.ProFileFilterLinks.Patch",
      "Network.Google.Resource.Analytics.Management.ProFileFilterLinks.Update",
      "Network.Google.Resource.Analytics.Management.ProFileUserLinks.Delete",
      "Network.Google.Resource.Analytics.Management.ProFileUserLinks.Insert",
      "Network.Google.Resource.Analytics.Management.ProFileUserLinks.List",
      "Network.Google.Resource.Analytics.Management.ProFileUserLinks.Update",
      "Network.Google.Resource.Analytics.Management.ProFiles.Delete",
      "Network.Google.Resource.Analytics.Management.ProFiles.Get",
      "Network.Google.Resource.Analytics.Management.ProFiles.Insert",
      "Network.Google.Resource.Analytics.Management.ProFiles.List",
      "Network.Google.Resource.Analytics.Management.ProFiles.Patch",
      "Network.Google.Resource.Analytics.Management.ProFiles.Update",
      "Network.Google.Resource.Analytics.Management.Segments.List",
      "Network.Google.Resource.Analytics.Management.UnSampledReports.Delete",
      "Network.Google.Resource.Analytics.Management.UnSampledReports.Get",
      "Network.Google.Resource.Analytics.Management.UnSampledReports.Insert",
      "Network.Google.Resource.Analytics.Management.UnSampledReports.List",
      "Network.Google.Resource.Analytics.Management.Uploads.DeleteUploadData",
      "Network.Google.Resource.Analytics.Management.Uploads.Get",
      "Network.Google.Resource.Analytics.Management.Uploads.List",
      "Network.Google.Resource.Analytics.Management.Uploads.UploadData",
      "Network.Google.Resource.Analytics.Management.WebProperties.Get",
      "Network.Google.Resource.Analytics.Management.WebProperties.Insert",
      "Network.Google.Resource.Analytics.Management.WebProperties.List",
      "Network.Google.Resource.Analytics.Management.WebProperties.Patch",
      "Network.Google.Resource.Analytics.Management.WebProperties.Update",
      "Network.Google.Resource.Analytics.Management.WebPropertyAdWordsLinks.Delete",
      "Network.Google.Resource.Analytics.Management.WebPropertyAdWordsLinks.Get",
      "Network.Google.Resource.Analytics.Management.WebPropertyAdWordsLinks.Insert",
      "Network.Google.Resource.Analytics.Management.WebPropertyAdWordsLinks.List",
      "Network.Google.Resource.Analytics.Management.WebPropertyAdWordsLinks.Patch",
      "Network.Google.Resource.Analytics.Management.WebPropertyAdWordsLinks.Update",
      "Network.Google.Resource.Analytics.Management.WebPropertyUserLinks.Delete",
      "Network.Google.Resource.Analytics.Management.WebPropertyUserLinks.Insert",
      "Network.Google.Resource.Analytics.Management.WebPropertyUserLinks.List",
      "Network.Google.Resource.Analytics.Management.WebPropertyUserLinks.Update",
      "Network.Google.Resource.Analytics.Metadata.Columns.List",
      "Network.Google.Resource.Analytics.Provisioning.CreateAccountTicket"
    ],
    "name": "gogol-analytics",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "JuicyPixels": [
        "Codec.Picture",
        "Codec.Picture.Saving",
        "Codec.Picture.Types"
      ],
      "base": [
        "Data.Proxy",
        "GHC.TypeLits"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "http-media": [
        "Network.HTTP.Media"
      ],
      "servant": [
        "Servant.API"
      ],
      "servant-JuicyPixels": [],
      "servant-server": [
        "Servant"
      ],
      "wai": [
        "Network.Wai"
      ],
      "warp": [
        "Network.Wai.Handler.Warp"
      ]
    },
    "imports": [
      "Codec.Picture",
      "Codec.Picture.Saving",
      "Codec.Picture.Types",
      "Data.ByteString.Lazy",
      "Data.Proxy",
      "GHC.TypeLits",
      "Network.HTTP.Media",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Servant",
      "Servant.API",
      "Servant.JuicyPixels"
    ],
    "modules": [
      "Servant.JuicyPixels"
    ],
    "name": "servant-JuicyPixels",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "ghc-prim": [
        "GHC.Classes",
        "GHC.CString",
        "GHC.Debug",
        "GHC.IntWord64",
        "GHC.Magic",
        "GHC.Tuple",
        "GHC.Types"
      ],
      "rts": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Concurrent.QSem",
      "Control.Concurrent.QSemN",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.Fix",
      "Control.Monad.ST",
      "Control.Monad.ST.Imp",
      "Control.Monad.ST.Lazy",
      "Control.Monad.ST.Lazy.Imp",
      "Control.Monad.ST.Unsafe",
      "Control.Monad.Zip",
      "Data.Bits",
      "Data.Bool",
      "Data.Char",
      "Data.Coerce",
      "Data.Data",
      "Data.Dynamic",
      "Data.Either",
      "Data.Eq",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Classes",
      "Data.Functor.Const",
      "Data.Functor.Identity",
      "Data.Int",
      "Data.IORef",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.OldList",
      "Data.Ord",
      "Data.Proxy",
      "Data.Semigroup",
      "Data.STRef",
      "Data.String",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Typeable",
      "Data.Typeable.Internal",
      "Data.Type.Bool",
      "Data.Type.Coercion",
      "Data.Type.Equality",
      "Data.Unique",
      "Data.Version",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Imp",
      "Foreign.Marshal",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Error",
      "Foreign.Marshal.Pool",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "Foreign.Storable",
      "GHC.Arr",
      "GHC.Base",
      "GHC.Char",
      "GHC.Classes",
      "GHC.Conc",
      "GHC.Conc.IO",
      "GHC.Conc.Signal",
      "GHC.Conc.Sync",
      "GHC.Conc.Windows",
      "GHC.ConsoleHandler",
      "GHC.CString",
      "GHC.Debug",
      "GHC.Enum",
      "GHC.Environment",
      "GHC.Err",
      "GHC.Event",
      "GHC.Event.Arr",
      "GHC.Event.Clock",
      "GHC.Event.Control",
      "GHC.Event.EPoll",
      "GHC.Event.Internal",
      "GHC.Event.IntTable",
      "GHC.Event.KQueue",
      "GHC.Event.Manager",
      "GHC.Event.Poll",
      "GHC.Event.PSQ",
      "GHC.Event.Thread",
      "GHC.Event.TimerManager",
      "GHC.Event.Unique",
      "GHC.Exception",
      "GHC.ExecutionStack.Internal",
      "GHC.Exts",
      "GHC.Fingerprint",
      "GHC.Fingerprint.Type",
      "GHC.Float",
      "GHC.Float.ConversionUtils",
      "GHC.Float.RealFracMethods",
      "GHC.Foreign",
      "GHC.ForeignPtr",
      "GHC.Generics",
      "GHC.Int",
      "GHC.Integer",
      "GHC.Integer.GMP.Internals",
      "GHC.Integer.Logarithms",
      "GHC.Integer.Logarithms.Internals",
      "GHC.IntWord64",
      "GHC.IO",
      "GHC.IOArray",
      "GHC.IO.Buffer",
      "GHC.IO.BufferedIO",
      "GHC.IO.Device",
      "GHC.IO.Encoding",
      "GHC.IO.Encoding.CodePage",
      "GHC.IO.Encoding.CodePage.API",
      "GHC.IO.Encoding.CodePage.Table",
      "GHC.IO.Encoding.Failure",
      "GHC.IO.Encoding.Iconv",
      "GHC.IO.Encoding.Latin1",
      "GHC.IO.Encoding.Types",
      "GHC.IO.Encoding.UTF16",
      "GHC.IO.Encoding.UTF32",
      "GHC.IO.Encoding.UTF8",
      "GHC.IO.Exception",
      "GHC.IO.FD",
      "GHC.IO.Handle",
      "GHC.IO.Handle.FD",
      "GHC.IO.Handle.Internals",
      "GHC.IO.Handle.Text",
      "GHC.IO.Handle.Types",
      "GHC.IO.IOMode",
      "GHC.IORef",
      "GHC.IO.Unsafe",
      "GHC.List",
      "GHC.Magic",
      "GHC.MVar",
      "GHC.Natural",
      "GHC.Num",
      "GHC.OldList",
      "GHC.Prim",
      "GHC.Ptr",
      "GHC.Read",
      "GHC.Real",
      "GHC.Show",
      "GHC.ST",
      "GHC.Stable",
      "GHC.Stack",
      "GHC.Stack.CCS",
      "GHC.Stack.Types",
      "GHC.Storable",
      "GHC.STRef",
      "GHC.Tuple",
      "GHC.TypeLits",
      "GHC.Types",
      "GHC.Unicode",
      "GHC.Weak",
      "GHC.Windows",
      "GHC.Word",
      "Numeric",
      "Numeric.Natural",
      "Prelude",
      "System.Environment.ExecutablePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Posix.Internals",
      "System.Posix.Types",
      "Test.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.Read",
      "Text.Read.Lex",
      "Text.Show",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Concurrent.QSem",
      "Control.Concurrent.QSemN",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.Fix",
      "Control.Monad.Instances",
      "Control.Monad.IO.Class",
      "Control.Monad.ST",
      "Control.Monad.ST.Lazy",
      "Control.Monad.ST.Lazy.Safe",
      "Control.Monad.ST.Lazy.Unsafe",
      "Control.Monad.ST.Safe",
      "Control.Monad.ST.Strict",
      "Control.Monad.ST.Unsafe",
      "Control.Monad.Zip",
      "Data.Bifunctor",
      "Data.Bits",
      "Data.Bool",
      "Data.Char",
      "Data.Coerce",
      "Data.Complex",
      "Data.Data",
      "Data.Dynamic",
      "Data.Either",
      "Data.Eq",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Classes",
      "Data.Functor.Compose",
      "Data.Functor.Const",
      "Data.Functor.Identity",
      "Data.Functor.Product",
      "Data.Functor.Sum",
      "Data.IORef",
      "Data.Int",
      "Data.Ix",
      "Data.Kind",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.STRef",
      "Data.STRef.Lazy",
      "Data.STRef.Strict",
      "Data.String",
      "Data.Traversable",
      "Data.Tuple",
      "Data.Type.Bool",
      "Data.Type.Coercion",
      "Data.Type.Equality",
      "Data.Typeable",
      "Data.Typeable.Internal",
      "Data.Unique",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "Foreign.C",
      "Foreign.C.Error",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Concurrent",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Safe",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Error",
      "Foreign.Marshal.Pool",
      "Foreign.Marshal.Safe",
      "Foreign.Marshal.Unsafe",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Safe",
      "Foreign.StablePtr",
      "Foreign.Storable",
      "GHC.Arr",
      "GHC.Base",
      "GHC.Char",
      "GHC.Conc",
      "GHC.Conc.IO",
      "GHC.Conc.Signal",
      "GHC.Conc.Sync",
      "GHC.ConsoleHandler",
      "GHC.Constants",
      "GHC.Desugar",
      "GHC.Enum",
      "GHC.Environment",
      "GHC.Err",
      "GHC.Exception",
      "GHC.ExecutionStack",
      "GHC.ExecutionStack.Internal",
      "GHC.Exts",
      "GHC.Fingerprint",
      "GHC.Fingerprint.Type",
      "GHC.Float",
      "GHC.Float.ConversionUtils",
      "GHC.Float.RealFracMethods",
      "GHC.Foreign",
      "GHC.ForeignPtr",
      "GHC.GHCi",
      "GHC.Generics",
      "GHC.IO",
      "GHC.IO.Buffer",
      "GHC.IO.BufferedIO",
      "GHC.IO.Device",
      "GHC.IO.Encoding",
      "GHC.IO.Encoding.CodePage",
      "GHC.IO.Encoding.Failure",
      "GHC.IO.Encoding.Iconv",
      "GHC.IO.Encoding.Latin1",
      "GHC.IO.Encoding.Types",
      "GHC.IO.Encoding.UTF16",
      "GHC.IO.Encoding.UTF32",
      "GHC.IO.Encoding.UTF8",
      "GHC.IO.Exception",
      "GHC.IO.FD",
      "GHC.IO.Handle",
      "GHC.IO.Handle.FD",
      "GHC.IO.Handle.Internals",
      "GHC.IO.Handle.Text",
      "GHC.IO.Handle.Types",
      "GHC.IO.IOMode",
      "GHC.IO.Unsafe",
      "GHC.IOArray",
      "GHC.IORef",
      "GHC.Int",
      "GHC.List",
      "GHC.MVar",
      "GHC.Natural",
      "GHC.Num",
      "GHC.OldList",
      "GHC.OverloadedLabels",
      "GHC.PArr",
      "GHC.Pack",
      "GHC.Profiling",
      "GHC.Ptr",
      "GHC.Read",
      "GHC.Real",
      "GHC.RTS.Flags",
      "GHC.ST",
      "GHC.StaticPtr",
      "GHC.STRef",
      "GHC.Show",
      "GHC.Stable",
      "GHC.Stack",
      "GHC.Stack.CCS",
      "GHC.Stack.Types",
      "GHC.Stats",
      "GHC.Storable",
      "GHC.TopHandler",
      "GHC.TypeLits",
      "GHC.Unicode",
      "GHC.Weak",
      "GHC.Word",
      "Numeric",
      "Numeric.Natural",
      "Prelude",
      "System.CPUTime",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Info",
      "System.Mem",
      "System.Mem.StableName",
      "System.Mem.Weak",
      "System.Posix.Internals",
      "System.Posix.Types",
      "System.Timeout",
      "Text.ParserCombinators.ReadP",
      "Text.ParserCombinators.ReadPrec",
      "Text.Printf",
      "Text.Read",
      "Text.Read.Lex",
      "Text.Show",
      "Text.Show.Functions",
      "Unsafe.Coerce"
    ],
    "name": "base",
    "version": "4.9.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Category",
        "Prelude"
      ],
      "semigroupoids": [
        "Data.Groupoid",
        "Data.Semigroupoid"
      ]
    },
    "imports": [
      "Control.Category",
      "Data.Groupoid",
      "Data.Semigroupoid",
      "Prelude"
    ],
    "modules": [
      "Data.Eq.Type"
    ],
    "name": "eq",
    "version": "4.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Data",
        "System.Environment",
        "System.IO",
        "System.IO.Error"
      ],
      "byteable": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "network": [
        "Network",
        "Network.BSD",
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "socks": [
        "Network.Socks5"
      ],
      "tls": [
        "Network.TLS",
        "Network.TLS.Extra"
      ],
      "x509": [],
      "x509-store": [
        "Data.X509.CertificateStore"
      ],
      "x509-system": [
        "System.X509"
      ],
      "x509-validation": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Data",
      "Data.Default.Class",
      "Data.Map",
      "Data.X509.CertificateStore",
      "Network",
      "Network.BSD",
      "Network.Connection.Types",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socks5",
      "Network.TLS",
      "Network.TLS.Extra",
      "System.Environment",
      "System.IO",
      "System.IO.Error",
      "System.X509"
    ],
    "modules": [
      "Network.Connection"
    ],
    "name": "connection",
    "version": "0.2.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Foreign.C.String",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable"
      ],
      "bindings-DSL": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Bindings.GLFW",
      "Control.Concurrent",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Foreign.C.String",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Language.Haskell.TH",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit"
    ],
    "modules": [
      "Bindings.GLFW"
    ],
    "name": "bindings-GLFW",
    "version": "3.1.2.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Parser"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Fixed",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "GHC.IO",
        "Prelude",
        "System.IO.Unsafe",
        "System.Timeout",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Prim",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ],
      "bytestring-builder": [],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "hashable": [],
      "postgresql-libpq": [
        "Database.PostgreSQL.LibPQ"
      ],
      "scientific": [
        "Data.Scientific",
        "Data.Text.Lazy.Builder.Scientific"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar",
        "Data.Time.Clock",
        "Data.Time.LocalTime"
      ],
      "transformers": [],
      "uuid-types": [
        "Data.UUID.Types"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable"
      ]
    },
    "imports": [
      "Common",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Crypto.Hash.MD5",
      "Data.Aeson",
      "Data.Aeson.Parser",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Database.PostgreSQL.LibPQ",
      "Database.PostgreSQL.Simple",
      "Database.PostgreSQL.Simple.Compat",
      "Database.PostgreSQL.Simple.Copy",
      "Database.PostgreSQL.Simple.Errors",
      "Database.PostgreSQL.Simple.FromField",
      "Database.PostgreSQL.Simple.HStore",
      "Database.PostgreSQL.Simple.HStore.Implementation",
      "Database.PostgreSQL.Simple.Internal",
      "Database.PostgreSQL.Simple.Notification",
      "Database.PostgreSQL.Simple.SqlQQ",
      "Database.PostgreSQL.Simple.Time.Implementation",
      "Database.PostgreSQL.Simple.Time.Internal.Parser",
      "Database.PostgreSQL.Simple.Time.Internal.Printer",
      "Database.PostgreSQL.Simple.ToField",
      "Database.PostgreSQL.Simple.Transaction",
      "Database.PostgreSQL.Simple.TypeInfo.Static",
      "Database.PostgreSQL.Simple.TypeInfo.Types",
      "Database.PostgreSQL.Simple.Types",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Fixed",
      "Data.Function",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Scientific",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Scientific",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.LocalTime",
      "Data.Typeable",
      "Data.UUID",
      "Data.UUID.Types",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Word",
      "GHC.Generics",
      "GHC.IO",
      "GHC.IOBase",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Notify",
      "Prelude",
      "Serializable",
      "System.FilePath",
      "System.IO.Unsafe",
      "System.Timeout",
      "Test.Tasty",
      "Test.Tasty.Golden",
      "Test.Tasty.HUnit",
      "Time",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Database.PostgreSQL.Simple",
      "Database.PostgreSQL.Simple.Arrays",
      "Database.PostgreSQL.Simple.Copy",
      "Database.PostgreSQL.Simple.FromField",
      "Database.PostgreSQL.Simple.FromRow",
      "Database.PostgreSQL.Simple.LargeObjects",
      "Database.PostgreSQL.Simple.HStore",
      "Database.PostgreSQL.Simple.HStore.Internal",
      "Database.PostgreSQL.Simple.Notification",
      "Database.PostgreSQL.Simple.Ok",
      "Database.PostgreSQL.Simple.Range",
      "Database.PostgreSQL.Simple.SqlQQ",
      "Database.PostgreSQL.Simple.Time",
      "Database.PostgreSQL.Simple.Time.Internal",
      "Database.PostgreSQL.Simple.ToField",
      "Database.PostgreSQL.Simple.ToRow",
      "Database.PostgreSQL.Simple.Transaction",
      "Database.PostgreSQL.Simple.TypeInfo",
      "Database.PostgreSQL.Simple.TypeInfo.Macro",
      "Database.PostgreSQL.Simple.TypeInfo.Static",
      "Database.PostgreSQL.Simple.Types",
      "Database.PostgreSQL.Simple.Errors",
      "Database.PostgreSQL.Simple.Internal"
    ],
    "name": "postgresql-simple",
    "version": "0.5.2.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.SWF",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.SWF",
      "Test.AWS.SWF.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.SWF",
      "Network.AWS.SWF.CountClosedWorkflowExecutions",
      "Network.AWS.SWF.CountOpenWorkflowExecutions",
      "Network.AWS.SWF.CountPendingActivityTasks",
      "Network.AWS.SWF.CountPendingDecisionTasks",
      "Network.AWS.SWF.DeprecateActivityType",
      "Network.AWS.SWF.DeprecateDomain",
      "Network.AWS.SWF.DeprecateWorkflowType",
      "Network.AWS.SWF.DescribeActivityType",
      "Network.AWS.SWF.DescribeDomain",
      "Network.AWS.SWF.DescribeWorkflowExecution",
      "Network.AWS.SWF.DescribeWorkflowType",
      "Network.AWS.SWF.GetWorkflowExecutionHistory",
      "Network.AWS.SWF.ListActivityTypes",
      "Network.AWS.SWF.ListClosedWorkflowExecutions",
      "Network.AWS.SWF.ListDomains",
      "Network.AWS.SWF.ListOpenWorkflowExecutions",
      "Network.AWS.SWF.ListWorkflowTypes",
      "Network.AWS.SWF.PollForActivityTask",
      "Network.AWS.SWF.PollForDecisionTask",
      "Network.AWS.SWF.RecordActivityTaskHeartbeat",
      "Network.AWS.SWF.RegisterActivityType",
      "Network.AWS.SWF.RegisterDomain",
      "Network.AWS.SWF.RegisterWorkflowType",
      "Network.AWS.SWF.RequestCancelWorkflowExecution",
      "Network.AWS.SWF.RespondActivityTaskCanceled",
      "Network.AWS.SWF.RespondActivityTaskCompleted",
      "Network.AWS.SWF.RespondActivityTaskFailed",
      "Network.AWS.SWF.RespondDecisionTaskCompleted",
      "Network.AWS.SWF.SignalWorkflowExecution",
      "Network.AWS.SWF.StartWorkflowExecution",
      "Network.AWS.SWF.TerminateWorkflowExecution",
      "Network.AWS.SWF.Types",
      "Network.AWS.SWF.Waiters"
    ],
    "name": "amazonka-swf",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Prelude"
      ]
    },
    "imports": [
      "Prelude"
    ],
    "modules": [
      "Diagrams.Solve.Polynomial",
      "Diagrams.Solve.Tridiagonal"
    ],
    "name": "diagrams-solve",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "Data.Word",
        "GHC.Exts",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8",
        "Blaze.ByteString.Builder.Html.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Blaze.ByteString.Builder.Html.Utf8",
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Typeable",
      "Data.Word",
      "GHC.Exts",
      "Prelude",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Blaze",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.String",
      "Text.Blaze.Renderer.Text",
      "Text.Blaze.Renderer.Utf8",
      "Text.Blaze.Tests",
      "Text.Blaze.Tests.Util",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Text.Blaze",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.Pretty",
      "Text.Blaze.Renderer.String",
      "Text.Blaze.Renderer.Text",
      "Text.Blaze.Renderer.Utf8"
    ],
    "name": "blaze-markup",
    "version": "0.7.1.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Functor",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Word",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "fingertree": [
        "Data.FingerTree"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "semigroupoids": [
        "Data.Functor.Apply",
        "Data.Functor.Plus",
        "Data.Semigroup.Foldable",
        "Data.Semigroup.Traversable"
      ],
      "semigroups": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashSet"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Array",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Data",
      "Data.FingerTree",
      "Data.Foldable",
      "Data.Functor",
      "Data.Functor.Apply",
      "Data.Functor.Plus",
      "Data.Generator",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Semigroup.Alternative",
      "Data.Semigroup.Applicative",
      "Data.Semigroup.Foldable",
      "Data.Semigroup.Instances",
      "Data.Semigroup.Monad",
      "Data.Semigroup.MonadPlus",
      "Data.Semigroup.Reducer",
      "Data.Semigroup.Traversable",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Traversable",
      "Data.Word",
      "Prelude"
    ],
    "modules": [
      "Data.Generator",
      "Data.Generator.Combinators",
      "Data.Semigroup.Generator",
      "Data.Semigroup.Reducer",
      "Data.Semigroup.Reducer.With",
      "Data.Semigroup.Instances",
      "Data.Semigroup.Union",
      "Data.Semigroup.Apply",
      "Data.Semigroup.Applicative",
      "Data.Semigroup.Alt",
      "Data.Semigroup.Alternative",
      "Data.Semigroup.Monad",
      "Data.Semigroup.MonadPlus",
      "Data.Semigroup.Self"
    ],
    "name": "reducers",
    "version": "3.12.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "authenticate-oauth": [
        "Web.Authenticate.OAuth"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char",
        "Data.List",
        "Data.Ord",
        "GHC.Generics"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.List",
      "Data.Ord",
      "GHC.Generics",
      "Network.HTTP.Conduit",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Web.Authenticate.OAuth",
      "Web.Twitter.Feed",
      "Web.Twitter.Feed.Tests",
      "Web.Twitter.Types"
    ],
    "modules": [
      "Web.Twitter.Feed",
      "Web.Twitter.Types"
    ],
    "name": "twitter-feed",
    "version": "0.2.0.9"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Array",
      "Data.Char",
      "Data.Generics.Basics",
      "Data.Generics.Instances",
      "Data.Monoid",
      "Data.Ratio",
      "GHC.Exts",
      "Language.Haskell.Lexer",
      "Language.Haskell.ParseMonad",
      "Language.Haskell.ParseUtils",
      "Language.Haskell.Pretty",
      "Language.Haskell.Syntax",
      "Prelude",
      "Text.PrettyPrint"
    ],
    "modules": [
      "Language.Haskell.Lexer",
      "Language.Haskell.Parser",
      "Language.Haskell.ParseMonad",
      "Language.Haskell.Pretty",
      "Language.Haskell.Syntax",
      "Language.Haskell.ParseUtils"
    ],
    "name": "haskell-src",
    "version": "1.0.2.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Data.Char"
      ],
      "base-compat": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "hspec-core": [
        "Test.Hspec.Core.Spec"
      ],
      "hspec-expectations": [],
      "http-types": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": [],
      "wai": [],
      "wai-extra": [
        "Network.Wai.Test"
      ],
      "with-location": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.Wai.Test",
      "Test.Hspec.Core.Spec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Test.Hspec.Wai",
      "Test.Hspec.Wai.QuickCheck",
      "Test.Hspec.Wai.Internal"
    ],
    "name": "hspec-wai",
    "version": "0.6.6"
  },
  {
    "dependencies": {
      "FontyFruity": [
        "Graphics.Text.TrueType"
      ],
      "JuicyPixels": [
        "Codec.Picture"
      ],
      "asciidiagram": [],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "lens": [
        "Control.Lens"
      ],
      "linear": [
        "Linear"
      ],
      "mtl": [
        "Control.Monad.State.Class",
        "Control.Monad.State.Strict"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "rasterific-svg": [
        "Graphics.Rasterific.Svg"
      ],
      "svg-tree": [
        "Graphics.Svg",
        "Graphics.Svg.CssTypes",
        "Graphics.Svg.Types"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Codec.Picture",
      "Control.Applicative",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.State.Class",
      "Control.Monad.State.Strict",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Graphics.Rasterific.Svg",
      "Graphics.Svg",
      "Graphics.Svg.CssTypes",
      "Graphics.Svg.Types",
      "Graphics.Text.TrueType",
      "Linear",
      "Options.Applicative",
      "System.Directory",
      "System.FilePath",
      "Text.AsciiDiagram",
      "Text.AsciiDiagram.BoundingBoxEstimation",
      "Text.AsciiDiagram.DefaultContext",
      "Text.AsciiDiagram.DiagramCleaner",
      "Text.AsciiDiagram.Geometry",
      "Text.AsciiDiagram.Graph",
      "Text.AsciiDiagram.Parser",
      "Text.AsciiDiagram.Reconstructor",
      "Text.AsciiDiagram.SvgRender",
      "Text.Printf"
    ],
    "modules": [
      "Text.AsciiDiagram"
    ],
    "name": "asciidiagram",
    "version": "1.3.1.2"
  },
  {
    "dependencies": {
      "HUnit": [],
      "QuickCheck": [],
      "base": [
        "Control.Exception"
      ]
    },
    "imports": [
      "Control.Exception"
    ],
    "modules": [
      "Test.QuickCheck.IO"
    ],
    "name": "quickcheck-io",
    "version": "0.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Maybe"
      ],
      "clckwrks": [
        "Clckwrks",
        "Clckwrks.Authenticate.Plugin",
        "Clckwrks.Authenticate.URL",
        "Clckwrks.Monad",
        "Clckwrks.NavBar.API",
        "Clckwrks.NavBar.Types",
        "Clckwrks.Types"
      ],
      "happstack-authenticate": [
        "Happstack.Authenticate.Password.URL"
      ],
      "hsp": [
        "HSP.XML",
        "HSP.XMLGenerator"
      ],
      "hsx-jmacro": [
        "HSP.JMacro"
      ],
      "hsx2hs": [
        "Language.Haskell.HSX.QQ"
      ],
      "jmacro": [
        "Language.Javascript.JMacro"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "web-plugins": [
        "Web.Plugins.Core"
      ]
    },
    "imports": [
      "Clckwrks",
      "Clckwrks.Authenticate.Plugin",
      "Clckwrks.Authenticate.URL",
      "Clckwrks.Monad",
      "Clckwrks.NavBar.API",
      "Clckwrks.NavBar.Types",
      "Clckwrks.Types",
      "Control.Monad.State",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Lazy",
      "Happstack.Authenticate.Password.URL",
      "HSP.JMacro",
      "HSP.XML",
      "HSP.XMLGenerator",
      "Language.Haskell.HSX.QQ",
      "Language.Javascript.JMacro",
      "Paths",
      "Web.Plugins.Core"
    ],
    "modules": [
      "Theme",
      "Paths_clckwrks_theme_bootstrap"
    ],
    "name": "clckwrks-theme-bootstrap",
    "version": "0.4.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Functor",
        "Data.Monoid"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "conduit": [
        "Data.Conduit"
      ],
      "transformers": [],
      "wai": [
        "Network.Wai"
      ],
      "wai-eventsource": [],
      "wai-extra": [
        "Network.Wai.EventSource",
        "Network.Wai.EventSource.EventStream"
      ],
      "yesod-core": [
        "Yesod.Core"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Control.Monad",
      "Data.Conduit",
      "Data.Functor",
      "Data.Monoid",
      "Network.Wai",
      "Network.Wai.EventSource",
      "Network.Wai.EventSource.EventStream",
      "Yesod.Core"
    ],
    "modules": [
      "Yesod.EventSource"
    ],
    "name": "yesod-eventsource",
    "version": "1.4.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Typeable.Internal",
        "GHC.Exts",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "binary": [
        "Data.Binary"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.Binary",
      "Data.List",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Rank1Dynamic",
      "Data.Rank1Typeable",
      "Data.Typeable",
      "Data.Typeable.Internal",
      "GHC.Exts",
      "Prelude",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Rank1Dynamic",
      "Data.Rank1Typeable"
    ],
    "name": "rank1dynamic",
    "version": "0.3.3.0"
  },
  {
    "dependencies": {
      "HsOpenSSL": [
        "OpenSSL",
        "OpenSSL.Session"
      ],
      "base": [
        "Control.Exception"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "io-streams": [
        "System.IO.Streams"
      ],
      "network": [
        "Network.Socket"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.ByteString.Char8",
      "Network.Socket",
      "OpenSSL",
      "OpenSSL.Session",
      "System.IO.Streams",
      "System.IO.Streams.SSL"
    ],
    "modules": [
      "System.IO.Streams.SSL"
    ],
    "name": "openssl-streams",
    "version": "1.2.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Monoid",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-types": [
        "Network.HTTP.Types.Header"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader"
      ],
      "random": [
        "System.Random"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.Reader",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.HashMap.Strict",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time",
      "Google.Cloud.Compute.Metadata",
      "Google.Cloud.Internal.HTTP",
      "Google.Cloud.Internal.Token",
      "Google.Cloud.Internal.Types",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types.Header",
      "Prelude",
      "System.Random"
    ],
    "modules": [
      "Google.Cloud",
      "Google.Cloud.Internal.Types",
      "Google.Cloud.Internal.HTTP",
      "Google.Cloud.Internal.Token",
      "Google.Cloud.Storage",
      "Google.Cloud.Compute.Metadata"
    ],
    "name": "google-cloud",
    "version": "0.0.4"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.Storage.BucketAccessControls.Delete",
      "Network.Google.Resource.Storage.BucketAccessControls.Get",
      "Network.Google.Resource.Storage.BucketAccessControls.Insert",
      "Network.Google.Resource.Storage.BucketAccessControls.List",
      "Network.Google.Resource.Storage.BucketAccessControls.Patch",
      "Network.Google.Resource.Storage.BucketAccessControls.Update",
      "Network.Google.Resource.Storage.Buckets.Delete",
      "Network.Google.Resource.Storage.Buckets.Get",
      "Network.Google.Resource.Storage.Buckets.Insert",
      "Network.Google.Resource.Storage.Buckets.List",
      "Network.Google.Resource.Storage.Buckets.Patch",
      "Network.Google.Resource.Storage.Buckets.Update",
      "Network.Google.Resource.Storage.Channels.Stop",
      "Network.Google.Resource.Storage.DefaultObjectAccessControls.Delete",
      "Network.Google.Resource.Storage.DefaultObjectAccessControls.Get",
      "Network.Google.Resource.Storage.DefaultObjectAccessControls.Insert",
      "Network.Google.Resource.Storage.DefaultObjectAccessControls.List",
      "Network.Google.Resource.Storage.DefaultObjectAccessControls.Patch",
      "Network.Google.Resource.Storage.DefaultObjectAccessControls.Update",
      "Network.Google.Resource.Storage.ObjectAccessControls.Delete",
      "Network.Google.Resource.Storage.ObjectAccessControls.Get",
      "Network.Google.Resource.Storage.ObjectAccessControls.Insert",
      "Network.Google.Resource.Storage.ObjectAccessControls.List",
      "Network.Google.Resource.Storage.ObjectAccessControls.Patch",
      "Network.Google.Resource.Storage.ObjectAccessControls.Update",
      "Network.Google.Resource.Storage.Objects.Compose",
      "Network.Google.Resource.Storage.Objects.Copy",
      "Network.Google.Resource.Storage.Objects.Delete",
      "Network.Google.Resource.Storage.Objects.Get",
      "Network.Google.Resource.Storage.Objects.Insert",
      "Network.Google.Resource.Storage.Objects.List",
      "Network.Google.Resource.Storage.Objects.Patch",
      "Network.Google.Resource.Storage.Objects.Rewrite",
      "Network.Google.Resource.Storage.Objects.Update",
      "Network.Google.Resource.Storage.Objects.WatchAll",
      "Network.Google.Storage",
      "Network.Google.Storage.Types"
    ],
    "name": "gogol-storage",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.SSM",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.SSM",
      "Test.AWS.SSM.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.SSM",
      "Network.AWS.SSM.CancelCommand",
      "Network.AWS.SSM.CreateAssociation",
      "Network.AWS.SSM.CreateAssociationBatch",
      "Network.AWS.SSM.CreateDocument",
      "Network.AWS.SSM.DeleteAssociation",
      "Network.AWS.SSM.DeleteDocument",
      "Network.AWS.SSM.DescribeAssociation",
      "Network.AWS.SSM.DescribeDocument",
      "Network.AWS.SSM.DescribeInstanceInformation",
      "Network.AWS.SSM.GetDocument",
      "Network.AWS.SSM.ListAssociations",
      "Network.AWS.SSM.ListCommandInvocations",
      "Network.AWS.SSM.ListCommands",
      "Network.AWS.SSM.ListDocuments",
      "Network.AWS.SSM.SendCommand",
      "Network.AWS.SSM.Types",
      "Network.AWS.SSM.UpdateAssociationStatus",
      "Network.AWS.SSM.Waiters"
    ],
    "name": "amazonka-ssm",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Network",
        "Data.Conduit.Text"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "pretty-show": [
        "Text.Show.Pretty"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "vector": [
        "Data.Vector"
      ],
      "vector-space": [
        "Data.VectorSpace"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Conduit.Network",
      "Data.Conduit.Text",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Text",
      "Data.Text.IO",
      "Data.Vector",
      "Data.VectorSpace",
      "Text.PrettyPrint",
      "Text.Printf",
      "Text.Show.Pretty"
    ],
    "modules": [
      "Game.Spacegoo"
    ],
    "name": "haskell-spacegoo",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Foreign",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "Text.Regex.PCRE.Light",
      "Text.Regex.PCRE.Light.Base"
    ],
    "modules": [
      "Text.Regex.PCRE.Light",
      "Text.Regex.PCRE.Light.Char8",
      "Text.Regex.PCRE.Light.Base"
    ],
    "name": "pcre-light",
    "version": "0.4.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data"
      ]
    },
    "imports": [
      "Data.Data"
    ],
    "modules": [
      "Refact.Types"
    ],
    "name": "refact",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "data-default-class": [],
      "io-streams": [
        "System.IO.Streams"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "pem": [
        "Data.PEM"
      ],
      "tls": [
        "Network.TLS",
        "Network.TLS.Extra"
      ],
      "x509": [
        "Data.X509"
      ],
      "x509-store": [
        "Data.X509.CertificateStore"
      ],
      "x509-system": [
        "System.X509"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.OpenSSLSetting",
      "Data.PEM",
      "Data.TLSSetting",
      "Data.X509",
      "Data.X509.CertificateStore",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.TLS",
      "Network.TLS.Extra",
      "OpenSSL.Session",
      "OpenSSL.X509",
      "OpenSSL.X509.SystemStore",
      "System.IO.Streams",
      "System.IO.Streams.OpenSSL",
      "System.IO.Streams.TCP",
      "System.IO.Streams.TLS",
      "System.X509"
    ],
    "modules": [
      "Data.TLSSetting",
      "System.IO.Streams.TCP",
      "System.IO.Streams.TLS"
    ],
    "name": "tcp-streams",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.String"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "hashable": [],
      "hinotify": [
        "System.INotify"
      ],
      "lens": [
        "Control.Exception.Lens"
      ],
      "mtl": [],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "strict-base-types": [
        "Data.Either.Strict"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Exception.Lens",
      "Control.Monad",
      "Control.Monad.Catch",
      "Data.Either.Strict",
      "Data.FileCache",
      "Data.HashMap.Strict",
      "Data.String",
      "System.Directory",
      "System.INotify",
      "System.IO.Temp"
    ],
    "modules": [
      "Data.FileCache"
    ],
    "name": "filecache",
    "version": "0.2.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Monad",
        "Data.List",
        "Data.Word",
        "System.Exit",
        "System.Timeout"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Caching.ExpiringCacheMap.HashECM",
      "Caching.ExpiringCacheMap.Internal.Internal",
      "Caching.ExpiringCacheMap.Internal.Types",
      "Caching.ExpiringCacheMap.OrdECM",
      "Caching.ExpiringCacheMap.Types",
      "Caching.ExpiringCacheMap.Utils.TestSequence",
      "Caching.ExpiringCacheMap.Utils.Types",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Monad",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Word",
      "InvalidateCacheTestCommon",
      "InvalidateCacheTestHashECM",
      "InvalidateCacheTestOrdECM",
      "InvalidateTestCommon",
      "InvalidateTestHashECM",
      "InvalidateTestOrdECM",
      "System.Exit",
      "System.Timeout",
      "TestECMWithTestSequenceCommon",
      "TestECMWithTestSequenceCommonInvalidating",
      "TestHashECMWithTestSequence",
      "TestHashECMWithTestSequenceInvalidating",
      "TestHashECMWithThreads",
      "TestHashECMWithThreadsInvalidating",
      "TestOrdECMWithTestSequence",
      "TestOrdECMWithTestSequenceInvalidating",
      "TestOrdECMWithThreads",
      "TestOrdECMWithThreadsInvalidating"
    ],
    "modules": [
      "Caching.ExpiringCacheMap.OrdECM",
      "Caching.ExpiringCacheMap.HashECM",
      "Caching.ExpiringCacheMap.Internal.Internal",
      "Caching.ExpiringCacheMap.Internal.Types",
      "Caching.ExpiringCacheMap.Types",
      "Caching.ExpiringCacheMap.Utils.TestSequence",
      "Caching.ExpiringCacheMap.Utils.Types"
    ],
    "name": "expiring-cache-map",
    "version": "0.0.6.1"
  },
  {
    "dependencies": {
      "HsOpenSSL": [],
      "RSA": [],
      "base": [],
      "base64-bytestring": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "text": [
        "Data.Text"
      ],
      "unix-time": []
    },
    "imports": [
      "Data.ByteString",
      "Data.Text"
    ],
    "modules": [
      "Network.Google.OAuth2.JWT"
    ],
    "name": "google-oauth2-jwt",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Traversable"
      ],
      "containers": [
        "Data.Map"
      ],
      "universe-instances-base": [
        "Data.Universe.Instances.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Foldable",
      "Data.Map",
      "Data.Monoid",
      "Data.Traversable",
      "Data.Universe.Instances.Base",
      "Data.Universe.Instances.Eq"
    ],
    "modules": [
      "Data.Universe.Instances.Eq",
      "Data.Universe.Instances.Ord",
      "Data.Universe.Instances.Read",
      "Data.Universe.Instances.Show",
      "Data.Universe.Instances.Traversable"
    ],
    "name": "universe-reverse-instances",
    "version": "1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Compose",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Data.Tuple"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "transformers": [
        "Control.Applicative.Backwards",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Data.Functor.Constant"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Applicative.Backwards",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Data.Foldable",
      "Data.Functor.Compose",
      "Data.Functor.Constant",
      "Data.Functor.Identity",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Map",
      "Data.Monoid",
      "Data.Set",
      "Data.Tuple",
      "Lens.Family",
      "Lens.Family.Identical",
      "Lens.Family.Phantom",
      "Lens.Family.State.Lazy",
      "Lens.Family.State.Zoom",
      "Lens.Family.Unchecked"
    ],
    "modules": [
      "Lens.Family.Unchecked",
      "Lens.Family.Clone",
      "Lens.Family",
      "Lens.Family.Stock",
      "Lens.Family.State.Lazy",
      "Lens.Family.State.Strict",
      "Lens.Family.State"
    ],
    "name": "lens-family-core",
    "version": "1.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.List",
        "Data.Ord",
        "Data.Traversable",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString.Lazy",
      "Data.Digest.Pure.MD5",
      "Data.Foldable",
      "Data.List",
      "Data.Ord",
      "Data.Traversable",
      "System.Directory",
      "System.Directory.Tree",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Process"
    ],
    "modules": [
      "System.Directory.Tree"
    ],
    "name": "directory-tree",
    "version": "0.12.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.IArray"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Unsafe",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Exts",
        "GHC.Float",
        "GHC.IO",
        "GHC.IO.Buffer",
        "GHC.IO.Exception",
        "GHC.IO.Handle.Internals",
        "GHC.IO.Handle.Text",
        "GHC.IO.Handle.Types",
        "GHC.Num",
        "GHC.ST",
        "GHC.Word",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.Printf",
        "Text.Show.Functions"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Builder"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "ghc-prim": [
        "GHC.CString",
        "GHC.Types"
      ]
    },
    "imports": [
      "Arsec",
      "Benchmarks.Builder",
      "Benchmarks.DecodeUtf8",
      "Benchmarks.EncodeUtf8",
      "Benchmarks.Equality",
      "Benchmarks.FileRead",
      "Benchmarks.FoldLines",
      "Benchmarks.Mul",
      "Benchmarks.Programs.BigTable",
      "Benchmarks.Programs.Cut",
      "Benchmarks.Programs.Fold",
      "Benchmarks.Programs.Sort",
      "Benchmarks.Programs.StripTags",
      "Benchmarks.Programs.Throughput",
      "Benchmarks.Pure",
      "Benchmarks.ReadNumbers",
      "Benchmarks.Replace",
      "Benchmarks.Search",
      "Benchmarks.Stream",
      "Benchmarks.WordFrequencies",
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "CaseFolding",
      "Codec.Binary.UTF8.Generic",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.ST.Unsafe",
      "Criterion",
      "Criterion.Main",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Binary",
      "Data.Binary.Builder",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Builder.Internal",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Prim.Internal",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Lazy.Search",
      "Data.ByteString.Lex.Fractional",
      "Data.ByteString.Search",
      "Data.ByteString.Unsafe",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Data",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Array",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Foreign",
      "Data.Text.Internal",
      "Data.Text.Internal.Builder",
      "Data.Text.Internal.Builder.Functions",
      "Data.Text.Internal.Builder.Int.Digits",
      "Data.Text.Internal.Builder.RealFloat.Functions",
      "Data.Text.Internal.Encoding.Fusion",
      "Data.Text.Internal.Encoding.Fusion.Common",
      "Data.Text.Internal.Encoding.Utf16",
      "Data.Text.Internal.Encoding.Utf32",
      "Data.Text.Internal.Encoding.Utf8",
      "Data.Text.Internal.Functions",
      "Data.Text.Internal.Fusion",
      "Data.Text.Internal.Fusion.CaseMapping",
      "Data.Text.Internal.Fusion.Common",
      "Data.Text.Internal.Fusion.Size",
      "Data.Text.Internal.Fusion.Types",
      "Data.Text.Internal.IO",
      "Data.Text.Internal.Lazy",
      "Data.Text.Internal.Lazy.Encoding.Fusion",
      "Data.Text.Internal.Lazy.Fusion",
      "Data.Text.Internal.Lazy.Search",
      "Data.Text.Internal.Private",
      "Data.Text.Internal.Read",
      "Data.Text.Internal.Search",
      "Data.Text.Internal.Unsafe",
      "Data.Text.Internal.Unsafe.Char",
      "Data.Text.Internal.Unsafe.Shift",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Text.Lazy.Builder.RealFloat",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Text.Lazy.Read",
      "Data.Text.Read",
      "Data.Text.Show",
      "Data.Text.Unsafe",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Debug.Trace",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.CString",
      "GHC.Exts",
      "GHC.Float",
      "GHC.Integer",
      "GHC.Integer.GMP.Internals",
      "GHC.IO",
      "GHC.IO.Buffer",
      "GHC.IO.Exception",
      "GHC.IO.Handle.Internals",
      "GHC.IO.Handle.Text",
      "GHC.IO.Handle.Types",
      "GHC.Num",
      "GHC.Prim",
      "GHC.ST",
      "GHC.Types",
      "GHC.Word",
      "Numeric",
      "Prelude",
      "SpecialCasing",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Process",
      "System.Random",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Unicode",
      "Tests.Properties",
      "Tests.Properties.Mul",
      "Tests.QuickCheckUtils",
      "Tests.Regressions",
      "Tests.SlowFunctions",
      "Tests.Utils",
      "Text.ParserCombinators.Parsec.Char",
      "Text.ParserCombinators.Parsec.Combinator",
      "Text.ParserCombinators.Parsec.Error",
      "Text.ParserCombinators.Parsec.Prim",
      "Text.Printf",
      "Text.Show.Functions",
      "Timer"
    ],
    "modules": [
      "Data.Text",
      "Data.Text.Array",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Foreign",
      "Data.Text.IO",
      "Data.Text.Internal",
      "Data.Text.Internal.Builder",
      "Data.Text.Internal.Builder.Functions",
      "Data.Text.Internal.Builder.Int.Digits",
      "Data.Text.Internal.Builder.RealFloat.Functions",
      "Data.Text.Internal.Encoding.Fusion",
      "Data.Text.Internal.Encoding.Fusion.Common",
      "Data.Text.Internal.Encoding.Utf16",
      "Data.Text.Internal.Encoding.Utf32",
      "Data.Text.Internal.Encoding.Utf8",
      "Data.Text.Internal.Functions",
      "Data.Text.Internal.Fusion",
      "Data.Text.Internal.Fusion.CaseMapping",
      "Data.Text.Internal.Fusion.Common",
      "Data.Text.Internal.Fusion.Size",
      "Data.Text.Internal.Fusion.Types",
      "Data.Text.Internal.IO",
      "Data.Text.Internal.Lazy",
      "Data.Text.Internal.Lazy.Encoding.Fusion",
      "Data.Text.Internal.Lazy.Fusion",
      "Data.Text.Internal.Lazy.Search",
      "Data.Text.Internal.Private",
      "Data.Text.Internal.Read",
      "Data.Text.Internal.Search",
      "Data.Text.Internal.Unsafe",
      "Data.Text.Internal.Unsafe.Char",
      "Data.Text.Internal.Unsafe.Shift",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Text.Lazy.Builder.RealFloat",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Text.Lazy.Internal",
      "Data.Text.Lazy.Read",
      "Data.Text.Read",
      "Data.Text.Unsafe"
    ],
    "name": "text",
    "version": "1.2.2.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CognitoIdentity",
      "Test.AWS.CognitoIdentity",
      "Test.AWS.CognitoIdentity.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CognitoIdentity",
      "Network.AWS.CognitoIdentity.CreateIdentityPool",
      "Network.AWS.CognitoIdentity.DeleteIdentities",
      "Network.AWS.CognitoIdentity.DeleteIdentityPool",
      "Network.AWS.CognitoIdentity.DescribeIdentity",
      "Network.AWS.CognitoIdentity.DescribeIdentityPool",
      "Network.AWS.CognitoIdentity.GetCredentialsForIdentity",
      "Network.AWS.CognitoIdentity.GetId",
      "Network.AWS.CognitoIdentity.GetIdentityPoolRoles",
      "Network.AWS.CognitoIdentity.GetOpenIdToken",
      "Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity",
      "Network.AWS.CognitoIdentity.ListIdentities",
      "Network.AWS.CognitoIdentity.ListIdentityPools",
      "Network.AWS.CognitoIdentity.LookupDeveloperIdentity",
      "Network.AWS.CognitoIdentity.MergeDeveloperIdentities",
      "Network.AWS.CognitoIdentity.SetIdentityPoolRoles",
      "Network.AWS.CognitoIdentity.Types",
      "Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity",
      "Network.AWS.CognitoIdentity.UnlinkIdentity",
      "Network.AWS.CognitoIdentity.UpdateIdentityPool",
      "Network.AWS.CognitoIdentity.Waiters"
    ],
    "name": "amazonka-cognito-identity",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "Glob": [],
      "aeson": [],
      "base": [
        "Data.Version"
      ],
      "base-compat": [],
      "containers": [
        "Data.Map.Lazy"
      ],
      "deepseq": [],
      "directory": [],
      "filepath": [
        "System.FilePath.Posix"
      ],
      "hpack": [],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "yaml": []
    },
    "imports": [
      "Data.HashMap.Lazy",
      "Data.Map.Lazy",
      "Data.Text",
      "Data.Version",
      "Hpack",
      "Hpack.Config",
      "System.FilePath.Posix",
      "System.IO.Temp"
    ],
    "modules": [
      "Hpack",
      "Hpack.Config",
      "Hpack.Run",
      "Hpack.Yaml"
    ],
    "name": "hpack",
    "version": "0.14.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Functor.Identity",
        "Data.Monoid",
        "Prelude"
      ],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "profunctors": [
        "Data.Profunctor"
      ],
      "tagged": [
        "Data.Tagged"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "CheckTypes",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Category",
      "Control.Monad",
      "Data.Functor.Contravariant",
      "Data.Functor.Identity",
      "Data.Monoid",
      "Data.Profunctor",
      "Data.Profunctor.Product",
      "Data.Profunctor.Product.Class",
      "Data.Profunctor.Product.Default",
      "Data.Profunctor.Product.Default.Class",
      "Data.Profunctor.Product.Flatten",
      "Data.Profunctor.Product.Newtype",
      "Data.Profunctor.Product.TH",
      "Data.Profunctor.Product.Tuples",
      "Data.Profunctor.Product.Tuples.TH",
      "Data.Tagged",
      "Definitions",
      "Language.Haskell.TH",
      "Prelude"
    ],
    "modules": [
      "Data.Profunctor.Product",
      "Data.Profunctor.Product.Default",
      "Data.Profunctor.Product.Flatten",
      "Data.Profunctor.Product.Internal.TH",
      "Data.Profunctor.Product.Newtype",
      "Data.Profunctor.Product.TH",
      "Data.Profunctor.Product.Tuples",
      "Data.Profunctor.Product.Tuples.TH"
    ],
    "name": "product-profunctors",
    "version": "0.7.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad.ST",
        "Foreign.Concurrent",
        "Text.ParserCombinators.ReadP"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Unsafe"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "xml-types": [
        "Data.XML.Types"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad.ST",
      "Data.ByteString",
      "Data.ByteString.Unsafe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.XML.Types",
      "Foreign.Concurrent",
      "Text.ParserCombinators.ReadP"
    ],
    "modules": [
      "Text.XML.LibXML.SAX"
    ],
    "name": "libxml-sax",
    "version": "0.7.5"
  },
  {
    "dependencies": {
      "base": [
        "System.IO.Unsafe"
      ],
      "byteable": [],
      "bytestring": [
        "Data.ByteString.Internal"
      ],
      "ghc-prim": [],
      "memory": [
        "Data.ByteArray",
        "Data.Memory.PtrMethods"
      ]
    },
    "imports": [
      "Data.ByteArray",
      "Data.ByteString.Internal",
      "Data.Memory.PtrMethods",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.SecureMem"
    ],
    "name": "securemem",
    "version": "0.1.9"
  },
  {
    "dependencies": {
      "wai": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "wai-eventsource",
    "version": "3.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "biocore": [
        "Bio.Core"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "parallel": [
        "Control.Parallel"
      ],
      "tagsoup": [
        "Text.HTML.TagSoup"
      ]
    },
    "imports": [
      "Bio.BlastData",
      "Bio.Core",
      "Control.Monad",
      "Control.Parallel",
      "Data.ByteString.Lazy.Char8",
      "Text.HTML.TagSoup"
    ],
    "modules": [
      "Bio.BlastXML",
      "Bio.BlastData"
    ],
    "name": "blastxml",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "base": [
        "GHC.Exts"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ]
    },
    "imports": [
      "Data.String.QQ",
      "Data.Text",
      "GHC.Exts",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Test.HUnit"
    ],
    "modules": [
      "Data.String.QQ"
    ],
    "name": "string-qq",
    "version": "0.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.List",
        "System.Exit"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Identity",
      "Control.Monad.State",
      "Control.Monad.Trans.State.Plus",
      "Data.List",
      "System.Exit",
      "Test.QuickCheck",
      "Test.QuickCheck.Checkers",
      "Test.QuickCheck.Classes",
      "Test.QuickCheck.Function",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.Test"
    ],
    "modules": [
      "Control.Monad.Trans.State.Plus"
    ],
    "name": "state-plus",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString"
      ],
      "base": [
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "filepath": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Attoparsec.ByteString",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Vector",
      "System.IO"
    ],
    "modules": [],
    "name": "profiteur",
    "version": "0.3.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Html.Utf8"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "hashable": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Html.Utf8",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Graphics.Svg.Core"
    ],
    "modules": [
      "Graphics.Svg",
      "Graphics.Svg.Core",
      "Graphics.Svg.Path",
      "Graphics.Svg.Elements",
      "Graphics.Svg.Attributes"
    ],
    "name": "svg-builder",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.List",
        "Data.Word",
        "System.IO"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "directory": [
        "System.Directory"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.ST",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Database.PureCDB",
      "Database.PureCDB.Internal",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.IntMap",
      "Data.List",
      "Data.Vector",
      "Data.Vector.Generic.Mutable",
      "Data.Word",
      "System.Directory",
      "System.IO",
      "System.Unix.Directory",
      "Test.Simple"
    ],
    "modules": [
      "Database.PureCDB",
      "Database.PureCDB.Internal"
    ],
    "name": "pure-cdb",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "HSet": [
        "Data.HSet.Mutable"
      ],
      "base": [
        "Control.Monad.ST",
        "Data.Monoid",
        "Data.Typeable",
        "Prelude"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hashtables": [
        "Data.HashTable.ST.Cuckoo"
      ]
    },
    "imports": [
      "Control.Monad.ST",
      "Data.Hashable",
      "Data.HashTable.ST.Cuckoo",
      "Data.HSet.Mutable",
      "Data.Monoid",
      "Data.Typeable",
      "Prelude"
    ],
    "modules": [
      "Data.PredSet.Mutable"
    ],
    "name": "pred-set",
    "version": "0.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.List",
        "Data.Monoid"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Time",
      "Data.Vector",
      "GitHub.Types.Base",
      "GitHub.Types.Events",
      "GitHub.Types.Repository"
    ],
    "modules": [
      "GitHub.Types",
      "GitHub.Types.Base",
      "GitHub.Types.Repository",
      "GitHub.Types.Events"
    ],
    "name": "github-types",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Category",
        "Control.Monad",
        "Data.Traversable",
        "Prelude"
      ],
      "semigroupoids": [
        "Data.Functor.Bind",
        "Data.Functor.Extend",
        "Data.Groupoid",
        "Data.Semigroupoid",
        "Data.Semigroupoid.Dual",
        "Data.Semigroupoid.Ob",
        "Data.Semigroup.Traversable"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Category",
      "Control.Comonad",
      "Control.Monad",
      "Data.Distributive",
      "Data.Functor.Bind",
      "Data.Functor.Extend",
      "Data.Groupoid",
      "Data.Profunctor",
      "Data.Semifunctor",
      "Data.Semifunctor.Associative",
      "Data.Semigroupoid",
      "Data.Semigroupoid.Dual",
      "Data.Semigroupoid.Ob",
      "Data.Semigroupoid.Product",
      "Data.Semigroup.Traversable",
      "Data.Traversable",
      "Prelude"
    ],
    "modules": [
      "Data.Semifunctor",
      "Data.Semifunctor.Associative",
      "Data.Semifunctor.Braided",
      "Data.Semigroupoid.Product",
      "Data.Semigroupoid.Coproduct"
    ],
    "name": "semigroupoid-extras",
    "version": "5"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Data.Ix",
        "GHC.Generics"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "ghc-prim": []
    },
    "imports": [
      "Data.Data",
      "Data.IntMap",
      "Data.Ix",
      "GHC.Generics",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Web.KeyCode"
    ],
    "name": "keycode",
    "version": "0.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bool",
        "Data.Either",
        "Data.Eq",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Tuple",
        "Data.Typeable",
        "Prelude",
        "System.IO",
        "System.Timeout"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TMVar"
      ],
      "unbounded-delays": [
        "Control.Concurrent.Timeout"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Broadcast",
      "Control.Concurrent.Broadcast.Test",
      "Control.Concurrent.Event",
      "Control.Concurrent.Event.Test",
      "Control.Concurrent.Lock",
      "Control.Concurrent.Lock.Test",
      "Control.Concurrent.MVar",
      "Control.Concurrent.ReadWriteLock",
      "Control.Concurrent.ReadWriteLock.Test",
      "Control.Concurrent.ReadWriteVar",
      "Control.Concurrent.ReadWriteVar.Test",
      "Control.Concurrent.RLock",
      "Control.Concurrent.RLock.Test",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.Lock",
      "Control.Concurrent.STM.Lock.Test",
      "Control.Concurrent.STM.TMVar",
      "Control.Concurrent.Timeout",
      "Control.Exception",
      "Control.Monad",
      "Data.Bool",
      "Data.Either",
      "Data.Eq",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Ord",
      "Data.Tuple",
      "Data.Typeable",
      "Prelude",
      "System.IO",
      "System.Random",
      "System.Timeout",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "TestUtils",
      "Utils"
    ],
    "modules": [
      "Control.Concurrent.Lock",
      "Control.Concurrent.STM.Lock",
      "Control.Concurrent.RLock",
      "Control.Concurrent.Event",
      "Control.Concurrent.Broadcast",
      "Control.Concurrent.ReadWriteLock",
      "Control.Concurrent.ReadWriteVar"
    ],
    "name": "concurrent-extra",
    "version": "0.7.0.10"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Maybe",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Data.List",
      "Data.Maybe",
      "Data.Monoid"
    ],
    "modules": [
      "Math.Sequence.Converge"
    ],
    "name": "converge",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Function",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "crypto-api": [
        "Crypto.Classes",
        "Crypto.Types"
      ],
      "tagged": [
        "Data.Tagged"
      ]
    },
    "imports": [
      "Control.Monad",
      "Criterion",
      "Criterion.Main",
      "Crypto.Cipher.AES128",
      "Crypto.Cipher.AES128.Internal",
      "Crypto.Classes",
      "Crypto.Types",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Unsafe",
      "Data.Function",
      "Data.Serialize",
      "Data.Tagged",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Entropy",
      "System.IO.Unsafe",
      "Test.AES"
    ],
    "modules": [
      "Crypto.Cipher.AES128",
      "Crypto.Cipher.AES128.Internal"
    ],
    "name": "cipher-aes128",
    "version": "0.7.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Data.List",
      "Data.Maybe",
      "Data.Time",
      "Data.Time.LocalTime.TimeZone.Internal.MapBuiltTime",
      "Data.Typeable"
    ],
    "modules": [
      "Data.Time.LocalTime.TimeZone.Series"
    ],
    "name": "timezone-series",
    "version": "0.1.6.1"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Monadic",
        "Test.QuickCheck.Test"
      ],
      "array": [
        "Data.Array"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.Ratio",
        "Data.Version",
        "Data.Word",
        "GHC.Enum",
        "GHC.Generics",
        "GHC.Stack",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem.StableName"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Set"
      ],
      "crackNum": [
        "Data.Numbers.CrackNum"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc": [],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.State.Lazy",
        "Control.Monad.Trans"
      ],
      "old-time": [
        "System.Time"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "sbv": [],
      "syb": [
        "Data.Generics"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.State.Lazy",
      "Control.Monad.Trans",
      "Data.Array",
      "Data.Binary.IEEE754",
      "Data.Bits",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.Generics",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Numbers.CrackNum",
      "Data.Ord",
      "Data.Ratio",
      "Data.SBV",
      "Data.SBV.BitVectors.AlgReals",
      "Data.SBV.BitVectors.Concrete",
      "Data.SBV.BitVectors.Data",
      "Data.SBV.BitVectors.Floating",
      "Data.SBV.BitVectors.Kind",
      "Data.SBV.BitVectors.Model",
      "Data.SBV.BitVectors.Operations",
      "Data.SBV.BitVectors.PrettyNum",
      "Data.SBV.BitVectors.Splittable",
      "Data.SBV.BitVectors.STree",
      "Data.SBV.BitVectors.Symbolic",
      "Data.SBV.Compilers.C",
      "Data.SBV.Compilers.CodeGen",
      "Data.SBV.Examples.BitPrecise.BitTricks",
      "Data.SBV.Examples.BitPrecise.Legato",
      "Data.SBV.Examples.BitPrecise.MergeSort",
      "Data.SBV.Examples.BitPrecise.PrefixSum",
      "Data.SBV.Examples.CodeGeneration.AddSub",
      "Data.SBV.Examples.CodeGeneration.CRC",
      "Data.SBV.Examples.CodeGeneration.Fibonacci",
      "Data.SBV.Examples.CodeGeneration.GCD",
      "Data.SBV.Examples.CodeGeneration.PopulationCount",
      "Data.SBV.Examples.CodeGeneration.Uninterpreted",
      "Data.SBV.Examples.Crypto.AES",
      "Data.SBV.Examples.Crypto.RC4",
      "Data.SBV.Examples.Existentials.CRCPolynomial",
      "Data.SBV.Examples.Polynomials.Polynomials",
      "Data.SBV.Examples.Puzzles.Coins",
      "Data.SBV.Examples.Puzzles.Counts",
      "Data.SBV.Examples.Puzzles.Euler185",
      "Data.SBV.Examples.Puzzles.MagicSquare",
      "Data.SBV.Examples.Puzzles.NQueens",
      "Data.SBV.Examples.Puzzles.Sudoku",
      "Data.SBV.Examples.Puzzles.U2Bridge",
      "Data.SBV.Examples.Uninterpreted.AUF",
      "Data.SBV.Examples.Uninterpreted.Function",
      "Data.SBV.Internals",
      "Data.SBV.Provers.ABC",
      "Data.SBV.Provers.Boolector",
      "Data.SBV.Provers.CVC4",
      "Data.SBV.Provers.MathSAT",
      "Data.SBV.Provers.Prover",
      "Data.SBV.Provers.SExpr",
      "Data.SBV.Provers.Yices",
      "Data.SBV.Provers.Z3",
      "Data.SBV.SMT.SMT",
      "Data.SBV.SMT.SMTLib",
      "Data.SBV.SMT.SMTLib2",
      "Data.SBV.SMT.SMTLibNames",
      "Data.SBV.Tools.ExpectedValue",
      "Data.SBV.Tools.GenTest",
      "Data.SBV.Tools.Optimize",
      "Data.SBV.Tools.Polynomial",
      "Data.SBV.Utils.Boolean",
      "Data.SBV.Utils.Lib",
      "Data.SBV.Utils.Numeric",
      "Data.SBV.Utils.TDiff",
      "Data.Sequence",
      "Data.Set",
      "Data.Version",
      "Data.Word",
      "Examples.Arrays.Memory",
      "Examples.Basics.BasicTests",
      "Examples.Basics.Higher",
      "Examples.Basics.Index",
      "Examples.Basics.ProofTests",
      "Examples.Basics.QRem",
      "Examples.CRC.CCITT",
      "Examples.CRC.GenPoly",
      "Examples.CRC.Parity",
      "Examples.CRC.USB5",
      "Examples.Puzzles.PowerSet",
      "Examples.Puzzles.Temperature",
      "Examples.Uninterpreted.Uninterpreted",
      "GHC.Enum",
      "GHC.Generics",
      "GHC.SrcLoc",
      "GHC.SrcLoc.Compat",
      "GHC.Stack",
      "GHC.Stack.Compat",
      "Numeric",
      "Paths",
      "Prelude",
      "Prelude.Compat",
      "SBVTest",
      "SBVTestCollection",
      "SBVUnitTestBuildTime",
      "SrcLoc",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "System.Process",
      "System.Random",
      "System.Time",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Test",
      "TestSuite.Arrays.Memory",
      "TestSuite.Basics.ArithNoSolver",
      "TestSuite.Basics.ArithSolver",
      "TestSuite.Basics.BasicTests",
      "TestSuite.Basics.Higher",
      "TestSuite.Basics.Index",
      "TestSuite.Basics.IteTest",
      "TestSuite.Basics.ProofTests",
      "TestSuite.Basics.QRem",
      "TestSuite.BitPrecise.BitTricks",
      "TestSuite.BitPrecise.Legato",
      "TestSuite.BitPrecise.MergeSort",
      "TestSuite.BitPrecise.PrefixSum",
      "TestSuite.CodeGeneration.AddSub",
      "TestSuite.CodeGeneration.CgTests",
      "TestSuite.CodeGeneration.CRC",
      "TestSuite.CodeGeneration.Fibonacci",
      "TestSuite.CodeGeneration.Floats",
      "TestSuite.CodeGeneration.GCD",
      "TestSuite.CodeGeneration.PopulationCount",
      "TestSuite.CodeGeneration.Uninterpreted",
      "TestSuite.CRC.CCITT",
      "TestSuite.CRC.GenPoly",
      "TestSuite.CRC.Parity",
      "TestSuite.CRC.USB5",
      "TestSuite.Crypto.AES",
      "TestSuite.Crypto.RC4",
      "TestSuite.Existentials.CRCPolynomial",
      "TestSuite.Polynomials.Polynomials",
      "TestSuite.Puzzles.Coins",
      "TestSuite.Puzzles.Counts",
      "TestSuite.Puzzles.DogCatMouse",
      "TestSuite.Puzzles.Euler185",
      "TestSuite.Puzzles.MagicSquare",
      "TestSuite.Puzzles.NQueens",
      "TestSuite.Puzzles.PowerSet",
      "TestSuite.Puzzles.Sudoku",
      "TestSuite.Puzzles.Temperature",
      "TestSuite.Puzzles.U2Bridge",
      "TestSuite.Uninterpreted.AUF",
      "TestSuite.Uninterpreted.Axioms",
      "TestSuite.Uninterpreted.Function",
      "TestSuite.Uninterpreted.Sort",
      "TestSuite.Uninterpreted.Uninterpreted",
      "Text.PrettyPrint.HughesPJ"
    ],
    "modules": [
      "Data.SBV",
      "Data.SBV.Bridge.Boolector",
      "Data.SBV.Bridge.CVC4",
      "Data.SBV.Bridge.MathSAT",
      "Data.SBV.Bridge.Yices",
      "Data.SBV.Bridge.Z3",
      "Data.SBV.Bridge.ABC",
      "Data.SBV.Dynamic",
      "Data.SBV.Internals",
      "Data.SBV.Examples.BitPrecise.BitTricks",
      "Data.SBV.Examples.BitPrecise.Legato",
      "Data.SBV.Examples.BitPrecise.MergeSort",
      "Data.SBV.Examples.BitPrecise.MultMask",
      "Data.SBV.Examples.BitPrecise.PrefixSum",
      "Data.SBV.Examples.CodeGeneration.AddSub",
      "Data.SBV.Examples.CodeGeneration.CRC_USB5",
      "Data.SBV.Examples.CodeGeneration.Fibonacci",
      "Data.SBV.Examples.CodeGeneration.GCD",
      "Data.SBV.Examples.CodeGeneration.PopulationCount",
      "Data.SBV.Examples.CodeGeneration.Uninterpreted",
      "Data.SBV.Examples.Crypto.AES",
      "Data.SBV.Examples.Crypto.RC4",
      "Data.SBV.Examples.Existentials.CRCPolynomial",
      "Data.SBV.Examples.Existentials.Diophantine",
      "Data.SBV.Examples.Misc.Enumerate",
      "Data.SBV.Examples.Misc.Floating",
      "Data.SBV.Examples.Misc.ModelExtract",
      "Data.SBV.Examples.Misc.Auxiliary",
      "Data.SBV.Examples.Misc.NoDiv0",
      "Data.SBV.Examples.Misc.Word4",
      "Data.SBV.Examples.Polynomials.Polynomials",
      "Data.SBV.Examples.Puzzles.Birthday",
      "Data.SBV.Examples.Puzzles.Coins",
      "Data.SBV.Examples.Puzzles.Counts",
      "Data.SBV.Examples.Puzzles.DogCatMouse",
      "Data.SBV.Examples.Puzzles.Euler185",
      "Data.SBV.Examples.Puzzles.Fish",
      "Data.SBV.Examples.Puzzles.MagicSquare",
      "Data.SBV.Examples.Puzzles.NQueens",
      "Data.SBV.Examples.Puzzles.SendMoreMoney",
      "Data.SBV.Examples.Puzzles.Sudoku",
      "Data.SBV.Examples.Puzzles.U2Bridge",
      "Data.SBV.Examples.Uninterpreted.AUF",
      "Data.SBV.Examples.Uninterpreted.Deduce",
      "Data.SBV.Examples.Uninterpreted.Function",
      "Data.SBV.Examples.Uninterpreted.Shannon",
      "Data.SBV.Examples.Uninterpreted.Sort",
      "Data.SBV.Examples.Uninterpreted.UISortAllSat"
    ],
    "name": "sbv",
    "version": "5.12"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bool",
        "Data.Function",
        "Data.Int",
        "Data.Ord"
      ],
      "base-unicode-symbols": [
        "Data.Bool.Unicode",
        "Data.Eq.Unicode"
      ]
    },
    "imports": [
      "Data.Bool",
      "Data.Bool.Unicode",
      "Data.Eq.Unicode",
      "Data.Function",
      "Data.Int",
      "Data.IntMap.Lazy.Unicode",
      "Data.IntMap.Strict",
      "Data.IntSet",
      "Data.Map.Lazy.Unicode",
      "Data.Map.Strict",
      "Data.Ord",
      "Data.Sequence",
      "Data.Set",
      "MODULE"
    ],
    "modules": [
      "Data.IntMap.Unicode",
      "Data.IntSet.Unicode",
      "Data.Map.Unicode",
      "Data.Sequence.Unicode",
      "Data.Set.Unicode"
    ],
    "name": "containers-unicode-symbols",
    "version": "0.3.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Word",
      "FarmHash",
      "FarmHash.Internal",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck"
    ],
    "modules": [
      "FarmHash"
    ],
    "name": "farmhash",
    "version": "0.1.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.List"
      ],
      "binary": [],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.List",
      "Data.Map",
      "Data.Trie",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Trie"
    ],
    "name": "word-trie",
    "version": "0.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Tuple",
        "Data.Typeable"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cprng-aes": [
        "Crypto.Random.AESCtr"
      ],
      "crypto-random": [
        "Crypto.Random"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Crypto.Random",
      "Crypto.Random.AESCtr",
      "Data.ByteString",
      "Data.ByteString.Base64.URL",
      "Data.IORef",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Tuple",
      "Data.Typeable"
    ],
    "modules": [
      "Crypto.Nonce"
    ],
    "name": "nonce",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.IO.Class",
        "Data.Functor.Identity"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Reader.Class",
        "Control.Monad.RWS.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Cont",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Cont",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.Functor.Identity"
    ],
    "modules": [
      "MTLPrelude"
    ],
    "name": "mtl-prelude",
    "version": "2.0.3.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec",
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Types"
      ],
      "base": [
        "Control.Applicative",
        "GHC.Word"
      ],
      "bytestring": [
        "Data.ByteString"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Attoparsec",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Types",
      "Data.ByteString",
      "GHC.Word"
    ],
    "modules": [
      "Text.Hostname"
    ],
    "name": "hostname-validate",
    "version": "1.0.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Data.Char",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "mtl": [
        "Control.Monad.Except"
      ],
      "regex-pcre-builtin": [
        "Text.Regex.PCRE.ByteString"
      ],
      "vector": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Except",
      "Data.Array",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Char",
      "System.IO.Unsafe",
      "Test.HUnit",
      "Text.Regex.PCRE.ByteString",
      "Text.Regex.PCRE.ByteString.Utils"
    ],
    "modules": [
      "Text.Regex.PCRE.ByteString.Utils"
    ],
    "name": "pcre-utils",
    "version": "0.1.8.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fail",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "mtl": [
        "Control.Monad.Cont",
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.Except",
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.Reader.Class",
        "Control.Monad.State.Class",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "transformers": [
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Bugs",
      "Bugs.Bug2",
      "Bugs.Bug35",
      "Bugs.Bug39",
      "Bugs.Bug6",
      "Bugs.Bug9",
      "Char",
      "Combinator",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Cont",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Except",
      "Control.Monad.Fail",
      "Control.Monad.Identity",
      "Control.Monad.Reader",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Scientific",
      "Data.Semigroup",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Error",
      "Expr",
      "GHC.Generics",
      "Lexer",
      "Numeric",
      "Perm",
      "Pos",
      "Prelude",
      "Prim",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Megaparsec",
      "Text.Megaparsec.ByteString",
      "Text.Megaparsec.ByteString.Lazy",
      "Text.Megaparsec.Char",
      "Text.Megaparsec.Combinator",
      "Text.Megaparsec.Error",
      "Text.Megaparsec.Expr",
      "Text.Megaparsec.Lexer",
      "Text.Megaparsec.Perm",
      "Text.Megaparsec.Pos",
      "Text.Megaparsec.Prim",
      "Text.Megaparsec.String",
      "Text.Megaparsec.Text",
      "Text.Megaparsec.Text.Lazy",
      "Unsafe.Coerce",
      "Util"
    ],
    "modules": [
      "Text.Megaparsec",
      "Text.Megaparsec.ByteString",
      "Text.Megaparsec.ByteString.Lazy",
      "Text.Megaparsec.Char",
      "Text.Megaparsec.Combinator",
      "Text.Megaparsec.Error",
      "Text.Megaparsec.Expr",
      "Text.Megaparsec.Lexer",
      "Text.Megaparsec.Perm",
      "Text.Megaparsec.Pos",
      "Text.Megaparsec.Prim",
      "Text.Megaparsec.String",
      "Text.Megaparsec.Text",
      "Text.Megaparsec.Text.Lazy"
    ],
    "name": "megaparsec",
    "version": "5.0.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Applicative",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Reader.Class",
      "Control.Monad.State.Class",
      "Control.Monad.ST.Trans.Internal",
      "Control.Monad.Trans",
      "Control.Monad.Writer.Class",
      "Data.IORef",
      "GHC.Arr",
      "GHC.Base",
      "System.IO.Unsafe",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Monad.ST.Trans",
      "Control.Monad.ST.Trans.Internal"
    ],
    "name": "STMonadTrans",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Category",
        "Prelude"
      ],
      "hxt": [
        "Text.XML.HXT.Core"
      ],
      "mtl": [
        "Control.Monad.Identity"
      ]
    },
    "imports": [
      "Control.Category",
      "Control.Monad.Identity",
      "Prelude",
      "Text.XML.HXT.Core"
    ],
    "modules": [
      "Text.Xml.Pickle"
    ],
    "name": "hxt-pickle-utils",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ]
    },
    "imports": [
      "Data.Default.Class",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Map",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Tree"
    ],
    "modules": [
      "Data.Default.Instances.Containers"
    ],
    "name": "data-default-instances-containers",
    "version": "0.0.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Array",
      "Data.Bits",
      "Text.Regex.Base",
      "Text.Regex.Posix"
    ],
    "modules": [
      "Text.Regex"
    ],
    "name": "regex-compat",
    "version": "0.95.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Complex",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Proxy",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.Foreign",
        "GHC.ForeignPtr",
        "GHC.IO.Encoding.UTF8",
        "Prelude",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem",
        "System.Mem.Weak",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Set"
      ],
      "data-default-class": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.Trans"
      ],
      "pretty": [],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "process": [
        "System.Process"
      ],
      "reflection": [
        "Data.Reflection"
      ],
      "setenv": [
        "System.SetEnv"
      ],
      "singletons": [
        "Data.Singletons"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Lib",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text"
      ],
      "th-lift": [],
      "th-orphans": [],
      "transformers": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Fusion.Bundle",
        "Data.Vector.Fusion.Bundle.Monadic",
        "Data.Vector.Fusion.Stream.Monadic",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Generic.New"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Memory.Region",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Primitive",
      "Control.Monad.R.Class",
      "Control.Monad.Reader",
      "Control.Monad.R.Internal",
      "Control.Monad.ST",
      "Control.Monad.Trans",
      "Criterion.Main",
      "Data.AEq",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Complex",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Proxy",
      "Data.Reflection",
      "Data.Set",
      "Data.Singletons",
      "Data.Text",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Fusion.Bundle",
      "Data.Vector.Fusion.Bundle.Monadic",
      "Data.Vector.Fusion.Stream",
      "Data.Vector.Fusion.Stream.Monadic",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Generic.New",
      "Data.Vector.SEXP",
      "Data.Vector.SEXP.Base",
      "Data.Vector.SEXP.Mutable",
      "Data.Vector.SEXP.Mutable.Internal",
      "Data.Word",
      "Foreign",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.R",
      "Foreign.R.Constraints",
      "Foreign.R.Embedded",
      "Foreign.R.Error",
      "Foreign.R.EventLoop",
      "Foreign.R.Parse",
      "Foreign.R.Type",
      "Foreign.Storable",
      "GHC.Event",
      "GHC.Exts",
      "GHC.Foreign",
      "GHC.ForeignPtr",
      "GHC.IO.Encoding.UTF8",
      "H.Prelude",
      "Internal.Error",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Language.R",
      "Language.R.Event",
      "Language.R.Globals",
      "Language.R.HExp",
      "Language.R.Instance",
      "Language.R.Internal",
      "Language.R.Internal.FunWrappers",
      "Language.R.Internal.FunWrappers.TH",
      "Language.R.Literal",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.IO.Silently",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Mem",
      "System.Mem.Weak",
      "System.Posix.IO",
      "System.Posix.Resource",
      "System.Posix.Types",
      "System.Process",
      "System.SetEnv",
      "Test.Constraints",
      "Test.Event",
      "Test.FunPtr",
      "Test.GC",
      "Test.QuickCheck.Assertions",
      "Test.Regions",
      "Test.Scripts",
      "Test.Tasty",
      "Test.Tasty.ExpectedFailure",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Test.Vector"
    ],
    "modules": [
      "Control.Memory.Region",
      "Data.Vector.SEXP",
      "Data.Vector.SEXP.Base",
      "Data.Vector.SEXP.Mutable",
      "Foreign.R",
      "Foreign.R.Constraints",
      "Foreign.R.Embedded",
      "Foreign.R.Error",
      "Foreign.R.Internal",
      "Foreign.R.Parse",
      "Foreign.R.Type",
      "H.Prelude",
      "H.Prelude.Interactive",
      "Language.R",
      "Language.R.Debug",
      "Language.R.GC",
      "Language.R.Globals",
      "Language.R.HExp",
      "Language.R.Instance",
      "Language.R.Literal",
      "Language.R.QQ",
      "Language.R.Internal",
      "Language.R.Internal.FunWrappers",
      "Language.R.Internal.FunWrappers.TH"
    ],
    "name": "inline-r",
    "version": "0.9.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Data.Bits",
        "Data.Either",
        "Data.Int",
        "Data.Typeable",
        "Debug.Trace",
        "Text.Printf",
        "Text.Show.Functions"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "murmur-hash": [
        "Data.Digest.Murmur32",
        "Data.Digest.Murmur64"
      ]
    },
    "imports": [
      "APIConsistency",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Criterion.Main",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Typed",
      "Data.Binary.Typed.Debug",
      "Data.Binary.Typed.Internal",
      "Data.Bits",
      "Data.ByteString.Lazy",
      "Data.Digest.Murmur32",
      "Data.Digest.Murmur64",
      "Data.Either",
      "Data.Int",
      "Data.Typeable",
      "Debug.Trace",
      "HUnit",
      "QuickCheck",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Text.Printf",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.Binary.Typed",
      "Data.Binary.Typed.Debug",
      "Data.Binary.Typed.Internal",
      "Data.Binary.Typed.Tutorial"
    ],
    "name": "binary-typed",
    "version": "1.0"
  },
  {
    "dependencies": {
      "array": [],
      "base": [],
      "containers": [],
      "glib": [],
      "gtk3": [
        "Graphics.UI.Gtk"
      ],
      "mtl": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Text",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.SourceView",
      "Graphics.UI.Gtk.SourceView.SourceBuffer",
      "Graphics.UI.Gtk.SourceView.SourceCompletion",
      "Graphics.UI.Gtk.SourceView.SourceCompletionContext",
      "Graphics.UI.Gtk.SourceView.SourceCompletionInfo",
      "Graphics.UI.Gtk.SourceView.SourceCompletionItem",
      "Graphics.UI.Gtk.SourceView.SourceCompletionProposal",
      "Graphics.UI.Gtk.SourceView.SourceCompletionProvider",
      "Graphics.UI.Gtk.SourceView.SourceGutter",
      "Graphics.UI.Gtk.SourceView.SourceIter",
      "Graphics.UI.Gtk.SourceView.SourceLanguage",
      "Graphics.UI.Gtk.SourceView.SourceLanguageManager",
      "Graphics.UI.Gtk.SourceView.SourceMark",
      "Graphics.UI.Gtk.SourceView.SourceStyle",
      "Graphics.UI.Gtk.SourceView.SourceStyleScheme",
      "Graphics.UI.Gtk.SourceView.SourceStyleSchemeManager",
      "Graphics.UI.Gtk.SourceView.SourceUndoManager",
      "Graphics.UI.Gtk.SourceView.SourceView"
    ],
    "modules": [
      "Graphics.UI.Gtk.SourceView",
      "Graphics.UI.Gtk.SourceView.Enums",
      "Graphics.UI.Gtk.SourceView.SourceBuffer",
      "Graphics.UI.Gtk.SourceView.SourceCompletion",
      "Graphics.UI.Gtk.SourceView.SourceCompletionContext",
      "Graphics.UI.Gtk.SourceView.SourceCompletionInfo",
      "Graphics.UI.Gtk.SourceView.SourceCompletionItem",
      "Graphics.UI.Gtk.SourceView.SourceCompletionProposal",
      "Graphics.UI.Gtk.SourceView.SourceCompletionProvider",
      "Graphics.UI.Gtk.SourceView.SourceGutter",
      "Graphics.UI.Gtk.SourceView.SourceIter",
      "Graphics.UI.Gtk.SourceView.SourceLanguage",
      "Graphics.UI.Gtk.SourceView.SourceLanguageManager",
      "Graphics.UI.Gtk.SourceView.SourceMark",
      "Graphics.UI.Gtk.SourceView.SourceMarkAttributes",
      "Graphics.UI.Gtk.SourceView.SourceStyle",
      "Graphics.UI.Gtk.SourceView.SourceStyleScheme",
      "Graphics.UI.Gtk.SourceView.SourceStyleSchemeManager",
      "Graphics.UI.Gtk.SourceView.SourceUndoManager",
      "Graphics.UI.Gtk.SourceView.SourceView"
    ],
    "name": "gtksourceview3",
    "version": "0.13.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.Word",
        "Foreign",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Int",
      "Data.Word",
      "Foreign",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.EntropyNix",
      "System.EntropyWindows",
      "System.EntropyXen",
      "System.IO.Error",
      "System.Posix"
    ],
    "modules": [
      "System.Entropy"
    ],
    "name": "entropy",
    "version": "0.3.7"
  },
  {
    "dependencies": {
      "base": [
        "Data.List"
      ],
      "binary": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "charsetdetect-ae": [],
      "data-default": [],
      "deepseq": [],
      "fingertree": [
        "Data.FingerTree"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "text-icu": []
    },
    "imports": [
      "Criterion.Main",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.FingerTree",
      "Data.List",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Yi.Rope"
    ],
    "modules": [
      "Yi.Rope"
    ],
    "name": "yi-rope",
    "version": "0.7.0.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Semigroup",
        "Data.String",
        "Data.Typeable",
        "GHC.Generics"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "megaparsec": [
        "Text.Megaparsec",
        "Text.Megaparsec.Lexer",
        "Text.Megaparsec.Pos"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Lazy"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Except",
      "Control.Monad.Reader",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer.Lazy",
      "Criterion.Main",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Data",
      "Data.FileEmbed",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Semigroup",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Data.Typeable",
      "Data.Vector",
      "Data.Yaml",
      "GHC.Generics",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "System.Directory",
      "System.FilePath",
      "Test.Hspec",
      "Test.Hspec.Megaparsec",
      "Text.Megaparsec",
      "Text.Megaparsec.Lexer",
      "Text.Megaparsec.Pos",
      "Text.Mustache",
      "Text.Mustache.Compile",
      "Text.Mustache.Compile.TH",
      "Text.Mustache.Parser",
      "Text.Mustache.Render",
      "Text.Mustache.Type"
    ],
    "modules": [
      "Text.Mustache",
      "Text.Mustache.Compile",
      "Text.Mustache.Compile.TH",
      "Text.Mustache.Parser",
      "Text.Mustache.Render",
      "Text.Mustache.Type"
    ],
    "name": "stache",
    "version": "0.1.7"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.AppsCalendar",
      "Network.Google.AppsCalendar.Types",
      "Network.Google.Resource.Calendar.ACL.Delete",
      "Network.Google.Resource.Calendar.ACL.Get",
      "Network.Google.Resource.Calendar.ACL.Insert",
      "Network.Google.Resource.Calendar.ACL.List",
      "Network.Google.Resource.Calendar.ACL.Patch",
      "Network.Google.Resource.Calendar.ACL.Update",
      "Network.Google.Resource.Calendar.ACL.Watch",
      "Network.Google.Resource.Calendar.CalendarList.Delete",
      "Network.Google.Resource.Calendar.CalendarList.Get",
      "Network.Google.Resource.Calendar.CalendarList.Insert",
      "Network.Google.Resource.Calendar.CalendarList.List",
      "Network.Google.Resource.Calendar.CalendarList.Patch",
      "Network.Google.Resource.Calendar.CalendarList.Update",
      "Network.Google.Resource.Calendar.CalendarList.Watch",
      "Network.Google.Resource.Calendar.Calendars.Clear",
      "Network.Google.Resource.Calendar.Calendars.Delete",
      "Network.Google.Resource.Calendar.Calendars.Get",
      "Network.Google.Resource.Calendar.Calendars.Insert",
      "Network.Google.Resource.Calendar.Calendars.Patch",
      "Network.Google.Resource.Calendar.Calendars.Update",
      "Network.Google.Resource.Calendar.Channels.Stop",
      "Network.Google.Resource.Calendar.Colors.Get",
      "Network.Google.Resource.Calendar.Events.Delete",
      "Network.Google.Resource.Calendar.Events.Get",
      "Network.Google.Resource.Calendar.Events.Import",
      "Network.Google.Resource.Calendar.Events.Insert",
      "Network.Google.Resource.Calendar.Events.Instances",
      "Network.Google.Resource.Calendar.Events.List",
      "Network.Google.Resource.Calendar.Events.Move",
      "Network.Google.Resource.Calendar.Events.Patch",
      "Network.Google.Resource.Calendar.Events.QuickAdd",
      "Network.Google.Resource.Calendar.Events.Update",
      "Network.Google.Resource.Calendar.Events.Watch",
      "Network.Google.Resource.Calendar.FreeBusy.Query",
      "Network.Google.Resource.Calendar.Settings.Get",
      "Network.Google.Resource.Calendar.Settings.List",
      "Network.Google.Resource.Calendar.Settings.Watch"
    ],
    "name": "gogol-apps-calendar",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Typeable",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "cryptohash": [
        "Crypto.Hash"
      ],
      "persistent": [],
      "pwstore-fast": [],
      "text": [
        "Data.Text"
      ],
      "yesod-auth": [
        "Yesod.Auth",
        "Yesod.Auth.Message"
      ],
      "yesod-core": [
        "Yesod.Core"
      ],
      "yesod-form": [],
      "yesod-persistent": []
    },
    "imports": [
      "BasicPrelude",
      "Control.Applicative",
      "Control.Monad.Logger",
      "Control.Monad.Trans.Resource",
      "Crypto.Hash",
      "Database.Persist.Sqlite",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text",
      "Data.Typeable",
      "ExampleData",
      "IntegrationTest",
      "Network.HTTP.Client.Conduit",
      "Network.HTTP.Types",
      "Network.URI",
      "Network.Wai.Test",
      "NonDBTests",
      "Prelude",
      "Test.Hspec",
      "TestSite",
      "TestTools",
      "Yesod",
      "Yesod.Auth",
      "Yesod.Auth.HashDB",
      "Yesod.Auth.Message",
      "Yesod.Core",
      "Yesod.Test"
    ],
    "modules": [
      "Yesod.Auth.HashDB"
    ],
    "name": "yesod-auth-hashdb",
    "version": "1.5.1.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Data.Functor.Identity"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "transformers": []
    },
    "imports": [
      "Data.Data",
      "Data.Functor.Identity",
      "Text.Parsec"
    ],
    "modules": [
      "Text.Nicify"
    ],
    "name": "nicify-lib",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.IArray"
      ],
      "base": []
    },
    "imports": [
      "Data.Array.Base",
      "Data.Array.IArray"
    ],
    "modules": [
      "Data.Ix.Shapable"
    ],
    "name": "ix-shapable",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Gen",
        "Test.QuickCheck.Random"
      ],
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude",
        "System.IO.Unsafe",
        "Text.Show.Functions"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Extensions",
      "Data.Array",
      "Data.Char",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Monoid",
      "Data.Traversable",
      "Prelude",
      "System.IO.Unsafe",
      "System.Random",
      "Test.QuickCheck",
      "Test.QuickCheck.Checkers",
      "Test.QuickCheck.Gen",
      "Test.QuickCheck.Instances.Array",
      "Test.QuickCheck.Instances.Char",
      "Test.QuickCheck.Instances.Eq",
      "Test.QuickCheck.Instances.List",
      "Test.QuickCheck.Instances.Maybe",
      "Test.QuickCheck.Instances.Num",
      "Test.QuickCheck.Instances.Ord",
      "Test.QuickCheck.Instances.Tuple",
      "Test.QuickCheck.Random",
      "Test.QuickCheck.Utils",
      "Text.Show.Functions"
    ],
    "modules": [
      "Test.QuickCheck.Utils",
      "Test.QuickCheck.Checkers",
      "Test.QuickCheck.Classes",
      "Test.QuickCheck.Bottoms",
      "Test.QuickCheck.Instances",
      "Test.QuickCheck.Instances.Array",
      "Test.QuickCheck.Instances.Char",
      "Test.QuickCheck.Instances.Eq",
      "Test.QuickCheck.Instances.List",
      "Test.QuickCheck.Instances.Maybe",
      "Test.QuickCheck.Instances.Num",
      "Test.QuickCheck.Instances.Ord",
      "Test.QuickCheck.Instances.Tuple",
      "Test.QuickCheck.Later"
    ],
    "name": "checkers",
    "version": "0.4.6"
  },
  {
    "dependencies": {
      "array": [],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe",
        "System.Posix.Types"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Char",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Model",
      "Network.HTTP.Date",
      "Network.HTTP.Date.Converter",
      "Network.HTTP.Date.Formatter",
      "Network.HTTP.Date.Parser",
      "Network.HTTP.Date.Types",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Posix.Types",
      "Test.DocTest",
      "Test.Hspec"
    ],
    "modules": [
      "Network.HTTP.Date"
    ],
    "name": "http-date",
    "version": "0.0.6.1"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "base": [
        "Control.Monad",
        "Control.Monad.ST",
        "Control.Monad.ST.Unsafe",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Ord",
        "Data.STRef",
        "Debug.Trace",
        "Foreign",
        "GHC.Base",
        "GHC.Exts",
        "GHC.ST",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf",
        "Text.Show.Functions"
      ]
    },
    "imports": [
      "Choose",
      "Control.Monad",
      "Control.Monad.ST",
      "Control.Monad.ST.Unsafe",
      "Data.Array.ST",
      "Data.Choose",
      "Data.Choose.Base",
      "Data.Choose.IOBase",
      "Data.Choose.MChoose",
      "Data.Choose.ST",
      "Data.Function",
      "Data.IntArray",
      "Data.List",
      "Data.Maybe",
      "Data.Ord",
      "Data.Permute",
      "Data.Permute.Base",
      "Data.Permute.IOBase",
      "Data.Permute.MPermute",
      "Data.Permute.ST",
      "Data.Set",
      "Data.STRef",
      "Debug.Trace",
      "Driver",
      "Foreign",
      "GHC.Base",
      "GHC.Exts",
      "GHC.Prim",
      "GHC.ST",
      "Permute",
      "STChoose",
      "STPermute",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "Test.Choose",
      "Test.Permute",
      "Test.QuickCheck",
      "Text.Printf",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.Choose",
      "Data.Choose.MChoose",
      "Data.Choose.IO",
      "Data.Choose.ST",
      "Data.Permute",
      "Data.Permute.MPermute",
      "Data.Permute.IO",
      "Data.Permute.ST"
    ],
    "name": "permutation",
    "version": "0.5.0.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Functor.Identity",
        "Data.Monoid",
        "System.Environment"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS",
        "Control.Monad.RWS.Class",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.Free",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.RSS.Strict",
      "Control.Monad.RWS",
      "Control.Monad.RWS.Class",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.RSS.Lazy",
      "Control.Monad.Trans.RSS.Strict",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Writer",
      "Criterion",
      "Criterion.Main",
      "Data.DList",
      "Data.Functor.Identity",
      "Data.IntSet",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Vector.Primitive",
      "System.Environment",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Control.Monad.Trans.RSS.Lazy",
      "Control.Monad.Trans.RSS.Strict",
      "Control.Monad.RSS.Lazy",
      "Control.Monad.RSS.Strict",
      "Control.Monad.RSS",
      "Control.Monad.Trans.RSS"
    ],
    "name": "stateWriter",
    "version": "0.2.8"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH"
      ],
      "base": [
        "Control.Monad.IO.Class"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Logger.JSON",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.Text",
      "Data.Time.Clock",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Control.Monad.Logger.JSON"
    ],
    "name": "monad-logger-json",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.Locale.SetLocale"
    ],
    "name": "setlocale",
    "version": "1.0.0.4"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudWatchEvents",
      "Test.AWS.CloudWatchEvents",
      "Test.AWS.CloudWatchEvents.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudWatchEvents",
      "Network.AWS.CloudWatchEvents.DeleteRule",
      "Network.AWS.CloudWatchEvents.DescribeRule",
      "Network.AWS.CloudWatchEvents.DisableRule",
      "Network.AWS.CloudWatchEvents.EnableRule",
      "Network.AWS.CloudWatchEvents.ListRuleNamesByTarget",
      "Network.AWS.CloudWatchEvents.ListRules",
      "Network.AWS.CloudWatchEvents.ListTargetsByRule",
      "Network.AWS.CloudWatchEvents.PutEvents",
      "Network.AWS.CloudWatchEvents.PutRule",
      "Network.AWS.CloudWatchEvents.PutTargets",
      "Network.AWS.CloudWatchEvents.RemoveTargets",
      "Network.AWS.CloudWatchEvents.TestEventPattern",
      "Network.AWS.CloudWatchEvents.Types",
      "Network.AWS.CloudWatchEvents.Waiters"
    ],
    "name": "amazonka-cloudwatch-events",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec",
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.Lazy",
        "Data.Attoparsec.Number",
        "Data.Attoparsec.Text",
        "Data.Attoparsec.Zepto"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.IO.Class",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Bool",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Eq",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.Functor.Identity",
        "Data.Int",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Generics",
        "GHC.Word",
        "Numeric",
        "Numeric.Natural",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.Printf",
        "Text.Show",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Prim",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "dlist": [
        "Data.DList"
      ],
      "fail": [],
      "ghc-prim": [],
      "hashable": [
        "Data.Hashable"
      ],
      "mtl": [],
      "scientific": [
        "Data.ByteString.Builder.Scientific",
        "Data.Scientific",
        "Data.Text.Lazy.Builder.Scientific"
      ],
      "syb": [],
      "tagged": [
        "Data.Tagged"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Internal.Encoding.Utf8",
        "Data.Text.Internal.Unsafe.Char",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Mutable",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Compare.BufferBuilder",
      "Compare.JsonBench",
      "Compare.JsonBuilder",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.IO.Class",
      "Control.Monad.ST",
      "Criterion",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Encode.Builder",
      "Data.Aeson.Encode.Functions",
      "Data.Aeson.Functions",
      "Data.Aeson.Generic",
      "Data.Aeson.Internal",
      "Data.Aeson.Internal.Time",
      "Data.Aeson.Parser",
      "Data.Aeson.Parser.Internal",
      "Data.Aeson.Parser.Time",
      "Data.Aeson.TH",
      "Data.Aeson.Types",
      "Data.Aeson.Types.Class",
      "Data.Aeson.Types.Generic",
      "Data.Aeson.Types.Instances",
      "Data.Aeson.Types.Internal",
      "Data.Attoparsec",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.Lazy",
      "Data.Attoparsec.Number",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Zepto",
      "Data.Bits",
      "Data.Bool",
      "Data.BufferBuilder.Json",
      "Data.BufferBuilder.Utf8",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Scientific",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.DList",
      "Data.Either",
      "Data.Eq",
      "DataFamilies.Encoders",
      "DataFamilies.Instances",
      "DataFamilies.Properties",
      "DataFamilies.Types",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Json.Builder",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Orphans",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Scientific",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Set",
      "Data.String",
      "Data.Tagged",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Internal.Encoding.Utf8",
      "Data.Text.Internal.Unsafe.Char",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Scientific",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Calendar",
      "Data.Time.Clock",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Traversable",
      "Data.Tree",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Mutable",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Version",
      "Data.Word",
      "Encoders",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Functions",
      "GHC.Base",
      "GHC.Generics",
      "GHC.Word",
      "Instances",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Numeric",
      "Numeric.Natural",
      "Options",
      "Prelude",
      "Properties",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Locale",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Text.JSON",
      "Text.ParserCombinators.ReadP",
      "Text.Printf",
      "Text.Show",
      "Twitter",
      "Twitter.Manual",
      "Twitter.TH",
      "Typed.Common",
      "Typed.Generic",
      "Typed.Manual",
      "Typed.TH",
      "Types",
      "UnitTests",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Internal",
      "Data.Aeson.Internal.Time",
      "Data.Aeson.Parser",
      "Data.Aeson.Types",
      "Data.Aeson.TH"
    ],
    "name": "aeson",
    "version": "0.11.2.1"
  },
  {
    "dependencies": {
      "OpenGLRaw": [
        "Graphics.GL",
        "Graphics.GL.Core31",
        "Graphics.GL.Types"
      ],
      "base": [
        "Control.Monad.IO.Class",
        "Foreign.C.String",
        "Foreign.Marshal.Error",
        "Foreign.Ptr",
        "System.IO.Unsafe"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad.IO.Class",
      "Foreign.C.String",
      "Foreign.Marshal.Error",
      "Foreign.Ptr",
      "Graphics.GL",
      "Graphics.GL.Core31",
      "Graphics.GL.Types",
      "Graphics.GLU.Callbacks",
      "Graphics.GLU.Functions",
      "Graphics.GLU.Tokens",
      "Graphics.GLU.Types",
      "Graphics.GLU.TypesInternal",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Graphics.GLU",
      "Graphics.GLU.Callbacks",
      "Graphics.GLU.Functions",
      "Graphics.GLU.Tokens",
      "Graphics.GLU.Types"
    ],
    "name": "GLURaw",
    "version": "2.0.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.DeepSeq"
    ],
    "modules": [
      "Control.Monad.Par.Class",
      "Control.Monad.Par.Unsafe"
    ],
    "name": "abstract-par",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "Data.Maybe",
        "System.IO"
      ],
      "questioner": [],
      "readline": [],
      "terminal-size": [
        "System.Console.Terminal.Size"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Data.List",
      "Data.Maybe",
      "System.Console.ANSI",
      "System.Console.Questioner",
      "System.Console.Questioner.ProgressIndicators",
      "System.Console.Questioner.Util",
      "System.Console.Terminal.Size",
      "System.IO"
    ],
    "modules": [
      "System.Console.Questioner",
      "System.Console.Questioner.ProgressIndicators",
      "System.Console.Questioner.Util"
    ],
    "name": "questioner",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.Text",
        "Data.Attoparsec.Types"
      ],
      "base": [],
      "bytestring": [],
      "hw-prim": [],
      "mono-traversable": [],
      "text": []
    },
    "imports": [
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Types"
    ],
    "modules": [
      "HaskellWorks.Data.Parser"
    ],
    "name": "hw-parser",
    "version": "0.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hslogger": [
        "System.Log.Logger"
      ],
      "html": [],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Class",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Trans",
        "Control.Monad.Writer.Class",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "process": [
        "System.Process"
      ],
      "sendfile": [
        "Network.Socket.SendFile"
      ],
      "syb": [
        "Data.Generics"
      ],
      "system-filepath": [
        "Filesystem.Path.CurrentOS"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "threads": [
        "Control.Concurrent.Thread.Group"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock",
        "Data.Time.Clock.POSIX",
        "Data.Time.Format"
      ],
      "time-compat": [
        "Data.Time.Compat"
      ],
      "transformers": [
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.Maybe"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "transformers-compat": [],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ],
      "xhtml": [
        "Text.XHtml"
      ],
      "zlib": [
        "Codec.Compression.GZip",
        "Codec.Compression.Zlib"
      ]
    },
    "imports": [
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.Thread.Group",
      "Control.Exception",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Error",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Writer.Class",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.Unsafe",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Data",
      "Data.Either",
      "Data.Function",
      "Data.Generics",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Clock",
      "Data.Time.Clock.POSIX",
      "Data.Time.Compat",
      "Data.Time.Format",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Debug.Trace",
      "Filesystem.Path.CurrentOS",
      "Happstack.Server",
      "Happstack.Server.Auth",
      "Happstack.Server.Client",
      "Happstack.Server.Cookie",
      "Happstack.Server.Error",
      "Happstack.Server.FileServe",
      "Happstack.Server.FileServe.BuildingBlocks",
      "Happstack.Server.I18N",
      "Happstack.Server.Internal.Clock",
      "Happstack.Server.Internal.Compression",
      "Happstack.Server.Internal.Cookie",
      "Happstack.Server.Internal.Handler",
      "Happstack.Server.Internal.Listen",
      "Happstack.Server.Internal.LogFormat",
      "Happstack.Server.Internal.MessageWrap",
      "Happstack.Server.Internal.Monads",
      "Happstack.Server.Internal.Multipart",
      "Happstack.Server.Internal.RFC822Headers",
      "Happstack.Server.Internal.Socket",
      "Happstack.Server.Internal.SocketTH",
      "Happstack.Server.Internal.TimeoutIO",
      "Happstack.Server.Internal.TimeoutManager",
      "Happstack.Server.Internal.TimeoutSocket",
      "Happstack.Server.Internal.Types",
      "Happstack.Server.Monads",
      "Happstack.Server.Proxy",
      "Happstack.Server.Response",
      "Happstack.Server.Routing",
      "Happstack.Server.RqData",
      "Happstack.Server.SimpleHTTP",
      "Happstack.Server.SURI",
      "Happstack.Server.SURI.ParseURI",
      "Happstack.Server.Tests",
      "Happstack.Server.Types",
      "Happstack.Server.Validation",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Network",
      "Network.BSD",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.SendFile",
      "Network.URI",
      "Numeric",
      "Paths",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Log.Logger",
      "System.Posix.IO",
      "System.Posix.Signals",
      "System.Posix.Terminal",
      "System.Process",
      "Test.HUnit",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.ParserCombinators.Parsec",
      "Text.XHtml"
    ],
    "modules": [
      "Happstack.Server",
      "Happstack.Server.Auth",
      "Happstack.Server.Cookie",
      "Happstack.Server.Compression",
      "Happstack.Server.Client",
      "Happstack.Server.Error",
      "Happstack.Server.FileServe",
      "Happstack.Server.FileServe.BuildingBlocks",
      "Happstack.Server.I18N",
      "Happstack.Server.Internal.Compression",
      "Happstack.Server.Internal.Cookie",
      "Happstack.Server.Internal.Handler",
      "Happstack.Server.Internal.Types",
      "Happstack.Server.Internal.Listen",
      "Happstack.Server.Internal.LowLevel",
      "Happstack.Server.Internal.LogFormat",
      "Happstack.Server.Internal.MessageWrap",
      "Happstack.Server.Internal.Multipart",
      "Happstack.Server.Internal.Socket",
      "Happstack.Server.Internal.TimeoutIO",
      "Happstack.Server.Internal.TimeoutManager",
      "Happstack.Server.Internal.TimeoutSocket",
      "Happstack.Server.Internal.Monads",
      "Happstack.Server.Monads",
      "Happstack.Server.Proxy",
      "Happstack.Server.Response",
      "Happstack.Server.Routing",
      "Happstack.Server.RqData",
      "Happstack.Server.SURI",
      "Happstack.Server.SimpleHTTP",
      "Happstack.Server.Types",
      "Happstack.Server.Validation"
    ],
    "name": "happstack-server",
    "version": "7.4.6.2"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [],
      "blaze-html": [],
      "shakespeare": [],
      "text": [],
      "xss-sanitize": [],
      "yesod-core": [],
      "yesod-form": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Yesod.Form.Summernote"
    ],
    "name": "yesod-form-richtext",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Time",
      "Control.Monad.Trans",
      "Data.Time"
    ],
    "modules": [
      "Control.Monad.Time"
    ],
    "name": "monad-time",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude",
        "Text.Read"
      ],
      "hashable": [
        "Data.Hashable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Data.Data",
      "Data.Foldable",
      "Data.Hashable",
      "Data.IntMap",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Prelude",
      "Text.Read"
    ],
    "modules": [
      "Data.HashMap",
      "Data.HashSet"
    ],
    "name": "hashmap",
    "version": "1.3.1.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compiler",
        "Distribution.ModuleName",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Parse",
        "Distribution.Simple.Configure",
        "Distribution.Simple.Program",
        "Distribution.Simple.Utils",
        "Distribution.Verbosity"
      ],
      "async": [],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.Posix.Types"
      ],
      "base64-bytestring": [],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Filesystem"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default-class": [],
      "deepseq": [],
      "directory": [
        "System.Directory"
      ],
      "file-embed": [],
      "filepath": [
        "System.FilePath"
      ],
      "fsnotify": [],
      "ghc": [],
      "ghc-paths": [],
      "http-client": [],
      "http-conduit": [],
      "http-reverse-proxy": [
        "Network.HTTP.ReverseProxy"
      ],
      "http-types": [],
      "lifted-base": [],
      "network": [],
      "optparse-applicative": [],
      "parsec": [],
      "process": [
        "System.Process"
      ],
      "project-template": [
        "Text.ProjectTemplate"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "shakespeare": [],
      "split": [],
      "streaming-commons": [],
      "tar": [
        "Codec.Archive.Tar"
      ],
      "template-haskell": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "time": [],
      "transformers": [
        "Control.Monad.Trans.Writer"
      ],
      "transformers-compat": [],
      "unix-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "wai": [],
      "wai-extra": [],
      "warp": [],
      "warp-tls": [],
      "yaml": [
        "Data.Yaml"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Compression.GZip",
      "Config",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.Writer",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Filesystem",
      "Data.Conduit.List",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Yaml",
      "Distribution.Compiler",
      "Distribution.ModuleName",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Parse",
      "Distribution.Simple.Configure",
      "Distribution.Simple.Program",
      "Distribution.Simple.Utils",
      "Distribution.Verbosity",
      "DynFlags",
      "GHC",
      "Module",
      "Network.HTTP.ReverseProxy",
      "Paths",
      "Prelude",
      "StaticFlags",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.Posix.Types",
      "System.Process",
      "Text.ProjectTemplate"
    ],
    "modules": [],
    "name": "yesod-bin",
    "version": "1.4.18.7"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Partners",
      "Network.Google.Partners.Types",
      "Network.Google.Resource.Partners.ClientMessages.Log",
      "Network.Google.Resource.Partners.Companies.Get",
      "Network.Google.Resource.Partners.Companies.Leads.Create",
      "Network.Google.Resource.Partners.Companies.List",
      "Network.Google.Resource.Partners.UserEvents.Log",
      "Network.Google.Resource.Partners.UserStates.List"
    ],
    "name": "gogol-partners",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      "Magic.Init",
      "Magic.Operations",
      "Magic.Types"
    ],
    "modules": [
      "Magic",
      "Magic.Data",
      "Magic.Types",
      "Magic.Init",
      "Magic.Operations"
    ],
    "name": "magic",
    "version": "1.1"
  },
  {
    "dependencies": {
      "base": [],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "cryptohash": [],
      "http-types": [],
      "time": [],
      "utf8-string": []
    },
    "imports": [
      "Data.ByteString.Base64"
    ],
    "modules": [
      "Network.S3"
    ],
    "name": "s3-signer",
    "version": "0.3.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [],
      "containers": [],
      "gi-glib": [],
      "haskell-gi": [],
      "haskell-gi-base": [],
      "text": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [],
    "name": "gi-gobject",
    "version": "2.0.3"
  },
  {
    "dependencies": {
      "async": [],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.List",
        "Data.Void",
        "GHC.Exts",
        "System.IO"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "cereal-conduit": [
        "Data.Conduit.Cereal"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-combinators": [
        "Conduit"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary"
      ],
      "directory": [
        "System.Directory"
      ],
      "ghc-prim": [],
      "lifted-async": [
        "Control.Concurrent.Async.Lifted"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-loops": [
        "Control.Monad.Loops"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TQueue"
      ],
      "stm-chans": [
        "Control.Concurrent.STM.TBMChan",
        "Control.Concurrent.STM.TBMQueue",
        "Control.Concurrent.STM.TMChan",
        "Control.Concurrent.STM.TMQueue"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "void": []
    },
    "imports": [
      "Conduit",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async.Lifted",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TBMChan",
      "Control.Concurrent.STM.TBMQueue",
      "Control.Concurrent.STM.TMChan",
      "Control.Concurrent.STM.TMQueue",
      "Control.Concurrent.STM.TQueue",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Loops",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Data.Conduit",
      "Data.Conduit.Async",
      "Data.Conduit.Async.Composition",
      "Data.Conduit.Binary",
      "Data.Conduit.Cereal",
      "Data.Conduit.List",
      "Data.Conduit.TMChan",
      "Data.Conduit.TQueue",
      "Data.Foldable",
      "Data.List",
      "Data.Serialize",
      "Data.Void",
      "GHC.Exts",
      "GHC.Prim",
      "System.Directory",
      "System.IO",
      "Test.DocTest",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Conduit.Async",
      "Data.Conduit.TMChan",
      "Data.Conduit.TQueue",
      "Data.Conduit.Utils"
    ],
    "name": "stm-conduit",
    "version": "3.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Word",
        "Numeric"
      ],
      "binary": [
        "Data.Binary"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Binary",
      "Data.Bits",
      "Data.ByteString.Lazy",
      "Data.LargeWord",
      "Data.Word",
      "Numeric",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.LargeWord"
    ],
    "name": "largeword",
    "version": "1.2.5"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.Webmasters.Searchanalytics.Query",
      "Network.Google.Resource.Webmasters.Sitemaps.Delete",
      "Network.Google.Resource.Webmasters.Sitemaps.Get",
      "Network.Google.Resource.Webmasters.Sitemaps.List",
      "Network.Google.Resource.Webmasters.Sitemaps.Submit",
      "Network.Google.Resource.Webmasters.Sites.Add",
      "Network.Google.Resource.Webmasters.Sites.Delete",
      "Network.Google.Resource.Webmasters.Sites.Get",
      "Network.Google.Resource.Webmasters.Sites.List",
      "Network.Google.Resource.Webmasters.URLCrawlErrorsSamples.Get",
      "Network.Google.Resource.Webmasters.URLCrawlErrorsSamples.List",
      "Network.Google.Resource.Webmasters.URLCrawlErrorsSamples.MarkAsFixed",
      "Network.Google.Resource.Webmasters.URLCrawlErrorscounts.Query",
      "Network.Google.WebmasterTools",
      "Network.Google.WebmasterTools.Types"
    ],
    "name": "gogol-webmaster-tools",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Complex",
        "Data.Foldable",
        "Data.IORef",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "Foreign.C",
        "Foreign.Storable",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "bytestring": [],
      "cairo": [
        "Graphics.Rendering.Cairo",
        "Graphics.Rendering.Cairo.Types"
      ],
      "containers": [],
      "glib": [
        "System.Glib.FFI",
        "System.Glib.GObject",
        "System.Glib.Signals"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "pango": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans",
      "Data.Array.Base",
      "Data.Bits",
      "Data.Char",
      "Data.Complex",
      "Data.Foldable",
      "Data.IORef",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Text",
      "Data.Time",
      "Data.Tree",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "Foreign.C",
      "Foreign.Storable",
      "Graphics.Rendering.Cairo",
      "Graphics.Rendering.Cairo.Types",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.Gdk.DrawWindow",
      "Graphics.UI.Gtk.Gdk.EventM",
      "Graphics.UI.Gtk.Gdk.GC",
      "Graphics.UI.Gtk.ModelView",
      "Graphics.UI.Gtk.ModelView.CustomStore",
      "Graphics.UI.Gtk.ModelView.Sequence",
      "Graphics.UI.Gtk.ModelView.TreeDrag",
      "Graphics.UI.Gtk.ModelView.TreeModel",
      "Graphics.UI.Gtk.ModelView.Types",
      "Graphics.UI.Gtk.Types",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Glib.FFI",
      "System.Glib.GObject",
      "System.Glib.Signals",
      "System.IO",
      "System.Locale",
      "System.Process",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Graphics.UI.Gtk",
      "Graphics.UI.GtkInternals",
      "Graphics.UI.Gtk.Abstract.Bin",
      "Graphics.UI.Gtk.Abstract.Box",
      "Graphics.UI.Gtk.Abstract.ButtonBox",
      "Graphics.UI.Gtk.Abstract.Container",
      "Graphics.UI.Gtk.Abstract.IMContext",
      "Graphics.UI.Gtk.Abstract.Misc",
      "Graphics.UI.Gtk.Abstract.Object",
      "Graphics.UI.Gtk.Abstract.Paned",
      "Graphics.UI.Gtk.Abstract.Range",
      "Graphics.UI.Gtk.Abstract.Scale",
      "Graphics.UI.Gtk.Abstract.Scrollbar",
      "Graphics.UI.Gtk.Abstract.Separator",
      "Graphics.UI.Gtk.Abstract.Widget",
      "Graphics.UI.Gtk.ActionMenuToolbar.Action",
      "Graphics.UI.Gtk.ActionMenuToolbar.ActionGroup",
      "Graphics.UI.Gtk.ActionMenuToolbar.RadioAction",
      "Graphics.UI.Gtk.ActionMenuToolbar.RecentAction",
      "Graphics.UI.Gtk.ActionMenuToolbar.ToggleAction",
      "Graphics.UI.Gtk.ActionMenuToolbar.UIManager",
      "Graphics.UI.Gtk.Builder",
      "Graphics.UI.Gtk.Buttons.Button",
      "Graphics.UI.Gtk.Buttons.CheckButton",
      "Graphics.UI.Gtk.Buttons.RadioButton",
      "Graphics.UI.Gtk.Buttons.ToggleButton",
      "Graphics.UI.Gtk.Buttons.LinkButton",
      "Graphics.UI.Gtk.Buttons.ScaleButton",
      "Graphics.UI.Gtk.Buttons.VolumeButton",
      "Graphics.UI.Gtk.Cairo",
      "Graphics.UI.Gtk.Display.AccelLabel",
      "Graphics.UI.Gtk.Display.Image",
      "Graphics.UI.Gtk.Display.Label",
      "Graphics.UI.Gtk.Display.ProgressBar",
      "Graphics.UI.Gtk.Display.Spinner",
      "Graphics.UI.Gtk.Display.Statusbar",
      "Graphics.UI.Gtk.Display.StatusIcon",
      "Graphics.UI.Gtk.Display.InfoBar",
      "Graphics.UI.Gtk.Embedding.Embedding",
      "Graphics.UI.Gtk.Embedding.Plug",
      "Graphics.UI.Gtk.Embedding.Socket",
      "Graphics.UI.Gtk.Embedding.Types",
      "Graphics.UI.Gtk.Entry.Editable",
      "Graphics.UI.Gtk.Entry.Entry",
      "Graphics.UI.Gtk.Entry.EntryBuffer",
      "Graphics.UI.Gtk.Entry.EntryCompletion",
      "Graphics.UI.Gtk.Entry.HScale",
      "Graphics.UI.Gtk.Entry.SpinButton",
      "Graphics.UI.Gtk.Entry.VScale",
      "Graphics.UI.Gtk.Gdk.AppLaunchContext",
      "Graphics.UI.Gtk.Gdk.Cursor",
      "Graphics.UI.Gtk.Gdk.Keymap",
      "Graphics.UI.Gtk.Gdk.Display",
      "Graphics.UI.Gtk.Gdk.DisplayManager",
      "Graphics.UI.Gtk.Gdk.Drawable",
      "Graphics.UI.Gtk.Gdk.DrawWindow",
      "Graphics.UI.Gtk.Gdk.EventM",
      "Graphics.UI.Gtk.Gdk.Events",
      "Graphics.UI.Gtk.Gdk.GC",
      "Graphics.UI.Gtk.Gdk.Gdk",
      "Graphics.UI.Gtk.Gdk.Keys",
      "Graphics.UI.Gtk.Gdk.Pixbuf",
      "Graphics.UI.Gtk.Gdk.PixbufAnimation",
      "Graphics.UI.Gtk.Gdk.Pixmap",
      "Graphics.UI.Gtk.Gdk.Region",
      "Graphics.UI.Gtk.Gdk.Screen",
      "Graphics.UI.Gtk.General.Clipboard",
      "Graphics.UI.Gtk.General.Drag",
      "Graphics.UI.Gtk.General.General",
      "Graphics.UI.Gtk.General.IconFactory",
      "Graphics.UI.Gtk.General.IconTheme",
      "Graphics.UI.Gtk.General.RcStyle",
      "Graphics.UI.Gtk.General.Selection",
      "Graphics.UI.Gtk.General.Settings",
      "Graphics.UI.Gtk.General.StockItems",
      "Graphics.UI.Gtk.General.Style",
      "Graphics.UI.Gtk.Layout.Alignment",
      "Graphics.UI.Gtk.Layout.AspectFrame",
      "Graphics.UI.Gtk.Layout.Expander",
      "Graphics.UI.Gtk.Layout.Fixed",
      "Graphics.UI.Gtk.Layout.HBox",
      "Graphics.UI.Gtk.Layout.HButtonBox",
      "Graphics.UI.Gtk.Layout.HPaned",
      "Graphics.UI.Gtk.Layout.Layout",
      "Graphics.UI.Gtk.Layout.Notebook",
      "Graphics.UI.Gtk.Layout.Table",
      "Graphics.UI.Gtk.Layout.VBox",
      "Graphics.UI.Gtk.Layout.VButtonBox",
      "Graphics.UI.Gtk.Layout.VPaned",
      "Graphics.UI.Gtk.MenuComboToolbar.CheckMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.Combo",
      "Graphics.UI.Gtk.MenuComboToolbar.ComboBox",
      "Graphics.UI.Gtk.MenuComboToolbar.ComboBoxEntry",
      "Graphics.UI.Gtk.MenuComboToolbar.ImageMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.Menu",
      "Graphics.UI.Gtk.MenuComboToolbar.MenuBar",
      "Graphics.UI.Gtk.MenuComboToolbar.MenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.MenuShell",
      "Graphics.UI.Gtk.MenuComboToolbar.MenuToolButton",
      "Graphics.UI.Gtk.MenuComboToolbar.OptionMenu",
      "Graphics.UI.Gtk.MenuComboToolbar.RadioMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.RadioToolButton",
      "Graphics.UI.Gtk.MenuComboToolbar.SeparatorMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.SeparatorToolItem",
      "Graphics.UI.Gtk.MenuComboToolbar.TearoffMenuItem",
      "Graphics.UI.Gtk.MenuComboToolbar.ToggleToolButton",
      "Graphics.UI.Gtk.MenuComboToolbar.Toolbar",
      "Graphics.UI.Gtk.MenuComboToolbar.ToolButton",
      "Graphics.UI.Gtk.MenuComboToolbar.ToolItem",
      "Graphics.UI.Gtk.MenuComboToolbar.ToolItemGroup",
      "Graphics.UI.Gtk.MenuComboToolbar.ToolPalette",
      "Graphics.UI.Gtk.Misc.Accessible",
      "Graphics.UI.Gtk.Misc.Adjustment",
      "Graphics.UI.Gtk.Misc.Arrow",
      "Graphics.UI.Gtk.Misc.Calendar",
      "Graphics.UI.Gtk.Misc.DrawingArea",
      "Graphics.UI.Gtk.Misc.EventBox",
      "Graphics.UI.Gtk.Misc.HandleBox",
      "Graphics.UI.Gtk.Misc.IMMulticontext",
      "Graphics.UI.Gtk.Misc.IMContextSimple",
      "Graphics.UI.Gtk.Misc.SizeGroup",
      "Graphics.UI.Gtk.Misc.Tooltip",
      "Graphics.UI.Gtk.Misc.Tooltips",
      "Graphics.UI.Gtk.Misc.Viewport",
      "Graphics.UI.Gtk.ModelView",
      "Graphics.UI.Gtk.ModelView.CellEditable",
      "Graphics.UI.Gtk.ModelView.CellLayout",
      "Graphics.UI.Gtk.ModelView.CellRenderer",
      "Graphics.UI.Gtk.ModelView.CellRendererSpinner",
      "Graphics.UI.Gtk.ModelView.CellRendererCombo",
      "Graphics.UI.Gtk.ModelView.CellRendererPixbuf",
      "Graphics.UI.Gtk.ModelView.CellRendererProgress",
      "Graphics.UI.Gtk.ModelView.CellRendererText",
      "Graphics.UI.Gtk.ModelView.CellRendererAccel",
      "Graphics.UI.Gtk.ModelView.CellRendererSpin",
      "Graphics.UI.Gtk.ModelView.CellRendererToggle",
      "Graphics.UI.Gtk.ModelView.CellView",
      "Graphics.UI.Gtk.ModelView.CustomStore",
      "Graphics.UI.Gtk.ModelView.IconView",
      "Graphics.UI.Gtk.ModelView.ListStore",
      "Graphics.UI.Gtk.ModelView.TreeDrag",
      "Graphics.UI.Gtk.ModelView.TreeModel",
      "Graphics.UI.Gtk.ModelView.TreeModelFilter",
      "Graphics.UI.Gtk.ModelView.TreeModelSort",
      "Graphics.UI.Gtk.ModelView.TreeRowReference",
      "Graphics.UI.Gtk.ModelView.TreeSelection",
      "Graphics.UI.Gtk.ModelView.TreeSortable",
      "Graphics.UI.Gtk.ModelView.TreeStore",
      "Graphics.UI.Gtk.ModelView.TreeView",
      "Graphics.UI.Gtk.ModelView.TreeViewColumn",
      "Graphics.UI.Gtk.Multiline.TextBuffer",
      "Graphics.UI.Gtk.Multiline.TextIter",
      "Graphics.UI.Gtk.Multiline.TextMark",
      "Graphics.UI.Gtk.Multiline.TextTag",
      "Graphics.UI.Gtk.Multiline.TextTagTable",
      "Graphics.UI.Gtk.Multiline.TextView",
      "Graphics.UI.Gtk.Ornaments.Frame",
      "Graphics.UI.Gtk.Ornaments.HSeparator",
      "Graphics.UI.Gtk.Ornaments.VSeparator",
      "Graphics.UI.Gtk.Printing.PaperSize",
      "Graphics.UI.Gtk.Printing.PageSetup",
      "Graphics.UI.Gtk.Printing.PrintContext",
      "Graphics.UI.Gtk.Printing.PrintOperation",
      "Graphics.UI.Gtk.Printing.PrintSettings",
      "Graphics.UI.Gtk.Recent.RecentChooserMenu",
      "Graphics.UI.Gtk.Recent.RecentChooserWidget",
      "Graphics.UI.Gtk.Recent.RecentFilter",
      "Graphics.UI.Gtk.Recent.RecentManager",
      "Graphics.UI.Gtk.Recent.RecentInfo",
      "Graphics.UI.Gtk.Recent.RecentChooser",
      "Graphics.UI.Gtk.Scrolling.HScrollbar",
      "Graphics.UI.Gtk.Scrolling.ScrolledWindow",
      "Graphics.UI.Gtk.Scrolling.VScrollbar",
      "Graphics.UI.Gtk.Selectors.ColorButton",
      "Graphics.UI.Gtk.Selectors.ColorSelection",
      "Graphics.UI.Gtk.Selectors.ColorSelectionDialog",
      "Graphics.UI.Gtk.Selectors.FileChooser",
      "Graphics.UI.Gtk.Selectors.FileChooserButton",
      "Graphics.UI.Gtk.Selectors.FileChooserDialog",
      "Graphics.UI.Gtk.Selectors.FileChooserWidget",
      "Graphics.UI.Gtk.Selectors.FileFilter",
      "Graphics.UI.Gtk.Selectors.FileSelection",
      "Graphics.UI.Gtk.Selectors.FontButton",
      "Graphics.UI.Gtk.Selectors.FontSelection",
      "Graphics.UI.Gtk.Selectors.FontSelectionDialog",
      "Graphics.UI.Gtk.Selectors.HSV",
      "Graphics.UI.Gtk.Special.Ruler",
      "Graphics.UI.Gtk.Special.HRuler",
      "Graphics.UI.Gtk.Special.VRuler",
      "Graphics.UI.Gtk.Windows.AboutDialog",
      "Graphics.UI.Gtk.Windows.Assistant",
      "Graphics.UI.Gtk.Windows.Dialog",
      "Graphics.UI.Gtk.Windows.Invisible",
      "Graphics.UI.Gtk.Windows.MessageDialog",
      "Graphics.UI.Gtk.Windows.Window",
      "Graphics.UI.Gtk.Windows.OffscreenWindow",
      "Graphics.UI.Gtk.Windows.WindowGroup",
      "Graphics.UI.Gtk.General.Enums"
    ],
    "name": "gtk",
    "version": "0.14.5"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "System.Exit",
        "System.IO"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "process": [
        "System.Process"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Data.Char",
      "Data.List",
      "Data.Maybe",
      "Lib.Git.Index",
      "Lib.Git.Lowlevel",
      "Lib.Git.Tree",
      "Lib.Git.Type",
      "System.Exit",
      "System.IO",
      "System.Process"
    ],
    "modules": [
      "Lib.Git",
      "Lib.Git.Type",
      "Lib.Git.Tree",
      "Lib.Git.Index",
      "Lib.Git.Lowlevel"
    ],
    "name": "libgit",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "email-validate": [
        "Text.Email.Validate"
      ],
      "exceptions": [],
      "filepath": [],
      "http-client": [
        "Network.HTTP.Client",
        "Network.HTTP.Client.MultipartFormData"
      ],
      "http-client-tls": [],
      "http-types": [
        "Network.HTTP.Types.Method",
        "Network.HTTP.Types.Status"
      ],
      "tagsoup": [
        "Text.HTML.TagSoup"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "transformers": []
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.HTTP.Client",
      "Network.HTTP.Client.MultipartFormData",
      "Network.HTTP.Types.Method",
      "Network.HTTP.Types.Status",
      "Text.Email.Validate",
      "Text.HTML.TagSoup"
    ],
    "modules": [
      "Mail.Hailgun",
      "Mail.Hailgun.Attachment"
    ],
    "name": "hailgun",
    "version": "0.4.1.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CloudSearchDomains",
      "Test.AWS.CloudSearchDomains",
      "Test.AWS.CloudSearchDomains.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CloudSearchDomains",
      "Network.AWS.CloudSearchDomains.Search",
      "Network.AWS.CloudSearchDomains.Suggest",
      "Network.AWS.CloudSearchDomains.Types",
      "Network.AWS.CloudSearchDomains.UploadDocuments",
      "Network.AWS.CloudSearchDomains.Waiters"
    ],
    "name": "amazonka-cloudsearch-domains",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Typeable",
        "GHC.Base",
        "GHC.Fingerprint",
        "GHC.StaticPtr",
        "System.IO.Unsafe",
        "Unsafe.Coerce"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "constraints": [
        "Data.Constraint"
      ],
      "syb": [],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Distributed.Closure",
      "Control.Distributed.Closure.Internal",
      "Control.Distributed.Closure.TH",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString.Lazy",
      "Data.Constraint",
      "Data.Typeable",
      "GHC.Base",
      "GHC.Fingerprint",
      "GHC.StaticPtr",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Control.Distributed.Closure",
      "Control.Distributed.Closure.Internal",
      "Control.Distributed.Closure.TH"
    ],
    "name": "distributed-closure",
    "version": "0.3.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Monoid",
        "Data.Typeable",
        "Foreign.C",
        "Foreign.ForeignPtr",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Environment",
        "System.IO",
        "System.IO.Unsafe"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Data.Monoid",
      "Data.Typeable",
      "Foreign.C",
      "Foreign.ForeignPtr",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Console.Terminfo.Base",
      "System.Console.Terminfo.Color",
      "System.Console.Terminfo.Cursor",
      "System.Console.Terminfo.Edit",
      "System.Console.Terminfo.Effects",
      "System.Console.Terminfo.Keys",
      "System.Environment",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [
      "System.Console.Terminfo",
      "System.Console.Terminfo.Base",
      "System.Console.Terminfo.Cursor",
      "System.Console.Terminfo.Color",
      "System.Console.Terminfo.Edit",
      "System.Console.Terminfo.Effects",
      "System.Console.Terminfo.Keys"
    ],
    "name": "terminfo",
    "version": "0.4.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Data",
        "Data.Proxy",
        "Data.Typeable.Internal",
        "Data.Type.Equality",
        "Foreign.Storable",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.OverloadedLabels",
        "GHC.TypeLits",
        "Text.Printf"
      ],
      "generic-deriving": [
        "Generics.Deriving.Base",
        "Generics.Deriving.Instances"
      ],
      "tagged": []
    },
    "imports": [
      "Data.Bits",
      "Data.Data",
      "Data.Proxy",
      "Data.Typeable.Internal",
      "Data.Type.Equality",
      "Foreign.Storable",
      "Generics.Deriving.Base",
      "Generics.Deriving.Instances",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.OverloadedLabels",
      "GHC.TypeLits",
      "Text.Printf"
    ],
    "modules": [
      "Data.Proxied"
    ],
    "name": "proxied",
    "version": "0.2"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Data.Data",
        "Data.Typeable",
        "GHC.Generics"
      ],
      "boomerang": [
        "Text.Boomerang.TH"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "web-routes": [
        "Web.Routes"
      ],
      "web-routes-th": [
        "Web.Routes.TH"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Aeson",
      "Data.Data",
      "Data.SafeCopy",
      "Data.Typeable",
      "GHC.Generics",
      "Text.Boomerang.TH",
      "Web.Routes",
      "Web.Routes.TH"
    ],
    "modules": [
      "Data.UserId"
    ],
    "name": "userid",
    "version": "0.1.2.7"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude"
      ],
      "blaze-html": [
        "Text.Blaze.Html"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap"
      ],
      "happstack-server": [
        "Happstack.Server"
      ],
      "jmacro": [
        "Language.Javascript.JMacro"
      ],
      "jmacro-rpc": [
        "Network.JMacroRPC.Base",
        "Network.JMacroRPC.Panels"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans",
      "Data.Aeson",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.IntMap",
      "Data.Maybe",
      "Data.Monoid",
      "Happstack.Server",
      "Language.Javascript.JMacro",
      "Network.JMacroRPC.Base",
      "Network.JMacroRPC.Panels",
      "Prelude",
      "Text.Blaze.Html"
    ],
    "modules": [
      "Network.JMacroRPC.Happstack"
    ],
    "name": "jmacro-rpc-happstack",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "asn1-encoding": [
        "Data.ASN1.BinaryEncoding",
        "Data.ASN1.Encoding"
      ],
      "asn1-types": [
        "Data.ASN1.OID",
        "Data.ASN1.Types"
      ],
      "base": [
        "Data.Bits",
        "Data.Data",
        "Data.Tuple",
        "Data.Word"
      ]
    },
    "imports": [
      "Crypto.Types.PubKey.ECC",
      "Data.ASN1.BinaryEncoding",
      "Data.ASN1.Encoding",
      "Data.ASN1.OID",
      "Data.ASN1.Types",
      "Data.Bits",
      "Data.Data",
      "Data.Tuple",
      "Data.Word"
    ],
    "modules": [
      "Crypto.Types.PubKey.RSA",
      "Crypto.Types.PubKey.DSA",
      "Crypto.Types.PubKey.DH",
      "Crypto.Types.PubKey.ECC",
      "Crypto.Types.PubKey.ECDSA"
    ],
    "name": "crypto-pubkey-types",
    "version": "0.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Numeric",
        "System.IO",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [
        "Data.Time.Calendar",
        "Data.Time.LocalTime"
      ]
    },
    "imports": [
      "Codec.Text.IConv",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Time.Calendar",
      "Data.Time.LocalTime",
      "Data.Word",
      "Graphics.ExifTags",
      "Graphics.Helpers",
      "Graphics.HsExif",
      "Graphics.PrettyPrinters",
      "Graphics.Types",
      "Numeric",
      "System.IO",
      "Test.Hspec",
      "Test.HUnit",
      "Text.Printf"
    ],
    "modules": [
      "Graphics.HsExif"
    ],
    "name": "hsexif",
    "version": "0.6.0.9"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.Instances"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.Fix",
      "Control.Monad.Instances",
      "Control.Monad.Reader.Class",
      "Control.Monad.RWS.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Except",
      "Control.Monad.Writer.Class"
    ],
    "modules": [],
    "name": "mtl-compat",
    "version": "0.2.1.3"
  },
  {
    "dependencies": {
      "base": [
        "System.Exit"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ]
    },
    "imports": [
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "System.Exit",
      "Test.HUnit",
      "Text.RawString.QQ",
      "Text.Regex.Posix"
    ],
    "modules": [
      "Text.RawString.QQ"
    ],
    "name": "raw-strings-qq",
    "version": "1.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Parser"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Data.Data",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy.Char8"
      ],
      "lens": [
        "Control.Lens",
        "Data.Text.Lens"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Lens",
      "Data.Aeson",
      "Data.Aeson.Parser",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.ByteString",
      "Data.ByteString.Lazy.Char8",
      "Data.Data",
      "Data.HashMap.Strict",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lens",
      "Data.Vector",
      "Prelude"
    ],
    "modules": [
      "Data.Aeson.Lens"
    ],
    "name": "lens-aeson",
    "version": "1.0.0.5"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.CodeCommit",
      "Test.AWS.CodeCommit",
      "Test.AWS.CodeCommit.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.CodeCommit",
      "Network.AWS.CodeCommit.BatchGetRepositories",
      "Network.AWS.CodeCommit.CreateBranch",
      "Network.AWS.CodeCommit.CreateRepository",
      "Network.AWS.CodeCommit.DeleteRepository",
      "Network.AWS.CodeCommit.GetBranch",
      "Network.AWS.CodeCommit.GetCommit",
      "Network.AWS.CodeCommit.GetRepository",
      "Network.AWS.CodeCommit.GetRepositoryTriggers",
      "Network.AWS.CodeCommit.ListBranches",
      "Network.AWS.CodeCommit.ListRepositories",
      "Network.AWS.CodeCommit.PutRepositoryTriggers",
      "Network.AWS.CodeCommit.TestRepositoryTriggers",
      "Network.AWS.CodeCommit.Types",
      "Network.AWS.CodeCommit.UpdateDefaultBranch",
      "Network.AWS.CodeCommit.UpdateRepositoryDescription",
      "Network.AWS.CodeCommit.UpdateRepositoryName",
      "Network.AWS.CodeCommit.Waiters"
    ],
    "name": "amazonka-codecommit",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Traversable"
      ],
      "containers": [],
      "mtl": [
        "Control.Monad.State"
      ]
    },
    "imports": [
      "Control.Monad.State",
      "Data.Traversable",
      "Data.Tree"
    ],
    "modules": [
      "Data.Tree.View"
    ],
    "name": "tree-view",
    "version": "0.4"
  },
  {
    "dependencies": {
      "SafeSemaphore": [
        "Control.Concurrent.MSem"
      ],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Either",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Prelude",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Reader",
        "Control.Monad.Writer"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MSem",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Catch",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.Writer",
      "Data.Either",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Time",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "System.Log.Simple.Base",
      "System.Log.Simple.Config",
      "System.Log.Simple.Console",
      "System.Log.Simple.File",
      "System.Log.Simple.Monad",
      "System.Log.Simple.Text"
    ],
    "modules": [
      "System.Log.Simple",
      "System.Log.Simple.Base",
      "System.Log.Simple.Config",
      "System.Log.Simple.Monad",
      "System.Log.Simple.Text",
      "System.Log.Simple.Console",
      "System.Log.Simple.File"
    ],
    "name": "simple-log",
    "version": "0.4.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor",
        "Data.Int",
        "Data.List",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "fixed": [
        "Numeric.Fixed"
      ],
      "half": [
        "Numeric.Half"
      ],
      "hxt": [
        "Text.XML.HXT.Core"
      ],
      "split": [],
      "transformers": [
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.State",
      "Data.Char",
      "Data.Foldable",
      "Data.Functor",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Set",
      "Data.Word",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Graphics.GL.Compatibility32",
      "Graphics.GL.Compatibility33",
      "Graphics.GL.Compatibility40",
      "Graphics.GL.Compatibility41",
      "Graphics.GL.Compatibility42",
      "Graphics.GL.Compatibility43",
      "Graphics.GL.Compatibility44",
      "Graphics.GL.Core32",
      "Graphics.GL.Core33",
      "Graphics.GL.Core40",
      "Graphics.GL.Core41",
      "Graphics.GL.Core42",
      "Graphics.GL.Core43",
      "Graphics.GL.Core44",
      "Graphics.GL.Core45",
      "Graphics.GL.Embedded20",
      "Graphics.GL.Embedded30",
      "Graphics.GL.Embedded31",
      "Graphics.GL.EmbeddedLite11",
      "Graphics.GL.Ext.AMD",
      "Graphics.GL.Ext.AMD.BlendMinmaxFactor",
      "Graphics.GL.Ext.AMD.Compressed3DCTexture",
      "Graphics.GL.Ext.AMD.CompressedATCTexture",
      "Graphics.GL.Ext.AMD.ConservativeDepth",
      "Graphics.GL.Ext.AMD.DebugOutput",
      "Graphics.GL.Ext.AMD.DepthClampSeparate",
      "Graphics.GL.Ext.AMD.DrawBuffersBlend",
      "Graphics.GL.Ext.AMD.GcnShader",
      "Graphics.GL.Ext.AMD.GpuShaderInt64",
      "Graphics.GL.Ext.AMD.InterleavedElements",
      "Graphics.GL.Ext.AMD.MultiDrawIndirect",
      "Graphics.GL.Ext.AMD.NameGenDelete",
      "Graphics.GL.Ext.AMD.OcclusionQueryEvent",
      "Graphics.GL.Ext.AMD.PerformanceMonitor",
      "Graphics.GL.Ext.AMD.PinnedMemory",
      "Graphics.GL.Ext.AMD.ProgramBinaryZ400",
      "Graphics.GL.Ext.AMD.QueryBufferObject",
      "Graphics.GL.Ext.AMD.SamplePositions",
      "Graphics.GL.Ext.AMD.SeamlessCubemapPerTexture",
      "Graphics.GL.Ext.AMD.ShaderAtomicCounterOps",
      "Graphics.GL.Ext.AMD.ShaderStencilExport",
      "Graphics.GL.Ext.AMD.ShaderTrinaryMinmax",
      "Graphics.GL.Ext.AMD.SparseTexture",
      "Graphics.GL.Ext.AMD.StencilOperationExtended",
      "Graphics.GL.Ext.AMD.TextureTexture4",
      "Graphics.GL.Ext.AMD.TransformFeedback3LinesTriangles",
      "Graphics.GL.Ext.AMD.TransformFeedback4",
      "Graphics.GL.Ext.AMD.VertexShaderLayer",
      "Graphics.GL.Ext.AMD.VertexShaderTessellator",
      "Graphics.GL.Ext.AMD.VertexShaderViewportIndex",
      "Graphics.GL.Ext.ANDROID",
      "Graphics.GL.Ext.ANDROID.ExtensionPackEs31a",
      "Graphics.GL.Ext.ANGLE",
      "Graphics.GL.Ext.ANGLE.DepthTexture",
      "Graphics.GL.Ext.ANGLE.FramebufferBlit",
      "Graphics.GL.Ext.ANGLE.FramebufferMultisample",
      "Graphics.GL.Ext.ANGLE.InstancedArrays",
      "Graphics.GL.Ext.ANGLE.PackReverseRowOrder",
      "Graphics.GL.Ext.ANGLE.ProgramBinary",
      "Graphics.GL.Ext.ANGLE.TextureCompressionDxt3",
      "Graphics.GL.Ext.ANGLE.TextureCompressionDxt5",
      "Graphics.GL.Ext.ANGLE.TextureUsage",
      "Graphics.GL.Ext.ANGLE.TranslatedShaderSource",
      "Graphics.GL.Ext.APPLE",
      "Graphics.GL.Ext.APPLE.AuxDepthStencil",
      "Graphics.GL.Ext.APPLE.ClientStorage",
      "Graphics.GL.Ext.APPLE.ClipDistance",
      "Graphics.GL.Ext.APPLE.ColorBufferPackedFloat",
      "Graphics.GL.Ext.APPLE.CopyTextureLevels",
      "Graphics.GL.Ext.APPLE.ElementArray",
      "Graphics.GL.Ext.APPLE.Fence",
      "Graphics.GL.Ext.APPLE.FloatPixels",
      "Graphics.GL.Ext.APPLE.FlushBufferRange",
      "Graphics.GL.Ext.APPLE.FramebufferMultisample",
      "Graphics.GL.Ext.APPLE.ObjectPurgeable",
      "Graphics.GL.Ext.APPLE.Rgb422",
      "Graphics.GL.Ext.APPLE.RowBytes",
      "Graphics.GL.Ext.APPLE.SpecularVector",
      "Graphics.GL.Ext.APPLE.Sync",
      "Graphics.GL.Ext.APPLE.Texture2DLimitedNpot",
      "Graphics.GL.Ext.APPLE.TextureFormatBGRA8888",
      "Graphics.GL.Ext.APPLE.TextureMaxLevel",
      "Graphics.GL.Ext.APPLE.TexturePackedFloat",
      "Graphics.GL.Ext.APPLE.TextureRange",
      "Graphics.GL.Ext.APPLE.TransformHint",
      "Graphics.GL.Ext.APPLE.VertexArrayObject",
      "Graphics.GL.Ext.APPLE.VertexArrayRange",
      "Graphics.GL.Ext.APPLE.VertexProgramEvaluators",
      "Graphics.GL.Ext.APPLE.Ycbcr422",
      "Graphics.GL.Ext.ARB",
      "Graphics.GL.Ext.ARB.ArraysOfArrays",
      "Graphics.GL.Ext.ARB.BaseInstance",
      "Graphics.GL.Ext.ARB.BindlessTexture",
      "Graphics.GL.Ext.ARB.BlendFuncExtended",
      "Graphics.GL.Ext.ARB.BufferStorage",
      "Graphics.GL.Ext.ARB.ClearBufferObject",
      "Graphics.GL.Ext.ARB.ClearTexture",
      "Graphics.GL.Ext.ARB.ClEvent",
      "Graphics.GL.Ext.ARB.ClipControl",
      "Graphics.GL.Ext.ARB.ColorBufferFloat",
      "Graphics.GL.Ext.ARB.Compatibility",
      "Graphics.GL.Ext.ARB.CompressedTexturePixelStorage",
      "Graphics.GL.Ext.ARB.ComputeShader",
      "Graphics.GL.Ext.ARB.ComputeVariableGroupSize",
      "Graphics.GL.Ext.ARB.ConditionalRenderInverted",
      "Graphics.GL.Ext.ARB.ConservativeDepth",
      "Graphics.GL.Ext.ARB.CopyBuffer",
      "Graphics.GL.Ext.ARB.CopyImage",
      "Graphics.GL.Ext.ARB.CullDistance",
      "Graphics.GL.Ext.ARB.DebugOutput",
      "Graphics.GL.Ext.ARB.DepthBufferFloat",
      "Graphics.GL.Ext.ARB.DepthClamp",
      "Graphics.GL.Ext.ARB.DepthTexture",
      "Graphics.GL.Ext.ARB.DerivativeControl",
      "Graphics.GL.Ext.ARB.DirectStateAccess",
      "Graphics.GL.Ext.ARB.DrawBuffers",
      "Graphics.GL.Ext.ARB.DrawBuffersBlend",
      "Graphics.GL.Ext.ARB.DrawElementsBaseVertex",
      "Graphics.GL.Ext.ARB.DrawIndirect",
      "Graphics.GL.Ext.ARB.DrawInstanced",
      "Graphics.GL.Ext.ARB.EnhancedLayouts",
      "Graphics.GL.Ext.ARB.ES2Compatibility",
      "Graphics.GL.Ext.ARB.ES31Compatibility",
      "Graphics.GL.Ext.ARB.ES3Compatibility",
      "Graphics.GL.Ext.ARB.ExplicitAttribLocation",
      "Graphics.GL.Ext.ARB.ExplicitUniformLocation",
      "Graphics.GL.Ext.ARB.FragmentCoordConventions",
      "Graphics.GL.Ext.ARB.FragmentLayerViewport",
      "Graphics.GL.Ext.ARB.FragmentProgram",
      "Graphics.GL.Ext.ARB.FragmentProgramShadow",
      "Graphics.GL.Ext.ARB.FragmentShader",
      "Graphics.GL.Ext.ARB.FramebufferNoAttachments",
      "Graphics.GL.Ext.ARB.FramebufferObject",
      "Graphics.GL.Ext.ARB.FramebufferSRGB",
      "Graphics.GL.Ext.ARB.GeometryShader4",
      "Graphics.GL.Ext.ARB.GetProgramBinary",
      "Graphics.GL.Ext.ARB.GetTextureSubImage",
      "Graphics.GL.Ext.ARB.GpuShader5",
      "Graphics.GL.Ext.ARB.GpuShaderFp64",
      "Graphics.GL.Ext.ARB.HalfFloatPixel",
      "Graphics.GL.Ext.ARB.HalfFloatVertex",
      "Graphics.GL.Ext.ARB.Imaging",
      "Graphics.GL.Ext.ARB.IndirectParameters",
      "Graphics.GL.Ext.ARB.InstancedArrays",
      "Graphics.GL.Ext.ARB.InternalformatQuery",
      "Graphics.GL.Ext.ARB.InternalformatQuery2",
      "Graphics.GL.Ext.ARB.InvalidateSubdata",
      "Graphics.GL.Ext.ARB.MapBufferAlignment",
      "Graphics.GL.Ext.ARB.MapBufferRange",
      "Graphics.GL.Ext.ARB.MatrixPalette",
      "Graphics.GL.Ext.ARB.MultiBind",
      "Graphics.GL.Ext.ARB.MultiDrawIndirect",
      "Graphics.GL.Ext.ARB.Multisample",
      "Graphics.GL.Ext.ARB.Multitexture",
      "Graphics.GL.Ext.ARB.OcclusionQuery",
      "Graphics.GL.Ext.ARB.OcclusionQuery2",
      "Graphics.GL.Ext.ARB.PipelineStatisticsQuery",
      "Graphics.GL.Ext.ARB.PixelBufferObject",
      "Graphics.GL.Ext.ARB.PointParameters",
      "Graphics.GL.Ext.ARB.PointSprite",
      "Graphics.GL.Ext.ARB.ProgramInterfaceQuery",
      "Graphics.GL.Ext.ARB.ProvokingVertex",
      "Graphics.GL.Ext.ARB.QueryBufferObject",
      "Graphics.GL.Ext.ARB.RobustBufferAccessBehavior",
      "Graphics.GL.Ext.ARB.Robustness",
      "Graphics.GL.Ext.ARB.RobustnessIsolation",
      "Graphics.GL.Ext.ARB.SamplerObjects",
      "Graphics.GL.Ext.ARB.SampleShading",
      "Graphics.GL.Ext.ARB.SeamlessCubeMap",
      "Graphics.GL.Ext.ARB.SeamlessCubemapPerTexture",
      "Graphics.GL.Ext.ARB.SeparateShaderObjects",
      "Graphics.GL.Ext.ARB.ShaderAtomicCounters",
      "Graphics.GL.Ext.ARB.ShaderBitEncoding",
      "Graphics.GL.Ext.ARB.ShaderDrawParameters",
      "Graphics.GL.Ext.ARB.ShaderGroupVote",
      "Graphics.GL.Ext.ARB.ShaderImageLoadStore",
      "Graphics.GL.Ext.ARB.ShaderImageSize",
      "Graphics.GL.Ext.ARB.ShaderObjects",
      "Graphics.GL.Ext.ARB.ShaderPrecision",
      "Graphics.GL.Ext.ARB.ShaderStencilExport",
      "Graphics.GL.Ext.ARB.ShaderStorageBufferObject",
      "Graphics.GL.Ext.ARB.ShaderSubroutine",
      "Graphics.GL.Ext.ARB.ShaderTextureImageSamples",
      "Graphics.GL.Ext.ARB.ShaderTextureLod",
      "Graphics.GL.Ext.ARB.ShadingLanguage100",
      "Graphics.GL.Ext.ARB.ShadingLanguage420pack",
      "Graphics.GL.Ext.ARB.ShadingLanguageInclude",
      "Graphics.GL.Ext.ARB.ShadingLanguagePacking",
      "Graphics.GL.Ext.ARB.Shadow",
      "Graphics.GL.Ext.ARB.ShadowAmbient",
      "Graphics.GL.Ext.ARB.SparseBuffer",
      "Graphics.GL.Ext.ARB.SparseTexture",
      "Graphics.GL.Ext.ARB.StencilTexturing",
      "Graphics.GL.Ext.ARB.Sync",
      "Graphics.GL.Ext.ARB.TessellationShader",
      "Graphics.GL.Ext.ARB.TextureBarrier",
      "Graphics.GL.Ext.ARB.TextureBorderClamp",
      "Graphics.GL.Ext.ARB.TextureBufferObject",
      "Graphics.GL.Ext.ARB.TextureBufferObjectRgb32",
      "Graphics.GL.Ext.ARB.TextureBufferRange",
      "Graphics.GL.Ext.ARB.TextureCompression",
      "Graphics.GL.Ext.ARB.TextureCompressionBptc",
      "Graphics.GL.Ext.ARB.TextureCompressionRgtc",
      "Graphics.GL.Ext.ARB.TextureCubeMap",
      "Graphics.GL.Ext.ARB.TextureCubeMapArray",
      "Graphics.GL.Ext.ARB.TextureEnvAdd",
      "Graphics.GL.Ext.ARB.TextureEnvCombine",
      "Graphics.GL.Ext.ARB.TextureEnvCrossbar",
      "Graphics.GL.Ext.ARB.TextureEnvDot3",
      "Graphics.GL.Ext.ARB.TextureFloat",
      "Graphics.GL.Ext.ARB.TextureGather",
      "Graphics.GL.Ext.ARB.TextureMirrorClampToEdge",
      "Graphics.GL.Ext.ARB.TextureMirroredRepeat",
      "Graphics.GL.Ext.ARB.TextureMultisample",
      "Graphics.GL.Ext.ARB.TextureNonPowerOfTwo",
      "Graphics.GL.Ext.ARB.TextureQueryLevels",
      "Graphics.GL.Ext.ARB.TextureQueryLod",
      "Graphics.GL.Ext.ARB.TextureRectangle",
      "Graphics.GL.Ext.ARB.TextureRg",
      "Graphics.GL.Ext.ARB.TextureRgb10A2ui",
      "Graphics.GL.Ext.ARB.TextureStencil8",
      "Graphics.GL.Ext.ARB.TextureStorage",
      "Graphics.GL.Ext.ARB.TextureStorageMultisample",
      "Graphics.GL.Ext.ARB.TextureSwizzle",
      "Graphics.GL.Ext.ARB.TextureView",
      "Graphics.GL.Ext.ARB.TimerQuery",
      "Graphics.GL.Ext.ARB.TransformFeedback2",
      "Graphics.GL.Ext.ARB.TransformFeedback3",
      "Graphics.GL.Ext.ARB.TransformFeedbackInstanced",
      "Graphics.GL.Ext.ARB.TransformFeedbackOverflowQuery",
      "Graphics.GL.Ext.ARB.TransposeMatrix",
      "Graphics.GL.Ext.ARB.UniformBufferObject",
      "Graphics.GL.Ext.ARB.VertexArrayBgra",
      "Graphics.GL.Ext.ARB.VertexArrayObject",
      "Graphics.GL.Ext.ARB.VertexAttrib64bit",
      "Graphics.GL.Ext.ARB.VertexAttribBinding",
      "Graphics.GL.Ext.ARB.VertexBlend",
      "Graphics.GL.Ext.ARB.VertexBufferObject",
      "Graphics.GL.Ext.ARB.VertexProgram",
      "Graphics.GL.Ext.ARB.VertexShader",
      "Graphics.GL.Ext.ARB.VertexType10f11f11fRev",
      "Graphics.GL.Ext.ARB.VertexType2101010Rev",
      "Graphics.GL.Ext.ARB.ViewportArray",
      "Graphics.GL.Ext.ARB.WindowPos",
      "Graphics.GL.Ext.ARM",
      "Graphics.GL.Ext.ARM.MaliProgramBinary",
      "Graphics.GL.Ext.ARM.MaliShaderBinary",
      "Graphics.GL.Ext.ARM.Rgba8",
      "Graphics.GL.Ext.ARM.ShaderFramebufferFetch",
      "Graphics.GL.Ext.ARM.ShaderFramebufferFetchDepthStencil",
      "Graphics.GL.Ext.ATI",
      "Graphics.GL.Ext.ATI.DrawBuffers",
      "Graphics.GL.Ext.ATI.ElementArray",
      "Graphics.GL.Ext.ATI.EnvmapBumpmap",
      "Graphics.GL.Ext.ATI.FragmentShader",
      "Graphics.GL.Ext.ATI.MapObjectBuffer",
      "Graphics.GL.Ext.ATI.Meminfo",
      "Graphics.GL.Ext.ATI.PixelFormatFloat",
      "Graphics.GL.Ext.ATI.PnTriangles",
      "Graphics.GL.Ext.ATI.SeparateStencil",
      "Graphics.GL.Ext.ATI.TextFragmentShader",
      "Graphics.GL.Ext.ATI.TextureEnvCombine3",
      "Graphics.GL.Ext.ATI.TextureFloat",
      "Graphics.GL.Ext.ATI.TextureMirrorOnce",
      "Graphics.GL.Ext.ATI.VertexArrayObject",
      "Graphics.GL.Ext.ATI.VertexAttribArrayObject",
      "Graphics.GL.Ext.ATI.VertexStreams",
      "Graphics.GL.Ext.DMP",
      "Graphics.GL.Ext.DMP.ProgramBinary",
      "Graphics.GL.Ext.DMP.ShaderBinary",
      "Graphics.GL.Ext.EXT",
      "Graphics.GL.Ext.EXT.Abgr",
      "Graphics.GL.Ext.EXT.BaseInstance",
      "Graphics.GL.Ext.EXT.Bgra",
      "Graphics.GL.Ext.EXT.BindableUniform",
      "Graphics.GL.Ext.EXT.BlendColor",
      "Graphics.GL.Ext.EXT.BlendEquationSeparate",
      "Graphics.GL.Ext.EXT.BlendFuncSeparate",
      "Graphics.GL.Ext.EXT.BlendLogicOp",
      "Graphics.GL.Ext.EXT.BlendMinmax",
      "Graphics.GL.Ext.EXT.BlendSubtract",
      "Graphics.GL.Ext.EXT.BufferStorage",
      "Graphics.GL.Ext.EXT.ClipVolumeHint",
      "Graphics.GL.Ext.EXT.Cmyka",
      "Graphics.GL.Ext.EXT.ColorBufferHalfFloat",
      "Graphics.GL.Ext.EXT.ColorSubtable",
      "Graphics.GL.Ext.EXT.CompiledVertexArray",
      "Graphics.GL.Ext.EXT.Convolution",
      "Graphics.GL.Ext.EXT.CoordinateFrame",
      "Graphics.GL.Ext.EXT.CopyImage",
      "Graphics.GL.Ext.EXT.CopyTexture",
      "Graphics.GL.Ext.EXT.CullVertex",
      "Graphics.GL.Ext.EXT.DebugLabel",
      "Graphics.GL.Ext.EXT.DebugMarker",
      "Graphics.GL.Ext.EXT.DepthBoundsTest",
      "Graphics.GL.Ext.EXT.DirectStateAccess",
      "Graphics.GL.Ext.EXT.DiscardFramebuffer",
      "Graphics.GL.Ext.EXT.DisjointTimerQuery",
      "Graphics.GL.Ext.EXT.DrawBuffers",
      "Graphics.GL.Ext.EXT.DrawBuffers2",
      "Graphics.GL.Ext.EXT.DrawBuffersIndexed",
      "Graphics.GL.Ext.EXT.DrawElementsBaseVertex",
      "Graphics.GL.Ext.EXT.DrawInstanced",
      "Graphics.GL.Ext.EXT.DrawRangeElements",
      "Graphics.GL.Ext.EXT.FloatBlend",
      "Graphics.GL.Ext.EXT.FogCoord",
      "Graphics.GL.Ext.EXT.FourTwoTwoPixels",
      "Graphics.GL.Ext.EXT.FramebufferBlit",
      "Graphics.GL.Ext.EXT.FramebufferMultisample",
      "Graphics.GL.Ext.EXT.FramebufferMultisampleBlitScaled",
      "Graphics.GL.Ext.EXT.FramebufferObject",
      "Graphics.GL.Ext.EXT.FramebufferSRGB",
      "Graphics.GL.Ext.EXT.GeometryPointSize",
      "Graphics.GL.Ext.EXT.GeometryShader",
      "Graphics.GL.Ext.EXT.GeometryShader4",
      "Graphics.GL.Ext.EXT.GpuProgramParameters",
      "Graphics.GL.Ext.EXT.GpuShader4",
      "Graphics.GL.Ext.EXT.GpuShader5",
      "Graphics.GL.Ext.EXT.Histogram",
      "Graphics.GL.Ext.EXT.IndexArrayFormats",
      "Graphics.GL.Ext.EXT.IndexFunc",
      "Graphics.GL.Ext.EXT.IndexMaterial",
      "Graphics.GL.Ext.EXT.IndexTexture",
      "Graphics.GL.Ext.EXT.InstancedArrays",
      "Graphics.GL.Ext.EXT.LightTexture",
      "Graphics.GL.Ext.EXT.MapBufferRange",
      "Graphics.GL.Ext.EXT.MiscAttribute",
      "Graphics.GL.Ext.EXT.MultiDrawArrays",
      "Graphics.GL.Ext.EXT.MultiDrawIndirect",
      "Graphics.GL.Ext.EXT.Multisample",
      "Graphics.GL.Ext.EXT.MultisampledRenderToTexture",
      "Graphics.GL.Ext.EXT.MultiviewDrawBuffers",
      "Graphics.GL.Ext.EXT.OcclusionQueryBoolean",
      "Graphics.GL.Ext.EXT.PackedDepthStencil",
      "Graphics.GL.Ext.EXT.PackedFloat",
      "Graphics.GL.Ext.EXT.PackedPixels",
      "Graphics.GL.Ext.EXT.PalettedTexture",
      "Graphics.GL.Ext.EXT.PixelBufferObject",
      "Graphics.GL.Ext.EXT.PixelTransform",
      "Graphics.GL.Ext.EXT.PixelTransformColorTable",
      "Graphics.GL.Ext.EXT.PointParameters",
      "Graphics.GL.Ext.EXT.PolygonOffset",
      "Graphics.GL.Ext.EXT.PolygonOffsetClamp",
      "Graphics.GL.Ext.EXT.PostDepthCoverage",
      "Graphics.GL.Ext.EXT.PrimitiveBoundingBox",
      "Graphics.GL.Ext.EXT.ProvokingVertex",
      "Graphics.GL.Ext.EXT.PvrtcSRGB",
      "Graphics.GL.Ext.EXT.RasterMultisample",
      "Graphics.GL.Ext.EXT.ReadFormatBgra",
      "Graphics.GL.Ext.EXT.RenderSnorm",
      "Graphics.GL.Ext.EXT.RescaleNormal",
      "Graphics.GL.Ext.EXT.Robustness",
      "Graphics.GL.Ext.EXT.SecondaryColor",
      "Graphics.GL.Ext.EXT.SeparateShaderObjects",
      "Graphics.GL.Ext.EXT.SeparateSpecularColor",
      "Graphics.GL.Ext.EXT.ShaderFramebufferFetch",
      "Graphics.GL.Ext.EXT.ShaderImageLoadFormatted",
      "Graphics.GL.Ext.EXT.ShaderImageLoadStore",
      "Graphics.GL.Ext.EXT.ShaderImplicitConversions",
      "Graphics.GL.Ext.EXT.ShaderIntegerMix",
      "Graphics.GL.Ext.EXT.ShaderIoBlocks",
      "Graphics.GL.Ext.EXT.ShaderPixelLocalStorage",
      "Graphics.GL.Ext.EXT.ShaderTextureLod",
      "Graphics.GL.Ext.EXT.ShadowFuncs",
      "Graphics.GL.Ext.EXT.ShadowSamplers",
      "Graphics.GL.Ext.EXT.SharedTexturePalette",
      "Graphics.GL.Ext.EXT.SparseTexture",
      "Graphics.GL.Ext.EXT.SparseTexture2",
      "Graphics.GL.Ext.EXT.SRGB",
      "Graphics.GL.Ext.EXT.SRGBWriteControl",
      "Graphics.GL.Ext.EXT.StencilClearTag",
      "Graphics.GL.Ext.EXT.StencilTwoSide",
      "Graphics.GL.Ext.EXT.StencilWrap",
      "Graphics.GL.Ext.EXT.Subtexture",
      "Graphics.GL.Ext.EXT.TessellationPointSize",
      "Graphics.GL.Ext.EXT.TessellationShader",
      "Graphics.GL.Ext.EXT.Texture",
      "Graphics.GL.Ext.EXT.Texture3D",
      "Graphics.GL.Ext.EXT.TextureArray",
      "Graphics.GL.Ext.EXT.TextureBorderClamp",
      "Graphics.GL.Ext.EXT.TextureBuffer",
      "Graphics.GL.Ext.EXT.TextureBufferObject",
      "Graphics.GL.Ext.EXT.TextureCompressionDxt1",
      "Graphics.GL.Ext.EXT.TextureCompressionLatc",
      "Graphics.GL.Ext.EXT.TextureCompressionRgtc",
      "Graphics.GL.Ext.EXT.TextureCompressionS3tc",
      "Graphics.GL.Ext.EXT.TextureCubeMap",
      "Graphics.GL.Ext.EXT.TextureCubeMapArray",
      "Graphics.GL.Ext.EXT.TextureEnvAdd",
      "Graphics.GL.Ext.EXT.TextureEnvCombine",
      "Graphics.GL.Ext.EXT.TextureEnvDot3",
      "Graphics.GL.Ext.EXT.TextureFilterAnisotropic",
      "Graphics.GL.Ext.EXT.TextureFilterMinmax",
      "Graphics.GL.Ext.EXT.TextureFormatBGRA8888",
      "Graphics.GL.Ext.EXT.TextureInteger",
      "Graphics.GL.Ext.EXT.TextureLodBias",
      "Graphics.GL.Ext.EXT.TextureMirrorClamp",
      "Graphics.GL.Ext.EXT.TextureNorm16",
      "Graphics.GL.Ext.EXT.TextureObject",
      "Graphics.GL.Ext.EXT.TexturePerturbNormal",
      "Graphics.GL.Ext.EXT.TextureRg",
      "Graphics.GL.Ext.EXT.TextureSharedExponent",
      "Graphics.GL.Ext.EXT.TextureSnorm",
      "Graphics.GL.Ext.EXT.TextureSRGB",
      "Graphics.GL.Ext.EXT.TextureSRGBDecode",
      "Graphics.GL.Ext.EXT.TextureSRGBR8",
      "Graphics.GL.Ext.EXT.TextureSRGBRG8",
      "Graphics.GL.Ext.EXT.TextureStorage",
      "Graphics.GL.Ext.EXT.TextureSwizzle",
      "Graphics.GL.Ext.EXT.TextureType2101010REV",
      "Graphics.GL.Ext.EXT.TextureView",
      "Graphics.GL.Ext.EXT.TimerQuery",
      "Graphics.GL.Ext.EXT.TransformFeedback",
      "Graphics.GL.Ext.EXT.UnpackSubimage",
      "Graphics.GL.Ext.EXT.VertexArray",
      "Graphics.GL.Ext.EXT.VertexArrayBgra",
      "Graphics.GL.Ext.EXT.VertexAttrib64bit",
      "Graphics.GL.Ext.EXT.VertexShader",
      "Graphics.GL.Ext.EXT.VertexWeighting",
      "Graphics.GL.Ext.EXT.X11SyncObject",
      "Graphics.GL.Ext.EXT.YUVTarget",
      "Graphics.GL.Ext.FJ",
      "Graphics.GL.Ext.FJ.ShaderBinaryGCCSO",
      "Graphics.GL.Ext.GREMEDY",
      "Graphics.GL.Ext.GREMEDY.FrameTerminator",
      "Graphics.GL.Ext.GREMEDY.StringMarker",
      "Graphics.GL.Ext.HP",
      "Graphics.GL.Ext.HP.ConvolutionBorderModes",
      "Graphics.GL.Ext.HP.ImageTransform",
      "Graphics.GL.Ext.HP.OcclusionTest",
      "Graphics.GL.Ext.HP.TextureLighting",
      "Graphics.GL.Ext.IBM",
      "Graphics.GL.Ext.IBM.CullVertex",
      "Graphics.GL.Ext.IBM.MultimodeDrawArrays",
      "Graphics.GL.Ext.IBM.RasterposClip",
      "Graphics.GL.Ext.IBM.StaticData",
      "Graphics.GL.Ext.IBM.TextureMirroredRepeat",
      "Graphics.GL.Ext.IBM.VertexArrayLists",
      "Graphics.GL.Ext.IMG",
      "Graphics.GL.Ext.IMG.MultisampledRenderToTexture",
      "Graphics.GL.Ext.IMG.ProgramBinary",
      "Graphics.GL.Ext.IMG.ReadFormat",
      "Graphics.GL.Ext.IMG.ShaderBinary",
      "Graphics.GL.Ext.IMG.TextureCompressionPvrtc",
      "Graphics.GL.Ext.IMG.TextureCompressionPvrtc2",
      "Graphics.GL.Ext.IMG.TextureEnvEnhancedFixedFunction",
      "Graphics.GL.Ext.IMG.UserClipPlane",
      "Graphics.GL.Ext.INGR",
      "Graphics.GL.Ext.INGR.BlendFuncSeparate",
      "Graphics.GL.Ext.INGR.ColorClamp",
      "Graphics.GL.Ext.INGR.InterlaceRead",
      "Graphics.GL.Ext.INTEL",
      "Graphics.GL.Ext.INTEL.FragmentShaderOrdering",
      "Graphics.GL.Ext.INTEL.MapTexture",
      "Graphics.GL.Ext.INTEL.ParallelArrays",
      "Graphics.GL.Ext.INTEL.PerformanceQuery",
      "Graphics.GL.Ext.KHR",
      "Graphics.GL.Ext.KHR.BlendEquationAdvanced",
      "Graphics.GL.Ext.KHR.BlendEquationAdvancedCoherent",
      "Graphics.GL.Ext.KHR.ContextFlushControl",
      "Graphics.GL.Ext.KHR.Debug",
      "Graphics.GL.Ext.KHR.NoError",
      "Graphics.GL.Ext.KHR.RobustBufferAccessBehavior",
      "Graphics.GL.Ext.KHR.Robustness",
      "Graphics.GL.Ext.KHR.TextureCompressionAstcHdr",
      "Graphics.GL.Ext.KHR.TextureCompressionAstcLdr",
      "Graphics.GL.Ext.MESA",
      "Graphics.GL.Ext.MESA.PackInvert",
      "Graphics.GL.Ext.MESA.ResizeBuffers",
      "Graphics.GL.Ext.MESA.WindowPos",
      "Graphics.GL.Ext.MESAX",
      "Graphics.GL.Ext.MESAX.TextureStack",
      "Graphics.GL.Ext.MESA.YcbcrTexture",
      "Graphics.GL.Ext.NV",
      "Graphics.GL.Ext.NV.BindlessMultiDrawIndirect",
      "Graphics.GL.Ext.NV.BindlessMultiDrawIndirectCount",
      "Graphics.GL.Ext.NV.BindlessTexture",
      "Graphics.GL.Ext.NV.BlendEquationAdvanced",
      "Graphics.GL.Ext.NV.BlendEquationAdvancedCoherent",
      "Graphics.GL.Ext.NV.BlendSquare",
      "Graphics.GL.Ext.NV.CommandList",
      "Graphics.GL.Ext.NV.ComputeProgram5",
      "Graphics.GL.Ext.NV.ConditionalRender",
      "Graphics.GL.Ext.NV.ConservativeRaster",
      "Graphics.GL.Ext.NV.CopyBuffer",
      "Graphics.GL.Ext.NV.CopyDepthToColor",
      "Graphics.GL.Ext.NV.CopyImage",
      "Graphics.GL.Ext.NV.CoverageSample",
      "Graphics.GL.Ext.NV.DeepTexture3D",
      "Graphics.GL.Ext.NV.DepthBufferFloat",
      "Graphics.GL.Ext.NV.DepthClamp",
      "Graphics.GL.Ext.NV.DepthNonlinear",
      "Graphics.GL.Ext.NV.DrawBuffers",
      "Graphics.GL.Ext.NV.DrawInstanced",
      "Graphics.GL.Ext.NV.DrawTexture",
      "Graphics.GL.Ext.NV.Evaluators",
      "Graphics.GL.Ext.NV.ExplicitAttribLocation",
      "Graphics.GL.Ext.NV.ExplicitMultisample",
      "Graphics.GL.Ext.NV.FboColorAttachments",
      "Graphics.GL.Ext.NV.Fence",
      "Graphics.GL.Ext.NV.FillRectangle",
      "Graphics.GL.Ext.NV.FloatBuffer",
      "Graphics.GL.Ext.NV.FogDistance",
      "Graphics.GL.Ext.NV.FragmentCoverageToColor",
      "Graphics.GL.Ext.NV.FragmentProgram",
      "Graphics.GL.Ext.NV.FragmentProgram2",
      "Graphics.GL.Ext.NV.FragmentProgram4",
      "Graphics.GL.Ext.NV.FragmentProgramOption",
      "Graphics.GL.Ext.NV.FragmentShaderInterlock",
      "Graphics.GL.Ext.NV.FramebufferBlit",
      "Graphics.GL.Ext.NV.FramebufferMixedSamples",
      "Graphics.GL.Ext.NV.FramebufferMultisample",
      "Graphics.GL.Ext.NV.FramebufferMultisampleCoverage",
      "Graphics.GL.Ext.NV.GenerateMipmapSRGB",
      "Graphics.GL.Ext.NV.GeometryProgram4",
      "Graphics.GL.Ext.NV.GeometryShader4",
      "Graphics.GL.Ext.NV.GeometryShaderPassthrough",
      "Graphics.GL.Ext.NV.GpuProgram4",
      "Graphics.GL.Ext.NV.GpuProgram5",
      "Graphics.GL.Ext.NV.GpuProgram5MemExtended",
      "Graphics.GL.Ext.NV.GpuShader5",
      "Graphics.GL.Ext.NV.HalfFloat",
      "Graphics.GL.Ext.NV.ImageFormats",
      "Graphics.GL.Ext.NV.InstancedArrays",
      "Graphics.GL.Ext.NV.InternalformatSampleQuery",
      "Graphics.GL.Ext.NV.LightMaxExponent",
      "Graphics.GL.Ext.NV.MultisampleCoverage",
      "Graphics.GL.Ext.NV.MultisampleFilterHint",
      "Graphics.GL.Ext.NV.NonSquareMatrices",
      "Graphics.GL.Ext.NV.OcclusionQuery",
      "Graphics.GL.Ext.NV.PackedDepthStencil",
      "Graphics.GL.Ext.NV.ParameterBufferObject",
      "Graphics.GL.Ext.NV.ParameterBufferObject2",
      "Graphics.GL.Ext.NV.PathRendering",
      "Graphics.GL.Ext.NV.PathRenderingSharedEdge",
      "Graphics.GL.Ext.NV.PixelDataRange",
      "Graphics.GL.Ext.NV.PointSprite",
      "Graphics.GL.Ext.NV.PolygonMode",
      "Graphics.GL.Ext.NV.PresentVideo",
      "Graphics.GL.Ext.NV.PrimitiveRestart",
      "Graphics.GL.Ext.NV.ReadBuffer",
      "Graphics.GL.Ext.NV.ReadBufferFront",
      "Graphics.GL.Ext.NV.ReadDepth",
      "Graphics.GL.Ext.NV.ReadDepthStencil",
      "Graphics.GL.Ext.NV.ReadStencil",
      "Graphics.GL.Ext.NV.RegisterCombiners",
      "Graphics.GL.Ext.NV.RegisterCombiners2",
      "Graphics.GL.Ext.NV.SampleLocations",
      "Graphics.GL.Ext.NV.SampleMaskOverrideCoverage",
      "Graphics.GL.Ext.NV.ShaderAtomicCounters",
      "Graphics.GL.Ext.NV.ShaderAtomicFloat",
      "Graphics.GL.Ext.NV.ShaderAtomicFp16Vector",
      "Graphics.GL.Ext.NV.ShaderAtomicInt64",
      "Graphics.GL.Ext.NV.ShaderBufferLoad",
      "Graphics.GL.Ext.NV.ShaderBufferStore",
      "Graphics.GL.Ext.NV.ShaderNoperspectiveInterpolation",
      "Graphics.GL.Ext.NV.ShaderStorageBufferObject",
      "Graphics.GL.Ext.NV.ShaderThreadGroup",
      "Graphics.GL.Ext.NV.ShaderThreadShuffle",
      "Graphics.GL.Ext.NV.ShadowSamplersArray",
      "Graphics.GL.Ext.NV.ShadowSamplersCube",
      "Graphics.GL.Ext.NV.SRGBFormats",
      "Graphics.GL.Ext.NV.TessellationProgram5",
      "Graphics.GL.Ext.NV.TexgenEmboss",
      "Graphics.GL.Ext.NV.TexgenReflection",
      "Graphics.GL.Ext.NV.TextureBarrier",
      "Graphics.GL.Ext.NV.TextureBorderClamp",
      "Graphics.GL.Ext.NV.TextureCompressionS3tcUpdate",
      "Graphics.GL.Ext.NV.TextureCompressionVtc",
      "Graphics.GL.Ext.NV.TextureEnvCombine4",
      "Graphics.GL.Ext.NV.TextureExpandNormal",
      "Graphics.GL.Ext.NV.TextureMultisample",
      "Graphics.GL.Ext.NV.TextureNpot2DMipmap",
      "Graphics.GL.Ext.NV.TextureRectangle",
      "Graphics.GL.Ext.NV.TextureShader",
      "Graphics.GL.Ext.NV.TextureShader2",
      "Graphics.GL.Ext.NV.TextureShader3",
      "Graphics.GL.Ext.NV.TransformFeedback",
      "Graphics.GL.Ext.NV.TransformFeedback2",
      "Graphics.GL.Ext.NV.UniformBufferUnifiedMemory",
      "Graphics.GL.Ext.NV.VdpauInterop",
      "Graphics.GL.Ext.NV.VertexArrayRange",
      "Graphics.GL.Ext.NV.VertexArrayRange2",
      "Graphics.GL.Ext.NV.VertexAttribInteger64bit",
      "Graphics.GL.Ext.NV.VertexBufferUnifiedMemory",
      "Graphics.GL.Ext.NV.VertexProgram",
      "Graphics.GL.Ext.NV.VertexProgram11",
      "Graphics.GL.Ext.NV.VertexProgram2",
      "Graphics.GL.Ext.NV.VertexProgram2Option",
      "Graphics.GL.Ext.NV.VertexProgram3",
      "Graphics.GL.Ext.NV.VertexProgram4",
      "Graphics.GL.Ext.NV.VideoCapture",
      "Graphics.GL.Ext.NV.ViewportArray",
      "Graphics.GL.Ext.NV.ViewportArray2",
      "Graphics.GL.Ext.NVX",
      "Graphics.GL.Ext.NVX.ConditionalRender",
      "Graphics.GL.Ext.NVX.GpuMemoryInfo",
      "Graphics.GL.Ext.OES",
      "Graphics.GL.Ext.OES.BlendEquationSeparate",
      "Graphics.GL.Ext.OES.BlendFuncSeparate",
      "Graphics.GL.Ext.OES.BlendSubtract",
      "Graphics.GL.Ext.OES.ByteCoordinates",
      "Graphics.GL.Ext.OES.CompressedETC1RGB8SubTexture",
      "Graphics.GL.Ext.OES.CompressedETC1RGB8Texture",
      "Graphics.GL.Ext.OES.CompressedPalettedTexture",
      "Graphics.GL.Ext.OES.CopyImage",
      "Graphics.GL.Ext.OES.Depth24",
      "Graphics.GL.Ext.OES.Depth32",
      "Graphics.GL.Ext.OES.DepthTexture",
      "Graphics.GL.Ext.OES.DrawBuffersIndexed",
      "Graphics.GL.Ext.OES.DrawElementsBaseVertex",
      "Graphics.GL.Ext.OES.DrawTexture",
      "Graphics.GL.Ext.OES.EGLImage",
      "Graphics.GL.Ext.OES.EGLImageExternal",
      "Graphics.GL.Ext.OES.EGLImageExternalEssl3",
      "Graphics.GL.Ext.OES.ElementIndexUint",
      "Graphics.GL.Ext.OES.ExtendedMatrixPalette",
      "Graphics.GL.Ext.OES.FboRenderMipmap",
      "Graphics.GL.Ext.OES.FixedPoint",
      "Graphics.GL.Ext.OES.FragmentPrecisionHigh",
      "Graphics.GL.Ext.OES.FramebufferObject",
      "Graphics.GL.Ext.OES.GeometryPointSize",
      "Graphics.GL.Ext.OES.GeometryShader",
      "Graphics.GL.Ext.OES.GetProgramBinary",
      "Graphics.GL.Ext.OES.GpuShader5",
      "Graphics.GL.Ext.OES.Mapbuffer",
      "Graphics.GL.Ext.OES.MatrixGet",
      "Graphics.GL.Ext.OES.MatrixPalette",
      "Graphics.GL.Ext.OES.PackedDepthStencil",
      "Graphics.GL.Ext.OES.PointSizeArray",
      "Graphics.GL.Ext.OES.PointSprite",
      "Graphics.GL.Ext.OES.PrimitiveBoundingBox",
      "Graphics.GL.Ext.OES.QueryMatrix",
      "Graphics.GL.Ext.OES.ReadFormat",
      "Graphics.GL.Ext.OES.RequiredInternalformat",
      "Graphics.GL.Ext.OES.Rgb8Rgba8",
      "Graphics.GL.Ext.OES.SampleShading",
      "Graphics.GL.Ext.OES.SampleVariables",
      "Graphics.GL.Ext.OES.ShaderImageAtomic",
      "Graphics.GL.Ext.OES.ShaderIoBlocks",
      "Graphics.GL.Ext.OES.ShaderMultisampleInterpolation",
      "Graphics.GL.Ext.OES.SinglePrecision",
      "Graphics.GL.Ext.OES.StandardDerivatives",
      "Graphics.GL.Ext.OES.Stencil1",
      "Graphics.GL.Ext.OES.Stencil4",
      "Graphics.GL.Ext.OES.Stencil8",
      "Graphics.GL.Ext.OES.StencilWrap",
      "Graphics.GL.Ext.OES.SurfacelessContext",
      "Graphics.GL.Ext.OES.TessellationPointSize",
      "Graphics.GL.Ext.OES.TessellationShader",
      "Graphics.GL.Ext.OES.Texture3D",
      "Graphics.GL.Ext.OES.TextureBorderClamp",
      "Graphics.GL.Ext.OES.TextureBuffer",
      "Graphics.GL.Ext.OES.TextureCompressionAstc",
      "Graphics.GL.Ext.OES.TextureCubeMap",
      "Graphics.GL.Ext.OES.TextureCubeMapArray",
      "Graphics.GL.Ext.OES.TextureEnvCrossbar",
      "Graphics.GL.Ext.OES.TextureFloat",
      "Graphics.GL.Ext.OES.TextureFloatLinear",
      "Graphics.GL.Ext.OES.TextureHalfFloat",
      "Graphics.GL.Ext.OES.TextureHalfFloatLinear",
      "Graphics.GL.Ext.OES.TextureMirroredRepeat",
      "Graphics.GL.Ext.OES.TextureNpot",
      "Graphics.GL.Ext.OES.TextureStencil8",
      "Graphics.GL.Ext.OES.TextureStorageMultisample2dArray",
      "Graphics.GL.Ext.OES.TextureView",
      "Graphics.GL.Ext.OES.VertexArrayObject",
      "Graphics.GL.Ext.OES.VertexHalfFloat",
      "Graphics.GL.Ext.OES.VertexType1010102",
      "Graphics.GL.Ext.OML",
      "Graphics.GL.Ext.OML.Interlace",
      "Graphics.GL.Ext.OML.Resample",
      "Graphics.GL.Ext.OML.Subsample",
      "Graphics.GL.Ext.OVR",
      "Graphics.GL.Ext.OVR.Multiview",
      "Graphics.GL.Ext.OVR.Multiview2",
      "Graphics.GL.Ext.PGI",
      "Graphics.GL.Ext.PGI.MiscHints",
      "Graphics.GL.Ext.PGI.VertexHints",
      "Graphics.GL.Ext.QCOM",
      "Graphics.GL.Ext.QCOM.AlphaTest",
      "Graphics.GL.Ext.QCOM.BinningControl",
      "Graphics.GL.Ext.QCOM.DriverControl",
      "Graphics.GL.Ext.QCOM.ExtendedGet",
      "Graphics.GL.Ext.QCOM.ExtendedGet2",
      "Graphics.GL.Ext.QCOM.PerfmonGlobalMode",
      "Graphics.GL.Ext.QCOM.TiledRendering",
      "Graphics.GL.Ext.QCOM.WriteonlyRendering",
      "Graphics.GL.Ext.REND",
      "Graphics.GL.Ext.REND.ScreenCoordinates",
      "Graphics.GL.Ext.S3",
      "Graphics.GL.Ext.S3.S3tc",
      "Graphics.GL.Ext.SGI",
      "Graphics.GL.Ext.SGI.ColorMatrix",
      "Graphics.GL.Ext.SGI.ColorTable",
      "Graphics.GL.Ext.SGIS",
      "Graphics.GL.Ext.SGIS.DetailTexture",
      "Graphics.GL.Ext.SGIS.FogFunction",
      "Graphics.GL.Ext.SGIS.GenerateMipmap",
      "Graphics.GL.Ext.SGIS.Multisample",
      "Graphics.GL.Ext.SGIS.PixelTexture",
      "Graphics.GL.Ext.SGIS.PointLineTexgen",
      "Graphics.GL.Ext.SGIS.PointParameters",
      "Graphics.GL.Ext.SGIS.SharpenTexture",
      "Graphics.GL.Ext.SGIS.Texture4D",
      "Graphics.GL.Ext.SGIS.TextureBorderClamp",
      "Graphics.GL.Ext.SGIS.TextureColorMask",
      "Graphics.GL.Ext.SGIS.TextureEdgeClamp",
      "Graphics.GL.Ext.SGIS.TextureFilter4",
      "Graphics.GL.Ext.SGIS.TextureLod",
      "Graphics.GL.Ext.SGIS.TextureSelect",
      "Graphics.GL.Ext.SGI.TextureColorTable",
      "Graphics.GL.Ext.SGIX",
      "Graphics.GL.Ext.SGIX.Async",
      "Graphics.GL.Ext.SGIX.AsyncHistogram",
      "Graphics.GL.Ext.SGIX.AsyncPixel",
      "Graphics.GL.Ext.SGIX.BlendAlphaMinmax",
      "Graphics.GL.Ext.SGIX.CalligraphicFragment",
      "Graphics.GL.Ext.SGIX.Clipmap",
      "Graphics.GL.Ext.SGIX.ConvolutionAccuracy",
      "Graphics.GL.Ext.SGIX.DepthPassInstrument",
      "Graphics.GL.Ext.SGIX.DepthTexture",
      "Graphics.GL.Ext.SGIX.FlushRaster",
      "Graphics.GL.Ext.SGIX.FogOffset",
      "Graphics.GL.Ext.SGIX.FragmentLighting",
      "Graphics.GL.Ext.SGIX.Framezoom",
      "Graphics.GL.Ext.SGIX.IglooInterface",
      "Graphics.GL.Ext.SGIX.Instruments",
      "Graphics.GL.Ext.SGIX.Interlace",
      "Graphics.GL.Ext.SGIX.IrInstrument1",
      "Graphics.GL.Ext.SGIX.ListPriority",
      "Graphics.GL.Ext.SGIX.PixelTexture",
      "Graphics.GL.Ext.SGIX.PixelTiles",
      "Graphics.GL.Ext.SGIX.PolynomialFfd",
      "Graphics.GL.Ext.SGIX.ReferencePlane",
      "Graphics.GL.Ext.SGIX.Resample",
      "Graphics.GL.Ext.SGIX.ScalebiasHint",
      "Graphics.GL.Ext.SGIX.Shadow",
      "Graphics.GL.Ext.SGIX.ShadowAmbient",
      "Graphics.GL.Ext.SGIX.Sprite",
      "Graphics.GL.Ext.SGIX.Subsample",
      "Graphics.GL.Ext.SGIX.TagSampleBuffer",
      "Graphics.GL.Ext.SGIX.TextureAddEnv",
      "Graphics.GL.Ext.SGIX.TextureCoordinateClamp",
      "Graphics.GL.Ext.SGIX.TextureLodBias",
      "Graphics.GL.Ext.SGIX.TextureMultiBuffer",
      "Graphics.GL.Ext.SGIX.TextureScaleBias",
      "Graphics.GL.Ext.SGIX.VertexPreclip",
      "Graphics.GL.Ext.SGIX.Ycrcb",
      "Graphics.GL.Ext.SGIX.Ycrcba",
      "Graphics.GL.Ext.SGIX.YcrcbSubsample",
      "Graphics.GL.Ext.SUN",
      "Graphics.GL.Ext.SUN.ConvolutionBorderModes",
      "Graphics.GL.Ext.SUN.GlobalAlpha",
      "Graphics.GL.Ext.SUN.MeshArray",
      "Graphics.GL.Ext.SUN.SliceAccum",
      "Graphics.GL.Ext.SUN.TriangleList",
      "Graphics.GL.Ext.SUN.Vertex",
      "Graphics.GL.Ext.SUNX",
      "Graphics.GL.Ext.SUNX.ConstantData",
      "Graphics.GL.Ext.ThreeDFX",
      "Graphics.GL.Ext.ThreeDFX.Multisample",
      "Graphics.GL.Ext.ThreeDFX.Tbuffer",
      "Graphics.GL.Ext.ThreeDFX.TextureCompressionFXT1",
      "Graphics.GL.Ext.VIV",
      "Graphics.GL.Ext.VIV.ShaderBinary",
      "Graphics.GL.Ext.WIN",
      "Graphics.GL.Ext.WIN.PhongShading",
      "Graphics.GL.Ext.WIN.SpecularFog",
      "Graphics.GL.Internal.FFI",
      "Graphics.GL.Internal.Proc",
      "Graphics.GL.Internal.Shared",
      "Graphics.GL.Standard10",
      "Graphics.GL.Standard11",
      "Graphics.GL.Standard12",
      "Graphics.GL.Standard13",
      "Graphics.GL.Standard14",
      "Graphics.GL.Standard15",
      "Graphics.GL.Standard20",
      "Graphics.GL.Standard21",
      "Graphics.GL.Standard30",
      "Graphics.GL.Types",
      "Module",
      "Numeric.Fixed",
      "Numeric.Half",
      "Prelude",
      "Registry",
      "System.Directory",
      "System.FilePath",
      "System.IO.Unsafe",
      "Text.Printf",
      "Text.XML.HXT.Core",
      "Utils"
    ],
    "modules": [
      "Graphics.GL",
      "Graphics.GL.Compatibility32",
      "Graphics.GL.Compatibility33",
      "Graphics.GL.Compatibility40",
      "Graphics.GL.Compatibility41",
      "Graphics.GL.Compatibility42",
      "Graphics.GL.Compatibility43",
      "Graphics.GL.Compatibility44",
      "Graphics.GL.Compatibility45",
      "Graphics.GL.Core32",
      "Graphics.GL.Core33",
      "Graphics.GL.Core40",
      "Graphics.GL.Core41",
      "Graphics.GL.Core42",
      "Graphics.GL.Core43",
      "Graphics.GL.Core44",
      "Graphics.GL.Core45",
      "Graphics.GL.Embedded20",
      "Graphics.GL.Embedded30",
      "Graphics.GL.Embedded31",
      "Graphics.GL.EmbeddedCommon11",
      "Graphics.GL.EmbeddedLite11",
      "Graphics.GL.Ext",
      "Graphics.GL.Ext.AMD",
      "Graphics.GL.Ext.AMD.BlendMinmaxFactor",
      "Graphics.GL.Ext.AMD.Compressed3DCTexture",
      "Graphics.GL.Ext.AMD.CompressedATCTexture",
      "Graphics.GL.Ext.AMD.ConservativeDepth",
      "Graphics.GL.Ext.AMD.DebugOutput",
      "Graphics.GL.Ext.AMD.DepthClampSeparate",
      "Graphics.GL.Ext.AMD.DrawBuffersBlend",
      "Graphics.GL.Ext.AMD.GcnShader",
      "Graphics.GL.Ext.AMD.GpuShaderInt64",
      "Graphics.GL.Ext.AMD.InterleavedElements",
      "Graphics.GL.Ext.AMD.MultiDrawIndirect",
      "Graphics.GL.Ext.AMD.NameGenDelete",
      "Graphics.GL.Ext.AMD.OcclusionQueryEvent",
      "Graphics.GL.Ext.AMD.PerformanceMonitor",
      "Graphics.GL.Ext.AMD.PinnedMemory",
      "Graphics.GL.Ext.AMD.ProgramBinaryZ400",
      "Graphics.GL.Ext.AMD.QueryBufferObject",
      "Graphics.GL.Ext.AMD.SamplePositions",
      "Graphics.GL.Ext.AMD.SeamlessCubemapPerTexture",
      "Graphics.GL.Ext.AMD.ShaderAtomicCounterOps",
      "Graphics.GL.Ext.AMD.ShaderStencilExport",
      "Graphics.GL.Ext.AMD.ShaderTrinaryMinmax",
      "Graphics.GL.Ext.AMD.SparseTexture",
      "Graphics.GL.Ext.AMD.StencilOperationExtended",
      "Graphics.GL.Ext.AMD.TextureTexture4",
      "Graphics.GL.Ext.AMD.TransformFeedback3LinesTriangles",
      "Graphics.GL.Ext.AMD.TransformFeedback4",
      "Graphics.GL.Ext.AMD.VertexShaderLayer",
      "Graphics.GL.Ext.AMD.VertexShaderTessellator",
      "Graphics.GL.Ext.AMD.VertexShaderViewportIndex",
      "Graphics.GL.Ext.ANDROID",
      "Graphics.GL.Ext.ANDROID.ExtensionPackEs31a",
      "Graphics.GL.Ext.ANGLE",
      "Graphics.GL.Ext.ANGLE.DepthTexture",
      "Graphics.GL.Ext.ANGLE.FramebufferBlit",
      "Graphics.GL.Ext.ANGLE.FramebufferMultisample",
      "Graphics.GL.Ext.ANGLE.InstancedArrays",
      "Graphics.GL.Ext.ANGLE.PackReverseRowOrder",
      "Graphics.GL.Ext.ANGLE.ProgramBinary",
      "Graphics.GL.Ext.ANGLE.TextureCompressionDxt3",
      "Graphics.GL.Ext.ANGLE.TextureCompressionDxt5",
      "Graphics.GL.Ext.ANGLE.TextureUsage",
      "Graphics.GL.Ext.ANGLE.TranslatedShaderSource",
      "Graphics.GL.Ext.APPLE",
      "Graphics.GL.Ext.APPLE.AuxDepthStencil",
      "Graphics.GL.Ext.APPLE.ClientStorage",
      "Graphics.GL.Ext.APPLE.ClipDistance",
      "Graphics.GL.Ext.APPLE.ColorBufferPackedFloat",
      "Graphics.GL.Ext.APPLE.CopyTextureLevels",
      "Graphics.GL.Ext.APPLE.ElementArray",
      "Graphics.GL.Ext.APPLE.Fence",
      "Graphics.GL.Ext.APPLE.FloatPixels",
      "Graphics.GL.Ext.APPLE.FlushBufferRange",
      "Graphics.GL.Ext.APPLE.FramebufferMultisample",
      "Graphics.GL.Ext.APPLE.ObjectPurgeable",
      "Graphics.GL.Ext.APPLE.Rgb422",
      "Graphics.GL.Ext.APPLE.RowBytes",
      "Graphics.GL.Ext.APPLE.SpecularVector",
      "Graphics.GL.Ext.APPLE.Sync",
      "Graphics.GL.Ext.APPLE.Texture2DLimitedNpot",
      "Graphics.GL.Ext.APPLE.TextureFormatBGRA8888",
      "Graphics.GL.Ext.APPLE.TextureMaxLevel",
      "Graphics.GL.Ext.APPLE.TexturePackedFloat",
      "Graphics.GL.Ext.APPLE.TextureRange",
      "Graphics.GL.Ext.APPLE.TransformHint",
      "Graphics.GL.Ext.APPLE.VertexArrayObject",
      "Graphics.GL.Ext.APPLE.VertexArrayRange",
      "Graphics.GL.Ext.APPLE.VertexProgramEvaluators",
      "Graphics.GL.Ext.APPLE.Ycbcr422",
      "Graphics.GL.Ext.ARB",
      "Graphics.GL.Ext.ARB.ArraysOfArrays",
      "Graphics.GL.Ext.ARB.BaseInstance",
      "Graphics.GL.Ext.ARB.BindlessTexture",
      "Graphics.GL.Ext.ARB.BlendFuncExtended",
      "Graphics.GL.Ext.ARB.BufferStorage",
      "Graphics.GL.Ext.ARB.ClEvent",
      "Graphics.GL.Ext.ARB.ClearBufferObject",
      "Graphics.GL.Ext.ARB.ClearTexture",
      "Graphics.GL.Ext.ARB.ClipControl",
      "Graphics.GL.Ext.ARB.ColorBufferFloat",
      "Graphics.GL.Ext.ARB.Compatibility",
      "Graphics.GL.Ext.ARB.CompressedTexturePixelStorage",
      "Graphics.GL.Ext.ARB.ComputeShader",
      "Graphics.GL.Ext.ARB.ComputeVariableGroupSize",
      "Graphics.GL.Ext.ARB.ConditionalRenderInverted",
      "Graphics.GL.Ext.ARB.ConservativeDepth",
      "Graphics.GL.Ext.ARB.CopyBuffer",
      "Graphics.GL.Ext.ARB.CopyImage",
      "Graphics.GL.Ext.ARB.CullDistance",
      "Graphics.GL.Ext.ARB.DebugOutput",
      "Graphics.GL.Ext.ARB.DepthBufferFloat",
      "Graphics.GL.Ext.ARB.DepthClamp",
      "Graphics.GL.Ext.ARB.DepthTexture",
      "Graphics.GL.Ext.ARB.DerivativeControl",
      "Graphics.GL.Ext.ARB.DirectStateAccess",
      "Graphics.GL.Ext.ARB.DrawBuffers",
      "Graphics.GL.Ext.ARB.DrawBuffersBlend",
      "Graphics.GL.Ext.ARB.DrawElementsBaseVertex",
      "Graphics.GL.Ext.ARB.DrawIndirect",
      "Graphics.GL.Ext.ARB.DrawInstanced",
      "Graphics.GL.Ext.ARB.ES2Compatibility",
      "Graphics.GL.Ext.ARB.ES31Compatibility",
      "Graphics.GL.Ext.ARB.ES3Compatibility",
      "Graphics.GL.Ext.ARB.EnhancedLayouts",
      "Graphics.GL.Ext.ARB.ExplicitAttribLocation",
      "Graphics.GL.Ext.ARB.ExplicitUniformLocation",
      "Graphics.GL.Ext.ARB.FragmentCoordConventions",
      "Graphics.GL.Ext.ARB.FragmentLayerViewport",
      "Graphics.GL.Ext.ARB.FragmentProgram",
      "Graphics.GL.Ext.ARB.FragmentProgramShadow",
      "Graphics.GL.Ext.ARB.FragmentShader",
      "Graphics.GL.Ext.ARB.FramebufferNoAttachments",
      "Graphics.GL.Ext.ARB.FramebufferObject",
      "Graphics.GL.Ext.ARB.FramebufferSRGB",
      "Graphics.GL.Ext.ARB.GeometryShader4",
      "Graphics.GL.Ext.ARB.GetProgramBinary",
      "Graphics.GL.Ext.ARB.GetTextureSubImage",
      "Graphics.GL.Ext.ARB.GpuShader5",
      "Graphics.GL.Ext.ARB.GpuShaderFp64",
      "Graphics.GL.Ext.ARB.HalfFloatPixel",
      "Graphics.GL.Ext.ARB.HalfFloatVertex",
      "Graphics.GL.Ext.ARB.Imaging",
      "Graphics.GL.Ext.ARB.IndirectParameters",
      "Graphics.GL.Ext.ARB.InstancedArrays",
      "Graphics.GL.Ext.ARB.InternalformatQuery",
      "Graphics.GL.Ext.ARB.InternalformatQuery2",
      "Graphics.GL.Ext.ARB.InvalidateSubdata",
      "Graphics.GL.Ext.ARB.MapBufferAlignment",
      "Graphics.GL.Ext.ARB.MapBufferRange",
      "Graphics.GL.Ext.ARB.MatrixPalette",
      "Graphics.GL.Ext.ARB.MultiBind",
      "Graphics.GL.Ext.ARB.MultiDrawIndirect",
      "Graphics.GL.Ext.ARB.Multisample",
      "Graphics.GL.Ext.ARB.Multitexture",
      "Graphics.GL.Ext.ARB.OcclusionQuery",
      "Graphics.GL.Ext.ARB.OcclusionQuery2",
      "Graphics.GL.Ext.ARB.PipelineStatisticsQuery",
      "Graphics.GL.Ext.ARB.PixelBufferObject",
      "Graphics.GL.Ext.ARB.PointParameters",
      "Graphics.GL.Ext.ARB.PointSprite",
      "Graphics.GL.Ext.ARB.ProgramInterfaceQuery",
      "Graphics.GL.Ext.ARB.ProvokingVertex",
      "Graphics.GL.Ext.ARB.QueryBufferObject",
      "Graphics.GL.Ext.ARB.RobustBufferAccessBehavior",
      "Graphics.GL.Ext.ARB.Robustness",
      "Graphics.GL.Ext.ARB.RobustnessIsolation",
      "Graphics.GL.Ext.ARB.SampleShading",
      "Graphics.GL.Ext.ARB.SamplerObjects",
      "Graphics.GL.Ext.ARB.SeamlessCubeMap",
      "Graphics.GL.Ext.ARB.SeamlessCubemapPerTexture",
      "Graphics.GL.Ext.ARB.SeparateShaderObjects",
      "Graphics.GL.Ext.ARB.ShaderAtomicCounters",
      "Graphics.GL.Ext.ARB.ShaderBitEncoding",
      "Graphics.GL.Ext.ARB.ShaderDrawParameters",
      "Graphics.GL.Ext.ARB.ShaderGroupVote",
      "Graphics.GL.Ext.ARB.ShaderImageLoadStore",
      "Graphics.GL.Ext.ARB.ShaderImageSize",
      "Graphics.GL.Ext.ARB.ShaderObjects",
      "Graphics.GL.Ext.ARB.ShaderPrecision",
      "Graphics.GL.Ext.ARB.ShaderStencilExport",
      "Graphics.GL.Ext.ARB.ShaderStorageBufferObject",
      "Graphics.GL.Ext.ARB.ShaderSubroutine",
      "Graphics.GL.Ext.ARB.ShaderTextureImageSamples",
      "Graphics.GL.Ext.ARB.ShaderTextureLod",
      "Graphics.GL.Ext.ARB.ShadingLanguage100",
      "Graphics.GL.Ext.ARB.ShadingLanguage420pack",
      "Graphics.GL.Ext.ARB.ShadingLanguageInclude",
      "Graphics.GL.Ext.ARB.ShadingLanguagePacking",
      "Graphics.GL.Ext.ARB.Shadow",
      "Graphics.GL.Ext.ARB.ShadowAmbient",
      "Graphics.GL.Ext.ARB.SparseBuffer",
      "Graphics.GL.Ext.ARB.SparseTexture",
      "Graphics.GL.Ext.ARB.StencilTexturing",
      "Graphics.GL.Ext.ARB.Sync",
      "Graphics.GL.Ext.ARB.TessellationShader",
      "Graphics.GL.Ext.ARB.TextureBarrier",
      "Graphics.GL.Ext.ARB.TextureBorderClamp",
      "Graphics.GL.Ext.ARB.TextureBufferObject",
      "Graphics.GL.Ext.ARB.TextureBufferObjectRgb32",
      "Graphics.GL.Ext.ARB.TextureBufferRange",
      "Graphics.GL.Ext.ARB.TextureCompression",
      "Graphics.GL.Ext.ARB.TextureCompressionBptc",
      "Graphics.GL.Ext.ARB.TextureCompressionRgtc",
      "Graphics.GL.Ext.ARB.TextureCubeMap",
      "Graphics.GL.Ext.ARB.TextureCubeMapArray",
      "Graphics.GL.Ext.ARB.TextureEnvAdd",
      "Graphics.GL.Ext.ARB.TextureEnvCombine",
      "Graphics.GL.Ext.ARB.TextureEnvCrossbar",
      "Graphics.GL.Ext.ARB.TextureEnvDot3",
      "Graphics.GL.Ext.ARB.TextureFloat",
      "Graphics.GL.Ext.ARB.TextureGather",
      "Graphics.GL.Ext.ARB.TextureMirrorClampToEdge",
      "Graphics.GL.Ext.ARB.TextureMirroredRepeat",
      "Graphics.GL.Ext.ARB.TextureMultisample",
      "Graphics.GL.Ext.ARB.TextureNonPowerOfTwo",
      "Graphics.GL.Ext.ARB.TextureQueryLevels",
      "Graphics.GL.Ext.ARB.TextureQueryLod",
      "Graphics.GL.Ext.ARB.TextureRectangle",
      "Graphics.GL.Ext.ARB.TextureRg",
      "Graphics.GL.Ext.ARB.TextureRgb10A2ui",
      "Graphics.GL.Ext.ARB.TextureStencil8",
      "Graphics.GL.Ext.ARB.TextureStorage",
      "Graphics.GL.Ext.ARB.TextureStorageMultisample",
      "Graphics.GL.Ext.ARB.TextureSwizzle",
      "Graphics.GL.Ext.ARB.TextureView",
      "Graphics.GL.Ext.ARB.TimerQuery",
      "Graphics.GL.Ext.ARB.TransformFeedback2",
      "Graphics.GL.Ext.ARB.TransformFeedback3",
      "Graphics.GL.Ext.ARB.TransformFeedbackInstanced",
      "Graphics.GL.Ext.ARB.TransformFeedbackOverflowQuery",
      "Graphics.GL.Ext.ARB.TransposeMatrix",
      "Graphics.GL.Ext.ARB.UniformBufferObject",
      "Graphics.GL.Ext.ARB.VertexArrayBgra",
      "Graphics.GL.Ext.ARB.VertexArrayObject",
      "Graphics.GL.Ext.ARB.VertexAttrib64bit",
      "Graphics.GL.Ext.ARB.VertexAttribBinding",
      "Graphics.GL.Ext.ARB.VertexBlend",
      "Graphics.GL.Ext.ARB.VertexBufferObject",
      "Graphics.GL.Ext.ARB.VertexProgram",
      "Graphics.GL.Ext.ARB.VertexShader",
      "Graphics.GL.Ext.ARB.VertexType10f11f11fRev",
      "Graphics.GL.Ext.ARB.VertexType2101010Rev",
      "Graphics.GL.Ext.ARB.ViewportArray",
      "Graphics.GL.Ext.ARB.WindowPos",
      "Graphics.GL.Ext.ARM",
      "Graphics.GL.Ext.ARM.MaliProgramBinary",
      "Graphics.GL.Ext.ARM.MaliShaderBinary",
      "Graphics.GL.Ext.ARM.Rgba8",
      "Graphics.GL.Ext.ARM.ShaderFramebufferFetch",
      "Graphics.GL.Ext.ARM.ShaderFramebufferFetchDepthStencil",
      "Graphics.GL.Ext.ATI",
      "Graphics.GL.Ext.ATI.DrawBuffers",
      "Graphics.GL.Ext.ATI.ElementArray",
      "Graphics.GL.Ext.ATI.EnvmapBumpmap",
      "Graphics.GL.Ext.ATI.FragmentShader",
      "Graphics.GL.Ext.ATI.MapObjectBuffer",
      "Graphics.GL.Ext.ATI.Meminfo",
      "Graphics.GL.Ext.ATI.PixelFormatFloat",
      "Graphics.GL.Ext.ATI.PnTriangles",
      "Graphics.GL.Ext.ATI.SeparateStencil",
      "Graphics.GL.Ext.ATI.TextFragmentShader",
      "Graphics.GL.Ext.ATI.TextureEnvCombine3",
      "Graphics.GL.Ext.ATI.TextureFloat",
      "Graphics.GL.Ext.ATI.TextureMirrorOnce",
      "Graphics.GL.Ext.ATI.VertexArrayObject",
      "Graphics.GL.Ext.ATI.VertexAttribArrayObject",
      "Graphics.GL.Ext.ATI.VertexStreams",
      "Graphics.GL.Ext.DMP",
      "Graphics.GL.Ext.DMP.ProgramBinary",
      "Graphics.GL.Ext.DMP.ShaderBinary",
      "Graphics.GL.Ext.EXT",
      "Graphics.GL.Ext.EXT.Abgr",
      "Graphics.GL.Ext.EXT.BaseInstance",
      "Graphics.GL.Ext.EXT.Bgra",
      "Graphics.GL.Ext.EXT.BindableUniform",
      "Graphics.GL.Ext.EXT.BlendColor",
      "Graphics.GL.Ext.EXT.BlendEquationSeparate",
      "Graphics.GL.Ext.EXT.BlendFuncSeparate",
      "Graphics.GL.Ext.EXT.BlendLogicOp",
      "Graphics.GL.Ext.EXT.BlendMinmax",
      "Graphics.GL.Ext.EXT.BlendSubtract",
      "Graphics.GL.Ext.EXT.BufferStorage",
      "Graphics.GL.Ext.EXT.ClipVolumeHint",
      "Graphics.GL.Ext.EXT.Cmyka",
      "Graphics.GL.Ext.EXT.ColorBufferHalfFloat",
      "Graphics.GL.Ext.EXT.ColorSubtable",
      "Graphics.GL.Ext.EXT.CompiledVertexArray",
      "Graphics.GL.Ext.EXT.Convolution",
      "Graphics.GL.Ext.EXT.CoordinateFrame",
      "Graphics.GL.Ext.EXT.CopyImage",
      "Graphics.GL.Ext.EXT.CopyTexture",
      "Graphics.GL.Ext.EXT.CullVertex",
      "Graphics.GL.Ext.EXT.DebugLabel",
      "Graphics.GL.Ext.EXT.DebugMarker",
      "Graphics.GL.Ext.EXT.DepthBoundsTest",
      "Graphics.GL.Ext.EXT.DirectStateAccess",
      "Graphics.GL.Ext.EXT.DiscardFramebuffer",
      "Graphics.GL.Ext.EXT.DisjointTimerQuery",
      "Graphics.GL.Ext.EXT.DrawBuffers",
      "Graphics.GL.Ext.EXT.DrawBuffers2",
      "Graphics.GL.Ext.EXT.DrawBuffersIndexed",
      "Graphics.GL.Ext.EXT.DrawElementsBaseVertex",
      "Graphics.GL.Ext.EXT.DrawInstanced",
      "Graphics.GL.Ext.EXT.DrawRangeElements",
      "Graphics.GL.Ext.EXT.FogCoord",
      "Graphics.GL.Ext.EXT.FourTwoTwoPixels",
      "Graphics.GL.Ext.EXT.FloatBlend",
      "Graphics.GL.Ext.EXT.FramebufferBlit",
      "Graphics.GL.Ext.EXT.FramebufferMultisample",
      "Graphics.GL.Ext.EXT.FramebufferMultisampleBlitScaled",
      "Graphics.GL.Ext.EXT.FramebufferObject",
      "Graphics.GL.Ext.EXT.FramebufferSRGB",
      "Graphics.GL.Ext.EXT.GeometryPointSize",
      "Graphics.GL.Ext.EXT.GeometryShader",
      "Graphics.GL.Ext.EXT.GeometryShader4",
      "Graphics.GL.Ext.EXT.GpuProgramParameters",
      "Graphics.GL.Ext.EXT.GpuShader4",
      "Graphics.GL.Ext.EXT.GpuShader5",
      "Graphics.GL.Ext.EXT.Histogram",
      "Graphics.GL.Ext.EXT.IndexArrayFormats",
      "Graphics.GL.Ext.EXT.IndexFunc",
      "Graphics.GL.Ext.EXT.IndexMaterial",
      "Graphics.GL.Ext.EXT.IndexTexture",
      "Graphics.GL.Ext.EXT.InstancedArrays",
      "Graphics.GL.Ext.EXT.LightTexture",
      "Graphics.GL.Ext.EXT.MapBufferRange",
      "Graphics.GL.Ext.EXT.MiscAttribute",
      "Graphics.GL.Ext.EXT.MultiDrawArrays",
      "Graphics.GL.Ext.EXT.MultiDrawIndirect",
      "Graphics.GL.Ext.EXT.Multisample",
      "Graphics.GL.Ext.EXT.MultisampledRenderToTexture",
      "Graphics.GL.Ext.EXT.MultiviewDrawBuffers",
      "Graphics.GL.Ext.EXT.OcclusionQueryBoolean",
      "Graphics.GL.Ext.EXT.PackedDepthStencil",
      "Graphics.GL.Ext.EXT.PackedFloat",
      "Graphics.GL.Ext.EXT.PackedPixels",
      "Graphics.GL.Ext.EXT.PalettedTexture",
      "Graphics.GL.Ext.EXT.PixelBufferObject",
      "Graphics.GL.Ext.EXT.PixelTransform",
      "Graphics.GL.Ext.EXT.PixelTransformColorTable",
      "Graphics.GL.Ext.EXT.PointParameters",
      "Graphics.GL.Ext.EXT.PolygonOffset",
      "Graphics.GL.Ext.EXT.PolygonOffsetClamp",
      "Graphics.GL.Ext.EXT.PostDepthCoverage",
      "Graphics.GL.Ext.EXT.PrimitiveBoundingBox",
      "Graphics.GL.Ext.EXT.ProvokingVertex",
      "Graphics.GL.Ext.EXT.PvrtcSRGB",
      "Graphics.GL.Ext.EXT.RasterMultisample",
      "Graphics.GL.Ext.EXT.ReadFormatBgra",
      "Graphics.GL.Ext.EXT.RenderSnorm",
      "Graphics.GL.Ext.EXT.RescaleNormal",
      "Graphics.GL.Ext.EXT.Robustness",
      "Graphics.GL.Ext.EXT.SRGB",
      "Graphics.GL.Ext.EXT.SRGBWriteControl",
      "Graphics.GL.Ext.EXT.SecondaryColor",
      "Graphics.GL.Ext.EXT.SeparateShaderObjects",
      "Graphics.GL.Ext.EXT.SeparateSpecularColor",
      "Graphics.GL.Ext.EXT.ShaderFramebufferFetch",
      "Graphics.GL.Ext.EXT.ShaderImageLoadFormatted",
      "Graphics.GL.Ext.EXT.ShaderImageLoadStore",
      "Graphics.GL.Ext.EXT.ShaderImplicitConversions",
      "Graphics.GL.Ext.EXT.ShaderIntegerMix",
      "Graphics.GL.Ext.EXT.ShaderIoBlocks",
      "Graphics.GL.Ext.EXT.ShaderPixelLocalStorage",
      "Graphics.GL.Ext.EXT.ShaderTextureLod",
      "Graphics.GL.Ext.EXT.ShadowFuncs",
      "Graphics.GL.Ext.EXT.ShadowSamplers",
      "Graphics.GL.Ext.EXT.SharedTexturePalette",
      "Graphics.GL.Ext.EXT.SparseTexture",
      "Graphics.GL.Ext.EXT.SparseTexture2",
      "Graphics.GL.Ext.EXT.StencilClearTag",
      "Graphics.GL.Ext.EXT.StencilTwoSide",
      "Graphics.GL.Ext.EXT.StencilWrap",
      "Graphics.GL.Ext.EXT.Subtexture",
      "Graphics.GL.Ext.EXT.TessellationPointSize",
      "Graphics.GL.Ext.EXT.TessellationShader",
      "Graphics.GL.Ext.EXT.Texture",
      "Graphics.GL.Ext.EXT.Texture3D",
      "Graphics.GL.Ext.EXT.TextureArray",
      "Graphics.GL.Ext.EXT.TextureBorderClamp",
      "Graphics.GL.Ext.EXT.TextureBuffer",
      "Graphics.GL.Ext.EXT.TextureBufferObject",
      "Graphics.GL.Ext.EXT.TextureCompressionDxt1",
      "Graphics.GL.Ext.EXT.TextureCompressionLatc",
      "Graphics.GL.Ext.EXT.TextureCompressionRgtc",
      "Graphics.GL.Ext.EXT.TextureCompressionS3tc",
      "Graphics.GL.Ext.EXT.TextureCubeMap",
      "Graphics.GL.Ext.EXT.TextureCubeMapArray",
      "Graphics.GL.Ext.EXT.TextureEnvAdd",
      "Graphics.GL.Ext.EXT.TextureEnvCombine",
      "Graphics.GL.Ext.EXT.TextureEnvDot3",
      "Graphics.GL.Ext.EXT.TextureFilterAnisotropic",
      "Graphics.GL.Ext.EXT.TextureFilterMinmax",
      "Graphics.GL.Ext.EXT.TextureFormatBGRA8888",
      "Graphics.GL.Ext.EXT.TextureInteger",
      "Graphics.GL.Ext.EXT.TextureLodBias",
      "Graphics.GL.Ext.EXT.TextureMirrorClamp",
      "Graphics.GL.Ext.EXT.TextureNorm16",
      "Graphics.GL.Ext.EXT.TextureObject",
      "Graphics.GL.Ext.EXT.TexturePerturbNormal",
      "Graphics.GL.Ext.EXT.TextureRg",
      "Graphics.GL.Ext.EXT.TextureSRGB",
      "Graphics.GL.Ext.EXT.TextureSRGBDecode",
      "Graphics.GL.Ext.EXT.TextureSRGBR8",
      "Graphics.GL.Ext.EXT.TextureSRGBRG8",
      "Graphics.GL.Ext.EXT.TextureSharedExponent",
      "Graphics.GL.Ext.EXT.TextureSnorm",
      "Graphics.GL.Ext.EXT.TextureStorage",
      "Graphics.GL.Ext.EXT.TextureSwizzle",
      "Graphics.GL.Ext.EXT.TextureType2101010REV",
      "Graphics.GL.Ext.EXT.TextureView",
      "Graphics.GL.Ext.EXT.TimerQuery",
      "Graphics.GL.Ext.EXT.TransformFeedback",
      "Graphics.GL.Ext.EXT.UnpackSubimage",
      "Graphics.GL.Ext.EXT.VertexArray",
      "Graphics.GL.Ext.EXT.VertexArrayBgra",
      "Graphics.GL.Ext.EXT.VertexAttrib64bit",
      "Graphics.GL.Ext.EXT.VertexShader",
      "Graphics.GL.Ext.EXT.VertexWeighting",
      "Graphics.GL.Ext.EXT.X11SyncObject",
      "Graphics.GL.Ext.EXT.YUVTarget",
      "Graphics.GL.Ext.FJ",
      "Graphics.GL.Ext.FJ.ShaderBinaryGCCSO",
      "Graphics.GL.Ext.GREMEDY",
      "Graphics.GL.Ext.GREMEDY.FrameTerminator",
      "Graphics.GL.Ext.GREMEDY.StringMarker",
      "Graphics.GL.Ext.HP",
      "Graphics.GL.Ext.HP.ConvolutionBorderModes",
      "Graphics.GL.Ext.HP.ImageTransform",
      "Graphics.GL.Ext.HP.OcclusionTest",
      "Graphics.GL.Ext.HP.TextureLighting",
      "Graphics.GL.Ext.IBM",
      "Graphics.GL.Ext.IBM.CullVertex",
      "Graphics.GL.Ext.IBM.MultimodeDrawArrays",
      "Graphics.GL.Ext.IBM.RasterposClip",
      "Graphics.GL.Ext.IBM.StaticData",
      "Graphics.GL.Ext.IBM.TextureMirroredRepeat",
      "Graphics.GL.Ext.IBM.VertexArrayLists",
      "Graphics.GL.Ext.IMG",
      "Graphics.GL.Ext.IMG.MultisampledRenderToTexture",
      "Graphics.GL.Ext.IMG.ProgramBinary",
      "Graphics.GL.Ext.IMG.ReadFormat",
      "Graphics.GL.Ext.IMG.ShaderBinary",
      "Graphics.GL.Ext.IMG.TextureCompressionPvrtc",
      "Graphics.GL.Ext.IMG.TextureCompressionPvrtc2",
      "Graphics.GL.Ext.IMG.TextureEnvEnhancedFixedFunction",
      "Graphics.GL.Ext.IMG.UserClipPlane",
      "Graphics.GL.Ext.INGR",
      "Graphics.GL.Ext.INGR.BlendFuncSeparate",
      "Graphics.GL.Ext.INGR.ColorClamp",
      "Graphics.GL.Ext.INGR.InterlaceRead",
      "Graphics.GL.Ext.INTEL",
      "Graphics.GL.Ext.INTEL.FragmentShaderOrdering",
      "Graphics.GL.Ext.INTEL.MapTexture",
      "Graphics.GL.Ext.INTEL.ParallelArrays",
      "Graphics.GL.Ext.INTEL.PerformanceQuery",
      "Graphics.GL.Ext.KHR",
      "Graphics.GL.Ext.KHR.BlendEquationAdvanced",
      "Graphics.GL.Ext.KHR.BlendEquationAdvancedCoherent",
      "Graphics.GL.Ext.KHR.ContextFlushControl",
      "Graphics.GL.Ext.KHR.Debug",
      "Graphics.GL.Ext.KHR.NoError",
      "Graphics.GL.Ext.KHR.RobustBufferAccessBehavior",
      "Graphics.GL.Ext.KHR.Robustness",
      "Graphics.GL.Ext.KHR.TextureCompressionAstcHdr",
      "Graphics.GL.Ext.KHR.TextureCompressionAstcLdr",
      "Graphics.GL.Ext.MESA",
      "Graphics.GL.Ext.MESA.PackInvert",
      "Graphics.GL.Ext.MESA.ResizeBuffers",
      "Graphics.GL.Ext.MESA.WindowPos",
      "Graphics.GL.Ext.MESA.YcbcrTexture",
      "Graphics.GL.Ext.MESAX",
      "Graphics.GL.Ext.MESAX.TextureStack",
      "Graphics.GL.Ext.NV",
      "Graphics.GL.Ext.NV.BindlessMultiDrawIndirect",
      "Graphics.GL.Ext.NV.BindlessMultiDrawIndirectCount",
      "Graphics.GL.Ext.NV.BindlessTexture",
      "Graphics.GL.Ext.NV.BlendEquationAdvanced",
      "Graphics.GL.Ext.NV.BlendEquationAdvancedCoherent",
      "Graphics.GL.Ext.NV.BlendSquare",
      "Graphics.GL.Ext.NV.CommandList",
      "Graphics.GL.Ext.NV.ComputeProgram5",
      "Graphics.GL.Ext.NV.ConditionalRender",
      "Graphics.GL.Ext.NV.ConservativeRaster",
      "Graphics.GL.Ext.NV.CopyBuffer",
      "Graphics.GL.Ext.NV.CopyDepthToColor",
      "Graphics.GL.Ext.NV.CopyImage",
      "Graphics.GL.Ext.NV.CoverageSample",
      "Graphics.GL.Ext.NV.DeepTexture3D",
      "Graphics.GL.Ext.NV.DepthBufferFloat",
      "Graphics.GL.Ext.NV.DepthClamp",
      "Graphics.GL.Ext.NV.DepthNonlinear",
      "Graphics.GL.Ext.NV.DrawBuffers",
      "Graphics.GL.Ext.NV.DrawInstanced",
      "Graphics.GL.Ext.NV.DrawTexture",
      "Graphics.GL.Ext.NV.Evaluators",
      "Graphics.GL.Ext.NV.ExplicitAttribLocation",
      "Graphics.GL.Ext.NV.ExplicitMultisample",
      "Graphics.GL.Ext.NV.FboColorAttachments",
      "Graphics.GL.Ext.NV.Fence",
      "Graphics.GL.Ext.NV.FillRectangle",
      "Graphics.GL.Ext.NV.FloatBuffer",
      "Graphics.GL.Ext.NV.FogDistance",
      "Graphics.GL.Ext.NV.FragmentCoverageToColor",
      "Graphics.GL.Ext.NV.FragmentProgram",
      "Graphics.GL.Ext.NV.FragmentProgram2",
      "Graphics.GL.Ext.NV.FragmentProgram4",
      "Graphics.GL.Ext.NV.FragmentProgramOption",
      "Graphics.GL.Ext.NV.FragmentShaderInterlock",
      "Graphics.GL.Ext.NV.FramebufferBlit",
      "Graphics.GL.Ext.NV.FramebufferMixedSamples",
      "Graphics.GL.Ext.NV.FramebufferMultisample",
      "Graphics.GL.Ext.NV.FramebufferMultisampleCoverage",
      "Graphics.GL.Ext.NV.GenerateMipmapSRGB",
      "Graphics.GL.Ext.NV.GeometryProgram4",
      "Graphics.GL.Ext.NV.GeometryShader4",
      "Graphics.GL.Ext.NV.GeometryShaderPassthrough",
      "Graphics.GL.Ext.NV.GpuProgram4",
      "Graphics.GL.Ext.NV.GpuProgram5",
      "Graphics.GL.Ext.NV.GpuProgram5MemExtended",
      "Graphics.GL.Ext.NV.GpuShader5",
      "Graphics.GL.Ext.NV.HalfFloat",
      "Graphics.GL.Ext.NV.ImageFormats",
      "Graphics.GL.Ext.NV.InstancedArrays",
      "Graphics.GL.Ext.NV.InternalformatSampleQuery",
      "Graphics.GL.Ext.NV.LightMaxExponent",
      "Graphics.GL.Ext.NV.MultisampleCoverage",
      "Graphics.GL.Ext.NV.MultisampleFilterHint",
      "Graphics.GL.Ext.NV.NonSquareMatrices",
      "Graphics.GL.Ext.NV.OcclusionQuery",
      "Graphics.GL.Ext.NV.PackedDepthStencil",
      "Graphics.GL.Ext.NV.ParameterBufferObject",
      "Graphics.GL.Ext.NV.ParameterBufferObject2",
      "Graphics.GL.Ext.NV.PathRendering",
      "Graphics.GL.Ext.NV.PathRenderingSharedEdge",
      "Graphics.GL.Ext.NV.PixelDataRange",
      "Graphics.GL.Ext.NV.PointSprite",
      "Graphics.GL.Ext.NV.PolygonMode",
      "Graphics.GL.Ext.NV.PresentVideo",
      "Graphics.GL.Ext.NV.PrimitiveRestart",
      "Graphics.GL.Ext.NV.ReadBuffer",
      "Graphics.GL.Ext.NV.ReadBufferFront",
      "Graphics.GL.Ext.NV.ReadDepth",
      "Graphics.GL.Ext.NV.ReadDepthStencil",
      "Graphics.GL.Ext.NV.ReadStencil",
      "Graphics.GL.Ext.NV.RegisterCombiners",
      "Graphics.GL.Ext.NV.RegisterCombiners2",
      "Graphics.GL.Ext.NV.SRGBFormats",
      "Graphics.GL.Ext.NV.SampleLocations",
      "Graphics.GL.Ext.NV.SampleMaskOverrideCoverage",
      "Graphics.GL.Ext.NV.ShaderAtomicCounters",
      "Graphics.GL.Ext.NV.ShaderAtomicFloat",
      "Graphics.GL.Ext.NV.ShaderAtomicFp16Vector",
      "Graphics.GL.Ext.NV.ShaderAtomicInt64",
      "Graphics.GL.Ext.NV.ShaderBufferLoad",
      "Graphics.GL.Ext.NV.ShaderBufferStore",
      "Graphics.GL.Ext.NV.ShaderNoperspectiveInterpolation",
      "Graphics.GL.Ext.NV.ShaderStorageBufferObject",
      "Graphics.GL.Ext.NV.ShaderThreadGroup",
      "Graphics.GL.Ext.NV.ShaderThreadShuffle",
      "Graphics.GL.Ext.NV.ShadowSamplersArray",
      "Graphics.GL.Ext.NV.ShadowSamplersCube",
      "Graphics.GL.Ext.NV.TessellationProgram5",
      "Graphics.GL.Ext.NV.TexgenEmboss",
      "Graphics.GL.Ext.NV.TexgenReflection",
      "Graphics.GL.Ext.NV.TextureBarrier",
      "Graphics.GL.Ext.NV.TextureBorderClamp",
      "Graphics.GL.Ext.NV.TextureCompressionS3tcUpdate",
      "Graphics.GL.Ext.NV.TextureCompressionVtc",
      "Graphics.GL.Ext.NV.TextureEnvCombine4",
      "Graphics.GL.Ext.NV.TextureExpandNormal",
      "Graphics.GL.Ext.NV.TextureMultisample",
      "Graphics.GL.Ext.NV.TextureNpot2DMipmap",
      "Graphics.GL.Ext.NV.TextureRectangle",
      "Graphics.GL.Ext.NV.TextureShader",
      "Graphics.GL.Ext.NV.TextureShader2",
      "Graphics.GL.Ext.NV.TextureShader3",
      "Graphics.GL.Ext.NV.TransformFeedback",
      "Graphics.GL.Ext.NV.TransformFeedback2",
      "Graphics.GL.Ext.NV.UniformBufferUnifiedMemory",
      "Graphics.GL.Ext.NV.VdpauInterop",
      "Graphics.GL.Ext.NV.VertexArrayRange",
      "Graphics.GL.Ext.NV.VertexArrayRange2",
      "Graphics.GL.Ext.NV.VertexAttribInteger64bit",
      "Graphics.GL.Ext.NV.VertexBufferUnifiedMemory",
      "Graphics.GL.Ext.NV.VertexProgram",
      "Graphics.GL.Ext.NV.VertexProgram11",
      "Graphics.GL.Ext.NV.VertexProgram2",
      "Graphics.GL.Ext.NV.VertexProgram2Option",
      "Graphics.GL.Ext.NV.VertexProgram3",
      "Graphics.GL.Ext.NV.VertexProgram4",
      "Graphics.GL.Ext.NV.VideoCapture",
      "Graphics.GL.Ext.NV.ViewportArray",
      "Graphics.GL.Ext.NV.ViewportArray2",
      "Graphics.GL.Ext.NVX",
      "Graphics.GL.Ext.NVX.ConditionalRender",
      "Graphics.GL.Ext.NVX.GpuMemoryInfo",
      "Graphics.GL.Ext.OES",
      "Graphics.GL.Ext.OES.BlendEquationSeparate",
      "Graphics.GL.Ext.OES.BlendFuncSeparate",
      "Graphics.GL.Ext.OES.BlendSubtract",
      "Graphics.GL.Ext.OES.ByteCoordinates",
      "Graphics.GL.Ext.OES.CompressedETC1RGB8SubTexture",
      "Graphics.GL.Ext.OES.CompressedETC1RGB8Texture",
      "Graphics.GL.Ext.OES.CompressedPalettedTexture",
      "Graphics.GL.Ext.OES.CopyImage",
      "Graphics.GL.Ext.OES.Depth24",
      "Graphics.GL.Ext.OES.Depth32",
      "Graphics.GL.Ext.OES.DepthTexture",
      "Graphics.GL.Ext.OES.DrawBuffersIndexed",
      "Graphics.GL.Ext.OES.DrawElementsBaseVertex",
      "Graphics.GL.Ext.OES.DrawTexture",
      "Graphics.GL.Ext.OES.EGLImage",
      "Graphics.GL.Ext.OES.EGLImageExternal",
      "Graphics.GL.Ext.OES.EGLImageExternalEssl3",
      "Graphics.GL.Ext.OES.ElementIndexUint",
      "Graphics.GL.Ext.OES.ExtendedMatrixPalette",
      "Graphics.GL.Ext.OES.FboRenderMipmap",
      "Graphics.GL.Ext.OES.FixedPoint",
      "Graphics.GL.Ext.OES.FragmentPrecisionHigh",
      "Graphics.GL.Ext.OES.FramebufferObject",
      "Graphics.GL.Ext.OES.GeometryPointSize",
      "Graphics.GL.Ext.OES.GeometryShader",
      "Graphics.GL.Ext.OES.GetProgramBinary",
      "Graphics.GL.Ext.OES.GpuShader5",
      "Graphics.GL.Ext.OES.Mapbuffer",
      "Graphics.GL.Ext.OES.MatrixGet",
      "Graphics.GL.Ext.OES.MatrixPalette",
      "Graphics.GL.Ext.OES.PackedDepthStencil",
      "Graphics.GL.Ext.OES.PointSizeArray",
      "Graphics.GL.Ext.OES.PointSprite",
      "Graphics.GL.Ext.OES.PrimitiveBoundingBox",
      "Graphics.GL.Ext.OES.QueryMatrix",
      "Graphics.GL.Ext.OES.ReadFormat",
      "Graphics.GL.Ext.OES.RequiredInternalformat",
      "Graphics.GL.Ext.OES.Rgb8Rgba8",
      "Graphics.GL.Ext.OES.SampleShading",
      "Graphics.GL.Ext.OES.SampleVariables",
      "Graphics.GL.Ext.OES.ShaderImageAtomic",
      "Graphics.GL.Ext.OES.ShaderIoBlocks",
      "Graphics.GL.Ext.OES.ShaderMultisampleInterpolation",
      "Graphics.GL.Ext.OES.SinglePrecision",
      "Graphics.GL.Ext.OES.StandardDerivatives",
      "Graphics.GL.Ext.OES.Stencil1",
      "Graphics.GL.Ext.OES.Stencil4",
      "Graphics.GL.Ext.OES.Stencil8",
      "Graphics.GL.Ext.OES.StencilWrap",
      "Graphics.GL.Ext.OES.SurfacelessContext",
      "Graphics.GL.Ext.OES.TessellationPointSize",
      "Graphics.GL.Ext.OES.TessellationShader",
      "Graphics.GL.Ext.OES.Texture3D",
      "Graphics.GL.Ext.OES.TextureBorderClamp",
      "Graphics.GL.Ext.OES.TextureBuffer",
      "Graphics.GL.Ext.OES.TextureCompressionAstc",
      "Graphics.GL.Ext.OES.TextureCubeMap",
      "Graphics.GL.Ext.OES.TextureCubeMapArray",
      "Graphics.GL.Ext.OES.TextureEnvCrossbar",
      "Graphics.GL.Ext.OES.TextureFloat",
      "Graphics.GL.Ext.OES.TextureFloatLinear",
      "Graphics.GL.Ext.OES.TextureHalfFloat",
      "Graphics.GL.Ext.OES.TextureHalfFloatLinear",
      "Graphics.GL.Ext.OES.TextureMirroredRepeat",
      "Graphics.GL.Ext.OES.TextureNpot",
      "Graphics.GL.Ext.OES.TextureStencil8",
      "Graphics.GL.Ext.OES.TextureStorageMultisample2dArray",
      "Graphics.GL.Ext.OES.TextureView",
      "Graphics.GL.Ext.OES.VertexArrayObject",
      "Graphics.GL.Ext.OES.VertexHalfFloat",
      "Graphics.GL.Ext.OES.VertexType1010102",
      "Graphics.GL.Ext.OML",
      "Graphics.GL.Ext.OML.Interlace",
      "Graphics.GL.Ext.OML.Resample",
      "Graphics.GL.Ext.OML.Subsample",
      "Graphics.GL.Ext.OVR",
      "Graphics.GL.Ext.OVR.Multiview",
      "Graphics.GL.Ext.OVR.Multiview2",
      "Graphics.GL.Ext.PGI",
      "Graphics.GL.Ext.PGI.MiscHints",
      "Graphics.GL.Ext.PGI.VertexHints",
      "Graphics.GL.Ext.QCOM",
      "Graphics.GL.Ext.QCOM.AlphaTest",
      "Graphics.GL.Ext.QCOM.BinningControl",
      "Graphics.GL.Ext.QCOM.DriverControl",
      "Graphics.GL.Ext.QCOM.ExtendedGet",
      "Graphics.GL.Ext.QCOM.ExtendedGet2",
      "Graphics.GL.Ext.QCOM.PerfmonGlobalMode",
      "Graphics.GL.Ext.QCOM.TiledRendering",
      "Graphics.GL.Ext.QCOM.WriteonlyRendering",
      "Graphics.GL.Ext.REND",
      "Graphics.GL.Ext.REND.ScreenCoordinates",
      "Graphics.GL.Ext.S3",
      "Graphics.GL.Ext.S3.S3tc",
      "Graphics.GL.Ext.SGI",
      "Graphics.GL.Ext.SGI.ColorMatrix",
      "Graphics.GL.Ext.SGI.ColorTable",
      "Graphics.GL.Ext.SGI.TextureColorTable",
      "Graphics.GL.Ext.SGIS",
      "Graphics.GL.Ext.SGIS.DetailTexture",
      "Graphics.GL.Ext.SGIS.FogFunction",
      "Graphics.GL.Ext.SGIS.GenerateMipmap",
      "Graphics.GL.Ext.SGIS.Multisample",
      "Graphics.GL.Ext.SGIS.PixelTexture",
      "Graphics.GL.Ext.SGIS.PointLineTexgen",
      "Graphics.GL.Ext.SGIS.PointParameters",
      "Graphics.GL.Ext.SGIS.SharpenTexture",
      "Graphics.GL.Ext.SGIS.Texture4D",
      "Graphics.GL.Ext.SGIS.TextureBorderClamp",
      "Graphics.GL.Ext.SGIS.TextureColorMask",
      "Graphics.GL.Ext.SGIS.TextureEdgeClamp",
      "Graphics.GL.Ext.SGIS.TextureFilter4",
      "Graphics.GL.Ext.SGIS.TextureLod",
      "Graphics.GL.Ext.SGIS.TextureSelect",
      "Graphics.GL.Ext.SGIX",
      "Graphics.GL.Ext.SGIX.Async",
      "Graphics.GL.Ext.SGIX.AsyncHistogram",
      "Graphics.GL.Ext.SGIX.AsyncPixel",
      "Graphics.GL.Ext.SGIX.BlendAlphaMinmax",
      "Graphics.GL.Ext.SGIX.CalligraphicFragment",
      "Graphics.GL.Ext.SGIX.Clipmap",
      "Graphics.GL.Ext.SGIX.ConvolutionAccuracy",
      "Graphics.GL.Ext.SGIX.DepthPassInstrument",
      "Graphics.GL.Ext.SGIX.DepthTexture",
      "Graphics.GL.Ext.SGIX.FlushRaster",
      "Graphics.GL.Ext.SGIX.FogOffset",
      "Graphics.GL.Ext.SGIX.FragmentLighting",
      "Graphics.GL.Ext.SGIX.Framezoom",
      "Graphics.GL.Ext.SGIX.IglooInterface",
      "Graphics.GL.Ext.SGIX.Instruments",
      "Graphics.GL.Ext.SGIX.Interlace",
      "Graphics.GL.Ext.SGIX.IrInstrument1",
      "Graphics.GL.Ext.SGIX.ListPriority",
      "Graphics.GL.Ext.SGIX.PixelTexture",
      "Graphics.GL.Ext.SGIX.PixelTiles",
      "Graphics.GL.Ext.SGIX.PolynomialFfd",
      "Graphics.GL.Ext.SGIX.ReferencePlane",
      "Graphics.GL.Ext.SGIX.Resample",
      "Graphics.GL.Ext.SGIX.ScalebiasHint",
      "Graphics.GL.Ext.SGIX.Shadow",
      "Graphics.GL.Ext.SGIX.ShadowAmbient",
      "Graphics.GL.Ext.SGIX.Sprite",
      "Graphics.GL.Ext.SGIX.Subsample",
      "Graphics.GL.Ext.SGIX.TagSampleBuffer",
      "Graphics.GL.Ext.SGIX.TextureAddEnv",
      "Graphics.GL.Ext.SGIX.TextureCoordinateClamp",
      "Graphics.GL.Ext.SGIX.TextureLodBias",
      "Graphics.GL.Ext.SGIX.TextureMultiBuffer",
      "Graphics.GL.Ext.SGIX.TextureScaleBias",
      "Graphics.GL.Ext.SGIX.VertexPreclip",
      "Graphics.GL.Ext.SGIX.Ycrcb",
      "Graphics.GL.Ext.SGIX.YcrcbSubsample",
      "Graphics.GL.Ext.SGIX.Ycrcba",
      "Graphics.GL.Ext.SUN",
      "Graphics.GL.Ext.SUN.ConvolutionBorderModes",
      "Graphics.GL.Ext.SUN.GlobalAlpha",
      "Graphics.GL.Ext.SUN.MeshArray",
      "Graphics.GL.Ext.SUN.SliceAccum",
      "Graphics.GL.Ext.SUN.TriangleList",
      "Graphics.GL.Ext.SUN.Vertex",
      "Graphics.GL.Ext.SUNX",
      "Graphics.GL.Ext.SUNX.ConstantData",
      "Graphics.GL.Ext.ThreeDFX",
      "Graphics.GL.Ext.ThreeDFX.Multisample",
      "Graphics.GL.Ext.ThreeDFX.Tbuffer",
      "Graphics.GL.Ext.ThreeDFX.TextureCompressionFXT1",
      "Graphics.GL.Ext.VIV",
      "Graphics.GL.Ext.VIV.ShaderBinary",
      "Graphics.GL.Ext.WIN",
      "Graphics.GL.Ext.WIN.PhongShading",
      "Graphics.GL.Ext.WIN.SpecularFog",
      "Graphics.GL.Internal.FFI",
      "Graphics.GL.Internal.Proc",
      "Graphics.GL.Internal.Shared",
      "Graphics.GL.Standard10",
      "Graphics.GL.Standard11",
      "Graphics.GL.Standard12",
      "Graphics.GL.Standard13",
      "Graphics.GL.Standard14",
      "Graphics.GL.Standard15",
      "Graphics.GL.Standard20",
      "Graphics.GL.Standard21",
      "Graphics.GL.Standard30",
      "Graphics.GL.Standard31",
      "Graphics.GL.Types"
    ],
    "name": "gl",
    "version": "0.7.8.1"
  },
  {
    "dependencies": {
      "HsOpenSSL": [
        "OpenSSL.Session"
      ],
      "base": [],
      "configurator": [
        "Data.Configurator"
      ],
      "data-default": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-openssl": [
        "Network.HTTP.Client.OpenSSL"
      ],
      "soap": [
        "Network.SOAP.Transport",
        "Network.SOAP.Transport.HTTP"
      ],
      "text": []
    },
    "imports": [
      "Data.Configurator",
      "Network.HTTP.Client",
      "Network.HTTP.Client.OpenSSL",
      "Network.SOAP.Transport",
      "Network.SOAP.Transport.HTTP",
      "OpenSSL.Session"
    ],
    "modules": [
      "Network.SOAP.Transport.HTTP.OpenSSL"
    ],
    "name": "soap-openssl",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Int",
        "Data.Kind",
        "Data.Proxy",
        "Data.Word",
        "GHC.TypeLits",
        "Text.Printf"
      ],
      "mtl": [
        "Control.Monad.RWS"
      ],
      "tagged": [
        "Data.Tagged"
      ]
    },
    "imports": [
      "Control.Monad.RWS",
      "Data.Int",
      "Data.Kind",
      "Data.Proxy",
      "Data.Tagged",
      "Data.Word",
      "GHC.TypeLits",
      "Text.Printf"
    ],
    "modules": [
      "Data.Type.Pretty"
    ],
    "name": "pretty-types",
    "version": "0.2.3.1"
  },
  {
    "dependencies": {
      "MonadRandom": [],
      "base": [
        "Data.Foldable",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable"
      ],
      "circle-packing": [],
      "colour": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [],
      "data-default-class": [],
      "diagrams-core": [],
      "diagrams-lib": [
        "Diagrams.Direction",
        "Diagrams.TwoD.Types"
      ],
      "diagrams-solve": [],
      "force-layout": [],
      "lens": [
        "Control.Lens"
      ],
      "linear": [],
      "mtl": [
        "Control.Monad.State"
      ],
      "parsec": [],
      "random": [],
      "semigroups": [],
      "split": [],
      "text": []
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.State",
      "Data.Foldable",
      "Data.Map",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Set",
      "Data.Traversable",
      "Diagrams.Direction",
      "Diagrams.TwoD.Layout.Grid",
      "Diagrams.TwoD.Path.Turtle.Internal",
      "Diagrams.TwoD.Types",
      "Test.Framework"
    ],
    "modules": [
      "Diagrams.Color.HSV",
      "Diagrams.Example.Logo",
      "Diagrams.Layout.Wrap",
      "Diagrams.Lens",
      "Diagrams.TwoD.Apollonian",
      "Diagrams.TwoD.Factorization",
      "Diagrams.TwoD.Grid",
      "Diagrams.TwoD.Tilings",
      "Diagrams.TwoD.Sunburst",
      "Diagrams.TwoD.Layout.Grid",
      "Diagrams.TwoD.Layout.Tree",
      "Diagrams.TwoD.Layout.CirclePacking",
      "Diagrams.TwoD.Path.Calligraphic",
      "Diagrams.TwoD.Path.IteratedSubset",
      "Diagrams.TwoD.Path.Turtle",
      "Diagrams.TwoD.Path.Turtle.Aliases",
      "Diagrams.TwoD.Path.Turtle.Internal",
      "Diagrams.TwoD.Path.Metafont",
      "Diagrams.TwoD.Path.Metafont.Types",
      "Diagrams.TwoD.Path.Metafont.Internal",
      "Diagrams.TwoD.Path.Metafont.Combinators",
      "Diagrams.TwoD.Path.Metafont.Parser"
    ],
    "name": "diagrams-contrib",
    "version": "1.3.0.12"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.List"
      ],
      "mwc-random": [
        "System.Random.MWC",
        "System.Random.MWC.CondensedTable",
        "System.Random.MWC.Distributions"
      ],
      "primitive": [
        "Control.Monad.Primitive"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Primitive",
      "Control.Monad.Trans.Class",
      "Data.Foldable",
      "Data.List",
      "System.Random.MWC",
      "System.Random.MWC.CondensedTable",
      "System.Random.MWC.Distributions"
    ],
    "modules": [
      "System.Random.MWC.Probability"
    ],
    "name": "mwc-probability",
    "version": "1.2.1"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Simple.Utils"
      ],
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "attoparsec": [],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.IO",
        "Text.ParserCombinators.ReadP",
        "Text.Read"
      ],
      "base-unicode-symbols": [
        "Data.Monoid.Unicode",
        "Prelude.Unicode"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "dlist": [
        "Data.DList"
      ],
      "filepath": [],
      "network-uri": [
        "Network.URI"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Builder.Internal",
        "Options.Applicative.Types"
      ],
      "process": [],
      "profunctors": [
        "Data.Profunctor",
        "Data.Profunctor.Unsafe"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "yaml": [
        "Data.Yaml"
      ]
    },
    "imports": [
      "Configuration.Utils",
      "Configuration.Utils.CommandLine",
      "Configuration.Utils.ConfigFile",
      "Configuration.Utils.Internal",
      "Configuration.Utils.Internal.ConfigFileReader",
      "Configuration.Utils.Internal.HttpsCertPolicy",
      "Configuration.Utils.Maybe",
      "Configuration.Utils.Monoid",
      "Configuration.Utils.Operators",
      "Configuration.Utils.Validation",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Enclosed",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Except",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Control.Monad.State",
      "Control.Monad.Trans.Control",
      "Control.Monad.Writer",
      "Control.Monad.Writer.Class",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Default",
      "Data.DList",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Monoid.Unicode",
      "Data.Profunctor",
      "Data.Profunctor.Unsafe",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Typeable",
      "Data.X509",
      "Data.X509.Validation",
      "Data.Yaml",
      "Distribution.Simple.Utils",
      "Example",
      "GHC.Generics",
      "Network.Connection",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Header",
      "Network.TLS",
      "Network.TLS.Extra",
      "Network.URI",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.WarpTLS",
      "Options.Applicative",
      "Options.Applicative.Builder.Internal",
      "Options.Applicative.Types",
      "PkgInfo",
      "Prelude",
      "Prelude.Unicode",
      "System.Directory",
      "System.Environment",
      "System.IO",
      "System.X509",
      "Tests.BoolOption",
      "Tests.MonoidConfig",
      "TestTools",
      "Text.ParserCombinators.ReadP",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.Read"
    ],
    "modules": [
      "Configuration.Utils",
      "Configuration.Utils.CommandLine",
      "Configuration.Utils.ConfigFile",
      "Configuration.Utils.Http",
      "Configuration.Utils.Internal",
      "Configuration.Utils.Internal.ConfigFileReader",
      "Configuration.Utils.Maybe",
      "Configuration.Utils.Monoid",
      "Configuration.Utils.Operators",
      "Configuration.Utils.Setup",
      "Configuration.Utils.Validation"
    ],
    "name": "configuration-tools",
    "version": "0.2.15"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.IArray",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Numeric",
        "Text.Show.Functions"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.Trans"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Monad",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Data.Array.IArray",
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.Char",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Word",
      "Monad.Util",
      "Net.ARP",
      "Net.Bits",
      "Net.ClientInterface",
      "Net.Concurrent",
      "Net.DHCP",
      "Net.Ethernet",
      "Net.EthernetClient",
      "Net.ICMP",
      "Net.Interface",
      "Net.IPv4",
      "Net.IPv4Client",
      "Net.IPv4Link",
      "Net.IPv4OverEthernet",
      "Net.Packet",
      "Net.PacketParsing",
      "Net.PortNumber",
      "Net.Servers",
      "Net.TCP",
      "Net.TFTP",
      "Net.UDP",
      "Net.Utils",
      "Net.Wire",
      "Numeric",
      "Text.Show.Functions"
    ],
    "modules": [
      "Net.ARP",
      "Net.ARP_Protocol",
      "Net.Bits",
      "Net.ClientInterface",
      "Net.Concurrent",
      "Net.DHCP",
      "Net.DHCP_Client",
      "Net.Ethernet",
      "Net.EthernetClient",
      "Net.ICMP",
      "Net.Interface",
      "Net.IO",
      "Net.IPv4",
      "Net.IPv4Client",
      "Net.IPv4Link",
      "Net.IPv4OverEthernet",
      "Net.IPv6",
      "Net.Packet",
      "Net.PacketParsing",
      "Net.PortNumber",
      "Net.Servers",
      "Net.TCP",
      "Net.TCP_Client",
      "Net.Test",
      "Net.TFTP",
      "Net.TFTP_Client",
      "Net.UDP",
      "Net.UDP_Client",
      "Net.Utils",
      "Net.Wire"
    ],
    "name": "network-house",
    "version": "0.1.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Ratio",
        "Foreign",
        "Foreign.C.Types",
        "Numeric.Natural",
        "System.IO.Unsafe"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Foreign"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Criterion.Main",
      "Data.Ratio",
      "Data.Text",
      "Data.Text.Foreign",
      "Data.Text.Metrics",
      "Foreign",
      "Foreign.C.Types",
      "Numeric.Natural",
      "System.IO.Unsafe",
      "Test.Hspec",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Text.Metrics"
    ],
    "name": "text-metrics",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative"
      ]
    },
    "imports": [
      "Control.Applicative"
    ],
    "modules": [
      "Control.Applicative.Permutation"
    ],
    "name": "action-permutations",
    "version": "0.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Tuple",
        "Debug.Trace",
        "System.IO"
      ],
      "blosum": [],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "fasta": [
        "Data.Fasta.Text"
      ],
      "lens": [
        "Control.Lens"
      ],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "pipes-text": [],
      "split": [
        "Data.List.Split"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "text-show": [
        "TextShow"
      ]
    },
    "imports": [
      "Cluster",
      "Control.Applicative",
      "Control.Lens",
      "Data.Fasta.Text",
      "Data.Foldable",
      "Data.List",
      "Data.List.Split",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Tuple",
      "Debug.Trace",
      "Matrix",
      "Options.Applicative",
      "Pipes",
      "Pipes.Prelude",
      "Pipes.Text.IO",
      "Print",
      "System.IO",
      "TextShow",
      "Types",
      "Utility"
    ],
    "modules": [
      "Types",
      "Utility",
      "Cluster",
      "Matrix",
      "Print"
    ],
    "name": "blosum",
    "version": "0.1.1.2"
  },
  {
    "dependencies": {
      "base": [],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "old-locale": [
        "System.Locale"
      ]
    },
    "imports": [
      "Data.Default.Class",
      "System.Locale"
    ],
    "modules": [
      "Data.Default.Instances.OldLocale"
    ],
    "name": "data-default-instances-old-locale",
    "version": "0.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.QPXExpress",
      "Network.Google.QPXExpress.Types",
      "Network.Google.Resource.QPXExpress.Trips.Search"
    ],
    "name": "gogol-qpxexpress",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "GenericPretty": [],
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Applicative"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Set"
      ],
      "filepath": [],
      "hashable": [],
      "hflags": [],
      "lens": [],
      "mmap": [],
      "mtl": [],
      "pretty": [],
      "process": [],
      "scientific": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "uniplate": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Aeson",
      "Data.ByteString.Lazy.Char8",
      "Data.Graph",
      "Data.HashMap.Strict",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Vector"
    ],
    "modules": [
      "Data.Aeson.AutoType.Type",
      "Data.Aeson.AutoType.Extract",
      "Data.Aeson.AutoType.Format",
      "Data.Aeson.AutoType.Pretty",
      "Data.Aeson.AutoType.CodeGen",
      "Data.Aeson.AutoType.Alternative"
    ],
    "name": "json-autotype",
    "version": "1.0.14"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode",
        "Data.Aeson.Parser",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.Char8",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.Fix",
        "Control.Monad.IO.Class",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "System.Environment",
        "System.Exit",
        "System.IO.Error",
        "Text.Printf"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "crypto-api": [
        "Crypto.Classes",
        "Crypto.HMAC"
      ],
      "cryptohash": [],
      "cryptohash-cryptoapi": [
        "Crypto.Hash.CryptoAPI"
      ],
      "data-default": [
        "Data.Default"
      ],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monad-logger": [
        "Control.Monad.Logger"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Builder.Int"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX",
        "Data.Time.LocalTime"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Fix",
      "Control.Monad.IO.Class",
      "Control.Monad.Logger",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.Resource",
      "Crypto.Classes",
      "Crypto.Hash.CryptoAPI",
      "Crypto.HMAC",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Parser",
      "Data.Aeson.Types",
      "Data.Attoparsec.Char8",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Conduit",
      "Data.Conduit.Attoparsec",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Default",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Serialize",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Builder.Int",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Time.LocalTime",
      "Data.Typeable",
      "Data.Word",
      "Facebook",
      "Facebook.Auth",
      "Facebook.Base",
      "Facebook.FQL",
      "Facebook.Graph",
      "Facebook.Monad",
      "Facebook.Object.Action",
      "Facebook.Object.Checkin",
      "Facebook.Object.FriendList",
      "Facebook.Object.Order",
      "Facebook.Object.Page",
      "Facebook.Object.User",
      "Facebook.Pager",
      "Facebook.RealTime",
      "Facebook.TestUsers",
      "Facebook.Types",
      "Main",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "System.Environment",
      "System.Exit",
      "System.IO.Error",
      "System.Locale",
      "Test.Hspec",
      "Test.Hspec.HUnit",
      "Test.Hspec.QuickCheck",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Facebook"
    ],
    "name": "fb",
    "version": "1.0.13"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char",
        "Data.Word",
        "GHC.Base",
        "GHC.Exts",
        "Prelude"
      ],
      "generic-deriving": [
        "Generics.Deriving",
        "Generics.Deriving.TH"
      ],
      "ghc-prim": [],
      "template-haskell": [
        "Language.Haskell.TH.Lib",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Word",
      "Generics.Deriving",
      "Generics.Deriving.TH",
      "GHC.Base",
      "GHC.Exts",
      "Language.Haskell.TH.Lib",
      "Language.Haskell.TH.Lift.Generics",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Prelude.Compat",
      "Test.Hspec",
      "Types"
    ],
    "modules": [
      "Language.Haskell.TH.Lift.Generics"
    ],
    "name": "lift-generics",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Prelude"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal",
        "Text.Blaze.Renderer.Pretty",
        "Text.Blaze.Renderer.String",
        "Text.Blaze.Renderer.Text",
        "Text.Blaze.Renderer.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Control.Arrow",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Blaze",
      "Text.Blaze.Html",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.String",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Blaze.Html.Tests",
      "Text.Blaze.Html.Tests.Util",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.Pretty",
      "Text.Blaze.Renderer.String",
      "Text.Blaze.Renderer.Text",
      "Text.Blaze.Renderer.Utf8",
      "Util.Sanitize",
      "Util.Tests"
    ],
    "modules": [
      "Text.Blaze.Html",
      "Text.Blaze.Html.Renderer.Pretty",
      "Text.Blaze.Html.Renderer.String",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Blaze.Html4.FrameSet",
      "Text.Blaze.Html4.FrameSet.Attributes",
      "Text.Blaze.Html4.Strict",
      "Text.Blaze.Html4.Strict.Attributes",
      "Text.Blaze.Html4.Transitional",
      "Text.Blaze.Html4.Transitional.Attributes",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.XHtml1.FrameSet",
      "Text.Blaze.XHtml1.FrameSet.Attributes",
      "Text.Blaze.XHtml1.Strict",
      "Text.Blaze.XHtml1.Strict.Attributes",
      "Text.Blaze.XHtml1.Transitional",
      "Text.Blaze.XHtml1.Transitional.Attributes",
      "Text.Blaze.XHtml5",
      "Text.Blaze.XHtml5.Attributes"
    ],
    "name": "blaze-html",
    "version": "0.8.1.2"
  },
  {
    "dependencies": {
      "base": [],
      "old-locale": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.Time"
    ],
    "name": "old-time",
    "version": "1.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.List",
        "Data.Word",
        "GHC.Exts"
      ],
      "deepseq": [],
      "hashable": []
    },
    "imports": [
      "Criterion",
      "Data.Bits",
      "Data.FingerTree.PSQueue",
      "Data.FingerTree.PSQueue.Benchmark",
      "Data.HashPSQ",
      "Data.HashPSQ.Benchmark",
      "Data.HashPSQ.Tests",
      "Data.IntPSQ",
      "Data.IntPSQ.Benchmark",
      "Data.IntPSQ.Internal",
      "Data.IntPSQ.Tests",
      "Data.List",
      "Data.OrdPSQ",
      "Data.OrdPSQ.Benchmark",
      "Data.OrdPSQ.Tests",
      "Data.PSQ.Class.Tests",
      "Data.PSQueue",
      "Data.PSQueue.Benchmark",
      "Data.Word",
      "GHC.Exts",
      "GHC.Prim"
    ],
    "modules": [
      "Data.HashPSQ",
      "Data.IntPSQ",
      "Data.OrdPSQ"
    ],
    "name": "psqueues",
    "version": "0.2.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Bifunctor"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "text": [
        "Data.Text"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Bifunctor",
      "Data.ByteString.Lazy",
      "Data.Map",
      "Data.Text",
      "Data.Text.PgpWordlist.Internal.AltList",
      "Data.Vector",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Text.PgpWordlist",
      "Data.Text.PgpWordlist.Internal.AltList",
      "Data.Text.PgpWordlist.Internal.Convert",
      "Data.Text.PgpWordlist.Internal.Types",
      "Data.Text.PgpWordlist.Internal.Word8Bimap",
      "Data.Text.PgpWordlist.Internal.Words"
    ],
    "name": "pgp-wordlist",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.MarketplaceMetering",
      "Test.AWS.Fixture",
      "Test.AWS.MarketplaceMetering",
      "Test.AWS.MarketplaceMetering.Internal",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.MarketplaceMetering",
      "Network.AWS.MarketplaceMetering.MeterUsage",
      "Network.AWS.MarketplaceMetering.Types",
      "Network.AWS.MarketplaceMetering.Waiters"
    ],
    "name": "amazonka-marketplace-metering",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Affiliates",
      "Network.Google.Affiliates.Types",
      "Network.Google.Resource.GAN.Advertisers.Get",
      "Network.Google.Resource.GAN.Advertisers.List",
      "Network.Google.Resource.GAN.CcOffers.List",
      "Network.Google.Resource.GAN.Events.List",
      "Network.Google.Resource.GAN.Links.Get",
      "Network.Google.Resource.GAN.Links.Insert",
      "Network.Google.Resource.GAN.Links.List",
      "Network.Google.Resource.GAN.Publishers.Get",
      "Network.Google.Resource.GAN.Publishers.List",
      "Network.Google.Resource.GAN.Reports.Get"
    ],
    "name": "gogol-affiliates",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Int",
        "Data.IORef",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "GHC.IO.Buffer",
        "GHC.IO.BufferedIO",
        "GHC.IO.Device",
        "GHC.IO.Encoding",
        "GHC.IO.Exception",
        "GHC.IO.Handle",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Handle",
      "Data.ByteString.Handle.Read",
      "Data.ByteString.Handle.Write",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.Char",
      "Data.Int",
      "Data.IORef",
      "Data.Maybe",
      "Data.Typeable",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "GHC.IO.Buffer",
      "GHC.IO.BufferedIO",
      "GHC.IO.Device",
      "GHC.IO.Encoding",
      "GHC.IO.Exception",
      "GHC.IO.Handle",
      "System.IO",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Arbitrary"
    ],
    "modules": [
      "Data.ByteString.Handle"
    ],
    "name": "bytestring-handle",
    "version": "0.1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.Map"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Read"
      ],
      "wai": [
        "Network.Wai"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Criterion.Main",
      "Data.ByteString",
      "Data.CaseInsensitive",
      "Data.Foldable",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Read",
      "Network.HTTP.Types",
      "Network.Wai",
      "Network.Wai.RequestSpec",
      "Network.Wai.RequestSpec.Class",
      "Network.Wai.RequestSpec.Combinators",
      "Network.Wai.RequestSpec.Error",
      "Network.Wai.RequestSpec.Internal.Combinators",
      "Network.Wai.RequestSpec.Internal.Combinators.Params",
      "Network.Wai.RequestSpec.Internal.Env",
      "Network.Wai.RequestSpec.Internal.Env.Types",
      "Network.Wai.RequestSpec.Internal.Parser",
      "Network.Wai.RequestSpec.Parser",
      "Prelude"
    ],
    "modules": [
      "Network.Wai.RequestSpec",
      "Network.Wai.RequestSpec.Class",
      "Network.Wai.RequestSpec.Combinators",
      "Network.Wai.RequestSpec.Error",
      "Network.Wai.RequestSpec.Parser",
      "Network.Wai.RequestSpec.Internal.Combinators",
      "Network.Wai.RequestSpec.Internal.Env",
      "Network.Wai.RequestSpec.Internal.Env.Types",
      "Network.Wai.RequestSpec.Internal.Parser"
    ],
    "name": "wai-request-spec",
    "version": "0.10.2.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8",
        "Data.Attoparsec.ByteString.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "GHC.Float",
        "Prelude",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder",
        "Data.ByteString.Lazy.Builder.Extras"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ]
    },
    "imports": [
      "Blaze.Text.Double",
      "Control.Applicative",
      "Control.Monad",
      "Criterion",
      "Criterion.Main",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Conversion",
      "Data.ByteString.Conversion.From",
      "Data.ByteString.Conversion.Internal",
      "Data.ByteString.Conversion.To",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.ByteString.Lazy.Builder.Extras",
      "Data.CaseInsensitive",
      "Data.Double.Conversion.Text",
      "Data.Int",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Data.Word",
      "GHC.Float",
      "Prelude",
      "Properties",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Data.ByteString.Conversion",
      "Data.ByteString.Conversion.To",
      "Data.ByteString.Conversion.From"
    ],
    "name": "bytestring-conversion",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Text",
        "Data.Attoparsec.Text.Lazy"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor",
        "Data.List",
        "Data.Monoid",
        "Prelude",
        "System.Environment"
      ],
      "blaze-html": [],
      "blaze-markup": [
        "Text.Blaze",
        "Text.Blaze.Internal",
        "Text.Blaze.Renderer.Text"
      ],
      "taggy": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Criterion.Main",
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Text",
      "Data.Attoparsec.Text.Lazy",
      "Data.Char",
      "Data.Foldable",
      "Data.Functor",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Vector",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "Test.Hspec",
      "Text.Blaze",
      "Text.Blaze.Internal",
      "Text.Blaze.Renderer.Text",
      "Text.HTML.TagSoup",
      "Text.Taggy",
      "Text.Taggy.DOM",
      "Text.Taggy.Entities",
      "Text.Taggy.Parser",
      "Text.Taggy.Renderer",
      "Text.Taggy.Types"
    ],
    "modules": [
      "Text.Taggy",
      "Text.Taggy.DOM",
      "Text.Taggy.Entities",
      "Text.Taggy.Parser",
      "Text.Taggy.Renderer",
      "Text.Taggy.Types"
    ],
    "name": "taggy",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Concurrent.QSem",
        "Control.Concurrent.QSemN",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Prelude",
        "System.Exit",
        "System.Timeout"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "stm": [
        "Control.Concurrent.STM.TVar",
        "Control.Monad.STM"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MSampleVar",
      "Control.Concurrent.MSem",
      "Control.Concurrent.MSemN",
      "Control.Concurrent.MSemN2",
      "Control.Concurrent.MVar",
      "Control.Concurrent.QSem",
      "Control.Concurrent.QSemN",
      "Control.Concurrent.SampleVar",
      "Control.Concurrent.SSem",
      "Control.Concurrent.STM.SSem",
      "Control.Concurrent.STM.SSemInternals",
      "Control.Concurrent.STM.TVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.STM",
      "Data.Foldable",
      "Data.Map",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Set",
      "Data.Typeable",
      "Data.Word",
      "Prelude",
      "System.Exit",
      "System.Timeout",
      "Test.HUnit"
    ],
    "modules": [
      "Control.Concurrent.MSem",
      "Control.Concurrent.MSemN",
      "Control.Concurrent.MSemN2",
      "Control.Concurrent.MSampleVar",
      "Control.Concurrent.FairRWLock",
      "Control.Concurrent.SSem",
      "Control.Concurrent.STM.SSem"
    ],
    "name": "SafeSemaphore",
    "version": "0.10.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [],
      "filepath": [],
      "http-types": [],
      "lens": [],
      "mainland-pretty": [],
      "purescript-bridge": [],
      "servant": [
        "Servant.Utils.Links"
      ],
      "servant-foreign": [
        "Servant.Foreign"
      ],
      "servant-server": [
        "Servant"
      ],
      "servant-subscriber": [
        "Servant.Subscriber.Subscribable"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Data.ByteString.Lazy",
      "Data.Map",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Servant",
      "Servant.Foreign",
      "Servant.PureScript.MakeRequests",
      "Servant.PureScript.Subscriber",
      "Servant.Subscriber.Subscribable",
      "Servant.Utils.Links"
    ],
    "modules": [
      "Servant.PureScript.Internal",
      "Servant.PureScript.CodeGen",
      "Servant.PureScript.Subscriber",
      "Servant.PureScript.MakeRequests",
      "Servant.PureScript",
      "Servant.API.BrowserHeader"
    ],
    "name": "servant-purescript",
    "version": "0.3.1.5"
  },
  {
    "dependencies": {
      "binary": [
        "Data.Binary"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Binary",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Traversable",
      "Data.Trie",
      "Data.Trie.BitTwiddle",
      "Data.Trie.ByteStringInternal",
      "Data.Trie.Errors",
      "Data.Trie.Internal",
      "Data.Word",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Exts",
      "GlaExts",
      "Prelude"
    ],
    "modules": [
      "Data.Trie",
      "Data.Trie.Internal",
      "Data.Trie.Convenience"
    ],
    "name": "bytestring-trie",
    "version": "0.2.4.1"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "enclosed-exceptions": [],
      "monad-control": [],
      "transformers": [],
      "wai": [],
      "wai-websockets": [
        "Network.Wai.Handler.WebSockets"
      ],
      "websockets": [
        "Network.WebSockets"
      ],
      "yesod-core": [
        "Yesod.Core"
      ]
    },
    "imports": [
      "Control.Concurrent.Async",
      "Data.Conduit",
      "Data.Conduit.List",
      "Network.Wai.Handler.WebSockets",
      "Network.WebSockets",
      "Yesod.Core"
    ],
    "modules": [
      "Yesod.WebSockets"
    ],
    "name": "yesod-websockets",
    "version": "0.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Int",
        "Data.IORef",
        "Data.Monoid",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.ForeignPtr.Unsafe",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "GHC.Exts",
        "GHC.IO",
        "System.IO",
        "System.IO.Unsafe",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Extra",
        "Data.ByteString.Builder.Prim",
        "Data.ByteString.Builder.Prim.Internal",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "ghc-prim": [
        "GHC.CString",
        "GHC.Magic"
      ]
    },
    "imports": [
      "Bstr",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Criterion.Main",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Extra",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Prim.Internal",
      "Data.ByteString.FastBuilder",
      "Data.ByteString.FastBuilder.Internal",
      "Data.ByteString.FastBuilder.Internal.Prim",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IntMap",
      "Data.IORef",
      "Data.Monoid",
      "Data.Scientific",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Fast",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "GHC.CString",
      "GHC.Exts",
      "GHC.IO",
      "GHC.Magic",
      "HashMapExts",
      "LIB",
      "System.IO",
      "System.IO.Unsafe",
      "System.Process",
      "System.Timeout",
      "Test.QuickCheck",
      "Unsafe.TrueName"
    ],
    "modules": [
      "Data.ByteString.FastBuilder",
      "Data.ByteString.FastBuilder.Internal"
    ],
    "name": "fast-builder",
    "version": "0.0.0.6"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit"
      ],
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Ratio",
        "Data.Word",
        "Foreign.C",
        "Foreign.C.String",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Array",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Posix.Types",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hslogger": [
        "System.Log.Logger"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.State"
      ],
      "network": [
        "Network",
        "Network.BSD",
        "Network.Socket"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "old-time": [
        "System.Time"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "process": [
        "System.Process"
      ],
      "random": [],
      "regex-compat": [
        "Text.Regex"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ]
    },
    "imports": [
      "Bitstest",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Exception.ErrorCall.EqInstance",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.State",
      "CRC32GZIPtest",
      "CRC32POSIXtest",
      "Data.Array",
      "Data.Bits",
      "Data.Bits.Utils",
      "Data.Char",
      "Data.Compression.Inflate",
      "Data.CSV",
      "Data.Either.Utils",
      "Data.FiniteMap",
      "Data.Hash.CRC32.GZip",
      "Data.IORef",
      "Data.List",
      "Data.List.Utils",
      "Data.Map",
      "Data.Map.Utils",
      "Data.Maybe",
      "Data.MIME.Types",
      "Data.Progress.Tracker",
      "Data.Quantity",
      "Data.Ratio",
      "Data.String.Utils",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Word",
      "Eithertest",
      "Foreign.C",
      "Foreign.C.String",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Globtest",
      "GZiptest",
      "HVFStest",
      "HVIOtest",
      "IOtest",
      "Listtest",
      "Maptest",
      "MIMETypestest",
      "MissingH.IO",
      "MissingH.List",
      "MissingH.Logging.Logger",
      "MissingH.Network.SocketServer",
      "MissingH.Printf",
      "MissingH.Str",
      "Network",
      "Network.BSD",
      "Network.Socket",
      "Network.Utils",
      "Pathtest",
      "ProgressTrackertest",
      "Str.CSVtest",
      "Strtest",
      "System.Cmd.Utils",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FileArchive.GZip",
      "System.FilePath",
      "System.IO",
      "System.IO.Binary",
      "System.IO.Error",
      "System.IO.HVFS",
      "System.IO.HVFS.Combinators",
      "System.IO.HVFS.InstanceHelpers",
      "System.IO.HVFS.Utils",
      "System.IO.HVIO",
      "System.IO.PlafCompat",
      "System.IO.StatCompat",
      "System.IO.Unsafe",
      "System.IO.Utils",
      "System.IO.WindowsCompat",
      "System.Locale",
      "System.Log.Logger",
      "System.Path",
      "System.Path.Glob",
      "System.Path.NameManip",
      "System.Path.WildMatch",
      "System.Posix.Consts",
      "System.Posix.Directory",
      "System.Posix.Files",
      "System.Posix.IO",
      "System.Posix.Process",
      "System.Posix.Signals",
      "System.Posix.Temp",
      "System.Posix.Types",
      "System.Process",
      "System.Time",
      "System.Time.Utils",
      "Test.HUnit",
      "Test.HUnit.Tools",
      "Test.QuickCheck",
      "Tests",
      "Text.ParserCombinators.Parsec",
      "Text.Printf",
      "Text.Regex",
      "Timetest",
      "WildMatchtest"
    ],
    "modules": [
      "Data.String.Utils",
      "System.IO.Utils",
      "System.IO.Binary",
      "Data.List.Utils",
      "System.Daemon",
      "Text.ParserCombinators.Parsec.Utils",
      "Network.Email.Mailbox",
      "Control.Concurrent.Thread.Utils",
      "Network.Email.Sendmail",
      "Data.CSV",
      "System.Cmd.Utils",
      "Data.BinPacking",
      "Data.Progress.Tracker",
      "Data.Progress.Meter",
      "Data.Quantity",
      "Data.Map.Utils",
      "System.Path",
      "System.Path.NameManip",
      "System.Path.WildMatch",
      "System.Path.Glob",
      "System.Time.Utils",
      "Network.Utils",
      "Network.SocketServer",
      "Data.Either.Utils",
      "Data.Maybe.Utils",
      "Data.Tuple.Utils",
      "Data.Bits.Utils",
      "Data.Hash.CRC32.GZip",
      "Data.Hash.MD5",
      "Data.Hash.MD5.Zord64_HARD",
      "Data.Compression.Inflate",
      "System.FileArchive.GZip",
      "System.IO.HVFS",
      "System.IO.HVFS.Combinators",
      "System.IO.HVFS.InstanceHelpers",
      "System.IO.HVFS.Utils",
      "System.IO.HVIO",
      "System.IO.StatCompat",
      "System.IO.WindowsCompat",
      "System.IO.PlafCompat",
      "System.Posix.Consts",
      "System.Debian",
      "System.Debian.ControlParser",
      "Data.MIME.Types",
      "System.Console.GetOpt.Utils"
    ],
    "name": "MissingH",
    "version": "1.4.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Typeable",
        "Data.Void",
        "Numeric",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [],
      "old-locale": [
        "System.Locale"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "pretty": [
        "Text.PrettyPrint.HughesPJ"
      ],
      "syb": [
        "Data.Generics.Aliases",
        "Data.Generics.Basics"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Quote"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time"
      ],
      "void": []
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.Array",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Foldable",
      "Data.Generics.Aliases",
      "Data.Generics.Basics",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Typeable",
      "Data.Void",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Quote",
      "Numeric",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Locale",
      "Text.ParserCombinators.Parsec",
      "Text.PrettyPrint.HughesPJ",
      "Text.StringTemplate.Base",
      "Text.StringTemplate.Classes",
      "Text.StringTemplate.Group",
      "Text.StringTemplate.Instances",
      "Text.StringTemplate.Renderf"
    ],
    "modules": [
      "Text.StringTemplate",
      "Text.StringTemplate.Base",
      "Text.StringTemplate.Classes",
      "Text.StringTemplate.GenericStandard",
      "Text.StringTemplate.QQ"
    ],
    "name": "HStringTemplate",
    "version": "0.8.5"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.Firehose",
      "Test.AWS.Firehose",
      "Test.AWS.Firehose.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.Firehose",
      "Network.AWS.Firehose.CreateDeliveryStream",
      "Network.AWS.Firehose.DeleteDeliveryStream",
      "Network.AWS.Firehose.DescribeDeliveryStream",
      "Network.AWS.Firehose.ListDeliveryStreams",
      "Network.AWS.Firehose.PutRecord",
      "Network.AWS.Firehose.PutRecordBatch",
      "Network.AWS.Firehose.Types",
      "Network.AWS.Firehose.UpdateDestination",
      "Network.AWS.Firehose.Waiters"
    ],
    "name": "amazonka-kinesis-firehose",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "HPDF": [
        "Graphics.PDF"
      ],
      "JuicyPixels": [
        "Codec.Picture",
        "Codec.Picture.Metadata",
        "Codec.Picture.Types"
      ],
      "aeson": [
        "Data.Aeson.TH",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Traversable",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "Foreign.ForeignPtr",
        "Foreign.Storable",
        "GHC.Generics",
        "GHC.Ptr",
        "Numeric",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "binary": [
        "Data.Binary.Builder",
        "Data.Binary.Get"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "executable-path": [
        "System.Environment.Executable"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "haskeline": [
        "System.Console.Haskeline"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "natural-sort": [
        "Algorithms.NaturalSort"
      ],
      "optparse-applicative": [
        "Options.Applicative",
        "Options.Applicative.Help.Chunk"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Error",
        "Text.Parsec.Language",
        "Text.Parsec.String",
        "Text.Parsec.Token"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "split": [
        "Data.List.Split"
      ],
      "spool": [
        "Data.Vector.Storable.ByteString"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Quote",
        "Language.Haskell.TH.Syntax"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Storable"
      ],
      "yaml": [
        "Data.Yaml"
      ],
      "zlib": [
        "Codec.Compression.Zlib"
      ]
    },
    "imports": [
      "Algorithms.NaturalSort",
      "BakedVector",
      "Codec.Compression.Zlib",
      "Codec.Picture",
      "Codec.Picture.Metadata",
      "Codec.Picture.Types",
      "Commands",
      "Constants",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Strict",
      "Control.Monad.ST",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Cypher",
      "Data.Aeson.TH",
      "Data.Aeson.Types",
      "Data.Binary.Builder",
      "Data.Binary.Get",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Functor",
      "Data.Hashable",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.Time",
      "Data.Time.Format",
      "Data.Traversable",
      "Data.Vector",
      "Data.Vector.Storable",
      "Data.Vector.Storable.ByteString",
      "Data.Version",
      "Data.Word",
      "Data.Yaml",
      "Debug.Trace",
      "Foreign.ForeignPtr",
      "Foreign.Storable",
      "GHC.Generics",
      "GHC.Ptr",
      "GMEParser",
      "GMERun",
      "GMEWriter",
      "Graphics.PDF",
      "KnownCodes",
      "Language",
      "Language.Haskell.TH.Quote",
      "Language.Haskell.TH.Syntax",
      "Lint",
      "Numeric",
      "OidCode",
      "OidTable",
      "OneLineParser",
      "Options.Applicative",
      "Options.Applicative.Help.Chunk",
      "Paths",
      "PlaySound",
      "PrettyPrint",
      "RangeParser",
      "System.Console.Haskeline",
      "System.Directory",
      "System.Environment",
      "System.Environment.Executable",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Locale",
      "System.Process",
      "System.Random",
      "Text.Parsec",
      "Text.Parsec.Error",
      "Text.Parsec.Language",
      "Text.Parsec.String",
      "Text.Parsec.Token",
      "Text.Printf",
      "TextToSpeech",
      "TipToiYaml",
      "TipToiYamlAux",
      "Types",
      "Utils"
    ],
    "modules": [],
    "name": "tttool",
    "version": "1.6.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Foldable",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "tree-fun": [
        "Math.TreeFun.Tree",
        "Math.TreeFun.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Foldable",
      "Data.Function",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Sequence",
      "Data.Set",
      "Data.Tree",
      "Math.Clumpiness.Algorithms",
      "Math.Clumpiness.Types",
      "Math.Clumpiness.Utilities",
      "Math.TreeFun.Tree",
      "Math.TreeFun.Types"
    ],
    "modules": [
      "Math.Clumpiness.Algorithms",
      "Math.Clumpiness.Types",
      "Math.Clumpiness.Utilities",
      "Math.Clumpiness.Pinpoint"
    ],
    "name": "clumpiness",
    "version": "0.17.0.0"
  },
  {
    "dependencies": {
      "base": [],
      "conduit": [],
      "conduit-parse": [],
      "containers": [],
      "exceptions": [],
      "parsers": [],
      "text": [],
      "xml-conduit": [
        "Text.XML.Stream.Parse"
      ],
      "xml-types": []
    },
    "imports": [
      "Language.Haskell.HLint",
      "Text.XML.Stream.Parse"
    ],
    "modules": [
      "Data.Conduit.Parser.XML",
      "Data.Conduit.Parser.XML.Internal"
    ],
    "name": "xml-conduit-parse",
    "version": "0.3.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.IORef",
        "Prelude"
      ],
      "containers": [],
      "hashable": [
        "Data.Hashable"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Lib"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Monad",
      "Control.Once.Class",
      "Control.Once.Internal",
      "Control.Once.TH",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lib",
      "Prelude"
    ],
    "modules": [
      "Control.Once"
    ],
    "name": "once",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Data.FingerTree",
      "Data.Foldable",
      "Data.Functor",
      "Data.List",
      "Data.Monoid",
      "Data.Traversable",
      "Prelude",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Poly"
    ],
    "modules": [
      "Data.FingerTree",
      "Data.IntervalMap.FingerTree",
      "Data.PriorityQueue.FingerTree"
    ],
    "name": "fingertree",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "bindings-DSL": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Bindings.LibZip"
    ],
    "name": "bindings-libzip",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Monoid"
    ],
    "modules": [
      "Control.Newtype"
    ],
    "name": "newtype",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ],
      "deepseq": [],
      "hw-prim": [],
      "random": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Vector",
      "Data.Vector.Storable"
    ],
    "modules": [
      "HaskellWorks.Data.ByteString",
      "HaskellWorks.Data.Char.IsChar",
      "HaskellWorks.Data.Decode",
      "HaskellWorks.Data.FromByteString",
      "HaskellWorks.Data.FromForeignRegion",
      "HaskellWorks.Data.IndexedSeq",
      "HaskellWorks.Data.Naive",
      "HaskellWorks.Data.Positioning",
      "HaskellWorks.Data.Search",
      "HaskellWorks.Data.Seq",
      "HaskellWorks.Data.Snoc",
      "HaskellWorks.Data.TreeCursor",
      "HaskellWorks.Data.Vector.BoxedVectorLike",
      "HaskellWorks.Data.Vector.StorableVectorLike",
      "HaskellWorks.Data.Vector.VectorLike"
    ],
    "name": "hw-prim",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.Functor",
        "Data.IORef",
        "Data.Typeable",
        "GHC.Conc",
        "Prelude",
        "System.IO",
        "System.IO.Unsafe",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "time": [
        "Data.Time"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.Stats",
      "Control.Exception.Base",
      "Control.Monad",
      "Data.Functor",
      "Data.IORef",
      "Data.Map",
      "Data.Time",
      "Data.Typeable",
      "GHC.Conc",
      "Language.Haskell.TH",
      "Prelude",
      "System.IO",
      "System.IO.Unsafe",
      "Text.Printf"
    ],
    "modules": [
      "Control.Concurrent.STM.Stats"
    ],
    "name": "stm-stats",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Dynamic",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Proxy",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.Timeout",
        "Text.Read"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char8"
      ],
      "byteable": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "cereal": [
        "Data.Serialize"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "cryptohash": [],
      "data-default": [],
      "directory": [],
      "filepath": [],
      "http-conduit": [
        "Network.HTTP.Conduit"
      ],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Identity"
      ],
      "network": [
        "Network.BSD",
        "Network.Socket"
      ],
      "old-locale": [],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "safe": [],
      "scientific": [
        "Data.Scientific"
      ],
      "tagged": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ],
      "vector": [
        "Data.Vector"
      ],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Cursor"
      ]
    },
    "imports": [
      "Aws",
      "Aws.Aws",
      "Aws.Core",
      "Aws.DynamoDb",
      "Aws.Iam.Core",
      "Aws.Iam.Internal",
      "Aws.S3",
      "Aws.S3.Commands",
      "Aws.S3.Commands.CopyObject",
      "Aws.S3.Commands.DeleteBucket",
      "Aws.S3.Commands.DeleteObject",
      "Aws.S3.Commands.DeleteObjects",
      "Aws.S3.Commands.GetBucket",
      "Aws.S3.Commands.GetBucketLocation",
      "Aws.S3.Commands.GetObject",
      "Aws.S3.Commands.GetService",
      "Aws.S3.Commands.HeadObject",
      "Aws.S3.Commands.Multipart",
      "Aws.S3.Commands.PutBucket",
      "Aws.S3.Commands.PutObject",
      "Aws.S3.Core",
      "Aws.Ses.Commands",
      "Aws.Ses.Commands.DeleteIdentity",
      "Aws.Ses.Commands.GetIdentityDkimAttributes",
      "Aws.Ses.Commands.GetIdentityNotificationAttributes",
      "Aws.Ses.Commands.GetIdentityVerificationAttributes",
      "Aws.Ses.Commands.ListIdentities",
      "Aws.Ses.Commands.SendRawEmail",
      "Aws.Ses.Commands.SetIdentityDkimEnabled",
      "Aws.Ses.Commands.SetIdentityFeedbackForwardingEnabled",
      "Aws.Ses.Commands.SetIdentityNotificationTopic",
      "Aws.Ses.Commands.VerifyDomainDkim",
      "Aws.Ses.Commands.VerifyDomainIdentity",
      "Aws.Ses.Commands.VerifyEmailIdentity",
      "Aws.Ses.Core",
      "Aws.SimpleDb",
      "Aws.SimpleDb.Commands",
      "Aws.SimpleDb.Commands.Attributes",
      "Aws.SimpleDb.Commands.Domain",
      "Aws.SimpleDb.Commands.Select",
      "Aws.SimpleDb.Core",
      "Aws.Sqs",
      "Aws.Sqs.Commands",
      "Aws.Sqs.Commands.Message",
      "Aws.Sqs.Commands.Permission",
      "Aws.Sqs.Commands.Queue",
      "Aws.Sqs.Commands.QueueAttributes",
      "Aws.Sqs.Core",
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char8",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Error",
      "Control.Exception",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Resource",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.Text",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.UTF8",
      "Data.CaseInsensitive",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Dynamic",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Scientific",
      "Data.Serialize",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Read",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Vector",
      "DynamoDb.Utils",
      "Network.BSD",
      "Network.HTTP.Client",
      "Network.HTTP.Conduit",
      "Network.HTTP.Types",
      "Network.Socket",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Timeout",
      "Test.QuickCheck.Instances",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Property",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Text.Read",
      "Text.XML",
      "Text.XML.Cursor",
      "Utils"
    ],
    "modules": [
      "Aws",
      "Aws.Aws",
      "Aws.Core",
      "Aws.DynamoDb",
      "Aws.DynamoDb.Commands",
      "Aws.DynamoDb.Commands.DeleteItem",
      "Aws.DynamoDb.Commands.GetItem",
      "Aws.DynamoDb.Commands.PutItem",
      "Aws.DynamoDb.Commands.Query",
      "Aws.DynamoDb.Commands.Scan",
      "Aws.DynamoDb.Commands.Table",
      "Aws.DynamoDb.Commands.UpdateItem",
      "Aws.DynamoDb.Core",
      "Aws.Ec2.InstanceMetadata",
      "Aws.Iam",
      "Aws.Iam.Commands",
      "Aws.Iam.Commands.CreateAccessKey",
      "Aws.Iam.Commands.CreateUser",
      "Aws.Iam.Commands.DeleteAccessKey",
      "Aws.Iam.Commands.DeleteUser",
      "Aws.Iam.Commands.DeleteUserPolicy",
      "Aws.Iam.Commands.GetUser",
      "Aws.Iam.Commands.GetUserPolicy",
      "Aws.Iam.Commands.ListAccessKeys",
      "Aws.Iam.Commands.ListMfaDevices",
      "Aws.Iam.Commands.ListUserPolicies",
      "Aws.Iam.Commands.ListUsers",
      "Aws.Iam.Commands.PutUserPolicy",
      "Aws.Iam.Commands.UpdateAccessKey",
      "Aws.Iam.Commands.UpdateUser",
      "Aws.Iam.Core",
      "Aws.Iam.Internal",
      "Aws.Network",
      "Aws.S3",
      "Aws.S3.Commands",
      "Aws.S3.Commands.CopyObject",
      "Aws.S3.Commands.DeleteBucket",
      "Aws.S3.Commands.DeleteObject",
      "Aws.S3.Commands.DeleteObjects",
      "Aws.S3.Commands.GetBucket",
      "Aws.S3.Commands.GetBucketLocation",
      "Aws.S3.Commands.GetObject",
      "Aws.S3.Commands.GetService",
      "Aws.S3.Commands.HeadObject",
      "Aws.S3.Commands.PutBucket",
      "Aws.S3.Commands.PutObject",
      "Aws.S3.Commands.Multipart",
      "Aws.S3.Core",
      "Aws.Ses",
      "Aws.Ses.Commands",
      "Aws.Ses.Commands.DeleteIdentity",
      "Aws.Ses.Commands.GetIdentityDkimAttributes",
      "Aws.Ses.Commands.GetIdentityNotificationAttributes",
      "Aws.Ses.Commands.GetIdentityVerificationAttributes",
      "Aws.Ses.Commands.ListIdentities",
      "Aws.Ses.Commands.SendRawEmail",
      "Aws.Ses.Commands.SetIdentityDkimEnabled",
      "Aws.Ses.Commands.SetIdentityFeedbackForwardingEnabled",
      "Aws.Ses.Commands.SetIdentityNotificationTopic",
      "Aws.Ses.Commands.VerifyDomainDkim",
      "Aws.Ses.Commands.VerifyDomainIdentity",
      "Aws.Ses.Commands.VerifyEmailIdentity",
      "Aws.Ses.Core",
      "Aws.SimpleDb",
      "Aws.SimpleDb.Commands",
      "Aws.SimpleDb.Commands.Attributes",
      "Aws.SimpleDb.Commands.Domain",
      "Aws.SimpleDb.Commands.Select",
      "Aws.SimpleDb.Core",
      "Aws.Sqs",
      "Aws.Sqs.Commands",
      "Aws.Sqs.Commands.Message",
      "Aws.Sqs.Commands.Permission",
      "Aws.Sqs.Commands.Queue",
      "Aws.Sqs.Commands.QueueAttributes",
      "Aws.Sqs.Core"
    ],
    "name": "aws",
    "version": "0.14.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.IArray"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Ix",
        "Data.Monoid",
        "Data.Void"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Maybe",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-compat": [],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Maybe",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Array",
      "Data.Array.IArray",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Graph.Algorithm",
      "Data.Graph.Class",
      "Data.Graph.Class.AdjacencyList",
      "Data.Graph.Class.AdjacencyMatrix",
      "Data.Graph.Class.Bidirectional",
      "Data.Graph.Class.EdgeEnumerable",
      "Data.Graph.Class.VertexEnumerable",
      "Data.Graph.Internal.Color",
      "Data.Graph.PropertyMap",
      "Data.IntMap",
      "Data.Ix",
      "Data.Map",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Void"
    ],
    "modules": [
      "Data.Graph.AdjacencyList",
      "Data.Graph.AdjacencyMatrix",
      "Data.Graph.Algorithm",
      "Data.Graph.Algorithm.DepthFirstSearch",
      "Data.Graph.Algorithm.BreadthFirstSearch",
      "Data.Graph.Class",
      "Data.Graph.Class.AdjacencyList",
      "Data.Graph.Class.AdjacencyMatrix",
      "Data.Graph.Class.EdgeEnumerable",
      "Data.Graph.Class.Bidirectional",
      "Data.Graph.Class.VertexEnumerable",
      "Data.Graph.Dual",
      "Data.Graph.PropertyMap"
    ],
    "name": "graphs",
    "version": "0.7"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable"
      ],
      "foldl": [
        "Control.Foldl"
      ],
      "mwc-random": [],
      "primitive": [],
      "sampling": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable"
      ]
    },
    "imports": [
      "Control.Foldl",
      "Criterion.Main",
      "Data.Foldable",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Numeric.Sampling"
    ],
    "modules": [
      "Numeric.Sampling"
    ],
    "name": "sampling",
    "version": "0.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Monad"
      ],
      "hspec": [
        "Test.Hspec"
      ],
      "text": [
        "Data.Text"
      ],
      "users": [
        "Web.Users.Types"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Monad",
      "Data.Text",
      "Test.Hspec",
      "Web.Users.Types"
    ],
    "modules": [
      "Web.Users.TestSpec"
    ],
    "name": "users-test",
    "version": "0.5.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.Fixed",
        "Data.Int",
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.Typeable",
        "Data.Typeable.Internal",
        "Data.Unique",
        "Data.Version",
        "Data.Void",
        "Data.Word",
        "Foreign.C",
        "Foreign.C.Error",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Array",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Foreign.Storable",
        "GHC.Base",
        "GHC.Conc",
        "GHC.Exts",
        "GHC.Fingerprint.Type",
        "GHC.Generics",
        "GHC.Natural",
        "GHC.ST",
        "GHC.Word",
        "Numeric",
        "System.IO.Unsafe",
        "System.Mem.StableName"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Short",
        "Data.ByteString.Short.Internal",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST",
      "Criterion.Main",
      "Crypto.MAC.SipHash",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Short",
      "Data.ByteString.Short.Internal",
      "Data.ByteString.Unsafe",
      "Data.Fixed",
      "Data.Hashable",
      "Data.Hashable.Class",
      "Data.Hashable.Generic",
      "Data.Hashable.SipHash",
      "Data.Int",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.Text",
      "Data.Text.Array",
      "Data.Text.Internal",
      "Data.Text.Lazy",
      "Data.Typeable",
      "Data.Typeable.Internal",
      "Data.Unique",
      "Data.Version",
      "Data.Void",
      "Data.Word",
      "Foreign.C",
      "Foreign.C.Error",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Array",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.Base",
      "GHC.Conc",
      "GHC.Exts",
      "GHC.Fingerprint.Type",
      "GHC.Generics",
      "GHC.Integer.GMP.Internals",
      "GHC.Natural",
      "GHC.Prim",
      "GHC.ST",
      "GHC.Word",
      "Numeric",
      "Properties",
      "Regress",
      "Regress.Mmap",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Hashable"
    ],
    "name": "hashable",
    "version": "1.2.4.0"
  },
  {
    "dependencies": {
      "Chart": [
        "Graphics.Rendering.Chart.Backend",
        "Graphics.Rendering.Chart.Backend.Impl",
        "Graphics.Rendering.Chart.Backend.Types",
        "Graphics.Rendering.Chart.Drawing",
        "Graphics.Rendering.Chart.Geometry",
        "Graphics.Rendering.Chart.Renderable",
        "Graphics.Rendering.Chart.State"
      ],
      "SVGFonts": [
        "Graphics.SVGFonts",
        "Graphics.SVGFonts.CharReference",
        "Graphics.SVGFonts.ReadFont",
        "Graphics.SVGFonts.WriteFont"
      ],
      "base": [
        "Data.List",
        "Data.Monoid",
        "Data.Traversable"
      ],
      "blaze-markup": [
        "Text.Blaze.Renderer.Text"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "colour": [
        "Data.Colour",
        "Data.Colour.SRGB"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "diagrams-core": [
        "Diagrams.Core.Transform"
      ],
      "diagrams-lib": [
        "Diagrams",
        "Diagrams.Prelude",
        "Diagrams.TwoD",
        "Diagrams.TwoD.Arc",
        "Diagrams.TwoD.Text"
      ],
      "diagrams-postscript": [
        "Diagrams.Backend.Postscript"
      ],
      "diagrams-svg": [
        "Diagrams.Backend.SVG"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.State.Lazy"
      ],
      "old-locale": [],
      "operational": [
        "Control.Monad.Operational"
      ],
      "svg-builder": [
        "Graphics.Svg"
      ],
      "text": [
        "Data.Text"
      ],
      "time": []
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Operational",
      "Control.Monad.State.Lazy",
      "Data.ByteString.Lazy",
      "Data.Colour",
      "Data.Colour.SRGB",
      "Data.Default.Class",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Set",
      "Data.Text",
      "Data.Traversable",
      "Diagrams",
      "Diagrams.Backend.Postscript",
      "Diagrams.Backend.SVG",
      "Diagrams.Core.Transform",
      "Diagrams.Prelude",
      "Diagrams.TwoD",
      "Diagrams.TwoD.Arc",
      "Diagrams.TwoD.Text",
      "Graphics.Rendering.Chart.Backend",
      "Graphics.Rendering.Chart.Backend.Impl",
      "Graphics.Rendering.Chart.Backend.Types",
      "Graphics.Rendering.Chart.Drawing",
      "Graphics.Rendering.Chart.Geometry",
      "Graphics.Rendering.Chart.Renderable",
      "Graphics.Rendering.Chart.State",
      "Graphics.Svg",
      "Graphics.SVGFonts",
      "Graphics.SVGFonts.CharReference",
      "Graphics.SVGFonts.ReadFont",
      "Graphics.SVGFonts.WriteFont",
      "Paths",
      "Text.Blaze.Renderer.Text"
    ],
    "modules": [
      "Graphics.Rendering.Chart.Backend.Diagrams"
    ],
    "name": "Chart-diagrams",
    "version": "1.8"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ElasticTranscoder",
      "Test.AWS.ElasticTranscoder",
      "Test.AWS.ElasticTranscoder.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ElasticTranscoder",
      "Network.AWS.ElasticTranscoder.CancelJob",
      "Network.AWS.ElasticTranscoder.CreateJob",
      "Network.AWS.ElasticTranscoder.CreatePipeline",
      "Network.AWS.ElasticTranscoder.CreatePreset",
      "Network.AWS.ElasticTranscoder.DeletePipeline",
      "Network.AWS.ElasticTranscoder.DeletePreset",
      "Network.AWS.ElasticTranscoder.ListJobsByPipeline",
      "Network.AWS.ElasticTranscoder.ListJobsByStatus",
      "Network.AWS.ElasticTranscoder.ListPipelines",
      "Network.AWS.ElasticTranscoder.ListPresets",
      "Network.AWS.ElasticTranscoder.ReadJob",
      "Network.AWS.ElasticTranscoder.ReadPipeline",
      "Network.AWS.ElasticTranscoder.ReadPreset",
      "Network.AWS.ElasticTranscoder.TestRole",
      "Network.AWS.ElasticTranscoder.Types",
      "Network.AWS.ElasticTranscoder.UpdatePipeline",
      "Network.AWS.ElasticTranscoder.UpdatePipelineNotifications",
      "Network.AWS.ElasticTranscoder.UpdatePipelineStatus",
      "Network.AWS.ElasticTranscoder.Waiters"
    ],
    "name": "amazonka-elastictranscoder",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "HDBC": [
        "Database.HDBC"
      ],
      "base": [
        "Control.Exception"
      ]
    },
    "imports": [
      "Control.Exception",
      "Database.HDBC"
    ],
    "modules": [
      "Database.HDBC.Session"
    ],
    "name": "HDBC-session",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.IArray"
      ],
      "base": [
        "Data.List",
        "Data.Ord",
        "Foreign.Storable",
        "Prelude"
      ],
      "hmatrix": [
        "Numeric.LinearAlgebra"
      ],
      "hmatrix-gsl-stats": [
        "Numeric.GSL.Distribution.Continuous",
        "Numeric.GSL.Histogram",
        "Numeric.GSL.Histogram2D",
        "Numeric.GSL.Permutation",
        "Numeric.GSL.Sort",
        "Numeric.GSL.Statistics"
      ],
      "random": [
        "System.Random"
      ],
      "vector": [
        "Data.Vector.Generic",
        "Data.Vector.Storable"
      ]
    },
    "imports": [
      "Data.Array.IArray",
      "Data.List",
      "Data.Ord",
      "Data.Vector.Generic",
      "Data.Vector.Storable",
      "Foreign.Storable",
      "Numeric.GSL.Distribution.Continuous",
      "Numeric.GSL.Histogram",
      "Numeric.GSL.Histogram2D",
      "Numeric.GSL.Permutation",
      "Numeric.GSL.Sort",
      "Numeric.GSL.Statistics",
      "Numeric.LinearAlgebra",
      "Numeric.Statistics",
      "Numeric.Statistics.PDF",
      "Prelude",
      "System.Random"
    ],
    "modules": [
      "Numeric.Statistics",
      "Numeric.Statistics.PCA",
      "Numeric.Statistics.ICA",
      "Numeric.Statistics.PDF",
      "Numeric.Statistics.Information",
      "Numeric.Statistics.Histogram",
      "Numeric.Statistics.Surrogate"
    ],
    "name": "hstatistics",
    "version": "0.2.5.3"
  },
  {
    "dependencies": {
      "MonadPrompt": [
        "Control.Monad.Prompt"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Functor.Identity"
      ],
      "random-source": [
        "Data.Random.Internal.Source",
        "Data.Random.Source"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Prompt",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Class",
      "Data.Functor.Identity",
      "Data.Random.Internal.Source",
      "Data.Random.Source"
    ],
    "modules": [
      "Data.RVar"
    ],
    "name": "rvar",
    "version": "0.2.0.3"
  },
  {
    "dependencies": {
      "base": [],
      "containers": [
        "Data.Map"
      ],
      "mtl": [],
      "safe": []
    },
    "imports": [
      "Data.Map"
    ],
    "modules": [
      "PureIO"
    ],
    "name": "pure-io",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "base": [],
      "lens": [
        "Control.Lens"
      ],
      "taggy": [
        "Text.Taggy"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Lens",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.Lazy",
      "Test.DocTest",
      "Text.Taggy"
    ],
    "modules": [
      "Text.Taggy.Lens"
    ],
    "name": "taggy-lens",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "Control.Exception"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.Exception"
    ],
    "modules": [
      "Control.Concurrent.BroadcastChan"
    ],
    "name": "broadcast-chan",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Monad",
        "Data.Char",
        "Data.Foldable",
        "Data.Traversable",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "generic-aeson": [
        "Generics.Generic.Aeson"
      ],
      "generic-xmlpickler": [
        "Generics.XmlPickler"
      ],
      "hxt": [
        "Text.XML.HXT.Arrow.Pickle",
        "Text.XML.HXT.Arrow.Pickle.Schema",
        "Text.XML.HXT.Arrow.Pickle.Xml"
      ],
      "json-schema": [
        "Data.JSON.Schema",
        "Data.JSON.Schema.Combinators"
      ],
      "rest-stringmap": [
        "Rest.StringMap.HashMap.Strict"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "uuid": [
        "Data.UUID"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Foldable",
      "Data.JSON.Schema",
      "Data.JSON.Schema.Combinators",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Traversable",
      "Data.Typeable",
      "Data.UUID",
      "Generics.Generic.Aeson",
      "Generics.XmlPickler",
      "GHC.Generics",
      "Prelude",
      "Prelude.Compat",
      "Rest.StringMap.HashMap.Strict",
      "Rest.Types.Method",
      "Rest.Types.Void",
      "Text.XML.HXT.Arrow.Pickle",
      "Text.XML.HXT.Arrow.Pickle.Schema",
      "Text.XML.HXT.Arrow.Pickle.Xml"
    ],
    "modules": [
      "Rest.Types.Container",
      "Rest.Types.Container.Resource",
      "Rest.Types.Error",
      "Rest.Types.Info",
      "Rest.Types.Method",
      "Rest.Types.Range",
      "Rest.Types.ShowUrl",
      "Rest.Types.Void"
    ],
    "name": "rest-types",
    "version": "1.14.1.1"
  },
  {
    "dependencies": {
      "universe-instances-base": [
        "Data.Universe.Instances.Base"
      ],
      "universe-instances-extended": [
        "Data.Universe.Instances.Extended"
      ],
      "universe-instances-trans": [
        "Data.Universe.Instances.Trans"
      ],
      "universe-reverse-instances": [
        "Data.Universe.Instances.Eq",
        "Data.Universe.Instances.Ord",
        "Data.Universe.Instances.Read",
        "Data.Universe.Instances.Show",
        "Data.Universe.Instances.Traversable"
      ]
    },
    "imports": [
      "Data.Universe.Instances.Base",
      "Data.Universe.Instances.Eq",
      "Data.Universe.Instances.Extended",
      "Data.Universe.Instances.Ord",
      "Data.Universe.Instances.Read",
      "Data.Universe.Instances.Reverse",
      "Data.Universe.Instances.Show",
      "Data.Universe.Instances.Trans",
      "Data.Universe.Instances.Traversable"
    ],
    "modules": [
      "Data.Universe",
      "Data.Universe.Instances",
      "Data.Universe.Instances.Reverse"
    ],
    "name": "universe",
    "version": "1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Tuple",
        "Data.Word",
        "Prelude",
        "System.Environment",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Strict"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Unboxed"
      ],
      "xml": [
        "Text.XML.Light"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.Function",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Tuple",
      "Data.Vector",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Graphics.Text.TrueType.CharacterMap",
      "Graphics.Text.TrueType.FontFolders",
      "Graphics.Text.TrueType.FontType",
      "Graphics.Text.TrueType.Glyph",
      "Graphics.Text.TrueType.Header",
      "Graphics.Text.TrueType.HorizontalInfo",
      "Graphics.Text.TrueType.LanguageIds",
      "Graphics.Text.TrueType.MaxpTable",
      "Graphics.Text.TrueType.Name",
      "Graphics.Text.TrueType.OffsetTable",
      "Graphics.Text.TrueType.Types",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO.Error",
      "System.IO.Unsafe",
      "Text.XML.Light"
    ],
    "modules": [
      "Graphics.Text.TrueType",
      "Graphics.Text.TrueType.Internal"
    ],
    "name": "FontyFruity",
    "version": "0.5.3.2"
  },
  {
    "dependencies": {
      "Diff": [],
      "HUnit": [
        "Test.HUnit"
      ],
      "ansi-terminal": [],
      "base": [
        "Data.Either"
      ],
      "hscolour": [],
      "nicify-lib": [],
      "text": []
    },
    "imports": [
      "Data.Either",
      "Test.HUnit"
    ],
    "modules": [
      "Test.Hspec.Expectations.Pretty",
      "Test.Hspec.Expectations.Pretty.Contrib",
      "Test.Hspec.Expectations.Pretty.Matcher"
    ],
    "name": "hspec-expectations-pretty-diff",
    "version": "0.7.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Fixed",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Ratio",
        "Data.Typeable",
        "Debug.Trace",
        "GHC.Conc.Sync",
        "GHC.Exts",
        "GHC.Float",
        "System.Environment",
        "System.IO.Error"
      ],
      "binary": [],
      "bytestring": [],
      "colour": [
        "Data.Colour",
        "Data.Colour.Names",
        "Data.Colour.SRGB"
      ],
      "containers": [
        "Data.Map"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hmt": [
        "Music.Theory.Bjorklund"
      ],
      "hosc": [
        "Sound.OSC.Datum",
        "Sound.OSC.FD"
      ],
      "mersenne-random-pure64": [
        "System.Random.Mersenne.Pure64"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "parsec": [
        "Text.ParserCombinators.Parsec",
        "Text.ParserCombinators.Parsec.Language",
        "Text.ParserCombinators.Parsec.Token"
      ],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [],
      "websockets": [
        "Network.WebSockets"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans",
      "Data.Bits",
      "Data.Char",
      "Data.Colour",
      "Data.Colour.Names",
      "Data.Colour.SRGB",
      "Data.Fixed",
      "Data.Function",
      "Data.Hashable",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Ratio",
      "Data.Text",
      "Data.Text.IO",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Debug.Trace",
      "GHC.Conc.Sync",
      "GHC.Exts",
      "GHC.Float",
      "Music.Theory.Bjorklund",
      "Network.WebSockets",
      "Sound.OSC.Datum",
      "Sound.OSC.FD",
      "Sound.Tidal.Dirt",
      "Sound.Tidal.OscStream",
      "Sound.Tidal.Params",
      "Sound.Tidal.Parse",
      "Sound.Tidal.Pattern",
      "Sound.Tidal.Strategies",
      "Sound.Tidal.Stream",
      "Sound.Tidal.SuperCollider",
      "Sound.Tidal.Tempo",
      "Sound.Tidal.Time",
      "Sound.Tidal.Transition",
      "Sound.Tidal.Utils",
      "System.Environment",
      "System.IO.Error",
      "System.Process",
      "System.Random.Mersenne.Pure64",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.Parsec.Language",
      "Text.ParserCombinators.Parsec.Token"
    ],
    "modules": [
      "Sound.Tidal.Strategies",
      "Sound.Tidal.Dirt",
      "Sound.Tidal.Pattern",
      "Sound.Tidal.Stream",
      "Sound.Tidal.OscStream",
      "Sound.Tidal.Parse",
      "Sound.Tidal.Tempo",
      "Sound.Tidal.Time",
      "Sound.Tidal.Context",
      "Sound.Tidal.Utils",
      "Sound.Tidal.SuperCollider",
      "Sound.Tidal.Params",
      "Sound.Tidal.Transition"
    ],
    "name": "tidal",
    "version": "0.8.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "mtl": []
    },
    "imports": [
      "Control.Monad"
    ],
    "modules": [
      "Control.Monad.IfElse"
    ],
    "name": "IfElse",
    "version": "0.85"
  },
  {
    "dependencies": {
      "Spock": [
        "Web.Spock"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Monad"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "errors": [
        "Control.Error"
      ],
      "lifted-base": [
        "Control.Exception.Lifted"
      ],
      "mtl": [
        "Control.Monad.Trans"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Error",
      "Control.Exception.Lifted",
      "Control.Monad",
      "Control.Monad.Trans",
      "Data.Map.Strict",
      "Data.Time",
      "Data.Vector",
      "Test.Framework",
      "Web.Spock",
      "Web.Spock.Worker.Internal.Queue"
    ],
    "modules": [
      "Web.Spock.Worker",
      "Web.Spock.Worker.Internal.Queue"
    ],
    "name": "Spock-worker",
    "version": "0.3.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-html": [
        "Text.Blaze.Html.Renderer.Text"
      ],
      "cheapskate": [
        "Cheapskate"
      ],
      "highlighting-kate": [
        "Text.Highlighting.Kate",
        "Text.Highlighting.Kate.Styles"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Cheapskate",
      "Data.Text",
      "Data.Text.Lazy",
      "Text.Blaze.Html.Renderer.Text",
      "Text.Highlighting.Kate",
      "Text.Highlighting.Kate.Styles"
    ],
    "modules": [
      "Cheapskate.Highlight"
    ],
    "name": "cheapskate-highlight",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Word",
        "Foreign.ForeignPtr"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Unsafe"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lex.Integral",
      "Data.ByteString.Unsafe",
      "Data.Word",
      "Foreign.ForeignPtr"
    ],
    "modules": [
      "Data.ByteString.Lex.Integral",
      "Data.ByteString.Lex.Fractional"
    ],
    "name": "bytestring-lexing",
    "version": "0.5.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Functor",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Foreign",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "random": [
        "System.Random"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad",
      "Criterion.Main",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.Functor",
      "Data.Generics.Basics",
      "Data.Hashable",
      "Data.List",
      "Data.Maybe",
      "Data.Set",
      "Data.Text",
      "Data.UUID.Types",
      "Data.UUID.Types.Internal",
      "Data.UUID.Types.Internal.Builder",
      "Data.Word",
      "Foreign",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Prelude",
      "System.IO.Unsafe",
      "System.Random",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.UUID.Types",
      "Data.UUID.Types.Internal.Builder",
      "Data.UUID.Types.Internal"
    ],
    "name": "uuid-types",
    "version": "1.0.3"
  },
  {
    "dependencies": {
      "base": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "units": [
        "Data.Metrology",
        "Data.Metrology.Parser",
        "Data.Metrology.Poly",
        "Data.Metrology.TH"
      ]
    },
    "imports": [
      "Data.Constants.Math",
      "Data.Dimensions.SI",
      "Data.Metrology",
      "Data.Metrology.Parser",
      "Data.Metrology.Poly",
      "Data.Metrology.SI.Mono",
      "Data.Metrology.SI.MonoTypes",
      "Data.Metrology.SI.Poly",
      "Data.Metrology.SI.PolyTypes",
      "Data.Metrology.TH",
      "Data.Units.CGS",
      "Data.Units.SI",
      "Data.Units.SI.Parser",
      "Data.Units.SI.Prefixes",
      "Data.Units.US.Avoirdupois",
      "Data.Units.US.Liquid",
      "Data.Units.US.Misc",
      "Data.Units.US.Survey",
      "Data.Units.US.Troy",
      "Language.Haskell.TH"
    ],
    "modules": [
      "Data.Constants.Mechanics",
      "Data.Constants.Math",
      "Data.Dimensions.SI",
      "Data.Metrology.SI",
      "Data.Metrology.SI.Mono",
      "Data.Metrology.SI.Poly",
      "Data.Metrology.SI.MonoTypes",
      "Data.Metrology.SI.PolyTypes",
      "Data.Units.SI",
      "Data.Units.SI.Prefixes",
      "Data.Units.SI.Parser",
      "Data.Units.CGS",
      "Data.Units.US",
      "Data.Units.US.Apothecaries",
      "Data.Units.US.Avoirdupois",
      "Data.Units.US.DryVolume",
      "Data.Units.US.Liquid",
      "Data.Units.US.Misc",
      "Data.Units.US.Survey",
      "Data.Units.US.Troy",
      "Data.Units.PreciousMetals"
    ],
    "name": "units-defs",
    "version": "2.0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "primitive": [
        "Data.Primitive.Array",
        "Data.Primitive.ByteArray"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Control.Concurrent.Thread",
      "Control.Monad",
      "Criterion.Collection.Sample",
      "Criterion.Measurement",
      "Data.Accessor",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.Colour",
      "Data.Colour.Names",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashTable",
      "Data.HashTable.Class",
      "Data.HashTable.Internal.IntArray",
      "Data.HashTable.Internal.Linear.Bucket",
      "Data.HashTable.IO",
      "Data.HashTable.ST.Basic",
      "Data.HashTable.ST.Cuckoo",
      "Data.HashTable.ST.Linear",
      "Data.HashTable.Test.Common",
      "Data.Map",
      "Data.Primitive.Array",
      "Data.Primitive.ByteArray",
      "Data.Vector",
      "Data.Vector.Algorithms.Shuffle",
      "Data.Vector.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Graphics.Rendering.Chart",
      "System.Random.MWC",
      "Test.Framework"
    ],
    "modules": [
      "Data.HashTable.Class",
      "Data.HashTable.IO",
      "Data.HashTable.ST.Basic",
      "Data.HashTable.ST.Cuckoo",
      "Data.HashTable.ST.Linear"
    ],
    "name": "hashtables",
    "version": "1.2.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Int",
        "Data.Monoid",
        "Data.String",
        "Data.Word",
        "GHC.Real",
        "System.IO"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "srcloc": [
        "Data.Loc"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.IO"
      ]
    },
    "imports": [
      "Data.Int",
      "Data.Loc",
      "Data.Map",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.IO",
      "Data.Word",
      "GHC.Real",
      "System.IO"
    ],
    "modules": [
      "Text.PrettyPrint.Mainland"
    ],
    "name": "mainland-pretty",
    "version": "0.4.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad"
      ],
      "containers": [
        "Data.Set"
      ],
      "syb": [
        "Data.Generics"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Generics",
      "Data.Set",
      "Language.Haskell.TH",
      "Language.Haskell.TH.ExpandSyns",
      "Language.Haskell.TH.Syntax",
      "Types",
      "Util"
    ],
    "modules": [
      "Language.Haskell.TH.ExpandSyns"
    ],
    "name": "th-expand-syns",
    "version": "0.4.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.Ord",
        "Prelude"
      ],
      "fingertree": [
        "Data.FingerTree"
      ]
    },
    "imports": [
      "Data.FingerTree",
      "Data.Foldable",
      "Data.List",
      "Data.Monoid",
      "Data.Ord",
      "Prelude"
    ],
    "modules": [
      "Data.FingerTree.PSQueue"
    ],
    "name": "fingertree-psqueue",
    "version": "0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.Monoid"
      ],
      "bifunctors": [],
      "keys": [
        "Data.Key"
      ],
      "mtl": [
        "Control.Monad.State.Class"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Data.Bifoldable",
      "Data.Bifunctor",
      "Data.Bitraversable",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.Key",
      "Data.Monoid",
      "Data.Result"
    ],
    "modules": [
      "Data.Result",
      "Control.Monad.Trans.Result"
    ],
    "name": "result",
    "version": "0.2.6.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fail",
        "Control.Monad.ST",
        "Data.Data",
        "Data.Dynamic",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "Foreign.Concurrent",
        "Foreign.Marshal.Alloc",
        "GHC.Arr",
        "GHC.Conc.Sync",
        "GHC.ConsoleHandler",
        "GHC.Desugar",
        "GHC.Exts",
        "GHC.ForeignPtr",
        "GHC.Generics",
        "GHC.IO",
        "GHC.Stack",
        "GHC.Stack.CCS",
        "GHC.Word",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe",
        "System.Mem.Weak",
        "System.Posix.Internals",
        "Unsafe.Coerce"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc-boot": [
        "GHC.LanguageExtensions",
        "GHC.Serialized"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fail",
      "Control.Monad.ST",
      "Data.Array.Base",
      "Data.Array.Unboxed",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.ByteString.Unsafe",
      "Data.Data",
      "Data.Dynamic",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Typeable",
      "Data.Word",
      "Foreign",
      "Foreign.C",
      "Foreign.Concurrent",
      "Foreign.Marshal.Alloc",
      "GHC.Arr",
      "GHC.Conc.Sync",
      "GHC.ConsoleHandler",
      "GHC.Desugar",
      "GHC.Exts",
      "GHC.ForeignPtr",
      "GHC.Generics",
      "GHCi.BreakArray",
      "GHCi.CreateBCO",
      "GHCi.FFI",
      "GHCi.InfoTable",
      "GHCi.Message",
      "GHC.IO",
      "GHCi.ObjLink",
      "GHCi.RemoteTypes",
      "GHCi.ResolvedBCO",
      "GHCi.TH",
      "GHCi.TH.Binary",
      "GHC.LanguageExtensions",
      "GHC.Serialized",
      "GHC.Stack",
      "GHC.Stack.CCS",
      "GHC.Word",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "SizedSeq",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Mem.Weak",
      "System.Posix.Internals",
      "System.Posix.Signals",
      "Unsafe.Coerce"
    ],
    "modules": [
      "GHCi.BreakArray",
      "GHCi.Message",
      "GHCi.ResolvedBCO",
      "GHCi.RemoteTypes",
      "GHCi.ObjLink",
      "GHCi.CreateBCO",
      "GHCi.FFI",
      "GHCi.InfoTable",
      "GHCi.Run",
      "GHCi.Signals",
      "GHCi.TH",
      "GHCi.TH.Binary",
      "SizedSeq"
    ],
    "name": "ghci",
    "version": "8.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Data.Complex",
        "Data.List.NonEmpty",
        "Data.Typeable",
        "Debug.Trace",
        "Foreign.Marshal.Alloc",
        "Foreign.Storable",
        "Prelude"
      ],
      "base-orphans": [],
      "base64-bytestring": [
        "Data.ByteString.Base64.URL"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Short",
        "Data.ByteString.Short.Internal"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "cryptohash": [
        "Crypto.Hash.SHA1"
      ],
      "deepseq": [],
      "directory": [],
      "fail": [],
      "filepath": [],
      "ghc-prim": [],
      "hashable": [],
      "hspec": [
        "Test.Hspec"
      ],
      "hspec-smallcheck": [
        "Test.Hspec.SmallCheck"
      ],
      "integer-gmp": [
        "GHC.Integer.GMP.Internals"
      ],
      "lifted-base": [],
      "monad-control": [],
      "mono-traversable": [],
      "primitive": [],
      "resourcet": [],
      "safe": [],
      "semigroups": [],
      "smallcheck": [
        "Test.SmallCheck"
      ],
      "store-core": [],
      "syb": [],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Array",
        "Data.Text.Foreign",
        "Data.Text.Internal",
        "Data.Text.IO"
      ],
      "th-lift": [],
      "th-lift-instances": [],
      "th-orphans": [],
      "th-reify-many": [],
      "th-utilities": [],
      "time": [
        "Data.Time"
      ],
      "transformers": [],
      "unordered-containers": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Mutable",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable",
        "Data.Vector.Unboxed"
      ],
      "void": []
    },
    "imports": [
      "Control.Applicative",
      "Crypto.Hash.SHA1",
      "Data.Array.Unboxed",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Short",
      "Data.ByteString.Short.Internal",
      "Data.Complex",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Serialize",
      "Data.Set",
      "Data.Store",
      "Data.Store.Impl",
      "Data.Store.Internal",
      "Data.Store.TypeHash.Internal",
      "Data.Text",
      "Data.Text.Array",
      "Data.Text.Foreign",
      "Data.Text.Internal",
      "Data.Text.IO",
      "Data.Time",
      "Data.Typeable",
      "Data.Vector",
      "Data.Vector.Mutable",
      "Data.Vector.Primitive",
      "Data.Vector.Serialize",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Unboxed",
      "Debug.Trace",
      "Foreign.Marshal.Alloc",
      "Foreign.Storable",
      "GHC.Integer.GMP.Internals",
      "Language.Haskell.TH",
      "Prelude",
      "System.IO.ByteBuffer",
      "Test.Hspec",
      "Test.Hspec.SmallCheck",
      "Test.SmallCheck"
    ],
    "modules": [
      "Data.Store",
      "Data.Store.Internal",
      "Data.Store.Streaming",
      "Data.Store.TH",
      "Data.Store.TH.Internal",
      "Data.Store.TypeHash",
      "Data.Store.TypeHash.Internal",
      "Data.Store.Version",
      "System.IO.ByteBuffer"
    ],
    "name": "store",
    "version": "0.2.1.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Debug.Trace",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "hxt-charproperties": [
        "Data.Set.CharSet"
      ],
      "parsec": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad.State.Strict",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.List",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set.CharSet",
      "Data.String",
      "Data.String.Unicode",
      "Data.Text",
      "Data.Text.Lazy",
      "Debug.Trace",
      "System.Console.GetOpt",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Text.Regex.Glob.Generic",
      "Text.Regex.Glob.Generic.RegexParser",
      "Text.Regex.XMLSchema.Generic",
      "Text.Regex.XMLSchema.Generic.Matching",
      "Text.Regex.XMLSchema.Generic.Regex",
      "Text.Regex.XMLSchema.Generic.RegexParser",
      "Text.Regex.XMLSchema.Generic.StringLike",
      "Text.XML.HXT.Core",
      "Text.XML.HXT.Parser.XhtmlEntities"
    ],
    "modules": [
      "Text.Regex.Glob.String",
      "Text.Regex.Glob.Generic",
      "Text.Regex.Glob.Generic.RegexParser",
      "Text.Regex.XMLSchema.String",
      "Text.Regex.XMLSchema.Generic",
      "Text.Regex.XMLSchema.Generic.Matching",
      "Text.Regex.XMLSchema.Generic.RegexParser",
      "Text.Regex.XMLSchema.Generic.Regex",
      "Text.Regex.XMLSchema.Generic.StringLike"
    ],
    "name": "hxt-regex-xmlschema",
    "version": "9.2.0.2"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString.Char8"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "System.Posix.Syslog",
      "Test.QuickCheck",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "System.Posix.Syslog"
    ],
    "name": "hsyslog",
    "version": "4"
  },
  {
    "dependencies": {
      "JuicyPixels": [],
      "active": [],
      "adjunctions": [],
      "array": [],
      "base": [
        "Data.Foldable",
        "Data.List"
      ],
      "colour": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default-class": [],
      "diagrams-core": [
        "Diagrams.Core"
      ],
      "diagrams-solve": [],
      "directory": [],
      "distributive": [],
      "dual-tree": [
        "Data.Tree.DUAL"
      ],
      "exceptions": [],
      "filepath": [],
      "fingertree": [
        "Data.FingerTree"
      ],
      "fsnotify": [],
      "hashable": [],
      "intervals": [
        "Numeric.Interval.Kaucher"
      ],
      "lens": [],
      "linear": [
        "Linear.Affine"
      ],
      "monoid-extras": [],
      "mtl": [],
      "optparse-applicative": [],
      "process": [],
      "semigroups": [],
      "tagged": [],
      "text": [],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.FingerTree",
      "Data.Foldable",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.Map",
      "Data.Set",
      "Data.Tree.DUAL",
      "Diagrams.Core",
      "Diagrams.Prelude",
      "Diagrams.TwoD.Offset",
      "Diagrams.TwoD.OffsetTest",
      "Diagrams.TwoD.Types",
      "Diagrams.TwoD.Vector",
      "Linear.Affine",
      "Numeric.Interval.Kaucher",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Diagrams",
      "Diagrams.Prelude",
      "Diagrams.Align",
      "Diagrams.Angle",
      "Diagrams.Animation",
      "Diagrams.Animation.Active",
      "Diagrams.Attributes",
      "Diagrams.Attributes.Compile",
      "Diagrams.Backend.CmdLine",
      "Diagrams.BoundingBox",
      "Diagrams.Combinators",
      "Diagrams.Coordinates",
      "Diagrams.CubicSpline",
      "Diagrams.CubicSpline.Internal",
      "Diagrams.Deform",
      "Diagrams.Direction",
      "Diagrams.Envelope",
      "Diagrams.LinearMap",
      "Diagrams.Located",
      "Diagrams.Names",
      "Diagrams.Parametric",
      "Diagrams.Parametric.Adjust",
      "Diagrams.Path",
      "Diagrams.Points",
      "Diagrams.Query",
      "Diagrams.Segment",
      "Diagrams.Size",
      "Diagrams.Tangent",
      "Diagrams.ThreeD",
      "Diagrams.ThreeD.Align",
      "Diagrams.ThreeD.Attributes",
      "Diagrams.ThreeD.Camera",
      "Diagrams.ThreeD.Deform",
      "Diagrams.ThreeD.Light",
      "Diagrams.ThreeD.Shapes",
      "Diagrams.ThreeD.Size",
      "Diagrams.ThreeD.Transform",
      "Diagrams.ThreeD.Projection",
      "Diagrams.ThreeD.Types",
      "Diagrams.ThreeD.Vector",
      "Diagrams.Trace",
      "Diagrams.Trail",
      "Diagrams.TrailLike",
      "Diagrams.Transform",
      "Diagrams.Transform.ScaleInv",
      "Diagrams.Transform.Matrix",
      "Diagrams.TwoD",
      "Diagrams.TwoD.Adjust",
      "Diagrams.TwoD.Align",
      "Diagrams.TwoD.Arc",
      "Diagrams.TwoD.Arrow",
      "Diagrams.TwoD.Arrowheads",
      "Diagrams.TwoD.Attributes",
      "Diagrams.TwoD.Combinators",
      "Diagrams.TwoD.Curvature",
      "Diagrams.TwoD.Deform",
      "Diagrams.TwoD.Ellipse",
      "Diagrams.TwoD.Image",
      "Diagrams.TwoD.Model",
      "Diagrams.TwoD.Offset",
      "Diagrams.TwoD.Path",
      "Diagrams.TwoD.Points",
      "Diagrams.TwoD.Polygons",
      "Diagrams.TwoD.Segment",
      "Diagrams.TwoD.Segment.Bernstein",
      "Diagrams.TwoD.Size",
      "Diagrams.TwoD.Shapes",
      "Diagrams.TwoD.Text",
      "Diagrams.TwoD.Transform",
      "Diagrams.TwoD.Types",
      "Diagrams.TwoD.Vector",
      "Diagrams.Util"
    ],
    "name": "diagrams-lib",
    "version": "1.3.1.4"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.GamesManagement",
      "Network.Google.GamesManagement.Types",
      "Network.Google.Resource.GamesManagement.Achievements.Reset",
      "Network.Google.Resource.GamesManagement.Achievements.ResetAll",
      "Network.Google.Resource.GamesManagement.Achievements.ResetAllForAllPlayers",
      "Network.Google.Resource.GamesManagement.Achievements.ResetForAllPlayers",
      "Network.Google.Resource.GamesManagement.Achievements.ResetMultipleForAllPlayers",
      "Network.Google.Resource.GamesManagement.Applications.ListHidden",
      "Network.Google.Resource.GamesManagement.Events.Reset",
      "Network.Google.Resource.GamesManagement.Events.ResetAll",
      "Network.Google.Resource.GamesManagement.Events.ResetAllForAllPlayers",
      "Network.Google.Resource.GamesManagement.Events.ResetForAllPlayers",
      "Network.Google.Resource.GamesManagement.Events.ResetMultipleForAllPlayers",
      "Network.Google.Resource.GamesManagement.Players.Hide",
      "Network.Google.Resource.GamesManagement.Players.Unhide",
      "Network.Google.Resource.GamesManagement.Quests.Reset",
      "Network.Google.Resource.GamesManagement.Quests.ResetAll",
      "Network.Google.Resource.GamesManagement.Quests.ResetAllForAllPlayers",
      "Network.Google.Resource.GamesManagement.Quests.ResetForAllPlayers",
      "Network.Google.Resource.GamesManagement.Quests.ResetMultipleForAllPlayers",
      "Network.Google.Resource.GamesManagement.Rooms.Reset",
      "Network.Google.Resource.GamesManagement.Rooms.ResetForAllPlayers",
      "Network.Google.Resource.GamesManagement.Scores.Reset",
      "Network.Google.Resource.GamesManagement.Scores.ResetAll",
      "Network.Google.Resource.GamesManagement.Scores.ResetAllForAllPlayers",
      "Network.Google.Resource.GamesManagement.Scores.ResetForAllPlayers",
      "Network.Google.Resource.GamesManagement.Scores.ResetMultipleForAllPlayers",
      "Network.Google.Resource.GamesManagement.TurnBasedMatches.Reset",
      "Network.Google.Resource.GamesManagement.TurnBasedMatches.ResetForAllPlayers"
    ],
    "name": "gogol-games-management",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.Char"
      ],
      "containers": [
        "Data.Set"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.PprLib",
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Data.Char",
      "Data.Set",
      "Language.Haskell.TH",
      "Language.Haskell.TH.PprLib",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Language.Haskell.TH.Name.CamelCase",
      "Language.Haskell.TH.Lib.Extra"
    ],
    "name": "names-th",
    "version": "0.2.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.ST.Lazy",
        "Control.Monad.ST.Strict",
        "Data.Typeable",
        "Data.Word",
        "Prelude",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Internal"
      ]
    },
    "imports": [
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib",
      "Codec.Compression.Zlib.Internal",
      "Codec.Compression.Zlib.Raw",
      "Codec.Compression.Zlib.Stream",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.ST.Lazy",
      "Control.Monad.ST.Strict",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Internal",
      "Data.Typeable",
      "Data.Word",
      "Prelude",
      "System.IO",
      "Test.Codec.Compression.Zlib.Internal",
      "Test.Codec.Compression.Zlib.Stream",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Utils"
    ],
    "modules": [
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib",
      "Codec.Compression.Zlib.Raw",
      "Codec.Compression.Zlib.Internal"
    ],
    "name": "zlib",
    "version": "0.6.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List"
      ],
      "indentation-core": [
        "Text.Parser.Indentation.Implementation"
      ],
      "mtl": [
        "Control.Monad.Identity"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Error",
        "Text.Parsec.Pos",
        "Text.Parsec.Prim",
        "Text.Parsec.Token"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Identity",
      "Data.Char",
      "Data.List",
      "ParensParsec",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Text.Parsec",
      "Text.Parsec.Error",
      "Text.Parsec.Indentation",
      "Text.Parsec.Indentation.Char",
      "Text.Parsec.Pos",
      "Text.Parsec.Prim",
      "Text.Parsec.Token",
      "Text.Parser.Indentation.Implementation"
    ],
    "modules": [
      "Text.Parsec.Indentation",
      "Text.Parsec.Indentation.Char",
      "Text.Parsec.Indentation.Token"
    ],
    "name": "indentation-parsec",
    "version": "0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Foreign",
        "Foreign.C",
        "GHC.Conc",
        "System.Exit",
        "System.IO.Error",
        "System.Posix.Types"
      ],
      "bytestring": [],
      "time": []
    },
    "imports": [
      "Control.Monad",
      "Foreign",
      "Foreign.C",
      "GHC.Conc",
      "System.Exit",
      "System.IO.Error",
      "System.Posix.ByteString.FilePath",
      "System.Posix.Directory",
      "System.Posix.Directory.ByteString",
      "System.Posix.DynamicLinker",
      "System.Posix.DynamicLinker.ByteString",
      "System.Posix.Env",
      "System.Posix.Env.ByteString",
      "System.Posix.Files",
      "System.Posix.Files.ByteString",
      "System.Posix.IO",
      "System.Posix.IO.ByteString",
      "System.Posix.Process",
      "System.Posix.Process.ByteString",
      "System.Posix.Resource",
      "System.Posix.Semaphore",
      "System.Posix.SharedMem",
      "System.Posix.Signals",
      "System.Posix.Temp",
      "System.Posix.Temp.ByteString",
      "System.Posix.Terminal",
      "System.Posix.Terminal.ByteString",
      "System.Posix.Time",
      "System.Posix.Types",
      "System.Posix.Unistd",
      "System.Posix.User"
    ],
    "modules": [
      "System.Posix",
      "System.Posix.ByteString",
      "System.Posix.Error",
      "System.Posix.Resource",
      "System.Posix.Time",
      "System.Posix.Unistd",
      "System.Posix.User",
      "System.Posix.Signals",
      "System.Posix.Signals.Exts",
      "System.Posix.Semaphore",
      "System.Posix.SharedMem",
      "System.Posix.ByteString.FilePath",
      "System.Posix.Directory",
      "System.Posix.Directory.ByteString",
      "System.Posix.DynamicLinker.Module",
      "System.Posix.DynamicLinker.Module.ByteString",
      "System.Posix.DynamicLinker.Prim",
      "System.Posix.DynamicLinker.ByteString",
      "System.Posix.DynamicLinker",
      "System.Posix.Files",
      "System.Posix.Files.ByteString",
      "System.Posix.IO",
      "System.Posix.IO.ByteString",
      "System.Posix.Env",
      "System.Posix.Env.ByteString",
      "System.Posix.Fcntl",
      "System.Posix.Process",
      "System.Posix.Process.Internals",
      "System.Posix.Process.ByteString",
      "System.Posix.Temp",
      "System.Posix.Temp.ByteString",
      "System.Posix.Terminal",
      "System.Posix.Terminal.ByteString"
    ],
    "name": "unix",
    "version": "2.7.2.0"
  },
  {
    "dependencies": {
      "aeson": [],
      "aeson-qq": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "hspec-wai": [],
      "template-haskell": []
    },
    "imports": [
      "Data.ByteString.Lazy",
      "Data.CaseInsensitive"
    ],
    "modules": [
      "Test.Hspec.Wai.JSON"
    ],
    "name": "hspec-wai-json",
    "version": "0.6.1"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Int",
      "Data.Word",
      "GHC.Exts",
      "GHC.IO",
      "GHC.IOBase",
      "GHC.Word",
      "System.CPUTime",
      "System.Random",
      "System.Random.Mersenne.Pure64.Base",
      "System.Random.Mersenne.Pure64.Internal",
      "System.Random.Mersenne.Pure64.MTBlock",
      "System.Time"
    ],
    "modules": [
      "System.Random.Mersenne.Pure64",
      "System.Random.Mersenne.Pure64.Base",
      "System.Random.Mersenne.Pure64.MTBlock",
      "System.Random.Mersenne.Pure64.Internal"
    ],
    "name": "mersenne-random-pure64",
    "version": "0.2.0.5"
  },
  {
    "dependencies": {
      "ClustalParser": [],
      "base": [
        "Control.Monad",
        "Data.List",
        "System.Environment"
      ],
      "cmdargs": [],
      "either-unwrap": [],
      "parsec": [
        "Text.ParserCombinators.Parsec"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Bio.ClustalData",
      "Bio.ClustalParser",
      "Control.Monad",
      "Data.List",
      "Data.Vector",
      "System.Environment",
      "Text.ParserCombinators.Parsec"
    ],
    "modules": [
      "Bio.ClustalParser"
    ],
    "name": "ClustalParser",
    "version": "1.1.4"
  },
  {
    "dependencies": {
      "base": [
        "GHC.Generics"
      ],
      "free": [
        "Control.Monad.Trans.Free"
      ],
      "mmorph": [
        "Control.Monad.Morph"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Trans"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Monad.Base",
      "Control.Monad.Channel.Internal",
      "Control.Monad.Identity",
      "Control.Monad.Morph",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Free",
      "GHC.Generics"
    ],
    "modules": [
      "Control.Monad.Channel.Internal",
      "Control.Monad.Channel"
    ],
    "name": "ChannelT",
    "version": "0.0.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "GHC.Exts",
        "GHC.OldList",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.List.Fusion.Probe",
      "GHC.Exts",
      "GHC.OldList",
      "Prelude",
      "Test.Tasty",
      "Test.Tasty.HUnit"
    ],
    "modules": [
      "Data.List.Fusion.Probe"
    ],
    "name": "list-fusion-probe",
    "version": "0.1.0.6"
  },
  {
    "dependencies": {
      "base": [],
      "case-insensitive": [],
      "conduit": [],
      "conduit-parse": [],
      "containers": [],
      "exceptions": [],
      "foldl": [],
      "lens-simple": [],
      "mono-traversable": [],
      "monoid-subclasses": [],
      "parsers": [],
      "semigroups": [],
      "text": [],
      "time": [],
      "timerep": [],
      "uri-bytestring": [],
      "xml-conduit": [],
      "xml-conduit-parse": [],
      "xml-types": []
    },
    "imports": [
      "Language.Haskell.HLint"
    ],
    "modules": [
      "Text.OPML",
      "Text.OPML.Lens",
      "Text.OPML.Conduit.Parse",
      "Text.OPML.Conduit.Render",
      "Text.OPML.Types"
    ],
    "name": "opml-conduit",
    "version": "0.5.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "lens": [
        "Control.Lens"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "text": [
        "Data.Text"
      ],
      "time": [
        "Data.Time"
      ],
      "twitter-types": [
        "Web.Twitter.Types"
      ]
    },
    "imports": [
      "Control.Lens",
      "Data.Text",
      "Data.Time",
      "Language.Haskell.TH",
      "Web.Twitter.Types",
      "Web.Twitter.Types.Lens.TH"
    ],
    "modules": [
      "Web.Twitter.Types.Lens"
    ],
    "name": "twitter-types-lens",
    "version": "0.7.2"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Exception.Base",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Function",
        "Data.Functor",
        "Data.IORef",
        "Data.Maybe",
        "Data.String",
        "Data.Version",
        "Data.Word",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "cmdargs": [
        "System.Console.CmdArgs",
        "System.Console.CmdArgs.Verbosity"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "extra": [
        "Control.Concurrent.Extra",
        "Control.Exception.Extra",
        "Control.Monad.Extra",
        "Data.List.Extra",
        "Data.Tuple.Extra",
        "Data.Version.Extra",
        "System.Directory.Extra",
        "System.IO.Extra",
        "System.Process.Extra",
        "System.Time.Extra"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "fsnotify": [
        "System.FSNotify"
      ],
      "process": [
        "System.Process"
      ],
      "terminal-size": [
        "System.Console.Terminal.Size"
      ],
      "time": [
        "Data.Time.Clock"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.Extra",
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Exception.Extra",
      "Control.Monad.Extra",
      "Data.Bits",
      "Data.Char",
      "Data.Data",
      "Data.Function",
      "Data.Functor",
      "Data.IORef",
      "Data.List.Extra",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.String",
      "Data.Time.Clock",
      "Data.Tuple.Extra",
      "Data.Version",
      "Data.Version.Extra",
      "Data.Word",
      "Ghcid",
      "Graphics.Win32.GDI.Types",
      "Graphics.Win32.Message",
      "Graphics.Win32.Misc",
      "Graphics.Win32.Window",
      "Language.Haskell.Ghcid",
      "Language.Haskell.Ghcid.Parser",
      "Language.Haskell.Ghcid.Terminal",
      "Language.Haskell.Ghcid.Types",
      "Language.Haskell.Ghcid.Util",
      "Paths",
      "Prelude",
      "Session",
      "System.Console.ANSI",
      "System.Console.CmdArgs",
      "System.Console.CmdArgs.Verbosity",
      "System.Console.Terminal.Size",
      "System.Directory",
      "System.Directory.Extra",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FSNotify",
      "System.IO",
      "System.IO.Error",
      "System.IO.Extra",
      "System.IO.Unsafe",
      "System.Process",
      "System.Process.Extra",
      "System.Time.Extra",
      "System.Win32.Types",
      "Test.API",
      "Test.Ghcid",
      "Test.Parser",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Util",
      "Wait"
    ],
    "modules": [
      "Language.Haskell.Ghcid"
    ],
    "name": "ghcid",
    "version": "0.6.5"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Typeable",
        "Foreign.StablePtr",
        "GHC.Conc",
        "System.Console.GetOpt",
        "System.CPUTime",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.Timeout"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map"
      ],
      "hostname": [
        "Network.HostName"
      ],
      "old-locale": [
        "System.Locale"
      ],
      "random": [
        "System.Random"
      ],
      "regex-posix": [
        "Text.Regex.Posix.String",
        "Text.Regex.Posix.Wrap"
      ],
      "time": [
        "Data.Time.Format",
        "Data.Time.LocalTime"
      ],
      "xml": [
        "Text.XML.Light"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Data.Char",
      "Data.Function",
      "Data.IntMap",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Time.Format",
      "Data.Time.LocalTime",
      "Data.Typeable",
      "Foreign.StablePtr",
      "GHC.Conc",
      "Network.HostName",
      "System.Console.ANSI",
      "System.Console.GetOpt",
      "System.CPUTime",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Locale",
      "System.Random",
      "System.Timeout",
      "Test.Framework.Core",
      "Test.Framework.Improving",
      "Test.Framework.Options",
      "Test.Framework.Runners.Console",
      "Test.Framework.Runners.Console.Colors",
      "Test.Framework.Runners.Console.ProgressBar",
      "Test.Framework.Runners.Console.Run",
      "Test.Framework.Runners.Console.Statistics",
      "Test.Framework.Runners.Console.Table",
      "Test.Framework.Runners.Console.Utilities",
      "Test.Framework.Runners.Core",
      "Test.Framework.Runners.Options",
      "Test.Framework.Runners.Processors",
      "Test.Framework.Runners.Statistics",
      "Test.Framework.Runners.TestPattern",
      "Test.Framework.Runners.ThreadPool",
      "Test.Framework.Runners.TimedConsumption",
      "Test.Framework.Runners.XML",
      "Test.Framework.Runners.XML.JUnitWriter",
      "Test.Framework.Seed",
      "Test.Framework.Tests.Runners.ThreadPool",
      "Test.Framework.Tests.Runners.XMLTests",
      "Test.Framework.Utilities",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.Regex.Posix.String",
      "Text.Regex.Posix.Wrap",
      "Text.XML.Light"
    ],
    "modules": [
      "Test.Framework",
      "Test.Framework.Options",
      "Test.Framework.Providers.API",
      "Test.Framework.Runners.Console",
      "Test.Framework.Runners.Options",
      "Test.Framework.Runners.TestPattern",
      "Test.Framework.Runners.API",
      "Test.Framework.Seed"
    ],
    "name": "test-framework",
    "version": "0.8.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Monad.IO.Class"
      ],
      "clock": [
        "System.Clock"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Concurrent",
      "Control.Monad.IO.Class",
      "Control.StopWatch",
      "System.Clock",
      "Test.Hspec"
    ],
    "modules": [
      "Control.StopWatch"
    ],
    "name": "stopwatch",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [],
      "iproute": [],
      "network": [],
      "network-info": [],
      "random": [],
      "text": [
        "Data.Text",
        "Data.Text.Read"
      ]
    },
    "imports": [
      "Data.Text",
      "Data.Text.Read",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.IPv6Addr"
    ],
    "modules": [
      "Text.IPv6Addr",
      "Text.IPv6Addr.Types",
      "Text.IPv6Addr.Manip",
      "Text.IPv6Addr.Internal"
    ],
    "name": "IPv6Addr",
    "version": "0.6.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.List",
        "Data.Monoid",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "directory": [
        "System.Directory"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Identity",
        "Control.Monad.List",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "syb": [
        "Data.Generics"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Fix",
      "Control.Monad.Identity",
      "Control.Monad.List",
      "Control.Monad.Run",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Trans.Maybe",
      "Data.Generics",
      "Data.Generics.Strafunski.StrategyLib.ChaseImports",
      "Data.Generics.Strafunski.StrategyLib.ContainerTheme",
      "Data.Generics.Strafunski.StrategyLib.EffectTheme",
      "Data.Generics.Strafunski.StrategyLib.FixpointTheme",
      "Data.Generics.Strafunski.StrategyLib.FlowTheme",
      "Data.Generics.Strafunski.StrategyLib.KeyholeTheme",
      "Data.Generics.Strafunski.StrategyLib.MetricsTheme",
      "Data.Generics.Strafunski.StrategyLib.Models.Deriving.StrategyPrimitives",
      "Data.Generics.Strafunski.StrategyLib.Models.Deriving.TermRep",
      "Data.Generics.Strafunski.StrategyLib.MonadicFunctions",
      "Data.Generics.Strafunski.StrategyLib.MoreMonoids",
      "Data.Generics.Strafunski.StrategyLib.NameTheme",
      "Data.Generics.Strafunski.StrategyLib.OverloadingTheme",
      "Data.Generics.Strafunski.StrategyLib.PathTheme",
      "Data.Generics.Strafunski.StrategyLib.RefactoringTheme",
      "Data.Generics.Strafunski.StrategyLib.StrategyInfix",
      "Data.Generics.Strafunski.StrategyLib.StrategyPrelude",
      "Data.Generics.Strafunski.StrategyLib.TraversalTheme",
      "Data.List",
      "Data.Monoid",
      "System.Directory",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Control.Monad.Run",
      "Data.Generics.Strafunski.StrategyLib.ChaseImports",
      "Data.Generics.Strafunski.StrategyLib.ContainerTheme",
      "Data.Generics.Strafunski.StrategyLib.EffectTheme",
      "Data.Generics.Strafunski.StrategyLib.FixpointTheme",
      "Data.Generics.Strafunski.StrategyLib.FlowTheme",
      "Data.Generics.Strafunski.StrategyLib.KeyholeTheme",
      "Data.Generics.Strafunski.StrategyLib.MetricsTheme",
      "Data.Generics.Strafunski.StrategyLib.MonadicFunctions",
      "Data.Generics.Strafunski.StrategyLib.MoreMonoids",
      "Data.Generics.Strafunski.StrategyLib.NameTheme",
      "Data.Generics.Strafunski.StrategyLib.OverloadingTheme",
      "Data.Generics.Strafunski.StrategyLib.PathTheme",
      "Data.Generics.Strafunski.StrategyLib.RefactoringTheme",
      "Data.Generics.Strafunski.StrategyLib.StrategyInfix",
      "Data.Generics.Strafunski.StrategyLib.StrategyLib",
      "Data.Generics.Strafunski.StrategyLib.StrategyPrelude",
      "Data.Generics.Strafunski.StrategyLib.TraversalTheme",
      "Data.Generics.Strafunski.StrategyLib.Models.Deriving.StrategyPrimitives",
      "Data.Generics.Strafunski.StrategyLib.Models.Deriving.TermRep"
    ],
    "name": "Strafunski-StrategyLib",
    "version": "5.0.0.9"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.ResourceViews.ZoneOperations.Get",
      "Network.Google.Resource.ResourceViews.ZoneOperations.List",
      "Network.Google.Resource.ResourceViews.ZoneViews.AddResources",
      "Network.Google.Resource.ResourceViews.ZoneViews.Delete",
      "Network.Google.Resource.ResourceViews.ZoneViews.Get",
      "Network.Google.Resource.ResourceViews.ZoneViews.GetService",
      "Network.Google.Resource.ResourceViews.ZoneViews.Insert",
      "Network.Google.Resource.ResourceViews.ZoneViews.List",
      "Network.Google.Resource.ResourceViews.ZoneViews.ListResources",
      "Network.Google.Resource.ResourceViews.ZoneViews.RemoveResources",
      "Network.Google.Resource.ResourceViews.ZoneViews.SetService",
      "Network.Google.ResourceViews",
      "Network.Google.ResourceViews.Types"
    ],
    "name": "gogol-resourceviews",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cmdargs": [],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Set"
      ],
      "directory": [],
      "either": [],
      "filepath": [],
      "mtl": [],
      "mustache": [],
      "parsec": [],
      "scientific": [],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy"
      ],
      "th-lift": [],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector"
      ],
      "yaml": []
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Compression.GZip",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IntMap",
      "Data.Map",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Vector",
      "Language.Haskell.TH.Syntax"
    ],
    "modules": [
      "Text.Mustache",
      "Text.Mustache.Types",
      "Text.Mustache.Parser",
      "Text.Mustache.Compile",
      "Text.Mustache.Render"
    ],
    "name": "mustache",
    "version": "2.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "Data.Monoid"
      ],
      "hsp": [
        "HSP.XML",
        "HSP.XMLGenerator"
      ],
      "hsx2hs": [
        "Language.Haskell.HSX.QQ"
      ],
      "reform": [
        "Text.Reform",
        "Text.Reform.Backend",
        "Text.Reform.Core",
        "Text.Reform.Generalized",
        "Text.Reform.Result"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "HSP.XML",
      "HSP.XMLGenerator",
      "Language.Haskell.HSX.QQ",
      "Text.Reform",
      "Text.Reform.Backend",
      "Text.Reform.Core",
      "Text.Reform.Generalized",
      "Text.Reform.HSP.Common",
      "Text.Reform.Result"
    ],
    "modules": [
      "Text.Reform.HSP.Common",
      "Text.Reform.HSP.String",
      "Text.Reform.HSP.Text"
    ],
    "name": "reform-hsp",
    "version": "0.2.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Either",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "containers": [],
      "contravariant": [
        "Data.Functor.Contravariant"
      ],
      "rainbow": [
        "Rainbow",
        "Rainbow.Types"
      ],
      "split": [],
      "text": [
        "Data.Text"
      ],
      "transformers": []
    },
    "imports": [
      "Cartel",
      "Control.Applicative",
      "Control.Monad",
      "Data.ByteString",
      "Data.Either",
      "Data.Foldable",
      "Data.Functor.Contravariant",
      "Data.Functor.Identity",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Data.Typeable",
      "Prednote",
      "Prednote.Comparisons",
      "Prednote.Core",
      "Prednote.Core.Instances",
      "Prednote.Core.Properties",
      "Prednote.Expressions",
      "Prednote.Expressions.Infix",
      "Prednote.Expressions.RPN",
      "Prelude",
      "Rainbow",
      "Rainbow.Instances",
      "Rainbow.Types",
      "Test.QuickCheck",
      "Test.QuickCheck.Function",
      "Test.Tasty",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.TH"
    ],
    "modules": [
      "Prednote",
      "Prednote.Comparisons",
      "Prednote.Core",
      "Prednote.Expressions",
      "Prednote.Expressions.Infix",
      "Prednote.Expressions.RPN"
    ],
    "name": "prednote",
    "version": "0.36.0.4"
  },
  {
    "dependencies": {
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Foldable",
        "Data.Word",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cassava": [
        "Data.Csv",
        "Data.Csv.Incremental"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [],
      "containers": [],
      "mtl": [
        "Control.Monad.Error.Class",
        "Control.Monad.Trans"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Control.Monad.Trans",
      "Criterion.Main",
      "Criterion.Types",
      "Data.Bifunctor",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Csv",
      "Data.Csv.Incremental",
      "Data.Foldable",
      "Data.Text",
      "Data.Word",
      "LocalPrelude",
      "Prelude",
      "System.Exit",
      "System.IO"
    ],
    "modules": [
      "Data.Csv.Conduit"
    ],
    "name": "cassava-conduit",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "aeson": [],
      "aeson-pretty": [],
      "attoparsec": [],
      "base": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "either": [],
      "text": [
        "Data.Text",
        "Data.Text.IO"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.IO"
    ],
    "modules": [
      "Text.Glabrous",
      "Text.Glabrous.Types"
    ],
    "name": "glabrous",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "fay-base": [
        "Data.Text",
        "FFI",
        "Prelude"
      ]
    },
    "imports": [
      "Data.Text",
      "FFI",
      "Prelude"
    ],
    "modules": [
      "DOM"
    ],
    "name": "fay-dom",
    "version": "0.5.0.1"
  },
  {
    "dependencies": {
      "base": [],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "utf8-string": [
        "Data.ByteString.Lazy.UTF8",
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "Data.ByteString.Lazy.UTF8",
      "Data.ByteString.UTF8",
      "Data.CaseInsensitive",
      "Data.Text",
      "Data.Text.Lazy"
    ],
    "modules": [
      "Data.String.ToString"
    ],
    "name": "tostring",
    "version": "0.2.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Debug.Trace",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "GHC.Exts",
        "Numeric",
        "Prelude",
        "System.IO.Unsafe",
        "System.Mem.StableName",
        "Unsafe.Coerce"
      ],
      "binary": [
        "Data.Binary"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal",
        "Data.ByteString.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ],
      "hashtables": [
        "Data.HashTable.IO"
      ],
      "stringsearch": [
        "Data.ByteString.Lazy.Search"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Binary",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Lazy.Search",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.HashTable.IO",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.RefSerialize.Parser",
      "Data.RefSerialize.Serialize",
      "Debug.Trace",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "GHC.Exts",
      "Numeric",
      "Prelude",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.RefSerialize",
      "Data.RefSerialize.Parser",
      "Data.RefSerialize.Serialize"
    ],
    "name": "RefSerialize",
    "version": "0.3.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Control.Monad"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Control.Monad",
      "Language.Haskell.TH"
    ],
    "modules": [
      "Control.Concatenative"
    ],
    "name": "concatenative",
    "version": "1.0.1"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array.Base",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Typeable.Internal",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "Foreign",
        "Foreign.C",
        "Foreign.Ptr",
        "GHC.IO.Exception",
        "Prelude",
        "System.IO",
        "System.IO.Error",
        "System.Posix.Types",
        "Text.Printf",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "cereal": [
        "Data.Serialize",
        "Data.Serialize.Get",
        "Data.Serialize.Put"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [
        "System.Directory"
      ],
      "extensible-exceptions": [
        "Control.Exception.Extensible"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans"
      ],
      "network": [
        "Network",
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "safecopy": [
        "Data.SafeCopy"
      ],
      "stm": [
        "Control.Concurrent.STM",
        "Control.Concurrent.STM.TMVar",
        "Control.Concurrent.STM.TQueue"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Ppr"
      ]
    },
    "imports": [
      "Benchmark.FileSystem",
      "Benchmark.Model",
      "Benchmark.Prelude",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.TMVar",
      "Control.Concurrent.STM.TQueue",
      "Control.Exception",
      "Control.Exception.Extensible",
      "Control.Monad",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Criterion.Main",
      "Data.Acid",
      "Data.Acid.Abstract",
      "Data.Acid.Archive",
      "Data.Acid.Common",
      "Data.Acid.Core",
      "Data.Acid.Local",
      "Data.Acid.Log",
      "Data.Acid.TemplateHaskell",
      "Data.Array.Base",
      "Data.Array.Unboxed",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.SafeCopy",
      "Data.Serialize",
      "Data.Serialize.Get",
      "Data.Serialize.Put",
      "Data.Set",
      "Data.Text",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Typeable.Internal",
      "Data.Version",
      "Data.Word",
      "Debug.Trace",
      "FileIO",
      "Filesystem",
      "Filesystem.Path.CurrentOS",
      "Foreign",
      "Foreign.C",
      "Foreign.Ptr",
      "GHC.IO.Exception",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Ppr",
      "Network",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Paths",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.Posix",
      "System.Posix.Process",
      "System.Posix.Signals",
      "System.Posix.Types",
      "System.Random",
      "System.Win32",
      "Text.Printf",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Data.Acid",
      "Data.Acid.Local",
      "Data.Acid.Memory",
      "Data.Acid.Memory.Pure",
      "Data.Acid.Remote",
      "Data.Acid.Advanced",
      "Data.Acid.Log",
      "Data.Acid.CRC",
      "Data.Acid.Abstract",
      "Data.Acid.Core"
    ],
    "name": "acid-state",
    "version": "0.14.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception"
      ]
    },
    "imports": [
      "Control.Exception",
      "Test.Hspec"
    ],
    "modules": [
      "Test.Hspec"
    ],
    "name": "nanospec",
    "version": "0.2.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson.TH"
      ],
      "base": [],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "bytestring-conversion": [],
      "conduit": [],
      "data-default-class": [],
      "exceptions": [],
      "generics-sop": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-types": [],
      "lens": [],
      "lens-aeson": [],
      "mmorph": [],
      "monad-control": [],
      "mtl": [],
      "template-haskell": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "time-locale-compat": [],
      "transformers": [],
      "transformers-base": [],
      "transformers-compat": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.Aeson.TH",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.HashMap.Strict",
      "Data.Text",
      "Data.Text.Encoding",
      "Network.HTTP.Client",
      "Network.PagerDuty.Integration",
      "Network.PagerDuty.REST"
    ],
    "modules": [
      "Control.Monad.Trans.PagerDuty",
      "Network.PagerDuty.Integration",
      "Network.PagerDuty.REST",
      "Network.PagerDuty.REST.Alerts",
      "Network.PagerDuty.REST.EscalationPolicies",
      "Network.PagerDuty.REST.EscalationPolicies.EscalationRules",
      "Network.PagerDuty.REST.Incidents",
      "Network.PagerDuty.REST.Incidents.Notes",
      "Network.PagerDuty.REST.LogEntries",
      "Network.PagerDuty.REST.MaintenanceWindows",
      "Network.PagerDuty.REST.Reports",
      "Network.PagerDuty.REST.Schedules",
      "Network.PagerDuty.REST.Schedules.Overrides",
      "Network.PagerDuty.REST.Services",
      "Network.PagerDuty.REST.Services.EmailFilters",
      "Network.PagerDuty.REST.Users",
      "Network.PagerDuty.REST.Users.ContactMethods",
      "Network.PagerDuty.REST.Users.NotificationRules",
      "Network.PagerDuty.REST.Webhooks"
    ],
    "name": "pagerduty",
    "version": "0.0.7"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Bits",
        "Data.Function",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Bits",
      "Data.Function",
      "Data.Monoid"
    ],
    "modules": [
      "Data.IntTrie"
    ],
    "name": "data-inttrie",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "base": [
        "Control.Exception",
        "Control.Monad",
        "GHC.IO.Buffer",
        "GHC.IO.BufferedIO",
        "GHC.IO.Device",
        "GHC.IO.Handle",
        "Prelude",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Unsafe"
      ],
      "bytestring-builder": [],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "primitive": [],
      "process": [
        "System.Process"
      ],
      "text": [
        "Data.Text.Encoding"
      ],
      "time": [],
      "transformers": [],
      "vector": [
        "Data.Vector",
        "Data.Vector.Generic",
        "Data.Vector.Generic.Mutable",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ],
      "zlib-bindings": []
    },
    "imports": [
      "Codec.Compression.GZip",
      "Codec.Compression.Zlib",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Unsafe",
      "Data.Text.Encoding",
      "Data.Vector",
      "Data.Vector.Generic",
      "Data.Vector.Generic.Mutable",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "GHC.IO.Buffer",
      "GHC.IO.BufferedIO",
      "GHC.IO.Device",
      "GHC.IO.Handle",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Prelude",
      "System.IO",
      "System.IO.Streams",
      "System.IO.Streams.Combinators",
      "System.IO.Streams.Concurrent",
      "System.IO.Streams.Debug",
      "System.IO.Streams.Handle",
      "System.IO.Streams.Internal",
      "System.IO.Streams.Internal.Network",
      "System.IO.Streams.List",
      "System.IO.Streams.Tests.Attoparsec",
      "System.IO.Streams.Tests.Builder",
      "System.IO.Streams.Tests.ByteString",
      "System.IO.Streams.Tests.Combinators",
      "System.IO.Streams.Tests.Concurrent",
      "System.IO.Streams.Tests.Debug",
      "System.IO.Streams.Tests.File",
      "System.IO.Streams.Tests.Handle",
      "System.IO.Streams.Tests.Internal",
      "System.IO.Streams.Tests.List",
      "System.IO.Streams.Tests.Network",
      "System.IO.Streams.Tests.Process",
      "System.IO.Streams.Tests.Text",
      "System.IO.Streams.Tests.Vector",
      "System.IO.Streams.Tests.Zlib",
      "System.IO.Streams.Text",
      "System.Process",
      "Test.QuickCheck.Monadic"
    ],
    "modules": [
      "System.IO.Streams",
      "System.IO.Streams.Attoparsec",
      "System.IO.Streams.Builder",
      "System.IO.Streams.ByteString",
      "System.IO.Streams.Combinators",
      "System.IO.Streams.Concurrent",
      "System.IO.Streams.Core",
      "System.IO.Streams.Debug",
      "System.IO.Streams.Handle",
      "System.IO.Streams.File",
      "System.IO.Streams.List",
      "System.IO.Streams.Network",
      "System.IO.Streams.Process",
      "System.IO.Streams.Text",
      "System.IO.Streams.Vector",
      "System.IO.Streams.Zlib",
      "System.IO.Streams.Internal",
      "System.IO.Streams.Tutorial"
    ],
    "name": "io-streams",
    "version": "1.3.5.0"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Gmail",
      "Network.Google.Gmail.Types",
      "Network.Google.Resource.Gmail.Users.Drafts.Create",
      "Network.Google.Resource.Gmail.Users.Drafts.Delete",
      "Network.Google.Resource.Gmail.Users.Drafts.Get",
      "Network.Google.Resource.Gmail.Users.Drafts.List",
      "Network.Google.Resource.Gmail.Users.Drafts.Send",
      "Network.Google.Resource.Gmail.Users.Drafts.Update",
      "Network.Google.Resource.Gmail.Users.GetProFile",
      "Network.Google.Resource.Gmail.Users.History.List",
      "Network.Google.Resource.Gmail.Users.Labels.Create",
      "Network.Google.Resource.Gmail.Users.Labels.Delete",
      "Network.Google.Resource.Gmail.Users.Labels.Get",
      "Network.Google.Resource.Gmail.Users.Labels.List",
      "Network.Google.Resource.Gmail.Users.Labels.Patch",
      "Network.Google.Resource.Gmail.Users.Labels.Update",
      "Network.Google.Resource.Gmail.Users.Messages.Attachments.Get",
      "Network.Google.Resource.Gmail.Users.Messages.BatchDelete",
      "Network.Google.Resource.Gmail.Users.Messages.Delete",
      "Network.Google.Resource.Gmail.Users.Messages.Get",
      "Network.Google.Resource.Gmail.Users.Messages.Import",
      "Network.Google.Resource.Gmail.Users.Messages.Insert",
      "Network.Google.Resource.Gmail.Users.Messages.List",
      "Network.Google.Resource.Gmail.Users.Messages.Modify",
      "Network.Google.Resource.Gmail.Users.Messages.Send",
      "Network.Google.Resource.Gmail.Users.Messages.Trash",
      "Network.Google.Resource.Gmail.Users.Messages.Untrash",
      "Network.Google.Resource.Gmail.Users.Stop",
      "Network.Google.Resource.Gmail.Users.Threads.Delete",
      "Network.Google.Resource.Gmail.Users.Threads.Get",
      "Network.Google.Resource.Gmail.Users.Threads.List",
      "Network.Google.Resource.Gmail.Users.Threads.Modify",
      "Network.Google.Resource.Gmail.Users.Threads.Trash",
      "Network.Google.Resource.Gmail.Users.Threads.Untrash",
      "Network.Google.Resource.Gmail.Users.Watch"
    ],
    "name": "gogol-gmail",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Arrow",
        "Data.Bits",
        "Data.IORef",
        "System.IO.Unsafe"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "cipher-aes": [
        "Crypto.Cipher.AES"
      ],
      "crypto-random": [
        "Crypto.Random"
      ]
    },
    "imports": [
      "Control.Arrow",
      "Criterion.Main",
      "Crypto.Cipher.AES",
      "Crypto.Random",
      "Crypto.Random.AESCtr",
      "Crypto.Random.AESCtr.Internal",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString",
      "Data.IORef",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Crypto.Random.AESCtr"
    ],
    "name": "cprng-aes",
    "version": "0.6.1"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [
        "Control.Monad.IO.Class",
        "Data.Function",
        "Data.Monoid",
        "Data.Proxy",
        "GHC.TypeLits",
        "System.Environment",
        "System.Info"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Builder"
      ],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "conduit": [
        "Data.Conduit.List"
      ],
      "conduit-extra": [],
      "cryptonite": [],
      "data-default-class": [],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [
        "Control.Monad.Catch"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "gogol-core": [
        "Network.Google.Types"
      ],
      "http-client": [],
      "http-conduit": [
        "Network.HTTP.Client.Conduit",
        "Network.HTTP.Conduit"
      ],
      "http-media": [],
      "http-types": [],
      "lens": [
        "Control.Lens"
      ],
      "memory": [],
      "mime-types": [
        "Network.Mime"
      ],
      "monad-control": [],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.RWS.Lazy",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State.Lazy",
        "Control.Monad.State.Strict",
        "Control.Monad.Writer.Lazy",
        "Control.Monad.Writer.Strict"
      ],
      "resourcet": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [],
      "transformers": [],
      "transformers-base": [],
      "unordered-containers": [],
      "x509": [],
      "x509-store": []
    },
    "imports": [
      "Control.Lens",
      "Control.Monad.Catch",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Lazy",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State.Lazy",
      "Control.Monad.State.Strict",
      "Control.Monad.Writer.Lazy",
      "Control.Monad.Writer.Strict",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Builder",
      "Data.CaseInsensitive",
      "Data.Conduit.List",
      "Data.Function",
      "Data.Monoid",
      "Data.Proxy",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "GHC.TypeLits",
      "Network.Google.Auth",
      "Network.Google.Internal.Logger",
      "Network.Google.Types",
      "Network.HTTP.Client.Conduit",
      "Network.HTTP.Conduit",
      "Network.Mime",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.Info"
    ],
    "modules": [
      "Network.Google",
      "Network.Google.Auth",
      "Network.Google.Auth.Scope",
      "Network.Google.Auth.ApplicationDefault",
      "Network.Google.Auth.InstalledApplication",
      "Network.Google.Auth.ServiceAccount",
      "Network.Google.Compute.Metadata",
      "Network.Google.Env"
    ],
    "name": "gogol",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "EdisonAPI": [
        "Data.Edison.Assoc",
        "Data.Edison.Coll",
        "Data.Edison.Prelude",
        "Data.Edison.Seq",
        "Data.Edison.Seq.ListSeq"
      ],
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "GHC.Base",
        "Prelude"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Identity"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Identity",
      "Data.Bits",
      "Data.Char",
      "Data.Edison.Assoc",
      "Data.Edison.Assoc.Defaults",
      "Data.Edison.Coll",
      "Data.Edison.Coll.Defaults",
      "Data.Edison.Concrete.FingerTree",
      "Data.Edison.Prelude",
      "Data.Edison.Seq",
      "Data.Edison.Seq.BinaryRandList",
      "Data.Edison.Seq.Defaults",
      "Data.Edison.Seq.ListSeq",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.Word",
      "GHC.Base",
      "Prelude",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.Edison.Assoc.Defaults",
      "Data.Edison.Assoc.AssocList",
      "Data.Edison.Assoc.PatriciaLoMap",
      "Data.Edison.Assoc.StandardMap",
      "Data.Edison.Assoc.TernaryTrie",
      "Data.Edison.Concrete.FingerTree",
      "Data.Edison.Coll.Defaults",
      "Data.Edison.Coll.LazyPairingHeap",
      "Data.Edison.Coll.LeftistHeap",
      "Data.Edison.Coll.MinHeap",
      "Data.Edison.Coll.SkewHeap",
      "Data.Edison.Coll.SplayHeap",
      "Data.Edison.Coll.StandardSet",
      "Data.Edison.Coll.EnumSet",
      "Data.Edison.Coll.UnbalancedSet",
      "Data.Edison.Seq.Defaults",
      "Data.Edison.Seq.BankersQueue",
      "Data.Edison.Seq.BinaryRandList",
      "Data.Edison.Seq.BraunSeq",
      "Data.Edison.Seq.FingerSeq",
      "Data.Edison.Seq.JoinList",
      "Data.Edison.Seq.MyersStack",
      "Data.Edison.Seq.RandList",
      "Data.Edison.Seq.RevSeq",
      "Data.Edison.Seq.SimpleQueue",
      "Data.Edison.Seq.SizedSeq"
    ],
    "name": "EdisonCore",
    "version": "1.3.1.1"
  },
  {
    "dependencies": {
      "GraphSCC": [],
      "QuickCheck": [],
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "async": [],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Debug.Trace",
        "GHC.Exts",
        "GHC.Generics",
        "GHC.IO.Encoding",
        "Numeric",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Error",
        "Text.Read"
      ],
      "base-compat": [
        "Prelude.Compat"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.IntMap",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "cryptol": [],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "gitrev": [
        "Development.GitRev"
      ],
      "haskeline": [],
      "heredoc": [
        "Text.Heredoc"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "monadLib": [
        "MonadLib"
      ],
      "old-time": [],
      "presburger": [],
      "pretty": [
        "Text.PrettyPrint"
      ],
      "process": [
        "System.Process"
      ],
      "random": [
        "System.Random"
      ],
      "sbv": [
        "Data.SBV",
        "Data.SBV.Dynamic"
      ],
      "simple-smt": [
        "SimpleSMT"
      ],
      "smtLib": [],
      "syb": [],
      "template-haskell": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "tf-random": [
        "System.Random.TF",
        "System.Random.TF.Gen"
      ],
      "transformers": [
        "Control.Monad.Trans.Class"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "utf8-string": []
    },
    "imports": [
      "Array",
      "Char",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Criterion.Main",
      "Cryptol.Aeson",
      "Cryptol.Eval",
      "Cryptol.Eval.Arch",
      "Cryptol.Eval.Env",
      "Cryptol.Eval.Error",
      "Cryptol.Eval.Type",
      "Cryptol.Eval.Value",
      "Cryptol.ModuleSystem",
      "Cryptol.ModuleSystem.Base",
      "Cryptol.ModuleSystem.Env",
      "Cryptol.ModuleSystem.Interface",
      "Cryptol.ModuleSystem.Monad",
      "Cryptol.ModuleSystem.Name",
      "Cryptol.ModuleSystem.NamingEnv",
      "Cryptol.ModuleSystem.Renamer",
      "Cryptol.Parser",
      "Cryptol.Parser.AST",
      "Cryptol.Parser.Lexer",
      "Cryptol.Parser.LexerUtils",
      "Cryptol.Parser.Name",
      "Cryptol.Parser.Names",
      "Cryptol.Parser.NoInclude",
      "Cryptol.Parser.NoPat",
      "Cryptol.Parser.ParserUtils",
      "Cryptol.Parser.Position",
      "Cryptol.Parser.Unlit",
      "Cryptol.Parser.Utils",
      "Cryptol.Prelude",
      "Cryptol.Prims.Eval",
      "Cryptol.Prims.Syntax",
      "Cryptol.REPL.Command",
      "Cryptol.REPL.Monad",
      "Cryptol.REPL.Trie",
      "Cryptol.Symbolic",
      "Cryptol.Symbolic.Prims",
      "Cryptol.Symbolic.Value",
      "Cryptol.Testing.Concrete",
      "Cryptol.Testing.Random",
      "Cryptol.Transform.MonoValues",
      "Cryptol.Transform.Specialize",
      "Cryptol.TypeCheck",
      "Cryptol.TypeCheck.AST",
      "Cryptol.TypeCheck.InferTypes",
      "Cryptol.TypeCheck.Monad",
      "Cryptol.TypeCheck.PP",
      "Cryptol.TypeCheck.Sanity",
      "Cryptol.TypeCheck.Solve",
      "Cryptol.TypeCheck.Solver.CrySAT",
      "Cryptol.TypeCheck.Solver.InfNat",
      "Cryptol.TypeCheck.Solver.Numeric.AST",
      "Cryptol.TypeCheck.Solver.Numeric.ImportExport",
      "Cryptol.TypeCheck.Solver.Numeric.Interval",
      "Cryptol.TypeCheck.Solver.Numeric.Simplify",
      "Cryptol.TypeCheck.Solver.Numeric.Simplify1",
      "Cryptol.TypeCheck.Solver.Numeric.SimplifyExpr",
      "Cryptol.TypeCheck.Subst",
      "Cryptol.TypeCheck.TypeMap",
      "Cryptol.Utils.Ident",
      "Cryptol.Utils.Misc",
      "Cryptol.Utils.Panic",
      "Cryptol.Utils.PP",
      "Cryptol.Version",
      "Data.Aeson",
      "Data.Aeson.Encode.Pretty",
      "Data.Aeson.TH",
      "Data.Array",
      "Data.Array.Base",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.SBV",
      "Data.SBV.Dynamic",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Debug.Trace",
      "Development.GitRev",
      "GHC.Exts",
      "GHC.Generics",
      "GHC.IO.Encoding",
      "GitRev",
      "GlaExts",
      "MonadLib",
      "Numeric",
      "Options.Applicative",
      "OptParser",
      "Paths",
      "Prelude",
      "Prelude.Compat",
      "REPL.Haskeline",
      "REPL.Logo",
      "SimpleSMT",
      "System.Console.ANSI",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Error",
      "System.Posix.Signals",
      "System.Process",
      "System.Random",
      "System.Random.TF",
      "System.Random.TF.Gen",
      "System.ZMQ4",
      "Text.Heredoc",
      "Text.PrettyPrint",
      "Text.Read"
    ],
    "modules": [
      "Cryptol.Prims.Syntax",
      "Cryptol.Prims.Eval",
      "Cryptol.Parser",
      "Cryptol.Parser.Lexer",
      "Cryptol.Parser.AST",
      "Cryptol.Parser.Position",
      "Cryptol.Parser.Names",
      "Cryptol.Parser.Name",
      "Cryptol.Parser.NoPat",
      "Cryptol.Parser.NoInclude",
      "Cryptol.Parser.Utils",
      "Cryptol.Parser.Unlit",
      "Cryptol.Utils.Ident",
      "Cryptol.Utils.PP",
      "Cryptol.Utils.Panic",
      "Cryptol.Utils.Debug",
      "Cryptol.Utils.Misc",
      "Cryptol.Version",
      "Cryptol.ModuleSystem",
      "Cryptol.ModuleSystem.Base",
      "Cryptol.ModuleSystem.Env",
      "Cryptol.ModuleSystem.Interface",
      "Cryptol.ModuleSystem.Monad",
      "Cryptol.ModuleSystem.Name",
      "Cryptol.ModuleSystem.NamingEnv",
      "Cryptol.ModuleSystem.Renamer",
      "Cryptol.TypeCheck",
      "Cryptol.TypeCheck.AST",
      "Cryptol.TypeCheck.Monad",
      "Cryptol.TypeCheck.Infer",
      "Cryptol.TypeCheck.InferTypes",
      "Cryptol.TypeCheck.Kind",
      "Cryptol.TypeCheck.Subst",
      "Cryptol.TypeCheck.Instantiate",
      "Cryptol.TypeCheck.Unify",
      "Cryptol.TypeCheck.Depends",
      "Cryptol.TypeCheck.PP",
      "Cryptol.TypeCheck.Solve",
      "Cryptol.TypeCheck.TypeMap",
      "Cryptol.TypeCheck.TypeOf",
      "Cryptol.TypeCheck.Sanity",
      "Cryptol.TypeCheck.Solver.InfNat",
      "Cryptol.TypeCheck.Solver.Class",
      "Cryptol.TypeCheck.Solver.Selector",
      "Cryptol.TypeCheck.Solver.Utils",
      "Cryptol.TypeCheck.Solver.Simplify",
      "Cryptol.TypeCheck.Solver.CrySAT",
      "Cryptol.TypeCheck.Solver.Numeric.AST",
      "Cryptol.TypeCheck.Solver.Numeric.ImportExport",
      "Cryptol.TypeCheck.Solver.Numeric.Defined",
      "Cryptol.TypeCheck.Solver.Numeric.Fin",
      "Cryptol.TypeCheck.Solver.Numeric.Interval",
      "Cryptol.TypeCheck.Solver.Numeric.Simplify",
      "Cryptol.TypeCheck.Solver.Numeric.Simplify1",
      "Cryptol.TypeCheck.Solver.Numeric.SimplifyExpr",
      "Cryptol.TypeCheck.Solver.Numeric.NonLin",
      "Cryptol.TypeCheck.Solver.Numeric.SMT",
      "Cryptol.Transform.MonoValues",
      "Cryptol.Transform.Specialize",
      "Cryptol.Eval",
      "Cryptol.Eval.Arch",
      "Cryptol.Eval.Env",
      "Cryptol.Eval.Error",
      "Cryptol.Eval.Type",
      "Cryptol.Eval.Value",
      "Cryptol.Testing.Concrete",
      "Cryptol.Testing.Random",
      "Cryptol.Symbolic",
      "Cryptol.Symbolic.Prims",
      "Cryptol.Symbolic.Value",
      "Cryptol.REPL.Command",
      "Cryptol.REPL.Monad",
      "Cryptol.REPL.Trie"
    ],
    "name": "cryptol",
    "version": "2.4.0"
  },
  {
    "dependencies": {
      "HaskellNet": [],
      "HaskellNet-SSL": [],
      "aeson": [],
      "ansi-wl-pprint": [],
      "atom-conduit": [
        "Text.Atom.Conduit.Parse",
        "Text.Atom.Types"
      ],
      "base": [
        "GHC.Show",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "case-insensitive": [],
      "chunked-data": [],
      "comonad": [],
      "compdata": [],
      "conduit": [
        "Data.Conduit"
      ],
      "conduit-combinators": [
        "Data.Conduit.Combinators"
      ],
      "conduit-parse": [
        "Data.Conduit.Parser"
      ],
      "connection": [],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "directory": [],
      "dyre": [],
      "exceptions": [],
      "fast-logger": [],
      "filepath": [],
      "free": [
        "Control.Comonad.Cofree",
        "Control.Monad.Free",
        "Control.Monad.Trans.Free"
      ],
      "hashable": [],
      "http-client": [],
      "http-client-tls": [],
      "http-types": [],
      "imm": [],
      "mime-mail": [],
      "mono-traversable": [
        "Data.NonNull"
      ],
      "monoid-subclasses": [],
      "network": [],
      "opml-conduit": [
        "Text.OPML.Conduit.Parse",
        "Text.OPML.Types"
      ],
      "optparse-applicative": [],
      "rainbow": [
        "Rainbow"
      ],
      "rainbox": [
        "Rainbox"
      ],
      "rss-conduit": [
        "Text.RSS.Conduit.Parse",
        "Text.RSS.Types"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [],
      "timerep": [],
      "tls": [],
      "transformers": [],
      "uri-bytestring": [
        "URI.ByteString"
      ],
      "xml": [],
      "xml-conduit": [
        "Text.XML",
        "Text.XML.Stream.Parse"
      ]
    },
    "imports": [
      "Control.Comonad.Cofree",
      "Control.Monad.Free",
      "Control.Monad.Trans.Free",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.Combinators",
      "Data.Conduit.Parser",
      "Data.Map",
      "Data.NonNull",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Tree",
      "GHC.Show",
      "Imm.Aeson",
      "Imm.Core",
      "Imm.Database",
      "Imm.Database.FeedTable",
      "Imm.Dyre",
      "Imm.Feed",
      "Imm.Hooks",
      "Imm.HTTP",
      "Imm.Logger",
      "Imm.Options",
      "Imm.Prelude",
      "Imm.Pretty",
      "Paths",
      "Rainbow",
      "Rainbox",
      "System.IO",
      "Text.Atom.Conduit.Parse",
      "Text.Atom.Types",
      "Text.OPML.Conduit.Parse",
      "Text.OPML.Types",
      "Text.RSS.Conduit.Parse",
      "Text.RSS.Types",
      "Text.XML",
      "Text.XML.Stream.Parse",
      "URI.ByteString"
    ],
    "modules": [
      "Imm",
      "Imm.Boot",
      "Imm.Core",
      "Imm.Database",
      "Imm.Database.FeedTable",
      "Imm.Database.JsonFile",
      "Imm.Feed",
      "Imm.Hooks",
      "Imm.Hooks.SendMail",
      "Imm.HTTP",
      "Imm.HTTP.Simple",
      "Imm.Logger",
      "Imm.Logger.Simple",
      "Imm.Prelude"
    ],
    "name": "imm",
    "version": "1.0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Traversable",
        "GHC.Generics",
        "Prelude",
        "Text.ParserCombinators.ReadP"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Data.Char",
      "Data.Data",
      "Data.Foldable",
      "Data.List",
      "Data.Maybe",
      "Data.SPDX.LatticeSyntax",
      "Data.SPDX.Licenses",
      "Data.SPDX.Types",
      "Data.Traversable",
      "GHC.Generics",
      "Prelude",
      "Text.ParserCombinators.ReadP"
    ],
    "modules": [
      "Data.SPDX",
      "Data.SPDX.LatticeSyntax"
    ],
    "name": "spdx",
    "version": "0.2.1.0"
  },
  {
    "dependencies": {
      "base": [],
      "deepseq": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Text"
    ],
    "modules": [
      "Data.XML.Types"
    ],
    "name": "xml-types",
    "version": "0.3.6"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compiler",
        "Distribution.InstalledPackageInfo",
        "Distribution.License",
        "Distribution.ModuleName",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.PackageDescription.Configuration",
        "Distribution.PackageDescription.Parse",
        "Distribution.Simple.Build",
        "Distribution.Simple.BuildPaths",
        "Distribution.Simple.Compiler",
        "Distribution.Simple.Configure",
        "Distribution.Simple.GHC",
        "Distribution.Simple.LocalBuildInfo",
        "Distribution.Simple.PackageIndex",
        "Distribution.Simple.Program",
        "Distribution.Simple.Program.GHC",
        "Distribution.Simple.Program.Types",
        "Distribution.Simple.Setup",
        "Distribution.Simple.Utils",
        "Distribution.System",
        "Distribution.Text",
        "Distribution.Utils.NubList",
        "Distribution.Verbosity"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Char",
        "Data.Functor",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "GHC.Generics",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "Text.ParserCombinators.ReadP",
        "Text.Printf"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "ghc-prim": [],
      "mtl": [
        "Control.Monad.Reader",
        "Control.Monad.State.Strict"
      ],
      "process": [
        "System.Process"
      ],
      "template-haskell": [
        "Language.Haskell.TH"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "transformers": [
        "Control.Monad.Trans.Maybe"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ]
    },
    "imports": [
      "CabalHelper.Common",
      "CabalHelper.Compile",
      "CabalHelper.Data",
      "CabalHelper.GuessGhc",
      "CabalHelper.Licenses",
      "CabalHelper.Log",
      "CabalHelper.Sandbox",
      "CabalHelper.Types",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.State.Strict",
      "Control.Monad.Trans.Maybe",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Functor",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Set",
      "Data.String",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Distribution.Compiler",
      "Distribution.Helper",
      "Distribution.InstalledPackageInfo",
      "Distribution.License",
      "Distribution.ModuleName",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.PackageDescription.Configuration",
      "Distribution.PackageDescription.Parse",
      "Distribution.Simple.Build",
      "Distribution.Simple.BuildPaths",
      "Distribution.Simple.Compiler",
      "Distribution.Simple.Configure",
      "Distribution.Simple.GHC",
      "Distribution.Simple.LocalBuildInfo",
      "Distribution.Simple.PackageIndex",
      "Distribution.Simple.Program",
      "Distribution.Simple.Program.GHC",
      "Distribution.Simple.Program.Types",
      "Distribution.Simple.Setup",
      "Distribution.Simple.Utils",
      "Distribution.System",
      "Distribution.Text",
      "Distribution.Utils.NubList",
      "Distribution.Verbosity",
      "GHC.Generics",
      "Language.Haskell.TH",
      "Paths",
      "Prelude",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Environment.Extra",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Posix.Env",
      "System.Process",
      "Text.ParserCombinators.ReadP",
      "Text.Printf"
    ],
    "modules": [
      "Distribution.Helper"
    ],
    "name": "cabal-helper",
    "version": "0.7.2.0"
  },
  {
    "dependencies": {
      "HaTeX": [
        "Text.LaTeX",
        "Text.LaTeX.Base",
        "Text.LaTeX.Packages.AMSMath",
        "Text.LaTeX.Packages.Babel",
        "Text.LaTeX.Packages.Color",
        "Text.LaTeX.Packages.Fancyhdr",
        "Text.LaTeX.Packages.Graphicx",
        "Text.LaTeX.Packages.Hyperref",
        "Text.LaTeX.Packages.Inputenc"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Bool",
        "Data.Char",
        "Data.Either",
        "Data.Function",
        "Data.Functor",
        "Data.Int",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Version",
        "Prelude",
        "System.IO"
      ],
      "blaze-html": [
        "Text.Blaze.Html5",
        "Text.Blaze.Html5.Attributes",
        "Text.Blaze.Html.Renderer.Text"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.Text"
      ],
      "text": [
        "Data.Text",
        "Data.Text.IO",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.State",
      "Data.Bool",
      "Data.Char",
      "Data.Either",
      "Data.Function",
      "Data.Functor",
      "Data.Int",
      "Data.List",
      "Data.Monoid",
      "Data.String",
      "Data.Text",
      "Data.Text.IO",
      "Data.Text.Lazy.IO",
      "Data.Time",
      "Data.Version",
      "Prelude",
      "System.Directory",
      "System.FilePath",
      "System.IO",
      "Text.Blaze.Html5",
      "Text.Blaze.Html5.Attributes",
      "Text.Blaze.Html.Renderer.Text",
      "Text.LaTeX",
      "Text.LaTeX.Base",
      "Text.LaTeX.Guide.Auto",
      "Text.LaTeX.Guide.Backend.HTML",
      "Text.LaTeX.Guide.Backend.LaTeX",
      "Text.LaTeX.Guide.Backend.Wiki",
      "Text.LaTeX.Guide.Info",
      "Text.LaTeX.Guide.Syntax",
      "Text.LaTeX.Guide.Update",
      "Text.LaTeX.Packages.AMSMath",
      "Text.LaTeX.Packages.Babel",
      "Text.LaTeX.Packages.Color",
      "Text.LaTeX.Packages.Fancyhdr",
      "Text.LaTeX.Packages.Graphicx",
      "Text.LaTeX.Packages.Hyperref",
      "Text.LaTeX.Packages.Inputenc",
      "Text.Parsec",
      "Text.Parsec.Text"
    ],
    "modules": [
      "Text.LaTeX.Guide"
    ],
    "name": "hatex-guide",
    "version": "1.3.1.5"
  },
  {
    "dependencies": {
      "async": [],
      "base": [],
      "concurrent-output": [],
      "data-default": [],
      "time": []
    },
    "imports": [
      "Data.ByteString"
    ],
    "modules": [
      "System.Console.AsciiProgress",
      "System.Console.AsciiProgress.Internal"
    ],
    "name": "ascii-progress",
    "version": "0.3.3.0"
  },
  {
    "dependencies": {
      "base": [
        "Data.List",
        "System.IO"
      ],
      "biocore": [
        "Bio.Core.Sequence"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ]
    },
    "imports": [
      "Bio.Core.Sequence",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.List",
      "System.IO"
    ],
    "modules": [
      "Bio.Sequence.FastQ"
    ],
    "name": "biofastq",
    "version": "0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode",
        "Data.Aeson.Types"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.Fix",
        "Data.Char",
        "Data.Foldable",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ratio",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Debug.Trace",
        "Prelude",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem.Weak"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "binary": [
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "mtl": [
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "network": [
        "Network",
        "Network.BSD",
        "Network.Socket",
        "Network.Socket.ByteString",
        "Network.Socket.ByteString.Lazy"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Clock.POSIX"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict"
      ],
      "utf8-string": [
        "Data.ByteString.UTF8"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Fix",
      "Control.Monad.State",
      "Control.Monad.Writer",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Text",
      "Data.Aeson.Types",
      "Data.Attoparsec.Text",
      "Database.RethinkDB",
      "Database.RethinkDB.Datum",
      "Database.RethinkDB.Driver",
      "Database.RethinkDB.Functions",
      "Database.RethinkDB.Geospatial",
      "Database.RethinkDB.Network",
      "Database.RethinkDB.NoClash",
      "Database.RethinkDB.ReQL",
      "Database.RethinkDB.Time",
      "Database.RethinkDB.Types",
      "Database.RethinkDB.Wire",
      "Database.RethinkDB.Wire.Query",
      "Database.RethinkDB.Wire.Response",
      "Database.RethinkDB.Wire.Term",
      "Database.RethinkDB.Wire.VersionDummy",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.UTF8",
      "Data.Char",
      "Data.Default",
      "Data.Foldable",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Scientific",
      "Data.Set",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Time",
      "Data.Time.Clock.POSIX",
      "Data.Typeable",
      "Data.Vector",
      "Data.Word",
      "Debug.Trace",
      "Network",
      "Network.BSD",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.Socket.ByteString.Lazy",
      "Prelude",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Mem.Weak",
      "Test.DocTest"
    ],
    "modules": [
      "Database.RethinkDB",
      "Database.RethinkDB.NoClash",
      "Database.RethinkDB.Driver",
      "Database.RethinkDB.Functions",
      "Database.RethinkDB.Time",
      "Database.RethinkDB.Types",
      "Database.RethinkDB.Datum",
      "Database.RethinkDB.Geospatial",
      "Database.RethinkDB.ReQL",
      "Database.RethinkDB.Network",
      "Database.RethinkDB.MapReduce",
      "Database.RethinkDB.Wire",
      "Database.RethinkDB.Wire.Datum",
      "Database.RethinkDB.Wire.Frame",
      "Database.RethinkDB.Wire.Query",
      "Database.RethinkDB.Wire.Response",
      "Database.RethinkDB.Wire.Term",
      "Database.RethinkDB.Wire.VersionDummy",
      "Database.RethinkDB.Doctest"
    ],
    "name": "rethinkdb",
    "version": "2.2.0.7"
  },
  {
    "dependencies": {
      "base": [],
      "directory": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.Directory.ProjectRoot"
    ],
    "name": "projectroot",
    "version": "0.2.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Encode",
        "Data.Aeson.Types"
      ],
      "base": [
        "Data.Int"
      ],
      "ekg-core": [
        "System.Metrics",
        "System.Metrics.Distribution"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Data.Aeson.Encode",
      "Data.Aeson.Types",
      "Data.HashMap.Strict",
      "Data.Int",
      "Data.Text",
      "System.Metrics",
      "System.Metrics.Distribution"
    ],
    "modules": [
      "System.Metrics.Json"
    ],
    "name": "ekg-json",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Foldable",
        "Data.Function",
        "Data.Ix",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "GHC.Conc",
        "Prelude"
      ],
      "ghc-prim": [
        "GHC.Types"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "transformers": [
        "Control.Monad.Trans.Cont"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent.Speculation",
      "Control.Concurrent.Speculation.Internal",
      "Control.Concurrent.STM",
      "Control.Monad",
      "Control.Monad.Trans.Cont",
      "Data.Foldable",
      "Data.Function",
      "Data.Ix",
      "Data.List",
      "Data.Monoid",
      "Data.Traversable",
      "GHC.Conc",
      "GHC.Prim",
      "GHC.Types",
      "Prelude"
    ],
    "modules": [
      "Control.Concurrent.Speculation",
      "Control.Concurrent.Speculation.Class",
      "Control.Concurrent.Speculation.Foldable",
      "Control.Concurrent.Speculation.Traversable",
      "Control.Concurrent.Speculation.List"
    ],
    "name": "speculation",
    "version": "1.5.0.3"
  },
  {
    "dependencies": {},
    "imports": [
      "Data.Array",
      "Data.Strict.Either",
      "Data.Strict.Maybe",
      "Data.Strict.Tuple",
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Data.Strict.Tuple",
      "Data.Strict.Maybe",
      "Data.Strict.Either",
      "Data.Strict",
      "System.IO.Strict"
    ],
    "name": "strict",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Bento"
    ],
    "name": "bento",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Control.Monad.Fail",
        "Data.List",
        "Data.Maybe",
        "Data.Type.Equality",
        "GHC.Base",
        "Unsafe.Coerce"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.State",
        "Control.Monad.Writer"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "transformers": [
        "Control.Monad.Trans.Except"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Fail",
      "Control.Monad.State",
      "Control.Monad.Trans.Except",
      "Control.Monad.Writer",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "Data.Type.Equality",
      "Generics.RepLib.AbstractReps",
      "Generics.RepLib.Derive",
      "Generics.RepLib.Lib",
      "Generics.RepLib.PreludeLib",
      "Generics.RepLib.PreludeReps",
      "Generics.RepLib.R",
      "Generics.RepLib.R1",
      "Generics.RepLib.RepAux",
      "Generics.RepLib.SYB.Aliases",
      "Generics.RepLib.SYB.Schemes",
      "GHC.Base",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Generics.RepLib",
      "Generics.RepLib.R",
      "Generics.RepLib.R1",
      "Generics.RepLib.Lib",
      "Generics.RepLib.PreludeReps",
      "Generics.RepLib.PreludeLib",
      "Generics.RepLib.RepAux",
      "Generics.RepLib.Derive",
      "Generics.RepLib.SYB.Aliases",
      "Generics.RepLib.SYB.Schemes",
      "Generics.RepLib.Unify",
      "Generics.RepLib.AbstractReps"
    ],
    "name": "RepLib",
    "version": "0.5.4"
  },
  {
    "dependencies": {
      "base": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Data.Either.Unwrap"
    ],
    "name": "either-unwrap",
    "version": "1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.IORef",
        "Data.Typeable",
        "System.IO.Error"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "cryptonite": [
        "Crypto.PubKey.DH"
      ],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "network": [
        "Network.Socket",
        "Network.Socket.ByteString"
      ],
      "streaming-commons": [
        "Data.Streaming.Network"
      ],
      "tls": [
        "Network.TLS",
        "Network.TLS.Extra"
      ],
      "wai": [
        "Network.Wai"
      ],
      "warp": [
        "Network.Wai.Handler.Warp",
        "Network.Wai.Handler.Warp.Internal"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Crypto.PubKey.DH",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Default.Class",
      "Data.IORef",
      "Data.Streaming.Network",
      "Data.Typeable",
      "Network.Socket",
      "Network.Socket.ByteString",
      "Network.TLS",
      "Network.TLS.Extra",
      "Network.Wai",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Handler.Warp.Internal",
      "System.IO.Error"
    ],
    "modules": [
      "Network.Wai.Handler.WarpTLS"
    ],
    "name": "warp-tls",
    "version": "3.2.2"
  },
  {
    "dependencies": {
      "base": [
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Semigroup",
        "Data.Traversable",
        "Data.Typeable",
        "Prelude"
      ],
      "groups": [],
      "semigroupoids": [],
      "semigroups": []
    },
    "imports": [
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Monoid.Action",
      "Data.Monoid.SemiDirectProduct",
      "Data.Monoid.SemiDirectProduct.Strict",
      "Data.Semigroup",
      "Data.Traversable",
      "Data.Typeable",
      "Prelude"
    ],
    "modules": [
      "Data.Monoid.Action",
      "Data.Monoid.SemiDirectProduct",
      "Data.Monoid.SemiDirectProduct.Strict",
      "Data.Monoid.Coproduct",
      "Data.Monoid.Cut",
      "Data.Monoid.Deletable",
      "Data.Monoid.Endomorphism",
      "Data.Monoid.Inf",
      "Data.Monoid.MList",
      "Data.Monoid.Recommend",
      "Data.Monoid.Split",
      "Data.Monoid.WithSemigroup"
    ],
    "name": "monoid-extras",
    "version": "0.4.2"
  },
  {
    "dependencies": {
      "base": [],
      "unix": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.Linux.Namespaces"
    ],
    "name": "linux-namespaces",
    "version": "0.1.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Prelude"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "parsec": [
        "Text.Parsec"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.Text",
      "Data.Text.Lazy",
      "Prelude",
      "Text.Parsec"
    ],
    "modules": [
      "Algorithms.NaturalSort"
    ],
    "name": "natural-sort",
    "version": "0.1.2"
  },
  {
    "dependencies": {
      "HUnit": [
        "Test.HUnit.Lang"
      ],
      "QuickCheck": [
        "Test.QuickCheck",
        "Test.QuickCheck.Property",
        "Test.QuickCheck.State"
      ],
      "ansi-terminal": [],
      "async": [],
      "base": [
        "Control.Exception",
        "System.CPUTime",
        "System.IO",
        "System.Timeout",
        "Text.ParserCombinators.ReadP"
      ],
      "deepseq": [],
      "hspec-expectations": [],
      "quickcheck-io": [],
      "random": [],
      "setenv": [],
      "tf-random": [],
      "time": [],
      "transformers": []
    },
    "imports": [
      "Control.Exception",
      "System.CPUTime",
      "System.IO",
      "System.Timeout",
      "Test.Hspec.Core.Example",
      "Test.Hspec.Core.Formatters",
      "Test.Hspec.Core.Formatters.Internal",
      "Test.Hspec.Core.Hooks",
      "Test.Hspec.Core.QuickCheck",
      "Test.Hspec.Core.Runner",
      "Test.Hspec.Core.Spec",
      "Test.Hspec.Options",
      "Test.HUnit.Lang",
      "Test.QuickCheck",
      "Test.QuickCheck.Property",
      "Test.QuickCheck.State",
      "Text.ParserCombinators.ReadP"
    ],
    "modules": [
      "Test.Hspec.Core.Spec",
      "Test.Hspec.Core.Hooks",
      "Test.Hspec.Core.Runner",
      "Test.Hspec.Core.Formatters",
      "Test.Hspec.Core.QuickCheck",
      "Test.Hspec.Core.Util"
    ],
    "name": "hspec-core",
    "version": "2.2.3"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Int",
        "Data.Ix",
        "Data.List",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "GHC.Generics",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Mem.StableName",
        "Unsafe.Coerce"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "data-default": [
        "Data.Default"
      ],
      "lens": [
        "Control.Lens"
      ],
      "mtl": [
        "Control.Monad.Identity",
        "Control.Monad.Reader",
        "Control.Monad.RWS.Strict",
        "Control.Monad.State",
        "Control.Monad.State.Class"
      ],
      "process": [
        "System.Process"
      ],
      "temporary": [
        "System.IO.Temp"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Identity",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader",
      "Control.Monad.RWS.Strict",
      "Control.Monad.State",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.State",
      "Data.Array",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Default",
      "Data.Foldable",
      "Data.HashMap.Lazy",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Ix",
      "Data.List",
      "Data.Map",
      "Data.Monoid",
      "Data.Sequence",
      "Data.Set",
      "Data.Traversable",
      "Data.Tree",
      "Data.Typeable",
      "Data.Word",
      "Ersatz",
      "Ersatz.Bit",
      "Ersatz.Bits",
      "Ersatz.Codec",
      "Ersatz.Equatable",
      "Ersatz.Internal.Formula",
      "Ersatz.Internal.Literal",
      "Ersatz.Internal.Parser",
      "Ersatz.Internal.StableName",
      "Ersatz.Orderable",
      "Ersatz.Problem",
      "Ersatz.Solution",
      "Ersatz.Solver",
      "Ersatz.Solver.Common",
      "Ersatz.Solver.DepQBF",
      "Ersatz.Solver.Minisat",
      "Ersatz.Solver.Z3",
      "Ersatz.Variable",
      "GHC.Generics",
      "Language.Haskell.HLint",
      "Prelude",
      "RegexpGrid.Problem",
      "RegexpGrid.Regexp",
      "RegexpGrid.Types",
      "Sudoku.Cell",
      "Sudoku.Problem",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Temp",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "System.Process",
      "Text.Parsec",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Ersatz",
      "Ersatz.Bit",
      "Ersatz.Bits",
      "Ersatz.BitChar",
      "Ersatz.Codec",
      "Ersatz.Equatable",
      "Ersatz.Internal.Formula",
      "Ersatz.Internal.Literal",
      "Ersatz.Orderable",
      "Ersatz.Problem",
      "Ersatz.Solution",
      "Ersatz.Solver",
      "Ersatz.Solver.DepQBF",
      "Ersatz.Solver.Minisat",
      "Ersatz.Solver.Z3",
      "Ersatz.Variable"
    ],
    "name": "ersatz",
    "version": "0.3.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "System.IO"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "clock": [
        "System.Clock"
      ],
      "connection": [
        "Network.Connection"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map"
      ],
      "data-binary-ieee754": [
        "Data.Binary.IEEE754"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "split": [
        "Data.List.Split"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "vector": [
        "Data.Vector.Mutable"
      ],
      "xml": [
        "Text.XML.Light"
      ]
    },
    "imports": [
      "BasicPublishSpec",
      "BasicRejectSpec",
      "ChannelSpec",
      "ConnectionSpec",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Control",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.IEEE754",
      "Data.Binary.Put",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Foldable",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.List.Split",
      "Data.Map",
      "Data.Maybe",
      "Data.Sequence",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Typeable",
      "Data.Vector.Mutable",
      "Data.Version",
      "Data.Word",
      "ExchangeDeclareSpec",
      "ExchangeDeleteSpec",
      "Network",
      "Network.AMQP",
      "Network.AMQP.ChannelAllocator",
      "Network.AMQP.Generated",
      "Network.AMQP.Helpers",
      "Network.AMQP.Internal",
      "Network.AMQP.Protocol",
      "Network.AMQP.Types",
      "Network.Connection",
      "Network.URI",
      "Paths",
      "QueueDeclareSpec",
      "QueueDeleteSpec",
      "QueuePurgeSpec",
      "System.Clock",
      "System.IO",
      "Test.Hspec",
      "Text.XML.Light"
    ],
    "modules": [
      "Network.AMQP",
      "Network.AMQP.Types",
      "Network.AMQP.Lifted"
    ],
    "name": "amqp",
    "version": "0.14.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Data.Complex",
        "Data.Fixed",
        "Data.Foldable",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.Monoid",
        "Data.Ord",
        "Data.Proxy",
        "Data.Ratio",
        "Data.Traversable",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.StablePtr",
        "GHC.Conc",
        "Text.ParserCombinators.ReadP",
        "Text.Read",
        "Text.Read.Lex"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Data.Complex",
      "Data.Fixed",
      "Data.Foldable",
      "Data.Functor.Identity",
      "Data.IORef",
      "Data.Monoid",
      "Data.Ord",
      "Data.Proxy",
      "Data.Ratio",
      "Data.Traversable",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.StablePtr",
      "GHC.Conc",
      "Text.ParserCombinators.ReadP",
      "Text.Read",
      "Text.Read.Lex"
    ],
    "modules": [
      "Prelude.Extras"
    ],
    "name": "prelude-extras",
    "version": "0.4.0.3"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.ReadE",
        "Distribution.Verbosity"
      ],
      "array": [
        "Data.Array"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Data",
        "Data.Either",
        "Data.Foldable",
        "Data.Function",
        "Data.Int",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Version",
        "Data.Word",
        "Foreign",
        "Foreign.C",
        "GHC.Exts",
        "Numeric",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Internals",
        "Text.ParserCombinators.ReadP",
        "Text.Printf"
      ],
      "bytestring": [],
      "containers": [
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath",
        "System.FilePath.Posix"
      ],
      "ghc": [],
      "ghc-boot": [
        "GHC.LanguageExtensions"
      ],
      "ghc-paths": [
        "GHC.Paths"
      ],
      "haddock-library": [
        "Documentation.Haddock.Doc",
        "Documentation.Haddock.Parser",
        "Documentation.Haddock.Types"
      ],
      "transformers": [
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State"
      ],
      "xhtml": [
        "Text.XHtml"
      ]
    },
    "imports": [
      "Bag",
      "BasicTypes",
      "Binary",
      "BinIface",
      "BooleanFormula",
      "Class",
      "CoAxiom",
      "Coercion",
      "Config",
      "ConLike",
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State",
      "CoreSyn",
      "Data.Array",
      "Data.Char",
      "DataCon",
      "Data.Data",
      "Data.Either",
      "Data.Foldable",
      "Data.Function",
      "Data.Int",
      "Data.IntSet",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Ord",
      "Data.Set",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Version",
      "Data.Word",
      "Digraph",
      "Distribution.ReadE",
      "Distribution.Verbosity",
      "Documentation.Haddock.Doc",
      "Documentation.Haddock.Parser",
      "Documentation.Haddock.Types",
      "DynFlags",
      "ErrUtils",
      "Exception",
      "FamInstEnv",
      "FastMutInt",
      "FastString",
      "Foreign",
      "Foreign.C",
      "GHC",
      "GHC.Exts",
      "GHC.LanguageExtensions",
      "GhcMonad",
      "GHC.Paths",
      "Haddock",
      "Haddock.Backends.Hoogle",
      "Haddock.Backends.Hyperlinker",
      "Haddock.Backends.Hyperlinker.Ast",
      "Haddock.Backends.Hyperlinker.Parser",
      "Haddock.Backends.Hyperlinker.Renderer",
      "Haddock.Backends.Hyperlinker.Types",
      "Haddock.Backends.Hyperlinker.Utils",
      "Haddock.Backends.LaTeX",
      "Haddock.Backends.Xhtml",
      "Haddock.Backends.Xhtml.Decl",
      "Haddock.Backends.Xhtml.DocMarkup",
      "Haddock.Backends.Xhtml.Layout",
      "Haddock.Backends.Xhtml.Names",
      "Haddock.Backends.Xhtml.Themes",
      "Haddock.Backends.Xhtml.Types",
      "Haddock.Backends.Xhtml.Utils",
      "Haddock.Convert",
      "Haddock.Doc",
      "Haddock.GhcUtils",
      "Haddock.Interface",
      "Haddock.Interface.AttachInstances",
      "Haddock.Interface.Create",
      "Haddock.InterfaceFile",
      "Haddock.Interface.LexParseRn",
      "Haddock.Interface.ParseModuleHeader",
      "Haddock.Interface.Rename",
      "Haddock.Interface.Specialize",
      "Haddock.ModuleTree",
      "Haddock.Options",
      "Haddock.Parser",
      "Haddock.Syb",
      "HaddockTypes",
      "Haddock.Types",
      "HaddockUtil",
      "Haddock.Utils",
      "Haddock.Version",
      "HscTypes",
      "HsDecls",
      "HsSyn",
      "HsSyn2",
      "HsTypes",
      "IfaceEnv",
      "InstEnv",
      "Lexeme",
      "Lexer",
      "Module",
      "MonadUtils",
      "Name",
      "NameSet",
      "Numeric",
      "OccName",
      "Outputable",
      "PackageConfig",
      "Packages",
      "Panic",
      "Parser",
      "Paths",
      "PatSyn",
      "PrelNames",
      "Prelude",
      "Pretty",
      "RdrName",
      "RnEnv",
      "SrcLoc",
      "StaticFlags",
      "StringBuffer",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.FilePath.Posix",
      "System.IO",
      "System.IO.Unsafe",
      "System.Posix.Internals",
      "TcRnDriver",
      "TcRnTypes",
      "TcType",
      "Test.Hspec",
      "Test.QuickCheck",
      "Text.ParserCombinators.ReadP",
      "Text.PrettyPrint",
      "Text.Printf",
      "Text.XHtml",
      "TyCon",
      "TyCoRep",
      "Type",
      "TysPrim",
      "TysWiredIn",
      "UniqFM",
      "UniqSupply",
      "Unique",
      "Util",
      "Var"
    ],
    "modules": [
      "Documentation.Haddock"
    ],
    "name": "haddock-api",
    "version": "2.17.3"
  },
  {
    "dependencies": {
      "ansi-terminal": [
        "System.Console.ANSI"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Concurrent.Chan",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.Int",
        "Data.List",
        "Data.Maybe",
        "Data.String",
        "Data.Typeable",
        "Data.Word",
        "Prelude",
        "System.IO",
        "System.Timeout"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map"
      ],
      "mtl": [
        "Control.Monad.Error"
      ],
      "network-transport": [
        "Network.Transport",
        "Network.Transport.Internal",
        "Network.Transport.Util"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Error",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Int",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.String",
      "Data.Typeable",
      "Data.Word",
      "Network.Transport",
      "Network.Transport.Internal",
      "Network.Transport.Tests.Auxiliary",
      "Network.Transport.Tests.Traced",
      "Network.Transport.Util",
      "Prelude",
      "System.Console.ANSI",
      "System.IO",
      "System.Random",
      "System.Timeout"
    ],
    "modules": [
      "Network.Transport.Tests",
      "Network.Transport.Tests.Multicast",
      "Network.Transport.Tests.Auxiliary",
      "Network.Transport.Tests.Traced"
    ],
    "name": "network-transport-tests",
    "version": "0.2.3.0"
  },
  {
    "dependencies": {
      "base": [
        "GHC.Generics"
      ],
      "markdown-unlit": []
    },
    "imports": [
      "GHC.Generics"
    ],
    "modules": [
      "Generics.Eot",
      "Generics.Eot.Tutorial"
    ],
    "name": "generics-eot",
    "version": "0.2.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.Word"
      ],
      "base58string": [
        "Data.Base58String.Bitcoin"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "bytestring": [],
      "hexstring": [
        "Data.HexString"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Base58String.Bitcoin",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.HexString",
      "Data.Text",
      "Data.Word",
      "Spec",
      "Test.Hspec.Runner"
    ],
    "modules": [
      "Data.Bitcoin.Types"
    ],
    "name": "bitcoin-types",
    "version": "0.9.2"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ],
      "lens": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Data.Text",
      "Network.AWS.S3",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.AWS.S3",
      "Test.AWS.S3.Internal",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.S3",
      "Network.AWS.S3.AbortMultipartUpload",
      "Network.AWS.S3.CompleteMultipartUpload",
      "Network.AWS.S3.CopyObject",
      "Network.AWS.S3.CreateBucket",
      "Network.AWS.S3.CreateMultipartUpload",
      "Network.AWS.S3.DeleteBucket",
      "Network.AWS.S3.DeleteBucketCORS",
      "Network.AWS.S3.DeleteBucketLifecycle",
      "Network.AWS.S3.DeleteBucketPolicy",
      "Network.AWS.S3.DeleteBucketReplication",
      "Network.AWS.S3.DeleteBucketTagging",
      "Network.AWS.S3.DeleteBucketWebsite",
      "Network.AWS.S3.DeleteObject",
      "Network.AWS.S3.DeleteObjects",
      "Network.AWS.S3.GetBucketACL",
      "Network.AWS.S3.GetBucketAccelerateConfiguration",
      "Network.AWS.S3.GetBucketCORS",
      "Network.AWS.S3.GetBucketLifecycleConfiguration",
      "Network.AWS.S3.GetBucketLocation",
      "Network.AWS.S3.GetBucketLogging",
      "Network.AWS.S3.GetBucketNotificationConfiguration",
      "Network.AWS.S3.GetBucketPolicy",
      "Network.AWS.S3.GetBucketReplication",
      "Network.AWS.S3.GetBucketRequestPayment",
      "Network.AWS.S3.GetBucketTagging",
      "Network.AWS.S3.GetBucketVersioning",
      "Network.AWS.S3.GetBucketWebsite",
      "Network.AWS.S3.GetObject",
      "Network.AWS.S3.GetObjectACL",
      "Network.AWS.S3.GetObjectTorrent",
      "Network.AWS.S3.HeadBucket",
      "Network.AWS.S3.HeadObject",
      "Network.AWS.S3.ListBuckets",
      "Network.AWS.S3.ListMultipartUploads",
      "Network.AWS.S3.ListObjectVersions",
      "Network.AWS.S3.ListObjects",
      "Network.AWS.S3.ListParts",
      "Network.AWS.S3.PutBucketACL",
      "Network.AWS.S3.PutBucketAccelerateConfiguration",
      "Network.AWS.S3.PutBucketCORS",
      "Network.AWS.S3.PutBucketLifecycleConfiguration",
      "Network.AWS.S3.PutBucketLogging",
      "Network.AWS.S3.PutBucketNotificationConfiguration",
      "Network.AWS.S3.PutBucketPolicy",
      "Network.AWS.S3.PutBucketReplication",
      "Network.AWS.S3.PutBucketRequestPayment",
      "Network.AWS.S3.PutBucketTagging",
      "Network.AWS.S3.PutBucketVersioning",
      "Network.AWS.S3.PutBucketWebsite",
      "Network.AWS.S3.PutObject",
      "Network.AWS.S3.PutObjectACL",
      "Network.AWS.S3.RestoreObject",
      "Network.AWS.S3.Types",
      "Network.AWS.S3.UploadPart",
      "Network.AWS.S3.UploadPartCopy",
      "Network.AWS.S3.Waiters"
    ],
    "name": "amazonka-s3",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "base": [],
      "transformers": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "GHCJS.Perch"
    ],
    "name": "ghcjs-perch",
    "version": "0.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Control.Monad.IO.Class"
      ],
      "transformers": []
    },
    "imports": [
      "Control.Monad",
      "Control.Monad.IO.Class"
    ],
    "modules": [
      "Data.ObjectName"
    ],
    "name": "ObjectName",
    "version": "1.1.0.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.TH",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Data.Data",
        "Data.Monoid",
        "Data.Typeable",
        "GHC.Generics",
        "Prelude"
      ],
      "mtl": [
        "Control.Monad.Except"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Except",
      "Data.Aeson",
      "Data.Aeson.TH",
      "Data.Aeson.Types",
      "Data.Data",
      "Data.Monoid",
      "Data.Text",
      "Data.Typeable",
      "GHC.Generics",
      "Prelude",
      "System.FilePath.Glob",
      "Test.DocTest"
    ],
    "modules": [
      "Web.Envelope"
    ],
    "name": "envelope",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "Data.List",
        "System.Environment",
        "System.Exit",
        "System.IO"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ],
      "pipes-safe": [
        "Pipes.Safe"
      ],
      "process": [
        "System.Process"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "unix": [
        "System.Posix"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.MVar",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.List",
      "Pipes",
      "Pipes.Cliff",
      "Pipes.Cliff.Core",
      "Pipes.Cliff.Examples",
      "Pipes.Prelude",
      "Pipes.Safe",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.Posix",
      "System.Process"
    ],
    "modules": [
      "Pipes.Cliff",
      "Pipes.Cliff.Core",
      "Pipes.Cliff.Examples"
    ],
    "name": "pipes-cliff",
    "version": "0.12.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad.ST",
        "Data.Bits",
        "Data.List",
        "Prelude"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.State.Strict"
      ],
      "transformers": [],
      "vector": [
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad.ST",
      "Control.Monad.State.Strict",
      "Data.Bits",
      "Data.DAWG.Gen.Graph",
      "Data.DAWG.Gen.HashMap",
      "Data.DAWG.Gen.Trans",
      "Data.DAWG.Gen.Trans.Hashed",
      "Data.DAWG.Gen.Trans.Map",
      "Data.DAWG.Gen.Trans.Vector",
      "Data.DAWG.Gen.Types",
      "Data.DAWG.Gen.Util",
      "Data.DAWG.Int.Dynamic",
      "Data.DAWG.Int.Dynamic.Node",
      "Data.DAWG.Ord",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Map.Strict",
      "Data.Set",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Ord",
      "Prelude",
      "Test.SmallCheck.Series",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.SmallCheck"
    ],
    "modules": [
      "Data.DAWG.Ord",
      "Data.DAWG.Int"
    ],
    "name": "dawg-ord",
    "version": "0.5.0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Int",
        "Data.IORef"
      ],
      "bytestring": [
        "Data.ByteString"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "pipes": [
        "Pipes"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.ByteString",
      "Data.Int",
      "Data.IORef",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Pipes"
    ],
    "modules": [
      "Pipes.HTTP"
    ],
    "name": "pipes-http",
    "version": "1.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Exception",
        "Control.Exception.Base",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "Data.Word",
        "Debug.Trace",
        "Prelude",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "Text.Printf"
      ],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Exception",
      "Control.Exception.Base",
      "Control.Monad",
      "Data.Char",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Word",
      "Debug.Trace",
      "Language.Haskell.HsColour",
      "Language.Haskell.HsColour.ACSS",
      "Language.Haskell.HsColour.Anchors",
      "Language.Haskell.HsColour.ANSI",
      "Language.Haskell.HsColour.Classify",
      "Language.Haskell.HsColour.ColourHighlight",
      "Language.Haskell.HsColour.Colourise",
      "Language.Haskell.HsColour.CSS",
      "Language.Haskell.HsColour.General",
      "Language.Haskell.HsColour.HTML",
      "Language.Haskell.HsColour.InlineCSS",
      "Language.Haskell.HsColour.LaTeX",
      "Language.Haskell.HsColour.MIRC",
      "Language.Haskell.HsColour.Options",
      "Language.Haskell.HsColour.Output",
      "Language.Haskell.HsColour.TTY",
      "Prelude",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "Text.Printf"
    ],
    "modules": [
      "Language.Haskell.HsColour",
      "Language.Haskell.HsColour.ANSI",
      "Language.Haskell.HsColour.Anchors",
      "Language.Haskell.HsColour.ACSS",
      "Language.Haskell.HsColour.CSS",
      "Language.Haskell.HsColour.Classify",
      "Language.Haskell.HsColour.ColourHighlight",
      "Language.Haskell.HsColour.Colourise",
      "Language.Haskell.HsColour.General",
      "Language.Haskell.HsColour.HTML",
      "Language.Haskell.HsColour.InlineCSS",
      "Language.Haskell.HsColour.LaTeX",
      "Language.Haskell.HsColour.MIRC",
      "Language.Haskell.HsColour.Options",
      "Language.Haskell.HsColour.Output",
      "Language.Haskell.HsColour.TTY"
    ],
    "name": "hscolour",
    "version": "1.24.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Ord",
        "Data.Version",
        "Foreign",
        "Foreign.C",
        "Foreign.Storable",
        "Prelude",
        "System.Console.GetOpt",
        "System.Environment",
        "System.Exit",
        "System.Info",
        "System.IO",
        "System.IO.Error",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Char8"
      ],
      "dlist": [
        "Data.DList"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "language-c": [
        "Language.C.Data",
        "Language.C.Data.Error",
        "Language.C.Data.Ident",
        "Language.C.Data.Name",
        "Language.C.Data.Node",
        "Language.C.Data.Position",
        "Language.C.Parser",
        "Language.C.Pretty",
        "Language.C.Syntax"
      ]
    },
    "imports": [
      "C2HS.C",
      "C2HS.C.Attrs",
      "C2HS.C.Builtin",
      "C2HS.CHS",
      "C2HS.CHS.Lexer",
      "C2HS.C.Info",
      "C2HS.C.Names",
      "C2HS.Config",
      "C2HS.C.Trav",
      "C2HS.Gen.Bind",
      "C2HS.Gen.Header",
      "C2HS.Gen.Monad",
      "C2HS.Gen.Wrapper",
      "C2HS.State",
      "C2HS.Switches",
      "C2HS.Version",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.State",
      "Control.StateBase",
      "Control.StateTrans",
      "Data.Array",
      "Data.Attributes",
      "Data.Bits",
      "Data.ByteString.Char8",
      "Data.Char",
      "Data.DList",
      "Data.Errors",
      "Data.Function",
      "Data.IntMap",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.NameSpaces",
      "Data.Ord",
      "Data.Set",
      "Data.Text",
      "Data.Version",
      "Data.Yaml",
      "Foreign",
      "Foreign.C",
      "Foreign.Storable",
      "Language.C.Data",
      "Language.C.Data.Error",
      "Language.C.Data.Ident",
      "Language.C.Data.Name",
      "Language.C.Data.Node",
      "Language.C.Data.Position",
      "Language.C.Parser",
      "Language.C.Pretty",
      "Language.C.Syntax",
      "Monad",
      "Paths",
      "Prelude",
      "Shelly",
      "System.CIO",
      "System.Console.GetOpt",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.Info",
      "System.IO",
      "System.IO.Error",
      "System.IO.Unsafe",
      "System.Process",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.HUnit",
      "Text.Lexers",
      "Text.PrettyPrint.HughesPJ"
    ],
    "modules": [],
    "name": "c2hs",
    "version": "0.28.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "System.IO.Unsafe"
      ],
      "containers": [
        "Data.Map"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Data.Map",
      "System.IO.Unsafe"
    ],
    "modules": [
      "Data.MemoUgly"
    ],
    "name": "uglymemo",
    "version": "0.1.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "System.IO.Unsafe"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal"
      ],
      "crypto-cipher-types": [
        "Crypto.Cipher.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Crypto.Cipher.Benchmarks",
      "Crypto.Cipher.RC4",
      "Crypto.Cipher.Tests",
      "Crypto.Cipher.Types",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.QuickCheck2",
      "Test.QuickCheck",
      "Test.QuickCheck.Test"
    ],
    "modules": [
      "Crypto.Cipher.RC4"
    ],
    "name": "cipher-rc4",
    "version": "0.1.4"
  },
  {
    "dependencies": {
      "Earley": [
        "Text.Earley"
      ],
      "array": [],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.Foldable",
        "Data.List",
        "Data.Monoid",
        "Data.String",
        "Data.Traversable",
        "Data.Typeable",
        "Data.Word",
        "Prelude",
        "System.Exit",
        "System.IO"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Get",
        "Data.Binary.Put"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "microlens": [
        "Lens.Micro"
      ],
      "microlens-mtl": [
        "Lens.Micro.Mtl"
      ],
      "morte": [],
      "optparse-applicative": [
        "Options.Applicative"
      ],
      "pipes": [
        "Pipes.Prelude"
      ],
      "system-fileio": [
        "Filesystem"
      ],
      "system-filepath": [
        "Filesystem.Path",
        "Filesystem.Path.CurrentOS"
      ],
      "text": [
        "Data.Text.Encoding",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding",
        "Data.Text.Lazy.IO"
      ],
      "text-format": [
        "Data.Text.Buildable"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Except",
        "Control.Monad.Trans.State.Strict"
      ]
    },
    "imports": [
      "ClosedWellTyped",
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.IO.Class",
      "Control.Monad.State.Lazy",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Except",
      "Control.Monad.Trans.State.Strict",
      "Criterion.Main",
      "Data.Binary",
      "Data.Binary.Get",
      "Data.Binary.Put",
      "Data.Foldable",
      "Data.List",
      "Data.Map.Strict",
      "Data.Monoid",
      "Data.String",
      "Data.Text.Buildable",
      "Data.Text.Encoding",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Text.Lazy.IO",
      "Data.Traversable",
      "Data.Typeable",
      "Data.Word",
      "Filesystem",
      "Filesystem.Path",
      "Filesystem.Path.CurrentOS",
      "Lens.Micro",
      "Lens.Micro.Mtl",
      "Morte.Context",
      "Morte.Core",
      "Morte.Import",
      "Morte.Lexer",
      "Morte.Parser",
      "Network.HTTP.Client",
      "Network.HTTP.Client.TLS",
      "Options.Applicative",
      "Paths",
      "Pipes.Prelude",
      "Prelude",
      "System.Exit",
      "System.IO",
      "Test.QuickCheck",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Text.Earley"
    ],
    "modules": [
      "Morte.Context",
      "Morte.Core",
      "Morte.Import",
      "Morte.Lexer",
      "Morte.Parser",
      "Morte.Tutorial"
    ],
    "name": "morte",
    "version": "1.6.2"
  },
  {
    "dependencies": {
      "SHA": [],
      "aeson": [
        "Data.Aeson"
      ],
      "array": [
        "Data.Array.IArray",
        "Data.Array.Unboxed"
      ],
      "base": [
        "Control.Applicative",
        "Data.Fixed",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Ratio",
        "Data.Semigroup",
        "Data.Version",
        "GHC.Generics",
        "Numeric.Natural"
      ],
      "binary": [],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "generics-sop": [],
      "hashable": [],
      "nats": [],
      "scientific": [],
      "semigroups": [],
      "tagged": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "time": [
        "Data.Time"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Array.IArray",
      "Data.Array.Unboxed",
      "Data.Binary.Orphans",
      "Data.Binary.Tagged",
      "Data.ByteString.Lazy",
      "Data.Fixed",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List.NonEmpty",
      "Data.Map",
      "Data.Monoid",
      "Data.Ratio",
      "Data.Semigroup",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Time",
      "Data.Vector",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Version",
      "Generators",
      "GHC.Generics",
      "Numeric.Natural",
      "Rec1",
      "Rec2",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.Binary.Tagged"
    ],
    "name": "binary-tagged",
    "version": "0.1.4.0"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.ByteString",
        "Data.Attoparsec.ByteString.Char8"
      ],
      "base": [],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "containers": [
        "Data.Map.Strict"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Data.Attoparsec.ByteString",
      "Data.Attoparsec.ByteString.Char8",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.Map.Strict",
      "Network.URI",
      "Test.Tasty",
      "URI.ByteStringTests"
    ],
    "modules": [
      "URI.ByteString"
    ],
    "name": "uri-bytestring",
    "version": "0.2.2.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "GHC.Conc"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ]
    },
    "imports": [
      "Control.Concurrent",
      "Control.Concurrent.STM",
      "Control.Concurrent.STM.Delay",
      "Control.Exception",
      "Control.Monad",
      "GHC.Conc",
      "GHC.Event"
    ],
    "modules": [
      "Control.Concurrent.STM.Delay"
    ],
    "name": "stm-delay",
    "version": "0.1.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Monoid",
        "Prelude"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Data.Boolean",
      "Data.Monoid",
      "Prelude"
    ],
    "modules": [
      "Data.Boolean",
      "Data.Boolean.Overload",
      "Data.Boolean.Numbers"
    ],
    "name": "Boolean",
    "version": "0.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Data.Proxy"
      ],
      "mtl": [
        "Control.Monad.Identity"
      ],
      "tagged": [],
      "template-haskell": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Monad.Identity",
      "Data.Proxy",
      "Data.Vector"
    ],
    "modules": [
      "Data.Iterable",
      "Data.Iterable.Instantiate",
      "Data.Iterable.Instantiate.Vector"
    ],
    "name": "iterable",
    "version": "3.0"
  },
  {
    "dependencies": {
      "base": [],
      "bytestring": [
        "Data.ByteString"
      ],
      "system-filepath": [],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.Text"
    ],
    "modules": [
      "System.Argv0"
    ],
    "name": "system-argv0",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Proxy",
        "Data.Typeable",
        "System.Exit",
        "System.IO"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [],
      "process": [
        "System.Process"
      ],
      "tasty": [
        "Test.Tasty.Options",
        "Test.Tasty.Providers"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Data.Proxy",
      "Data.Typeable",
      "System.Directory",
      "System.Exit",
      "System.IO",
      "System.Process",
      "Test.Tasty.Options",
      "Test.Tasty.Providers"
    ],
    "modules": [
      "Test.Tasty.Program"
    ],
    "name": "tasty-program",
    "version": "1.0.5"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Monad",
        "Data.Monoid"
      ],
      "blaze-builder": [],
      "blaze-html": [
        "Text.Blaze.Html",
        "Text.Blaze.Html.Renderer.Utf8"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "clay": [],
      "exceptions": [],
      "hashable": [],
      "http-media": [],
      "http-types": [
        "Network.HTTP.Types"
      ],
      "lucid": [
        "Lucid",
        "Lucid.Base"
      ],
      "mmorph": [],
      "monad-control": [],
      "monad-logger": [],
      "mtl": [],
      "pandoc": [
        "Text.Pandoc"
      ],
      "resourcet": [],
      "shakespeare": [
        "Text.Julius",
        "Text.Lucius"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [],
      "transformers-base": [],
      "unordered-containers": [
        "Data.HashMap.Lazy"
      ],
      "urlpath": [],
      "wai": [
        "Network.Wai.Internal"
      ],
      "wai-transformers": [
        "Network.Wai.Trans"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.HashMap.Lazy",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Encoding",
      "Lucid",
      "Lucid.Base",
      "Network.HTTP.Types",
      "Network.Wai.Internal",
      "Network.Wai.Middleware.ContentType",
      "Network.Wai.Middleware.ContentType.Blaze",
      "Network.Wai.Middleware.ContentType.ByteString",
      "Network.Wai.Middleware.ContentType.Cassius",
      "Network.Wai.Middleware.ContentType.Clay",
      "Network.Wai.Middleware.ContentType.Json",
      "Network.Wai.Middleware.ContentType.Julius",
      "Network.Wai.Middleware.ContentType.Lucid",
      "Network.Wai.Middleware.ContentType.Lucius",
      "Network.Wai.Middleware.ContentType.Pandoc",
      "Network.Wai.Middleware.ContentTypeSpec",
      "Network.Wai.Middleware.ContentType.Text",
      "Network.Wai.Middleware.ContentType.Types",
      "Network.Wai.Trans",
      "Test.Hspec",
      "Test.Hspec.Wai",
      "Test.Tasty",
      "Test.Tasty.Hspec",
      "Text.Blaze.Html",
      "Text.Blaze.Html.Renderer.Utf8",
      "Text.Julius",
      "Text.Lucius",
      "Text.Pandoc"
    ],
    "modules": [
      "Network.Wai.Middleware.ContentType",
      "Network.Wai.Middleware.ContentType.Types",
      "Network.Wai.Middleware.ContentType.Blaze",
      "Network.Wai.Middleware.ContentType.ByteString",
      "Network.Wai.Middleware.ContentType.Cassius",
      "Network.Wai.Middleware.ContentType.Clay",
      "Network.Wai.Middleware.ContentType.Json",
      "Network.Wai.Middleware.ContentType.Julius",
      "Network.Wai.Middleware.ContentType.Lucid",
      "Network.Wai.Middleware.ContentType.Lucius",
      "Network.Wai.Middleware.ContentType.Pandoc",
      "Network.Wai.Middleware.ContentType.Text"
    ],
    "name": "wai-middleware-content-type",
    "version": "0.4.1"
  },
  {
    "dependencies": {
      "Glob": [
        "System.FilePath.Glob"
      ],
      "base": [
        "Control.Applicative",
        "Data.Maybe",
        "Data.Monoid",
        "System.Environment"
      ],
      "directory": [
        "System.Directory"
      ],
      "ignore": [],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Except",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ],
      "path": [
        "Path"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad.Error",
      "Control.Monad.Except",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Ignore",
      "Ignore.Builder",
      "Ignore.Core",
      "Ignore.Types",
      "Ignore.VCS.Darcs",
      "Ignore.VCS.Git",
      "Ignore.VCS.Mercurial",
      "Path",
      "System.Directory",
      "System.Environment",
      "System.FilePath.Glob",
      "Test.Framework",
      "Text.Regex.PCRE.Heavy"
    ],
    "modules": [
      "Ignore"
    ],
    "name": "ignore",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "GLUT": [
        "Graphics.UI.GLUT"
      ],
      "OpenGL": [
        "Graphics.Rendering.OpenGL",
        "Graphics.Rendering.OpenGL.GL",
        "Graphics.Rendering.OpenGL.GLU.Errors"
      ],
      "base": [
        "Control.Monad",
        "Data.Data",
        "Data.IORef",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "Foreign",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Marshal.Utils",
        "Foreign.Ptr",
        "Prelude",
        "System.IO.Unsafe",
        "System.Mem.StableName",
        "Unsafe.Coerce"
      ],
      "bmp": [
        "Codec.BMP"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Unsafe"
      ],
      "containers": []
    },
    "imports": [
      "Codec.BMP",
      "Control.Monad",
      "Data.ByteString",
      "Data.ByteString.Unsafe",
      "Data.Data",
      "Data.IORef",
      "Data.List",
      "Data.Monoid",
      "Data.Word",
      "Foreign",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Marshal.Utils",
      "Foreign.Ptr",
      "Graphics.Gloss.Internals.Data.Color",
      "Graphics.Gloss.Internals.Data.Picture",
      "Graphics.Gloss.Internals.Rendering.Bitmap",
      "Graphics.Gloss.Internals.Rendering.Circle",
      "Graphics.Gloss.Internals.Rendering.Color",
      "Graphics.Gloss.Internals.Rendering.Common",
      "Graphics.Gloss.Internals.Rendering.Picture",
      "Graphics.Gloss.Internals.Rendering.State",
      "Graphics.Rendering.OpenGL",
      "Graphics.Rendering.OpenGL.GL",
      "Graphics.Rendering.OpenGL.GLU.Errors",
      "Graphics.UI.GLUT",
      "Prelude",
      "System.IO.Unsafe",
      "System.Mem.StableName",
      "Unsafe.Coerce"
    ],
    "modules": [
      "Graphics.Gloss.Rendering"
    ],
    "name": "gloss-rendering",
    "version": "1.10.3.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Data",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.Traversable",
        "GHC.Generics"
      ],
      "semigroups": [],
      "zero": [
        "Data.Zero"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Data",
      "Data.Foldable",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.Traversable",
      "Data.Zero",
      "GHC.Generics"
    ],
    "modules": [
      "Data.Both"
    ],
    "name": "both",
    "version": "0.1.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Bits",
        "Data.Foldable",
        "Data.Monoid",
        "Data.Word",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "Prelude",
        "System.IO.Unsafe"
      ],
      "ghc-prim": [
        "GHC.IntWord64"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Bits",
      "Data.ByteArray",
      "Data.ByteArray.Encoding",
      "Data.ByteArray.Methods",
      "Data.ByteArray.Parse",
      "Data.ByteArray.Types",
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Foldable",
      "Data.Memory.Internal.Compat",
      "Data.Memory.Internal.CompatPrim",
      "Data.Memory.Internal.DeepSeq",
      "Data.Memory.PtrMethods",
      "Data.Monoid",
      "Data.Word",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.IntWord64",
      "GHC.Prim",
      "Prelude",
      "SipHash",
      "System.IO.Unsafe",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck"
    ],
    "modules": [
      "Data.ByteArray",
      "Data.ByteArray.Encoding",
      "Data.ByteArray.Mapping",
      "Data.ByteArray.Pack",
      "Data.ByteArray.Parse",
      "Data.ByteArray.Hash",
      "Data.Memory.Endian",
      "Data.Memory.PtrMethods",
      "Data.Memory.ExtendedWords",
      "Data.Memory.Encoding.Base16",
      "Data.Memory.Encoding.Base32",
      "Data.Memory.Encoding.Base64"
    ],
    "name": "memory",
    "version": "0.13"
  },
  {
    "dependencies": {
      "base": [],
      "gogol-core": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "Network.Google.Resource.TagManager.Accounts.Containers.Create",
      "Network.Google.Resource.TagManager.Accounts.Containers.Delete",
      "Network.Google.Resource.TagManager.Accounts.Containers.Environments.Create",
      "Network.Google.Resource.TagManager.Accounts.Containers.Environments.Delete",
      "Network.Google.Resource.TagManager.Accounts.Containers.Environments.Get",
      "Network.Google.Resource.TagManager.Accounts.Containers.Environments.List",
      "Network.Google.Resource.TagManager.Accounts.Containers.Environments.Patch",
      "Network.Google.Resource.TagManager.Accounts.Containers.Environments.Update",
      "Network.Google.Resource.TagManager.Accounts.Containers.Folders.Create",
      "Network.Google.Resource.TagManager.Accounts.Containers.Folders.Delete",
      "Network.Google.Resource.TagManager.Accounts.Containers.Folders.Entities.List",
      "Network.Google.Resource.TagManager.Accounts.Containers.Folders.Get",
      "Network.Google.Resource.TagManager.Accounts.Containers.Folders.List",
      "Network.Google.Resource.TagManager.Accounts.Containers.Folders.Update",
      "Network.Google.Resource.TagManager.Accounts.Containers.Get",
      "Network.Google.Resource.TagManager.Accounts.Containers.List",
      "Network.Google.Resource.TagManager.Accounts.Containers.MoveFolders.Update",
      "Network.Google.Resource.TagManager.Accounts.Containers.ReauthorizeEnvironments.Update",
      "Network.Google.Resource.TagManager.Accounts.Containers.Tags.Create",
      "Network.Google.Resource.TagManager.Accounts.Containers.Tags.Delete",
      "Network.Google.Resource.TagManager.Accounts.Containers.Tags.Get",
      "Network.Google.Resource.TagManager.Accounts.Containers.Tags.List",
      "Network.Google.Resource.TagManager.Accounts.Containers.Tags.Update",
      "Network.Google.Resource.TagManager.Accounts.Containers.Triggers.Create",
      "Network.Google.Resource.TagManager.Accounts.Containers.Triggers.Delete",
      "Network.Google.Resource.TagManager.Accounts.Containers.Triggers.Get",
      "Network.Google.Resource.TagManager.Accounts.Containers.Triggers.List",
      "Network.Google.Resource.TagManager.Accounts.Containers.Triggers.Update",
      "Network.Google.Resource.TagManager.Accounts.Containers.Update",
      "Network.Google.Resource.TagManager.Accounts.Containers.Variables.Create",
      "Network.Google.Resource.TagManager.Accounts.Containers.Variables.Delete",
      "Network.Google.Resource.TagManager.Accounts.Containers.Variables.Get",
      "Network.Google.Resource.TagManager.Accounts.Containers.Variables.List",
      "Network.Google.Resource.TagManager.Accounts.Containers.Variables.Update",
      "Network.Google.Resource.TagManager.Accounts.Containers.Versions.Create",
      "Network.Google.Resource.TagManager.Accounts.Containers.Versions.Delete",
      "Network.Google.Resource.TagManager.Accounts.Containers.Versions.Get",
      "Network.Google.Resource.TagManager.Accounts.Containers.Versions.List",
      "Network.Google.Resource.TagManager.Accounts.Containers.Versions.Publish",
      "Network.Google.Resource.TagManager.Accounts.Containers.Versions.Restore",
      "Network.Google.Resource.TagManager.Accounts.Containers.Versions.Undelete",
      "Network.Google.Resource.TagManager.Accounts.Containers.Versions.Update",
      "Network.Google.Resource.TagManager.Accounts.Get",
      "Network.Google.Resource.TagManager.Accounts.List",
      "Network.Google.Resource.TagManager.Accounts.Permissions.Create",
      "Network.Google.Resource.TagManager.Accounts.Permissions.Delete",
      "Network.Google.Resource.TagManager.Accounts.Permissions.Get",
      "Network.Google.Resource.TagManager.Accounts.Permissions.List",
      "Network.Google.Resource.TagManager.Accounts.Permissions.Update",
      "Network.Google.Resource.TagManager.Accounts.Update",
      "Network.Google.TagManager",
      "Network.Google.TagManager.Types"
    ],
    "name": "gogol-tagmanager",
    "version": "0.1.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Concurrent.MVar",
        "Control.Exception",
        "Control.Monad",
        "System.Environment",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8"
      ],
      "cacophony": [
        "Crypto.Noise",
        "Crypto.Noise.Cipher",
        "Crypto.Noise.Cipher.ChaChaPoly1305",
        "Crypto.Noise.DH",
        "Crypto.Noise.DH.Curve25519",
        "Crypto.Noise.HandshakePatterns",
        "Crypto.Noise.Hash",
        "Crypto.Noise.Hash.SHA256",
        "Data.ByteArray.Extend"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Prelude"
      ]
    },
    "imports": [
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Crypto.Noise",
      "Crypto.Noise.Cipher",
      "Crypto.Noise.Cipher.ChaChaPoly1305",
      "Crypto.Noise.DH",
      "Crypto.Noise.DH.Curve25519",
      "Crypto.Noise.HandshakePatterns",
      "Crypto.Noise.Hash",
      "Crypto.Noise.Hash.SHA256",
      "Data.ByteArray.Extend",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Language.Haskell.HLint",
      "Pipes",
      "Pipes.Noise",
      "Pipes.Prelude",
      "System.Environment",
      "System.Exit"
    ],
    "modules": [
      "Pipes.Noise"
    ],
    "name": "pipes-cacophony",
    "version": "0.4.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Codec.ByteString.Builder",
      "Codec.Midi",
      "Codec.SoundFont",
      "Codec.Wav",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Monad",
      "Data.Array.IArray",
      "Data.Audio",
      "Data.ByteString.Lazy",
      "Data.Int",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Word",
      "Foreign",
      "FRP.Yampa",
      "Graphics.UI.Gtk",
      "Graphics.UI.Gtk.Gdk.Events",
      "Graphics.UI.Gtk.Glade",
      "MidiSynth",
      "Numeric",
      "Paths",
      "Player.Gtk",
      "Player.OpenAL",
      "Player.Wav",
      "Sound.OpenAL",
      "SynthBasics",
      "SynthParams",
      "System.Console.GetOpt",
      "System.Environment",
      "System.IO"
    ],
    "modules": [],
    "name": "YampaSynth",
    "version": "0.2"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.String",
        "Data.Word",
        "Foreign.ForeignPtr",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Environment",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8",
        "Data.ByteString.Lazy.Internal"
      ]
    },
    "imports": [
      "Control.DeepSeq",
      "Control.Monad",
      "Criterion.Main",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Base64.Internal",
      "Data.ByteString.Base64.Lazy",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Base64.URL.Lazy",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.Char",
      "Data.String",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.Environment",
      "System.IO.Unsafe",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck"
    ],
    "modules": [
      "Data.ByteString.Base64",
      "Data.ByteString.Base64.URL",
      "Data.ByteString.Base64.Lazy",
      "Data.ByteString.Base64.URL.Lazy"
    ],
    "name": "base64-bytestring",
    "version": "1.0.0.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad.IO.Class"
      ],
      "conduit-combinators": [
        "Conduit"
      ],
      "http-client": [],
      "http-conduit": [
        "Network.HTTP.Client.Conduit"
      ],
      "mtl": [
        "Control.Monad.Reader.Class"
      ],
      "transformers": []
    },
    "imports": [
      "Conduit",
      "Control.Monad.IO.Class",
      "Control.Monad.Reader.Class",
      "Network.HTTP.Client.Conduit"
    ],
    "modules": [
      "Network.HTTP.Client.Conduit.Download"
    ],
    "name": "simple-download",
    "version": "0.0.2"
  },
  {
    "dependencies": {
      "SHA": [
        "Data.Digest.Pure.SHA"
      ],
      "base": [
        "Control.Exception",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.List",
        "Data.Maybe",
        "System.IO"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "random": [
        "System.Random"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.Bits",
      "Data.Byteable",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Digest.Pure.SHA",
      "Data.Function",
      "Data.List",
      "Data.Maybe",
      "System.IO",
      "System.Random"
    ],
    "modules": [
      "Crypto.PasswordStore"
    ],
    "name": "pwstore-purehaskell",
    "version": "2.1.4"
  },
  {
    "dependencies": {
      "base": [
        "Data.Bits",
        "Data.Maybe",
        "Foreign.C.Types",
        "Foreign.Marshal",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Unsafe"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ]
    },
    "imports": [
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Unsafe",
      "Data.Maybe",
      "Data.Text",
      "Data.Text.Encoding",
      "Foreign.C.Types",
      "Foreign.Marshal",
      "Foreign.Ptr",
      "Foreign.Storable",
      "System.IO.Unsafe",
      "Text.Sundown.Buffer.Foreign",
      "Text.Sundown.Foreign",
      "Text.Sundown.Html",
      "Text.Sundown.Html.ByteString",
      "Text.Sundown.Html.Foreign"
    ],
    "modules": [
      "Text.Sundown",
      "Text.Sundown.Html",
      "Text.Sundown.Html.ByteString",
      "Text.Sundown.Html.String",
      "Text.Sundown.Html.Text"
    ],
    "name": "sundown",
    "version": "0.6"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Control.Monad.IO.Class",
        "Data.IORef",
        "Data.Monoid",
        "Prelude",
        "System.IO"
      ],
      "containers": [
        "Data.Map"
      ],
      "exceptions": [
        "Control.Monad.Catch",
        "Control.Monad.Catch.Pure"
      ],
      "monad-control": [
        "Control.Monad.Trans.Control"
      ],
      "mtl": [
        "Control.Monad.Cont.Class",
        "Control.Monad.Error.Class",
        "Control.Monad.State.Class",
        "Control.Monad.Writer.Class"
      ],
      "pipes": [
        "Pipes",
        "Pipes.Internal",
        "Pipes.Lift",
        "Pipes.Prelude"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Identity",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Catch",
      "Control.Monad.Catch.Pure",
      "Control.Monad.Cont.Class",
      "Control.Monad.Error.Class",
      "Control.Monad.IO.Class",
      "Control.Monad.State.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Control",
      "Control.Monad.Trans.Identity",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Control.Monad.Writer.Class",
      "Data.IORef",
      "Data.Map",
      "Data.Monoid",
      "Pipes",
      "Pipes.Internal",
      "Pipes.Lift",
      "Pipes.Prelude",
      "Pipes.Safe",
      "Prelude",
      "System.IO"
    ],
    "modules": [
      "Pipes.Safe",
      "Pipes.Safe.Prelude"
    ],
    "name": "pipes-safe",
    "version": "2.2.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.Maybe",
        "Data.Monoid"
      ],
      "text": [
        "Data.Text"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Char",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "ShortcutLinks.All",
      "ShortcutLinks.Utils"
    ],
    "modules": [
      "ShortcutLinks",
      "ShortcutLinks.All",
      "ShortcutLinks.Utils"
    ],
    "name": "shortcut-links",
    "version": "0.4.2.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [],
      "gitrev": [
        "Development.GitRev"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "yesod-core": [
        "Yesod.Core"
      ]
    },
    "imports": [
      "Data.Aeson",
      "Development.GitRev",
      "Language.Haskell.TH.Syntax",
      "Yesod.Core",
      "Yesod.GitRev.Data"
    ],
    "modules": [
      "Yesod.GitRev"
    ],
    "name": "yesod-gitrev",
    "version": "0.1.0.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Monoid",
        "Data.Word",
        "Numeric",
        "Prelude",
        "Text.Printf"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Char",
      "Data.Colour",
      "Data.Colour.Chan",
      "Data.Colour.CIE",
      "Data.Colour.CIE.Chromaticity",
      "Data.Colour.CIE.Illuminant",
      "Data.Colour.Internal",
      "Data.Colour.Matrix",
      "Data.Colour.Names",
      "Data.Colour.RGB",
      "Data.Colour.RGBSpace",
      "Data.Colour.RGBSpace.HSL",
      "Data.Colour.RGBSpace.HSV",
      "Data.Colour.SRGB",
      "Data.Colour.SRGB.Linear",
      "Data.List",
      "Data.Monoid",
      "Data.Word",
      "Numeric",
      "Prelude",
      "System.Random",
      "Test.QuickCheck",
      "Text.Printf"
    ],
    "modules": [
      "Data.Colour",
      "Data.Colour.SRGB",
      "Data.Colour.SRGB.Linear",
      "Data.Colour.CIE",
      "Data.Colour.CIE.Illuminant",
      "Data.Colour.RGBSpace",
      "Data.Colour.RGBSpace.HSL",
      "Data.Colour.RGBSpace.HSV",
      "Data.Colour.Names"
    ],
    "name": "colour",
    "version": "2.3.3"
  },
  {
    "dependencies": {
      "base": [],
      "blaze-builder": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "hedis": [],
      "http-types": [],
      "text": [],
      "wai": [],
      "wai-middleware-caching": [
        "Network.Wai.Middleware.Cache"
      ]
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Network.Wai.Middleware.Cache"
    ],
    "modules": [
      "Network.Wai.Middleware.RedisCache"
    ],
    "name": "wai-middleware-caching-redis",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "aeson-pretty": [
        "Data.Aeson.Encode.Pretty"
      ],
      "array": [
        "Data.Array",
        "Data.Array.Base",
        "Data.Array.IArray",
        "Data.Array.IO",
        "Data.Array.MArray",
        "Data.Array.Unboxed",
        "Data.Array.Unsafe"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Function",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Typeable",
        "Data.Word",
        "Foreign.C.Types",
        "Foreign.ForeignPtr",
        "Foreign.Marshal.Alloc",
        "Foreign.Ptr",
        "Foreign.Storable",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Internal",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "bytestring-builder": [],
      "case-insensitive": [
        "Data.CaseInsensitive"
      ],
      "containers": [
        "Data.IntMap.Strict",
        "Data.Map.Strict"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hex": [
        "Data.Hex"
      ],
      "http2": [],
      "psqueues": [
        "Data.IntPSQ"
      ],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ],
      "word8": []
    },
    "imports": [
      "BinaryHeap",
      "BinaryHeapSTM",
      "Case",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent.STM",
      "Control.Exception",
      "Control.Monad",
      "Criterion.Main",
      "Data.Aeson",
      "Data.Aeson.Encode.Pretty",
      "Data.Aeson.Types",
      "Data.Array",
      "Data.Array.Base",
      "Data.Array.IArray",
      "Data.Array.IO",
      "Data.Array.MArray",
      "Data.Array.Unboxed",
      "Data.Array.Unsafe",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.CaseInsensitive",
      "Data.Char",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.Heap",
      "Data.Hex",
      "Data.IntMap.Strict",
      "Data.IntPSQ",
      "Data.IORef",
      "Data.List",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Text",
      "Data.Typeable",
      "Data.Vector",
      "Data.Word",
      "DoublyLinkedQueueIO",
      "Foreign.C.Types",
      "Foreign.ForeignPtr",
      "Foreign.Marshal.Alloc",
      "Foreign.Ptr",
      "Foreign.Storable",
      "Heap",
      "HPACKDecode",
      "HPACKEncode",
      "HPACK.HeaderBlock",
      "JSON",
      "Network.HPACK",
      "Network.HPACK.Buffer",
      "Network.HPACK.Builder",
      "Network.HPACK.HeaderBlock",
      "Network.HPACK.HeaderBlock.Decode",
      "Network.HPACK.HeaderBlock.Encode",
      "Network.HPACK.HeaderBlock.Integer",
      "Network.HPACK.Huffman",
      "Network.HPACK.Huffman.Bit",
      "Network.HPACK.Huffman.Decode",
      "Network.HPACK.Huffman.Encode",
      "Network.HPACK.Huffman.Params",
      "Network.HPACK.Huffman.Table",
      "Network.HPACK.Huffman.Tree",
      "Network.HPACK.Table",
      "Network.HPACK.Table.Dynamic",
      "Network.HPACK.Table.Entry",
      "Network.HPACK.Table.RevIndex",
      "Network.HPACK.Table.Static",
      "Network.HPACK.Token",
      "Network.HPACK.Types",
      "Network.HTTP2",
      "Network.HTTP2.Decode",
      "Network.HTTP2.Encode",
      "Network.HTTP2.Priority",
      "Network.HTTP2.Priority.PSQ",
      "Network.HTTP2.Priority.Queue",
      "Network.HTTP2.Types",
      "RandomSkewHeap",
      "RingOfQueues",
      "RingOfQueuesSTM",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.Random",
      "System.Random.MWC",
      "Test.DocTest",
      "Test.Hspec",
      "Test.Hspec.QuickCheck"
    ],
    "modules": [
      "Network.HPACK",
      "Network.HPACK.Token",
      "Network.HTTP2",
      "Network.HTTP2.Priority"
    ],
    "name": "http2",
    "version": "1.6.2"
  },
  {
    "dependencies": {
      "aeson": [],
      "base": [
        "Data.List",
        "Data.List.NonEmpty",
        "Data.Monoid",
        "Data.Traversable"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder"
      ],
      "bytestring": [
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map.Strict"
      ],
      "data-default-class": [],
      "exceptions": [],
      "hashable": [],
      "http-client": [],
      "http-types": [
        "Network.HTTP.Types.Method",
        "Network.HTTP.Types.Status",
        "Network.HTTP.Types.URI"
      ],
      "mtl": [],
      "mtl-compat": [],
      "network-uri": [
        "Network.URI"
      ],
      "scientific": [],
      "semigroups": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding"
      ],
      "time": [],
      "transformers": [],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Database.Bloodhound.Client",
      "Database.Bloodhound.Types",
      "Data.ByteString.Lazy.Char8",
      "Data.HashMap.Strict",
      "Data.List",
      "Data.List.NonEmpty",
      "Data.Map.Strict",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Traversable",
      "Data.Vector",
      "Network.HTTP.Types.Method",
      "Network.HTTP.Types.Status",
      "Network.HTTP.Types.URI",
      "Network.URI",
      "Test.DocTest"
    ],
    "modules": [
      "Database.Bloodhound",
      "Database.Bloodhound.Client",
      "Database.Bloodhound.Types",
      "Database.Bloodhound.Types.Class",
      "Database.Bloodhound.Types.Internal"
    ],
    "name": "bloodhound",
    "version": "0.11.0.0"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Chan",
      "Control.Concurrent.MVar",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.State",
      "Data.Array",
      "Data.ByteString",
      "Data.ByteString.Base",
      "Data.ByteString.Char8",
      "Data.ByteString.Internal",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.ByteString.Lazy.Internal",
      "Data.ByteString.Unsafe",
      "Data.Char",
      "Data.Either",
      "Data.Generics",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Ratio",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Typeable",
      "Data.Word",
      "Debug.Trace",
      "Foreign",
      "Network.RPC.JSON",
      "Numeric",
      "Parallel",
      "QuickCheckUtils",
      "System.CPUTime",
      "System.Environment",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe",
      "System.Mem",
      "System.Random",
      "Test.HUnit",
      "Test.QuickCheck",
      "Test.QuickCheck.Batch",
      "Text.JSON",
      "Text.JSON.Generic",
      "Text.JSON.String",
      "Text.JSON.Types",
      "Text.ParserCombinators.Parsec",
      "Text.ParserCombinators.ReadP",
      "Text.PrettyPrint.HughesPJ",
      "Text.Printf",
      "Text.Show.Functions"
    ],
    "modules": [
      "Text.JSON",
      "Text.JSON.Types",
      "Text.JSON.String",
      "Text.JSON.ReadP"
    ],
    "name": "json",
    "version": "0.9.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Data.Maybe",
        "System.Environment"
      ],
      "directory": [
        "System.Directory"
      ],
      "parsec": [
        "Text.Parsec",
        "Text.Parsec.String"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Data.Maybe",
      "LoadEnv.Parse",
      "System.Directory",
      "System.Environment",
      "Text.Parsec",
      "Text.Parsec.String"
    ],
    "modules": [
      "LoadEnv",
      "LoadEnv.Parse"
    ],
    "name": "load-env",
    "version": "0.1.1"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "attoparsec": [
        "Data.Attoparsec.ByteString.Lazy",
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Exception",
        "Control.Monad",
        "Data.Char",
        "Data.Functor.Identity",
        "Data.IORef",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe",
        "System.Posix.Types"
      ],
      "base64-bytestring": [
        "Data.ByteString.Base64"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Char.Utf8"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Binary",
        "Data.Conduit.Text"
      ],
      "containers": [
        "Data.Map"
      ],
      "cryptohash": [
        "Crypto.Hash"
      ],
      "cryptohash-conduit": [
        "Crypto.Hash.Conduit"
      ],
      "css-text": [
        "Text.CSS.Parse",
        "Text.CSS.Render"
      ],
      "data-default": [
        "Data.Default"
      ],
      "directory": [
        "System.Directory"
      ],
      "file-embed": [
        "Data.FileEmbed"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hjsmin": [
        "Text.Jasmine"
      ],
      "http-types": [
        "Network.HTTP.Types",
        "Network.HTTP.Types.Status"
      ],
      "mime-types": [
        "Network.Mime"
      ],
      "old-time": [],
      "process": [
        "System.Process"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "transformers": [
        "Control.Monad.Trans.State"
      ],
      "unix-compat": [
        "System.PosixCompat.Files"
      ],
      "unordered-containers": [
        "Data.HashMap.Lazy",
        "Data.HashMap.Strict"
      ],
      "wai": [
        "Network.Wai"
      ],
      "wai-app-static": [
        "Network.Wai.Application.Static",
        "WaiAppStatic.Storage.Embedded",
        "WaiAppStatic.Storage.Filesystem",
        "WaiAppStatic.Types"
      ],
      "yesod-core": [
        "Yesod.Core",
        "Yesod.Core.Types"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Char.Utf8",
      "Control.Applicative",
      "Control.Concurrent.Async",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.Trans.Resource",
      "Control.Monad.Trans.State",
      "Crypto.Hash",
      "Crypto.Hash.Conduit",
      "Data.Attoparsec.ByteString.Lazy",
      "Data.Attoparsec.Text",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Base64",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.Conduit",
      "Data.Conduit.Binary",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Default",
      "Data.FileEmbed",
      "Data.Functor.Identity",
      "Data.Hashable",
      "Data.HashMap.Lazy",
      "Data.HashMap.Strict",
      "Data.IORef",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "EmbedDevelTest",
      "EmbedProductionTest",
      "EmbedTestGenerator",
      "FileGeneratorTests",
      "GeneratorTestUtil",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Syntax",
      "Network.HTTP.Types",
      "Network.HTTP.Types.Status",
      "Network.Mime",
      "Network.Wai",
      "Network.Wai.Application.Static",
      "Network.Wai.Handler.Warp",
      "Network.Wai.Test",
      "System.Directory",
      "System.Exit",
      "System.FilePath",
      "System.IO",
      "System.IO.Unsafe",
      "System.PosixCompat.Files",
      "System.Posix.Types",
      "System.Process",
      "Test.Hspec",
      "Test.HUnit",
      "Text.CSS.Parse",
      "Text.CSS.Render",
      "Text.Jasmine",
      "WaiAppStatic.Storage.Embedded",
      "WaiAppStatic.Storage.Filesystem",
      "WaiAppStatic.Types",
      "Yesod.Core",
      "Yesod.Core.Types",
      "Yesod.EmbeddedStatic",
      "Yesod.EmbeddedStatic.Css.Util",
      "Yesod.EmbeddedStatic.Generators",
      "Yesod.EmbeddedStatic.Internal",
      "Yesod.EmbeddedStatic.Types",
      "Yesod.Static",
      "YesodStaticTest",
      "Yesod.Test"
    ],
    "modules": [
      "Yesod.Static",
      "Yesod.EmbeddedStatic",
      "Yesod.EmbeddedStatic.Generators",
      "Yesod.EmbeddedStatic.Types",
      "Yesod.EmbeddedStatic.Css.AbsoluteUrl"
    ],
    "name": "yesod-static",
    "version": "1.5.0.4"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "GHC.Generics"
      ],
      "binary": [
        "Data.Binary",
        "Data.Binary.Put"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "conduit": [
        "Data.Conduit",
        "Data.Conduit.List"
      ],
      "resourcet": [
        "Control.Monad.Trans.Resource"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Trans.Resource",
      "Data.Binary",
      "Data.Binary.Put",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Conduit",
      "Data.Conduit.List",
      "Data.Conduit.Serialization.Binary",
      "Data.Vector",
      "GHC.Generics",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck",
      "Test.QuickCheck.Assertions",
      "Test.QuickCheck.Monadic",
      "Test.QuickCheck.Property"
    ],
    "modules": [
      "Data.Conduit.Serialization.Binary"
    ],
    "name": "binary-conduit",
    "version": "1.2.4.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Data.Maybe",
        "Data.Monoid",
        "Data.Word",
        "GHC.Generics",
        "Numeric",
        "Prelude",
        "System.Environment"
      ],
      "bytestring": [
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "handwriting": [],
      "lens": [
        "Control.Lens"
      ],
      "lens-aeson": [
        "Data.Aeson.Lens"
      ],
      "random": [
        "System.Random"
      ],
      "split": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "wreq": [
        "Network.Wreq"
      ]
    },
    "imports": [
      "Control.Lens",
      "Data.Aeson",
      "Data.Aeson.Lens",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Text",
      "Data.Word",
      "GHC.Generics",
      "Network.Handwriting",
      "Network.Internal.Model",
      "Network.Internal.Utilities",
      "Network.Wreq",
      "Numeric",
      "Prelude",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.Random"
    ],
    "modules": [
      "Network.Handwriting",
      "Network.Internal.Model",
      "Network.Internal.Utilities"
    ],
    "name": "handwriting",
    "version": "0.1.0.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Foldable",
        "Data.Int",
        "Data.Word",
        "System.Exit"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "template-haskell": [
        "Language.Haskell.TH",
        "Language.Haskell.TH.Syntax"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Lazy"
      ],
      "th-lift": [
        "Language.Haskell.TH.Lift"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Primitive",
        "Data.Vector.Storable",
        "Data.Vector.Unboxed"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Foldable",
      "Data.Int",
      "Data.IntMap",
      "Data.IntSet",
      "Data.Map",
      "Data.Sequence",
      "Data.Set",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Tree",
      "Data.Vector",
      "Data.Vector.Primitive",
      "Data.Vector.Storable",
      "Data.Vector.Unboxed",
      "Data.Word",
      "Instances.TH.Lift",
      "Language.Haskell.TH",
      "Language.Haskell.TH.Lift",
      "Language.Haskell.TH.Syntax",
      "System.Exit",
      "Test.QuickCheck.All"
    ],
    "modules": [
      "Instances.TH.Lift"
    ],
    "name": "th-lift-instances",
    "version": "0.1.10"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Foldable",
        "Data.Functor",
        "Data.List",
        "Data.Monoid",
        "Prelude"
      ],
      "containers": [
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Control.Monad",
      "Data.Foldable",
      "Data.Functor",
      "Data.List",
      "Data.Monoid",
      "Data.Set",
      "Prelude"
    ],
    "modules": [
      "Data.Set.Monad"
    ],
    "name": "set-monad",
    "version": "0.2.0.0"
  },
  {
    "dependencies": {
      "array": [
        "Data.Array",
        "Data.Array.Base"
      ],
      "base": [
        "Control.Applicative",
        "Control.Monad",
        "Control.Monad.Instances",
        "Data.Char",
        "Data.List",
        "Data.Maybe",
        "GHC.Exts",
        "System.Exit",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "containers": [
        "Data.IntSet",
        "Data.Map",
        "Data.Set"
      ],
      "mtl": [
        "Control.Monad.Error",
        "Control.Monad.Reader",
        "Control.Monad.State",
        "Control.Monad.Trans",
        "Control.Monad.Writer"
      ]
    },
    "imports": [
      "AbsSyn",
      "AttrGrammar",
      "Control.Applicative",
      "Control.Monad",
      "Control.Monad.Error",
      "Control.Monad.Instances",
      "Control.Monad.Reader",
      "Control.Monad.State",
      "Control.Monad.Trans",
      "Control.Monad.Writer",
      "Data.Array",
      "Data.Array.Base",
      "Data.Char",
      "Data.IntSet",
      "Data.List",
      "Data.Map",
      "Data.Maybe",
      "Data.Set",
      "GHC.Exts",
      "GHC.Prim",
      "Lexer",
      "ParseMonad",
      "Parser",
      "ParserM",
      "Pretty",
      "System.Cmd",
      "System.Exit",
      "System.IO",
      "System.IO.Unsafe"
    ],
    "modules": [],
    "name": "happy",
    "version": "1.19.5"
  },
  {
    "dependencies": {
      "base": [],
      "lifted-base": [],
      "monad-control": [],
      "transformers": [],
      "unix": []
    },
    "imports": [
      ""
    ],
    "modules": [
      "System.Lock.FLock"
    ],
    "name": "flock",
    "version": "0.3.1.8"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Data.Data",
        "Data.List",
        "Data.Monoid",
        "Data.Typeable",
        "Prelude",
        "Text.ParserCombinators.ReadPrec",
        "Text.Read",
        "Text.Show"
      ],
      "containers": [
        "Data.IntMap",
        "Data.IntSet"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.DeepSeq",
      "Data.Data",
      "Data.EnumMapSetWrapper",
      "Data.IntMap",
      "Data.IntSet",
      "Data.List",
      "Data.Monoid",
      "Data.Typeable",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Text.ParserCombinators.ReadPrec",
      "Text.Read",
      "Text.Show"
    ],
    "modules": [
      "Data.EnumMap.Lazy",
      "Data.EnumMap.Strict",
      "Data.EnumSet"
    ],
    "name": "enummapset-th",
    "version": "0.6.1.1"
  },
  {
    "dependencies": {
      "attoparsec": [],
      "attoparsec-binary": [],
      "base": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Internal"
      ],
      "storable-record": [],
      "unordered-containers": [],
      "vector": [
        "Data.Vector.Storable",
        "Data.Vector.Storable.Mutable"
      ],
      "vector-th-unbox": [
        "Data.Vector.Unboxed.Deriving"
      ]
    },
    "imports": [
      "Data.ByteString",
      "Data.ByteString.Internal",
      "Data.Vector.Storable",
      "Data.Vector.Storable.Mutable",
      "Data.Vector.Unboxed.Deriving",
      "Graphics.Netpbm"
    ],
    "modules": [
      "Graphics.Netpbm"
    ],
    "name": "netpbm",
    "version": "1.0.2"
  },
  {
    "dependencies": {
      "Cabal": [
        "Distribution.Compiler",
        "Distribution.Package",
        "Distribution.PackageDescription",
        "Distribution.System",
        "Distribution.Text",
        "Distribution.Version"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "amazonka": [],
      "amazonka-core": [],
      "amazonka-s3": [],
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Concurrent",
        "Control.Exception",
        "Data.Foldable",
        "Data.Function",
        "Data.Traversable",
        "GHC.Generics",
        "System.Environment",
        "System.IO"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "blaze-html": [],
      "byteable": [],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "classy-prelude-conduit": [],
      "conduit": [
        "Data.Conduit.List"
      ],
      "conduit-extra": [
        "Data.Conduit.Lazy",
        "Data.Conduit.Text"
      ],
      "containers": [
        "Data.Map",
        "Data.Map.Lazy",
        "Data.Map.Strict",
        "Data.Set"
      ],
      "cryptohash": [
        "Crypto.Hash.SHA1",
        "Crypto.Hash.SHA256"
      ],
      "cryptohash-conduit": [],
      "data-default-class": [
        "Data.Default.Class"
      ],
      "directory": [
        "System.Directory"
      ],
      "exceptions": [],
      "filepath": [
        "System.FilePath"
      ],
      "hashable": [],
      "html-conduit": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "http-client-tls": [
        "Network.HTTP.Client.TLS"
      ],
      "http-conduit": [
        "Network.HTTP.Client.Conduit"
      ],
      "lucid": [],
      "mime-types": [],
      "mono-traversable": [],
      "mtl": [],
      "old-locale": [],
      "optparse-applicative": [],
      "optparse-simple": [],
      "process": [],
      "resourcet": [],
      "safe": [
        "Safe"
      ],
      "semigroups": [],
      "stackage-curator": [],
      "stm": [],
      "store": [
        "Data.Store",
        "Data.Store.TypeHash"
      ],
      "streaming-commons": [],
      "syb": [],
      "system-fileio": [
        "Filesystem"
      ],
      "system-filepath": [
        "Filesystem.Path",
        "Filesystem.Path.CurrentOS"
      ],
      "tar": [
        "Codec.Archive.Tar",
        "Codec.Archive.Tar.Entry"
      ],
      "temporary": [],
      "text": [
        "Data.Text",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "time": [],
      "transformers": [],
      "unix-compat": [
        "System.PosixCompat.Time"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ],
      "utf8-string": [],
      "vector": [],
      "xml-conduit": [
        "Text.XML"
      ],
      "xml-types": [],
      "yaml": [
        "Data.Yaml"
      ],
      "zlib": [
        "Codec.Compression.GZip"
      ]
    },
    "imports": [
      "Codec.Archive.Tar",
      "Codec.Archive.Tar.Entry",
      "Codec.Compression.GZip",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Exception",
      "Control.Monad.Trans.Unlift",
      "Crypto.Hash.SHA1",
      "Crypto.Hash.SHA256",
      "Data.Aeson",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Lazy",
      "Data.Conduit.Lazy",
      "Data.Conduit.List",
      "Data.Conduit.Text",
      "Data.Default.Class",
      "Data.Foldable",
      "Data.Function",
      "Data.HashMap.Strict",
      "Data.Map",
      "Data.Map.Lazy",
      "Data.Map.Strict",
      "Data.Set",
      "Data.Store",
      "Data.Store.TypeHash",
      "Data.Text",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Traversable",
      "Data.Yaml",
      "Distribution.Compiler",
      "Distribution.Package",
      "Distribution.PackageDescription",
      "Distribution.System",
      "Distribution.Text",
      "Distribution.Version",
      "Filesystem",
      "Filesystem.Path",
      "Filesystem.Path.CurrentOS",
      "GHC.Generics",
      "Network.HTTP.Client",
      "Network.HTTP.Client.Conduit",
      "Network.HTTP.Client.TLS",
      "Safe",
      "Stackage.BuildConstraints",
      "Stackage.BuildPlan",
      "Stackage.CheckBuildPlan",
      "Stackage.CorePackages",
      "Stackage.Curator.UploadDocs",
      "Stackage.PackageIndex",
      "Stackage.PerformBuild",
      "Stackage.Prelude",
      "Stackage.ServerBundle",
      "Stackage.Types",
      "Stackage.UpdateBuildPlan",
      "Stackage.Upload",
      "System.Directory",
      "System.Environment",
      "System.FilePath",
      "System.IO",
      "System.PosixCompat.Time",
      "Test.Hspec",
      "Text.XML"
    ],
    "modules": [
      "Stackage.Prelude",
      "Stackage.BuildConstraints",
      "Stackage.CorePackages",
      "Stackage.PackageIndex",
      "Stackage.BuildPlan",
      "Stackage.CheckBuildPlan",
      "Stackage.DiffPlans",
      "Stackage.UpdateBuildPlan",
      "Stackage.GhcPkg",
      "Stackage.GithubPings",
      "Stackage.InstallBuild",
      "Stackage.PackageDescription",
      "Stackage.ServerBundle",
      "Stackage.Stats",
      "Stackage.Upload",
      "Stackage.PerformBuild",
      "Stackage.CompleteBuild",
      "Stackage.Curator.UploadDocs",
      "Stackage.Curator.UploadIndex",
      "Stackage.ShowBuildPlan",
      "Stackage.Types"
    ],
    "name": "stackage-curator",
    "version": "0.14.1.1"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "aeson-better-errors": [
        "Data.Aeson.BetterErrors"
      ],
      "base": [
        "Control.Applicative",
        "Control.Category",
        "Control.Monad",
        "Data.Char",
        "Data.List",
        "Data.Monoid"
      ],
      "bytestring": [
        "Data.ByteString.Lazy"
      ],
      "mtl": [
        "Control.Monad.Error.Class"
      ],
      "scientific": [],
      "text": [
        "Data.Text"
      ],
      "transformers": [],
      "unordered-containers": [],
      "vector": []
    },
    "imports": [
      "Control.Applicative",
      "Control.Category",
      "Control.Monad",
      "Control.Monad.Error.Class",
      "Data.Aeson",
      "Data.Aeson.BetterErrors",
      "Data.Aeson.Types",
      "Data.ByteString.Lazy",
      "Data.Char",
      "Data.List",
      "Data.Monoid",
      "Data.Text",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Web.Bower.PackageMeta",
      "Web.Bower.PackageMeta.Internal"
    ],
    "modules": [
      "Web.Bower.PackageMeta"
    ],
    "name": "bower-json",
    "version": "0.8.0"
  },
  {
    "dependencies": {
      "base": [
        "Control.Monad",
        "Data.Maybe"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "containers": [
        "Data.Map.Lazy"
      ],
      "deepseq": [],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "Control.Monad",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Map.Lazy",
      "Data.Maybe",
      "Data.Time.Zones.DB",
      "Data.Time.Zones.Files",
      "Data.Vector",
      "Paths",
      "System.Posix.Env",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.TH",
      "Test.HUnit"
    ],
    "modules": [
      "Data.Time.Zones.DB",
      "Data.Time.Zones.Files"
    ],
    "name": "tzdata",
    "version": "0.1.20160614.0"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson"
      ],
      "base": [
        "Control.Monad.IO.Class",
        "Data.Functor.Identity"
      ],
      "base-prelude": [
        "BasePrelude"
      ],
      "binary-parser": [
        "BinaryParser"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Builder",
        "Data.ByteString.Builder.Prim",
        "Data.ByteString.Lazy"
      ],
      "foldl": [
        "Control.Foldl"
      ],
      "loch-th": [
        "Debug.Trace.LocationTH"
      ],
      "placeholders": [
        "Development.Placeholders"
      ],
      "scientific": [
        "Data.ByteString.Builder.Scientific",
        "Data.Scientific"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Lazy",
        "Data.Text.Lazy.Builder",
        "Data.Text.Lazy.Encoding"
      ],
      "time": [
        "Data.Time",
        "Data.Time.Calendar.Julian"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.State.Strict"
      ],
      "uuid": [
        "Data.UUID"
      ],
      "vector": [
        "Data.Vector"
      ]
    },
    "imports": [
      "BasePrelude",
      "BinaryParser",
      "Control.DeepSeq",
      "Control.Foldl",
      "Control.Monad.IO.Class",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.Either",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.State.Strict",
      "Conversion",
      "Conversion.ByteString",
      "Conversion.Text",
      "Criterion",
      "Criterion.Main",
      "Data.Aeson",
      "Database.PostgreSQL.LibPQ",
      "Data.ByteString",
      "Data.ByteString.Builder",
      "Data.ByteString.Builder.Prim",
      "Data.ByteString.Builder.Scientific",
      "Data.ByteString.Lazy",
      "Data.Functor.Identity",
      "Data.Scientific",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Lazy",
      "Data.Text.Lazy.Builder",
      "Data.Text.Lazy.Encoding",
      "Data.Time",
      "Data.Time.Calendar.Julian",
      "Data.UUID",
      "Data.Vector",
      "Debug.Trace.LocationTH",
      "Development.Placeholders",
      "JSONAST",
      "Main.Apx",
      "Main.DB",
      "Main.Gens",
      "Main.IO",
      "Main.Prelude",
      "Main.Properties",
      "Main.PTI",
      "Main.TextEncoder",
      "MTLPrelude",
      "PostgreSQL.Binary.BuilderPrim",
      "PostgreSQL.Binary.Data",
      "PostgreSQL.Binary.Decoder",
      "PostgreSQL.Binary.Encoder",
      "PostgreSQL.Binary.Integral",
      "PostgreSQL.Binary.Interval",
      "PostgreSQL.Binary.Numeric",
      "PostgreSQL.Binary.Prelude",
      "PostgreSQL.Binary.Time",
      "Rebase.Data.HashMap.Strict",
      "Rebase.Prelude",
      "Test.QuickCheck",
      "Test.QuickCheck.Instances",
      "Test.Tasty",
      "Test.Tasty.HUnit",
      "Test.Tasty.QuickCheck",
      "Test.Tasty.SmallCheck"
    ],
    "modules": [
      "PostgreSQL.Binary.Data",
      "PostgreSQL.Binary.Decoder",
      "PostgreSQL.Binary.Encoder"
    ],
    "name": "postgresql-binary",
    "version": "0.9.1.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Data.List",
        "Data.Monoid"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.List",
      "Data.Monoid",
      "Debug.SimpleReflect.Expr",
      "Debug.SimpleReflect.Vars"
    ],
    "modules": [
      "Debug.SimpleReflect",
      "Debug.SimpleReflect.Expr",
      "Debug.SimpleReflect.Vars"
    ],
    "name": "simple-reflect",
    "version": "0.3.2"
  },
  {
    "dependencies": {
      "attoparsec": [
        "Data.Attoparsec.Combinator",
        "Data.Attoparsec.Text"
      ],
      "base": [],
      "monoid-subclasses": [],
      "text": [],
      "time": []
    },
    "imports": [
      "Data.Attoparsec.Combinator",
      "Data.Attoparsec.Text"
    ],
    "modules": [
      "Data.Time.RFC3339",
      "Data.Time.RFC2822",
      "Data.Time.RFC822"
    ],
    "name": "timerep",
    "version": "2.0.0.2"
  },
  {
    "dependencies": {
      "QuickCheck": [
        "Test.QuickCheck"
      ],
      "binary": [
        "Data.Binary"
      ],
      "ix-shapable": [
        "Data.Ix.Shapable"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.ST",
      "Data.Array.Base",
      "Data.Array.CArray",
      "Data.Array.CArray.Base",
      "Data.Array.IArray",
      "Data.Array.IOCArray",
      "Data.Array.MArray",
      "Data.Array.ST",
      "Data.Array.Storable",
      "Data.Array.Unboxed",
      "Data.Binary",
      "Data.Bits",
      "Data.ByteString.Internal",
      "Data.Complex",
      "Data.Generics",
      "Data.Ix",
      "Data.Ix.Shapable",
      "Data.List",
      "Data.Word",
      "Foreign.ForeignPtr",
      "Foreign.ForeignPtr.Unsafe",
      "Foreign.Marshal.Array",
      "Foreign.Ptr",
      "Foreign.Storable",
      "GHC.ForeignPtr",
      "GHC.Ptr",
      "Prelude",
      "System.Environment",
      "System.IO.Unsafe",
      "Test.QuickCheck",
      "Text.Printf",
      "Text.Show.Functions"
    ],
    "modules": [
      "Data.Array.CArray",
      "Data.Array.IOCArray",
      "Data.Array.CArray.Base"
    ],
    "name": "carray",
    "version": "0.1.6.5"
  },
  {
    "dependencies": {
      "Glob": [
        "System.FilePath.Glob"
      ],
      "aeson": [
        "Data.Aeson"
      ],
      "ansi-wl-pprint": [
        "Text.PrettyPrint.ANSI.Leijen"
      ],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Char",
        "Data.Foldable",
        "Data.List",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Traversable",
        "Data.Version",
        "GHC.Generics",
        "System.Environment",
        "System.Exit",
        "System.IO",
        "System.Posix.Types",
        "System.Timeout",
        "Text.Printf"
      ],
      "base16-bytestring": [
        "Data.ByteString.Base16"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy",
        "Data.ByteString.Lazy.Char8"
      ],
      "case-insensitive": [],
      "containers": [
        "Data.Map.Strict",
        "Data.Set"
      ],
      "cryptonite": [],
      "directory": [
        "System.Directory"
      ],
      "either": [],
      "exceptions": [],
      "filecache": [
        "Data.FileCache"
      ],
      "formatting": [
        "Formatting"
      ],
      "hashable": [
        "Data.Hashable"
      ],
      "hruby": [
        "Foreign.Ruby.Bindings",
        "Foreign.Ruby.Helpers"
      ],
      "hslogger": [
        "System.Log.Formatter",
        "System.Log.Handler.Simple",
        "System.Log.Logger"
      ],
      "hspec": [
        "Test.Hspec"
      ],
      "http-api-data": [],
      "http-client": [
        "Network.HTTP.Client"
      ],
      "language-puppet": [],
      "lens": [
        "Control.Lens",
        "Data.Vector.Lens"
      ],
      "lens-aeson": [
        "Data.Aeson.Lens"
      ],
      "megaparsec": [
        "Text.Megaparsec",
        "Text.Megaparsec.Lexer"
      ],
      "memory": [],
      "mtl": [
        "Control.Monad.Except",
        "Control.Monad.Identity"
      ],
      "operational": [],
      "optparse-applicative": [],
      "parallel-io": [],
      "parsec": [
        "Text.Parsec.Char",
        "Text.Parsec.Combinator",
        "Text.Parsec.Error",
        "Text.Parsec.Expr",
        "Text.Parsec.Language",
        "Text.Parsec.Pos",
        "Text.Parsec.Prim",
        "Text.Parsec.String",
        "Text.Parsec.Token"
      ],
      "pcre-utils": [],
      "process": [
        "System.Process",
        "System.Process.Internals"
      ],
      "random": [],
      "regex-pcre-builtin": [
        "Text.Regex.PCRE.String"
      ],
      "scientific": [
        "Data.Scientific"
      ],
      "semigroups": [],
      "servant": [],
      "servant-client": [
        "Servant.Common.BaseUrl"
      ],
      "split": [
        "Data.List.Split"
      ],
      "stm": [],
      "strict-base-types": [
        "Data.Either.Strict",
        "Data.Maybe.Strict",
        "Data.Tuple.Strict"
      ],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.IO",
        "Data.Text.Lazy",
        "Data.Text.Lazy.IO"
      ],
      "time": [
        "Data.Time.Clock.POSIX"
      ],
      "transformers": [
        "Control.Monad.Trans.Except"
      ],
      "unix": [
        "System.Posix.Directory.ByteString",
        "System.Posix.Signals",
        "System.Posix.Terminal",
        "System.Posix.Unistd",
        "System.Posix.User"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict",
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector",
        "Data.Vector.Unboxed",
        "Data.Vector.Unboxed.Mutable"
      ],
      "yaml": [
        "Data.Yaml"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Concurrent",
      "Control.Exception",
      "Control.Lens",
      "Control.Monad",
      "Control.Monad.Except",
      "Control.Monad.Identity",
      "Control.Monad.Trans.Except",
      "Data.Aeson",
      "Data.Aeson.Lens",
      "Data.Attoparsec.Text",
      "Data.Bits",
      "Data.ByteString",
      "Data.ByteString.Base16",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.ByteString.Lazy.Char8",
      "Data.Char",
      "Data.Either.Strict",
      "Data.FileCache",
      "Data.Foldable",
      "Data.Graph",
      "Data.Hashable",
      "Data.HashMap.Strict",
      "Data.HashSet",
      "Data.List",
      "Data.List.Split",
      "Data.Map.Strict",
      "Data.Maybe",
      "Data.Maybe.Strict",
      "Data.Monoid",
      "Data.Scientific",
      "Data.Set",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.IO",
      "Data.Text.Lazy",
      "Data.Text.Lazy.IO",
      "Data.Time.Clock.POSIX",
      "Data.Traversable",
      "Data.Tree",
      "Data.Tuple.Strict",
      "Data.Vector",
      "Data.Vector.Lens",
      "Data.Vector.Unboxed",
      "Data.Vector.Unboxed.Mutable",
      "Data.Version",
      "Data.Yaml",
      "Erb.Parser",
      "Erb.Ruby",
      "Facter",
      "Foreign.Ruby.Bindings",
      "Foreign.Ruby.Helpers",
      "Formatting",
      "Function.AssertPrivateSpec",
      "Function.EachSpec",
      "Function.JoinKeysToValuesSpec",
      "Function.MergeSpec",
      "Function.ShellquoteSpec",
      "Function.SizeSpec",
      "GHC.Generics",
      "Hiera.Server",
      "Interpreter.CollectorSpec",
      "InterpreterSpec",
      "Network.HTTP.Client",
      "Paths",
      "PuppetDB.Common",
      "PuppetDB.Dummy",
      "PuppetDB.Remote",
      "PuppetDB.TestDB",
      "Puppet.Interpreter.Pure",
      "Puppet.Interpreter.Resolve",
      "Puppet.Interpreter.Types",
      "Puppet.NativeTypes.Helpers",
      "Puppet.Parser",
      "Puppet.Parser.PrettyPrinter",
      "Puppet.Parser.Types",
      "Puppet.PP",
      "Puppet.Puppetlabs",
      "Servant.Common.BaseUrl",
      "System.Directory",
      "System.Environment",
      "System.Exit",
      "System.FilePath.Glob",
      "System.IO",
      "System.IO.Temp",
      "System.Log.Formatter",
      "System.Log.Handler.Simple",
      "System.Log.Logger",
      "System.Posix.Directory.ByteString",
      "System.Posix.Signals",
      "System.Posix.Terminal",
      "System.Posix.Types",
      "System.Posix.Unistd",
      "System.Posix.User",
      "System.Process",
      "System.Process.Internals",
      "System.Timeout",
      "Test.Hspec",
      "Test.HUnit",
      "Text.Megaparsec",
      "Text.Megaparsec.Lexer",
      "Text.Parsec.Char",
      "Text.Parsec.Combinator",
      "Text.Parsec.Error",
      "Text.Parsec.Expr",
      "Text.Parsec.Language",
      "Text.Parsec.Pos",
      "Text.Parsec.Prim",
      "Text.Parsec.String",
      "Text.Parsec.Token",
      "Text.PrettyPrint.ANSI.Leijen",
      "Text.Printf",
      "Text.Regex.PCRE.String"
    ],
    "modules": [
      "Erb.Evaluate",
      "Erb.Parser",
      "Erb.Ruby",
      "Facter",
      "Hiera.Server",
      "Puppet.Daemon",
      "PuppetDB.Common",
      "PuppetDB.Dummy",
      "PuppetDB.Remote",
      "PuppetDB.TestDB",
      "Puppet.Interpreter",
      "Puppet.Interpreter.IO",
      "Puppet.Interpreter.PrettyPrinter",
      "Puppet.Interpreter.Pure",
      "Puppet.Interpreter.Resolve",
      "Puppet.Interpreter.Types",
      "Puppet.Interpreter.Utils",
      "Puppet.Lens",
      "Puppet.NativeTypes",
      "Puppet.NativeTypes.Helpers",
      "Puppet.Parser",
      "Puppet.Parser.PrettyPrinter",
      "Puppet.Parser.Types",
      "Puppet.PP",
      "Puppet.Preferences",
      "Puppet.Puppetlabs",
      "Puppet.Stats",
      "Puppet.Stdlib",
      "Puppet.OptionalTests",
      "Puppet.Utils",
      "SafeProcess"
    ],
    "name": "language-puppet",
    "version": "1.3.1.1"
  },
  {
    "dependencies": {
      "async": [],
      "base": [
        "Control.Exception",
        "Data.IORef",
        "Data.Proxy",
        "Data.Typeable",
        "Text.Printf"
      ],
      "smallcheck": [
        "Test.SmallCheck",
        "Test.SmallCheck.Drivers"
      ],
      "tagged": [],
      "tasty": [
        "Test.Tasty.Options",
        "Test.Tasty.Providers"
      ]
    },
    "imports": [
      "Control.Exception",
      "Data.IORef",
      "Data.Proxy",
      "Data.Typeable",
      "Test.SmallCheck",
      "Test.SmallCheck.Drivers",
      "Test.Tasty.Options",
      "Test.Tasty.Providers",
      "Text.Printf"
    ],
    "modules": [
      "Test.Tasty.SmallCheck"
    ],
    "name": "tasty-smallcheck",
    "version": "0.8.1"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Monad.Instances",
        "Data.Char",
        "Data.Ratio",
        "Data.Typeable",
        "Data.Word",
        "Text.ParserCombinators.ReadP"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.DeepSeq",
      "Control.Monad.Instances",
      "Data.Char",
      "Data.Decimal",
      "Data.Ratio",
      "Data.Typeable",
      "Data.Word",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Text.ParserCombinators.ReadP"
    ],
    "modules": [
      "Data.Decimal"
    ],
    "name": "Decimal",
    "version": "0.4.2"
  },
  {
    "dependencies": {
      "base": [],
      "base64-bytestring": [],
      "byteable": [],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy"
      ],
      "conduit": [],
      "cryptohash": [],
      "http-client": [],
      "http-conduit": [],
      "http-types": [],
      "mime-mail": [],
      "old-locale": [],
      "text": [
        "Data.Text"
      ],
      "time": [],
      "transformers": [],
      "xml-conduit": [],
      "xml-types": []
    },
    "imports": [
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy",
      "Data.Text"
    ],
    "modules": [
      "Network.Mail.Mime.SES"
    ],
    "name": "mime-mail-ses",
    "version": "0.3.2.3"
  },
  {
    "dependencies": {
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Exception",
        "Control.Monad",
        "Data.Bits",
        "Data.Ix",
        "Data.List",
        "Data.Maybe",
        "System.IO",
        "System.IO.Unsafe"
      ],
      "bytestring": [
        "Data.ByteString.Char8",
        "Data.ByteString.Lazy.Char8"
      ],
      "directory": [
        "System.Directory"
      ],
      "filepath": [
        "System.FilePath"
      ],
      "mtl": [
        "Control.Monad.State"
      ],
      "unix-compat": [
        "System.PosixCompat.Files",
        "System.PosixCompat.Temp",
        "System.PosixCompat.Types"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Control.Arrow",
      "Control.Exception",
      "Control.Monad",
      "Control.Monad.State",
      "Data.Bits",
      "Data.ByteString.Char8",
      "Data.ByteString.Lazy.Char8",
      "Data.Ix",
      "Data.List",
      "Data.Maybe",
      "System.Directory",
      "System.FilePath",
      "System.FilePath.GlobPattern",
      "System.IO",
      "System.IO.Unsafe",
      "System.PosixCompat.Files",
      "System.PosixCompat.Temp",
      "System.PosixCompat.Types"
    ],
    "modules": [
      "System.FilePath.Find",
      "System.FilePath.Glob",
      "System.FilePath.GlobPattern",
      "System.FilePath.Manip"
    ],
    "name": "filemanip",
    "version": "0.3.6.3"
  },
  {
    "dependencies": {
      "aeson": [
        "Data.Aeson",
        "Data.Aeson.Types"
      ],
      "base": [
        "Control.Applicative",
        "Data.Data",
        "Data.Maybe",
        "Data.String",
        "GHC.Generics",
        "System.IO.Unsafe"
      ],
      "text": [
        "Data.Text"
      ],
      "unordered-containers": [
        "Data.HashMap.Strict"
      ]
    },
    "imports": [
      "Control.Applicative",
      "Data.Aeson",
      "Data.Aeson.Types",
      "Data.Attoparsec.ByteString",
      "Data.ByteString",
      "Data.Data",
      "Data.DeriveTH",
      "Data.HashMap.Strict",
      "Data.Maybe",
      "Data.String",
      "Data.Text",
      "Data.Time",
      "Fixtures",
      "GHC.Generics",
      "Instances",
      "Language.Haskell.TH",
      "System.Directory",
      "System.FilePath",
      "System.IO.Unsafe",
      "System.Locale",
      "Test.Framework",
      "Test.Framework.Providers.HUnit",
      "Test.Framework.Providers.QuickCheck2",
      "Test.HUnit",
      "Test.QuickCheck",
      "Web.Twitter.Types"
    ],
    "modules": [
      "Web.Twitter.Types"
    ],
    "name": "twitter-types",
    "version": "0.7.2.2"
  },
  {
    "dependencies": {
      "async": [
        "Control.Concurrent.Async"
      ],
      "base": [
        "Control.Applicative",
        "Control.Concurrent",
        "Control.Exception",
        "Control.Monad",
        "Data.Bifunctor",
        "Data.Char",
        "Data.Foldable",
        "Data.Functor",
        "Data.Functor.Identity",
        "Data.Semigroup",
        "Data.Traversable",
        "Debug.Trace",
        "GHC.Generics",
        "Prelude",
        "System.IO"
      ],
      "basic-prelude": [
        "CorePrelude"
      ],
      "bifunctors": [],
      "bytestring": [
        "Data.ByteString.Internal"
      ],
      "chunked-data": [
        "Data.Builder",
        "Data.ChunkedZip",
        "Data.IOData"
      ],
      "containers": [
        "Data.Map",
        "Data.Set"
      ],
      "deepseq": [
        "Control.DeepSeq"
      ],
      "dlist": [
        "Data.DList"
      ],
      "exceptions": [],
      "ghc-prim": [],
      "hashable": [],
      "lifted-async": [
        "Control.Concurrent.Async.Lifted.Safe"
      ],
      "lifted-base": [
        "Control.Concurrent.Chan.Lifted",
        "Control.Concurrent.Lifted",
        "Control.Concurrent.MVar.Lifted",
        "Data.IORef.Lifted"
      ],
      "monad-unlift": [
        "Control.Monad.Trans.Unlift"
      ],
      "mono-traversable": [
        "Data.Containers",
        "Data.MonoTraversable",
        "Data.MonoTraversable.Unprefixed",
        "Data.NonNull",
        "Data.Sequences"
      ],
      "mono-traversable-instances": [
        "Data.MonoTraversable.Instances"
      ],
      "mtl": [
        "Control.Monad.Reader"
      ],
      "mutable-containers": [
        "Data.Mutable"
      ],
      "primitive": [
        "Control.Monad.Primitive",
        "Data.Primitive.MutVar"
      ],
      "safe-exceptions": [
        "Control.Exception.Safe"
      ],
      "semigroups": [],
      "stm": [
        "Control.Concurrent.STM"
      ],
      "text": [],
      "time": [
        "Data.Time"
      ],
      "time-locale-compat": [
        "Data.Time.Locale.Compat"
      ],
      "transformers": [
        "Control.Monad.Trans.Writer"
      ],
      "transformers-base": [
        "Control.Monad.Base"
      ],
      "unordered-containers": [
        "Data.HashSet"
      ],
      "vector": [
        "Data.Vector.Storable"
      ],
      "vector-instances": [
        "Data.Vector.Instances"
      ]
    },
    "imports": [
      "ClassyPrelude",
      "Control.Applicative",
      "Control.Concurrent",
      "Control.Concurrent.Async",
      "Control.Concurrent.Async.Lifted.Safe",
      "Control.Concurrent.Chan.Lifted",
      "Control.Concurrent.Lifted",
      "Control.Concurrent.MVar.Lifted",
      "Control.Concurrent.STM",
      "Control.DeepSeq",
      "Control.Exception",
      "Control.Exception.Safe",
      "Control.Monad",
      "Control.Monad.Base",
      "Control.Monad.Primitive",
      "Control.Monad.Reader",
      "Control.Monad.Trans.Unlift",
      "Control.Monad.Trans.Writer",
      "CorePrelude",
      "Data.Bifunctor",
      "Data.Builder",
      "Data.ByteString.Internal",
      "Data.Char",
      "Data.ChunkedZip",
      "Data.Containers",
      "Data.DList",
      "Data.Foldable",
      "Data.Functor",
      "Data.Functor.Identity",
      "Data.HashSet",
      "Data.IOData",
      "Data.IORef.Lifted",
      "Data.Map",
      "Data.MonoTraversable",
      "Data.MonoTraversable.Instances",
      "Data.MonoTraversable.Unprefixed",
      "Data.Mutable",
      "Data.NonNull",
      "Data.Primitive.MutVar",
      "Data.Semigroup",
      "Data.Sequences",
      "Data.Set",
      "Data.Time",
      "Data.Time.Locale.Compat",
      "Data.Traversable",
      "Data.Vector.Instances",
      "Data.Vector.Storable",
      "Debug.Trace",
      "GHC.Generics",
      "Prelude",
      "System.IO",
      "Test.Hspec",
      "Test.Hspec.QuickCheck",
      "Test.QuickCheck.Arbitrary"
    ],
    "modules": [
      "ClassyPrelude"
    ],
    "name": "classy-prelude",
    "version": "1.0.0.2"
  },
  {
    "dependencies": {},
    "imports": [
      "Control.Exception",
      "Control.Monad",
      "Data.ByteString.Char8",
      "Data.Default",
      "Data.IORef",
      "Network.BSD",
      "Network.Connection",
      "Network.HaskellNet.BSStream",
      "Network.HaskellNet.IMAP",
      "Network.HaskellNet.IMAP.Connection",
      "Network.HaskellNet.POP3",
      "Network.HaskellNet.POP3.Connection",
      "Network.HaskellNet.SMTP",
      "Network.HaskellNet.SSL",
      "Network.HaskellNet.SSL.Internal",
      "Network.Socket.Internal"
    ],
    "modules": [
      "Network.HaskellNet.IMAP.SSL",
      "Network.HaskellNet.POP3.SSL",
      "Network.HaskellNet.SMTP.SSL",
      "Network.HaskellNet.SSL"
    ],
    "name": "HaskellNet-SSL",
    "version": "0.3.3.0"
  },
  {
    "dependencies": {
      "amazonka-core": [],
      "base": [
        "Data.Proxy"
      ]
    },
    "imports": [
      "Data.Proxy",
      "Network.AWS.ElasticSearch",
      "Test.AWS.ElasticSearch",
      "Test.AWS.ElasticSearch.Internal",
      "Test.AWS.Fixture",
      "Test.AWS.Prelude",
      "Test.Tasty"
    ],
    "modules": [
      "Network.AWS.ElasticSearch",
      "Network.AWS.ElasticSearch.AddTags",
      "Network.AWS.ElasticSearch.CreateElasticsearchDomain",
      "Network.AWS.ElasticSearch.DeleteElasticsearchDomain",
      "Network.AWS.ElasticSearch.DescribeElasticsearchDomain",
      "Network.AWS.ElasticSearch.DescribeElasticsearchDomainConfig",
      "Network.AWS.ElasticSearch.DescribeElasticsearchDomains",
      "Network.AWS.ElasticSearch.ListDomainNames",
      "Network.AWS.ElasticSearch.ListTags",
      "Network.AWS.ElasticSearch.RemoveTags",
      "Network.AWS.ElasticSearch.Types",
      "Network.AWS.ElasticSearch.UpdateElasticsearchDomainConfig",
      "Network.AWS.ElasticSearch.Waiters"
    ],
    "name": "amazonka-elasticsearch",
    "version": "1.4.3"
  },
  {
    "dependencies": {
      "aeson": [],
      "attoparsec": [
        "Data.Attoparsec.Text"
      ],
      "base": [
        "Control.Applicative",
        "Control.Arrow",
        "Control.Monad",
        "Data.Either",
        "Data.Foldable",
        "Data.Maybe",
        "Data.Monoid",
        "Data.Semigroup",
        "Data.String",
        "Data.Traversable"
      ],
      "blaze-builder": [
        "Blaze.ByteString.Builder",
        "Blaze.ByteString.Builder.Html.Utf8",
        "Blaze.ByteString.Builder.Internal.Write"
      ],
      "blaze-html": [
        "Text.Blaze.Html.Renderer.String"
      ],
      "blaze-markup": [
        "Text.Blaze"
      ],
      "byteable": [
        "Data.Byteable"
      ],
      "bytestring": [
        "Data.ByteString",
        "Data.ByteString.Lazy"
      ],
      "containers": [
        "Data.Map"
      ],
      "data-default": [
        "Data.Default"
      ],
      "email-validate": [
        "Text.Email.Validate"
      ],
      "persistent": [
        "Database.Persist",
        "Database.Persist.Sql"
      ],
      "resourcet": [],
      "semigroups": [],
      "shakespeare": [
        "Text.Cassius",
        "Text.Hamlet",
        "Text.Julius"
      ],
      "template-haskell": [],
      "text": [
        "Data.Text",
        "Data.Text.Encoding",
        "Data.Text.Encoding.Error",
        "Data.Text.Read"
      ],
      "time": [
        "Data.Time"
      ],
      "transformers": [
        "Control.Monad.Trans.Class",
        "Control.Monad.Trans.RWS"
      ],
      "wai": [
        "Network.Wai"
      ],
      "xss-sanitize": [
        "Text.HTML.SanitizeXSS"
      ],
      "yesod-core": [
        "Yesod.Core",
        "Yesod.Core.Handler"
      ],
      "yesod-persistent": [
        "Yesod.Persist",
        "Yesod.Persist.Core"
      ]
    },
    "imports": [
      "Blaze.ByteString.Builder",
      "Blaze.ByteString.Builder.Html.Utf8",
      "Blaze.ByteString.Builder.Internal.Write",
      "Control.Applicative",
      "Control.Arrow",
      "Control.Monad",
      "Control.Monad.Trans.Class",
      "Control.Monad.Trans.RWS",
      "Data.Attoparsec.Text",
      "Database.Persist",
      "Database.Persist.Sql",
      "Data.Byteable",
      "Data.ByteString",
      "Data.ByteString.Lazy",
      "Data.Default",
      "Data.Either",
      "Data.Foldable",
      "Data.Map",
      "Data.Maybe",
      "Data.Monoid",
      "Data.Semigroup",
      "Data.String",
      "Data.Text",
      "Data.Text.Encoding",
      "Data.Text.Encoding.Error",
      "Data.Text.Read",
      "Data.Time",
      "Data.Traversable",
      "Network.URI",
      "Network.Wai",
      "Test.Hspec",
      "Text.Blaze",
      "Text.Blaze.Html.Renderer.String",
      "Text.Cassius",
      "Text.Email.Validate",
      "Text.Hamlet",
      "Text.HTML.SanitizeXSS",
      "Text.Julius",
      "Yesod.Core",
      "Yesod.Core.Handler",
      "Yesod.Form",
      "Yesod.Form.Fields",
      "Yesod.Form.Functions",
      "Yesod.Form.I18n.English",
      "Yesod.Form.Input",
      "Yesod.Form.Types",
      "Yesod.Persist",
      "Yesod.Persist.Core"
    ],
    "modules": [
      "Yesod.Form",
      "Yesod.Form.Types",
      "Yesod.Form.Functions",
      "Yesod.Form.Bootstrap3",
      "Yesod.Form.Input",
      "Yesod.Form.Fields",
      "Yesod.Form.Jquery",
      "Yesod.Form.Nic",
      "Yesod.Form.MassInput",
      "Yesod.Form.I18n.English",
      "Yesod.Form.I18n.Portuguese",
      "Yesod.Form.I18n.Swedish",
      "Yesod.Form.I18n.German",
      "Yesod.Form.I18n.French",
      "Yesod.Form.I18n.Norwegian",
      "Yesod.Form.I18n.Japanese",
      "Yesod.Form.I18n.Czech",
      "Yesod.Form.I18n.Russian",
      "Yesod.Form.I18n.Dutch"
    ],
    "name": "yesod-form",
    "version": "1.4.7.1"
  },
  {
    "dependencies": {
      "base": [
        "Data.Monoid",
        "Prelude",
        "Text.Printf"
      ],
      "template-haskell": [
        "Language.Haskell.TH.Syntax"
      ],
      "transformers": [
        "Control.Monad.Trans.Error",
        "Control.Monad.Trans.List",
        "Control.Monad.Trans.Reader",
        "Control.Monad.Trans.RWS.Lazy",
        "Control.Monad.Trans.RWS.Strict",
        "Control.Monad.Trans.State.Lazy",
        "Control.Monad.Trans.State.Strict",
        "Control.Monad.Trans.Writer.Lazy",
        "Control.Monad.Trans.Writer.Strict"
      ]
    },
    "imports": [
      "Control.Monad.Loc",
      "Control.Monad.Trans.Error",
      "Control.Monad.Trans.List",
      "Control.Monad.Trans.Reader",
      "Control.Monad.Trans.RWS.Lazy",
      "Control.Monad.Trans.RWS.Strict",
      "Control.Monad.Trans.State.Lazy",
      "Control.Monad.Trans.State.Strict",
      "Control.Monad.Trans.Writer.Lazy",
      "Control.Monad.Trans.Writer.Strict",
      "Data.Monoid",
      "Language.Haskell.TH.Syntax",
      "Prelude",
      "Text.Printf"
    ],
    "modules": [
      "Control.Monad.Loc",
      "Control.Monad.Loc.TH",
      "Control.Monad.Loc.Transformers"
    ],
    "name": "monadloc",
    "version": "0.7.1"
  }
]